{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        competitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n        });\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":576,"map":[[27,2,626,0,"Object"],[27,8,626,0],[27,9,626,0,"defineProperty"],[27,23,626,0],[27,24,626,0,"exports"],[27,31,626,0],[28,4,626,0,"enumerable"],[28,14,626,0],[29,4,626,0,"get"],[29,7,626,0],[29,18,626,0,"get"],[29,19,626,0],[30,6,626,0],[30,13,626,0,"_default"],[30,21,626,0],[31,4,626,0],[32,2,626,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,610,0,"Object"],[45,8,610,0],[45,9,610,0,"defineProperty"],[45,23,610,0],[45,24,610,0,"exports"],[45,31,610,0],[46,4,610,0,"enumerable"],[46,14,610,0],[47,4,610,0,"get"],[47,7,610,0],[47,18,610,0,"get"],[47,19,610,0],[48,6,610,0],[48,13,610,0,"walletAPI"],[48,22,610,0],[49,4,610,0],[50,2,610,0],[51,2,1,0],[51,6,1,0,"_axios"],[51,12,1,0],[51,15,1,0,"require"],[51,22,1,0],[51,23,1,0,"_dependencyMap"],[51,37,1,0],[52,2,1,0],[52,6,1,0,"axios"],[52,11,1,0],[52,14,1,0,"_interopDefault"],[52,29,1,0],[52,30,1,0,"_axios"],[52,36,1,0],[53,2,2,0],[53,6,2,0,"_expoSecureStore"],[53,22,2,0],[53,25,2,0,"require"],[53,32,2,0],[53,33,2,0,"_dependencyMap"],[53,47,2,0],[54,2,2,0],[54,6,2,0,"SecureStore"],[54,17,2,0],[54,20,2,0,"_interopNamespace"],[54,37,2,0],[54,38,2,0,"_expoSecureStore"],[54,54,2,0],[55,2,3,0],[55,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[55,42,3,0],[55,45,3,0,"require"],[55,52,3,0],[55,53,3,0,"_dependencyMap"],[55,67,3,0],[56,2,3,0],[56,6,3,0,"AsyncStorage"],[56,18,3,0],[56,21,3,0,"_interopDefault"],[56,36,3,0],[56,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,73,3,0],[57,2,4,0],[57,6,4,0,"_expoConstants"],[57,20,4,0],[57,23,4,0,"require"],[57,30,4,0],[57,31,4,0,"_dependencyMap"],[57,45,4,0],[58,2,4,0],[58,6,4,0,"Constants"],[58,15,4,0],[58,18,4,0,"_interopDefault"],[58,33,4,0],[58,34,4,0,"_expoConstants"],[58,48,4,0],[59,2,6,0],[60,2,7,0],[60,8,7,6,"CrossPlatformStorage"],[60,28,7,26],[60,29,7,27],[61,4,8,2],[61,17,8,15,"getItem"],[61,24,8,22,"getItem"],[61,25,8,23,"key"],[61,28,8,34],[61,30,8,60],[62,6,9,4],[62,10,9,8],[63,8,10,6],[64,8,11,6],[64,15,11,13],[64,21,11,19,"AsyncStorage"],[64,33,11,31],[64,34,11,31,"default"],[64,41,11,31],[64,42,11,32,"getItem"],[64,49,11,39],[64,50,11,40,"key"],[64,53,11,43],[64,54,11,44],[65,6,12,4],[65,7,12,5],[65,8,12,6],[65,15,12,13,"error"],[65,20,12,18],[65,22,12,20],[66,8,13,6],[67,8,14,6],[67,12,14,10],[67,21,14,43,"window"],[67,27,14,49],[67,28,14,50,"localStorage"],[67,40,14,62],[67,42,14,64],[68,10,15,8],[68,17,15,15,"window"],[68,23,15,21],[68,24,15,22,"localStorage"],[68,36,15,34],[68,37,15,35,"getItem"],[68,44,15,42],[68,45,15,43,"key"],[68,48,15,46],[68,49,15,47],[69,8,16,6],[70,8,17,6],[70,15,17,13],[70,19,17,17],[71,6,18,4],[72,4,19,2],[73,4,21,2],[73,17,21,15,"setItem"],[73,24,21,22,"setItem"],[73,25,21,23,"key"],[73,28,21,34],[73,30,21,36,"value"],[73,35,21,49],[73,37,21,66],[74,6,22,4],[74,10,22,8],[75,8,23,6],[76,8,24,6],[76,14,24,12,"AsyncStorage"],[76,26,24,24],[76,27,24,24,"default"],[76,34,24,24],[76,35,24,25,"setItem"],[76,42,24,32],[76,43,24,33,"key"],[76,46,24,36],[76,48,24,38,"value"],[76,53,24,43],[76,54,24,44],[77,6,25,4],[77,7,25,5],[77,8,25,6],[77,15,25,13,"error"],[77,20,25,18],[77,22,25,20],[78,8,26,6],[79,8,27,6],[79,12,27,10],[79,21,27,43,"window"],[79,27,27,49],[79,28,27,50,"localStorage"],[79,40,27,62],[79,42,27,64],[80,10,28,8,"window"],[80,16,28,14],[80,17,28,15,"localStorage"],[80,29,28,27],[80,30,28,28,"setItem"],[80,37,28,35],[80,38,28,36,"key"],[80,41,28,39],[80,43,28,41,"value"],[80,48,28,46],[80,49,28,47],[81,8,29,6],[82,6,30,4],[83,4,31,2],[84,4,33,2],[84,17,33,15,"removeItem"],[84,27,33,25,"removeItem"],[84,28,33,26,"key"],[84,31,33,37],[84,33,33,54],[85,6,34,4],[85,10,34,8],[86,8,35,6],[86,14,35,12,"AsyncStorage"],[86,26,35,24],[86,27,35,24,"default"],[86,34,35,24],[86,35,35,25,"removeItem"],[86,45,35,35],[86,46,35,36,"key"],[86,49,35,39],[86,50,35,40],[87,6,36,4],[87,7,36,5],[87,8,36,6],[87,15,36,13,"error"],[87,20,36,18],[87,22,36,20],[88,8,37,6],[88,12,37,10],[88,21,37,43,"window"],[88,27,37,49],[88,28,37,50,"localStorage"],[88,40,37,62],[88,42,37,64],[89,10,38,8,"window"],[89,16,38,14],[89,17,38,15,"localStorage"],[89,29,38,27],[89,30,38,28,"removeItem"],[89,40,38,38],[89,41,38,39,"key"],[89,44,38,42],[89,45,38,43],[90,8,39,6],[91,6,40,4],[92,4,41,2],[93,2,42,0],[95,2,44,0],[96,2,45,0],[96,8,45,6,"BACKEND_URL"],[96,19,45,17],[96,22,45,20,"Constants"],[96,31,45,29],[96,32,45,29,"default"],[96,39,45,29],[96,40,45,30,"expoConfig"],[96,50,45,40],[96,52,45,42,"extra"],[96,57,45,47],[96,59,45,49,"backendUrl"],[96,69,45,59],[96,73,45,63,"process"],[96,80,45,70],[96,81,45,71,"env"],[96,84,45,74],[96,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[96,108,45,98],[96,112,45,102],[96,163,45,153],[97,2,47,0],[97,8,47,6,"ApiClient"],[97,17,47,15],[97,18,47,16],[98,4,50,2,"constructor"],[98,15,50,13,"constructor"],[98,16,50,13],[98,18,50,16],[99,6,51,4],[99,10,51,8],[99,11,51,9,"client"],[99,17,51,15],[99,20,51,18,"axios"],[99,25,51,23],[99,26,51,23,"default"],[99,33,51,23],[99,34,51,24,"create"],[99,40,51,30],[99,41,51,31],[100,8,52,6,"baseURL"],[100,15,52,13],[100,17,52,15],[100,20,52,18,"BACKEND_URL"],[100,31,52,29],[100,37,52,35],[101,8,53,6,"timeout"],[101,15,53,13],[101,17,53,15],[101,22,53,20],[102,8,54,6,"headers"],[102,15,54,13],[102,17,54,15],[103,10,55,8],[103,24,55,22],[103,26,55,24],[104,8,56,6],[105,6,57,4],[105,7,57,5],[105,8,57,6],[107,6,59,4],[108,6,60,4],[108,10,60,8],[108,11,60,9,"client"],[108,17,60,15],[108,18,60,16,"interceptors"],[108,30,60,28],[108,31,60,29,"request"],[108,38,60,36],[108,39,60,37,"use"],[108,42,60,40],[108,43,60,41],[108,49,60,48,"config"],[108,55,60,54],[108,59,60,59],[109,8,61,6,"console"],[109,15,61,13],[109,16,61,14,"log"],[109,19,61,17],[109,20,61,18],[109,39,61,37,"config"],[109,45,61,43],[109,46,61,44,"method"],[109,52,61,50],[109,54,61,52,"toUpperCase"],[109,65,61,63],[109,66,61,64],[109,67,61,65],[109,71,61,69,"config"],[109,77,61,75],[109,78,61,76,"url"],[109,81,61,79],[109,83,61,81],[109,85,61,83,"config"],[109,91,61,89],[109,92,61,90,"data"],[109,96,61,94],[109,97,61,95],[110,8,63,6],[110,14,63,12,"token"],[110,19,63,17],[110,22,63,20],[110,28,63,26,"SecureStore"],[110,39,63,37],[110,40,63,38,"getItemAsync"],[110,52,63,50],[110,53,63,51],[110,68,63,66],[110,69,63,67],[111,8,64,6],[111,12,64,10,"token"],[111,17,64,15],[111,19,64,17],[112,10,65,8,"config"],[112,16,65,14],[112,17,65,15,"headers"],[112,24,65,22],[112,25,65,23,"Authorization"],[112,38,65,36],[112,41,65,39],[112,51,65,49,"token"],[112,56,65,54],[112,58,65,56],[113,8,66,6],[114,8,67,6],[114,15,67,13,"config"],[114,21,67,19],[115,6,68,4],[115,7,68,5],[115,8,68,6],[117,6,70,4],[118,6,71,4],[118,10,71,8],[118,11,71,9,"client"],[118,17,71,15],[118,18,71,16,"interceptors"],[118,30,71,28],[118,31,71,29,"response"],[118,39,71,37],[118,40,71,38,"use"],[118,43,71,41],[118,44,72,7,"response"],[118,52,72,15],[118,56,72,20],[119,8,73,8,"console"],[119,15,73,15],[119,16,73,16,"log"],[119,19,73,19],[119,20,73,20],[119,39,73,39,"response"],[119,47,73,47],[119,48,73,48,"status"],[119,54,73,54],[119,56,73,56],[119,58,73,58,"response"],[119,66,73,66],[119,67,73,67,"data"],[119,71,73,71],[119,72,73,72],[120,8,74,8],[120,15,74,15,"response"],[120,23,74,23],[121,6,75,6],[121,7,75,7],[121,9,76,7,"error"],[121,14,76,12],[121,18,76,17],[122,8,77,8,"console"],[122,15,77,15],[122,16,77,16,"log"],[122,19,77,19],[122,20,77,20],[122,36,77,36,"error"],[122,41,77,41],[122,42,77,42,"response"],[122,50,77,50],[122,52,77,52,"status"],[122,58,77,58],[122,62,77,62],[122,71,77,71],[122,73,77,73],[122,75,77,75,"error"],[122,80,77,80],[122,81,77,81,"response"],[122,89,77,89],[122,91,77,91,"data"],[122,95,77,95],[122,99,77,99,"error"],[122,104,77,104],[122,105,77,105,"message"],[122,112,77,112],[122,113,77,113],[123,8,79,8],[123,12,79,12,"error"],[123,17,79,17],[123,18,79,18,"response"],[123,26,79,26],[123,28,79,28,"status"],[123,34,79,34],[123,39,79,39],[123,42,79,42],[123,44,79,44],[124,10,80,10],[125,10,81,10,"SecureStore"],[125,21,81,21],[125,22,81,22,"deleteItemAsync"],[125,37,81,37],[125,38,81,38],[125,53,81,53],[125,54,81,54],[126,8,82,8],[127,8,83,8],[127,15,83,15,"Promise"],[127,22,83,22],[127,23,83,23,"reject"],[127,29,83,29],[127,30,83,30,"error"],[127,35,83,35],[127,36,83,36],[128,6,84,6],[128,7,85,4],[128,8,85,5],[129,4,86,2],[130,4,88,2],[130,10,88,8,"get"],[130,13,88,11,"get"],[130,14,88,21,"url"],[130,17,88,32],[130,19,88,46],[131,6,89,4],[131,12,89,10,"response"],[131,20,89,36],[131,23,89,39],[131,29,89,45],[131,33,89,49],[131,34,89,50,"client"],[131,40,89,56],[131,41,89,57,"get"],[131,44,89,60],[131,45,89,61,"url"],[131,48,89,64],[131,49,89,65],[132,6,90,4],[132,13,90,11,"response"],[132,21,90,19],[132,22,90,20,"data"],[132,26,90,24],[133,4,91,2],[134,4,93,2],[134,10,93,8,"post"],[134,14,93,12,"post"],[134,15,93,22,"url"],[134,18,93,33],[134,20,93,35,"data"],[134,24,93,45],[134,26,93,59],[135,6,94,4],[135,12,94,10,"response"],[135,20,94,36],[135,23,94,39],[135,29,94,45],[135,33,94,49],[135,34,94,50,"client"],[135,40,94,56],[135,41,94,57,"post"],[135,45,94,61],[135,46,94,62,"url"],[135,49,94,65],[135,51,94,67,"data"],[135,55,94,71],[135,56,94,72],[136,6,95,4],[136,13,95,11,"response"],[136,21,95,19],[136,22,95,20,"data"],[136,26,95,24],[137,4,96,2],[138,4,98,2],[138,10,98,8,"patch"],[138,15,98,13,"patch"],[138,16,98,23,"url"],[138,19,98,34],[138,21,98,36,"data"],[138,25,98,46],[138,27,98,60],[139,6,99,4],[139,12,99,10,"response"],[139,20,99,36],[139,23,99,39],[139,29,99,45],[139,33,99,49],[139,34,99,50,"client"],[139,40,99,56],[139,41,99,57,"patch"],[139,46,99,62],[139,47,99,63,"url"],[139,50,99,66],[139,52,99,68,"data"],[139,56,99,72],[139,57,99,73],[140,6,100,4],[140,13,100,11,"response"],[140,21,100,19],[140,22,100,20,"data"],[140,26,100,24],[141,4,101,2],[142,4,103,2],[142,10,103,8,"delete"],[142,16,103,14,"delete"],[142,17,103,24,"url"],[142,20,103,35],[142,22,103,49],[143,6,104,4],[143,12,104,10,"response"],[143,20,104,36],[143,23,104,39],[143,29,104,45],[143,33,104,49],[143,34,104,50,"client"],[143,40,104,56],[143,41,104,57,"delete"],[143,47,104,63],[143,48,104,64,"url"],[143,51,104,67],[143,52,104,68],[144,6,105,4],[144,13,105,11,"response"],[144,21,105,19],[144,22,105,20,"data"],[144,26,105,24],[145,4,106,2],[146,4,108,2],[146,10,108,8,"put"],[146,13,108,11,"put"],[146,14,108,21,"url"],[146,17,108,32],[146,19,108,34,"data"],[146,23,108,44],[146,25,108,58],[147,6,109,4],[147,12,109,10,"response"],[147,20,109,36],[147,23,109,39],[147,29,109,45],[147,33,109,49],[147,34,109,50,"client"],[147,40,109,56],[147,41,109,57,"put"],[147,44,109,60],[147,45,109,61,"url"],[147,48,109,64],[147,50,109,66,"data"],[147,54,109,70],[147,55,109,71],[148,6,110,4],[148,13,110,11,"response"],[148,21,110,19],[148,22,110,20,"data"],[148,26,110,24],[149,4,111,2],[150,2,112,0],[151,2,114,0],[151,8,114,6,"apiClient"],[151,17,114,15],[151,20,114,18],[151,24,114,22,"ApiClient"],[151,33,114,31],[151,34,114,32],[151,35,114,33],[153,2,116,0],[154,2,117,7],[154,8,117,13,"authAPI"],[154,15,117,20],[154,18,117,23],[155,4,118,2,"createSession"],[155,17,118,15],[155,19,118,18,"sessionId"],[155,28,118,35],[155,32,119,4,"apiClient"],[155,41,119,13],[155,42,119,14,"post"],[155,46,119,18],[155,47,119,19],[155,62,119,34],[155,64,119,36],[155,68,119,40],[155,70,119,42],[156,6,120,6,"headers"],[156,13,120,13],[156,15,120,15],[157,8,120,17],[157,22,120,31],[157,24,120,33,"sessionId"],[158,6,120,43],[159,4,121,4],[159,5,121,5],[159,6,121,6],[160,4,123,2,"signup"],[160,10,123,8],[160,12,123,11,"data"],[160,16,129,3],[160,20,129,8,"apiClient"],[160,29,129,17],[160,30,129,18,"post"],[160,34,129,22],[160,35,129,23],[160,49,129,37],[160,51,129,39,"data"],[160,55,129,43],[160,56,129,44],[161,4,131,2,"verifyOTP"],[161,13,131,11],[161,15,131,14,"data"],[161,19,131,55],[161,23,132,4,"apiClient"],[161,32,132,13],[161,33,132,14,"post"],[161,37,132,18],[161,38,132,19],[161,56,132,37],[161,58,132,39,"data"],[161,62,132,43],[161,63,132,44],[162,4,134,2,"login"],[162,9,134,7],[162,11,134,10,"data"],[162,15,134,51],[162,19,135,4,"apiClient"],[162,28,135,13],[162,29,135,14,"post"],[162,33,135,18],[162,34,135,19],[162,47,135,32],[162,49,135,34,"data"],[162,53,135,38],[162,54,135,39],[163,4,137,2,"resendOTP"],[163,13,137,11],[163,15,137,14,"email"],[163,20,137,27],[163,24,138,4,"apiClient"],[163,33,138,13],[163,34,138,14,"post"],[163,38,138,18],[163,39,138,19],[163,57,138,37],[163,59,138,39],[164,6,138,41,"email"],[165,4,138,47],[165,5,138,48],[165,6,138,49],[166,4,140,2,"getCurrentUser"],[166,18,140,16],[166,20,140,18,"getCurrentUser"],[166,21,140,18],[166,26,140,24,"apiClient"],[166,35,140,33],[166,36,140,34,"get"],[166,39,140,37],[166,40,140,38],[166,50,140,48],[166,51,140,49],[167,4,142,2,"logout"],[167,10,142,8],[167,12,142,10,"logout"],[167,13,142,10],[167,18,142,16,"apiClient"],[167,27,142,25],[167,28,142,26,"post"],[167,32,142,30],[167,33,142,31],[167,47,142,45],[167,48,142,46],[168,4,144,2,"updateLanguage"],[168,18,144,16],[168,20,144,19,"language"],[168,28,144,35],[168,32,145,4,"apiClient"],[168,41,145,13],[168,42,145,14,"patch"],[168,47,145,19],[168,48,145,20],[168,64,145,36],[168,66,145,38],[168,70,145,42],[168,72,145,44],[169,6,146,6,"params"],[169,12,146,12],[169,14,146,14],[170,8,146,16,"language"],[171,6,146,25],[172,4,147,4],[172,5,147,5],[172,6,147,6],[173,4,149,2,"toggleBiometric"],[173,19,149,17],[173,21,149,20,"enabled"],[173,28,149,36],[173,32,150,4,"apiClient"],[173,41,150,13],[173,42,150,14,"patch"],[173,47,150,19],[173,48,150,20],[173,65,150,37],[173,67,150,39],[173,71,150,43],[173,73,150,45],[174,6,151,6,"params"],[174,12,151,12],[174,14,151,14],[175,8,151,16,"enabled"],[176,6,151,24],[177,4,152,4],[177,5,152,5],[178,2,153,0],[178,3,153,1],[180,2,155,0],[181,2,156,0],[181,8,156,6,"logAdminAction"],[181,22,156,20],[181,25,156,23],[181,31,156,23,"logAdminAction"],[181,32,156,30,"action"],[181,38,156,44],[181,40,156,46,"competitionName"],[181,55,156,69],[181,57,156,71,"adminName"],[181,66,156,88],[181,68,156,90,"details"],[181,75,156,103],[181,80,156,108],[182,4,157,2],[182,8,157,6],[183,6,158,4],[183,12,158,10,"logs"],[183,16,158,14],[183,19,158,17],[183,26,158,23,"CrossPlatformStorage"],[183,46,158,43],[183,47,158,44,"getItem"],[183,54,158,51],[183,55,158,52],[183,66,158,63],[183,67,158,64],[183,72,158,68],[183,76,158,72],[184,6,159,4],[184,12,159,10,"adminLogs"],[184,21,159,19],[184,24,159,22,"JSON"],[184,28,159,26],[184,29,159,27,"parse"],[184,34,159,32],[184,35,159,33,"logs"],[184,39,159,37],[184,40,159,38],[185,6,161,4],[185,12,161,10,"logEntry"],[185,20,161,18],[185,23,161,21],[186,8,162,6,"id"],[186,10,162,8],[186,12,162,10],[186,19,162,17,"Date"],[186,23,162,21],[186,24,162,22,"now"],[186,27,162,25],[186,28,162,26],[186,29,162,27],[186,31,162,29],[187,8,163,6,"action"],[187,14,163,12],[188,8,164,6,"competition_name"],[188,24,164,22],[188,26,164,24,"competitionName"],[188,41,164,39],[189,8,165,6,"admin_name"],[189,18,165,16],[189,20,165,18,"adminName"],[189,29,165,27],[190,8,166,6,"details"],[190,15,166,13],[191,8,167,6,"timestamp"],[191,17,167,15],[191,19,167,17],[191,23,167,21,"Date"],[191,27,167,25],[191,28,167,26],[191,29,167,27],[191,30,167,28,"toISOString"],[191,41,167,39],[191,42,167,40],[192,6,168,4],[192,7,168,5],[193,6,170,4,"adminLogs"],[193,15,170,13],[193,16,170,14,"push"],[193,20,170,18],[193,21,170,19,"logEntry"],[193,29,170,27],[193,30,170,28],[194,6,171,4],[194,12,171,10,"CrossPlatformStorage"],[194,32,171,30],[194,33,171,31,"setItem"],[194,40,171,38],[194,41,171,39],[194,52,171,50],[194,54,171,52,"JSON"],[194,58,171,56],[194,59,171,57,"stringify"],[194,68,171,66],[194,69,171,67,"adminLogs"],[194,78,171,76],[194,79,171,77],[194,80,171,78],[195,6,173,4,"console"],[195,13,173,11],[195,14,173,12,"log"],[195,17,173,15],[195,18,173,16],[195,43,173,41],[195,45,173,43,"action"],[195,51,173,49],[195,53,173,51,"competitionName"],[195,68,173,66],[195,69,173,67],[196,4,174,2],[196,5,174,3],[196,6,174,4],[196,13,174,11,"error"],[196,18,174,16],[196,20,174,18],[197,6,175,4,"console"],[197,13,175,11],[197,14,175,12,"error"],[197,19,175,17],[197,20,175,18],[197,49,175,47],[197,51,175,49,"error"],[197,56,175,54],[197,57,175,55],[198,4,176,2],[199,2,177,0],[199,3,177,1],[201,2,179,0],[202,2,180,7],[202,8,180,13,"competitionAPI"],[202,22,180,27],[202,25,180,30],[203,4,181,2,"create"],[203,10,181,8],[203,12,181,11,"data"],[203,16,196,3],[203,20,196,8,"apiClient"],[203,29,196,17],[203,30,196,18,"post"],[203,34,196,22],[203,35,196,23],[203,50,196,38],[203,52,196,40,"data"],[203,56,196,44],[203,57,196,45],[204,4,198,2,"join"],[204,8,198,6],[204,10,198,9,"inviteCode"],[204,20,198,27],[204,24,199,4,"apiClient"],[204,33,199,13],[204,34,199,14,"post"],[204,38,199,18],[204,39,199,19],[204,59,199,39],[204,61,199,41],[205,6,199,43,"invite_code"],[205,17,199,54],[205,19,199,56,"inviteCode"],[206,4,199,67],[206,5,199,68],[206,6,199,69],[207,4,201,2,"getMyCompetitions"],[207,21,201,19],[207,23,201,21,"getMyCompetitions"],[207,24,201,21],[207,29,201,27,"apiClient"],[207,38,201,36],[207,39,201,37,"get"],[207,42,201,40],[207,43,201,41],[207,61,201,59],[207,62,201,60],[208,4,203,2,"getCompetition"],[208,18,203,16],[208,20,203,19,"id"],[208,22,203,29],[208,26,203,34,"apiClient"],[208,35,203,43],[208,36,203,44,"get"],[208,39,203,47],[208,40,203,48],[208,57,203,65,"id"],[208,59,203,67],[208,61,203,69],[208,62,203,70],[209,4,205,2,"updateStandings"],[209,19,205,17],[209,21,205,19,"updateStandings"],[209,22,206,4,"id"],[209,24,206,14],[209,26,207,4,"standings"],[209,35,207,18],[209,37,208,4,"matchday"],[209,45,208,21],[209,50,210,4,"apiClient"],[209,59,210,13],[209,60,210,14,"patch"],[209,65,210,19],[209,66,210,20],[209,83,210,37,"id"],[209,85,210,39],[209,97,210,51],[209,99,210,53],[210,6,211,6,"standings"],[210,15,211,15],[211,6,212,6,"matchday"],[212,4,213,4],[212,5,213,5],[212,6,213,6],[213,4,215,2,"payFee"],[213,10,215,8],[213,12,215,10,"payFee"],[213,13,215,11,"id"],[213,15,215,21],[213,17,215,23,"amount"],[213,23,215,37],[213,28,216,4,"apiClient"],[213,37,216,13],[213,38,216,14,"post"],[213,42,216,18],[213,43,216,19],[213,60,216,36,"id"],[213,62,216,38],[213,68,216,44],[213,70,216,46],[213,74,216,50],[213,76,216,52],[214,6,217,6,"params"],[214,12,217,12],[214,14,217,14],[215,8,217,16,"amount"],[216,6,217,23],[217,4,218,4],[217,5,218,5],[217,6,218,6],[218,4,220,2,"getTransactions"],[218,19,220,17],[218,21,220,20,"id"],[218,23,220,30],[218,27,221,4,"apiClient"],[218,36,221,13],[218,37,221,14,"get"],[218,40,221,17],[218,41,221,18],[218,58,221,35,"id"],[218,60,221,37],[218,75,221,52],[218,76,221,53],[219,4,223,2],[220,4,224,2,"payMatchdays"],[220,16,224,14],[220,18,224,16,"payMatchdays"],[220,19,224,17,"competitionId"],[220,32,224,38],[220,34,224,40,"matchdays"],[220,43,224,59],[220,48,225,4,"apiClient"],[220,57,225,13],[220,58,225,14,"post"],[220,62,225,18],[220,63,225,19],[220,80,225,36,"competitionId"],[220,93,225,49],[220,113,225,69],[220,115,225,71],[221,6,226,6,"competition_id"],[221,20,226,20],[221,22,226,22,"competitionId"],[221,35,226,35],[222,6,227,6,"matchdays"],[223,4,228,4],[223,5,228,5],[223,6,228,6],[224,4,230,2,"getMatchdayPayments"],[224,23,230,21],[224,25,230,24,"competitionId"],[224,38,230,45],[224,42,231,4,"apiClient"],[224,51,231,13],[224,52,231,14,"get"],[224,55,231,17],[224,56,231,18],[224,73,231,35,"competitionId"],[224,86,231,48],[224,106,231,68],[224,107,231,69],[225,4,233,2,"getPaymentStatusTable"],[225,25,233,23],[225,27,233,26,"competitionId"],[225,40,233,47],[225,44,234,4,"apiClient"],[225,53,234,13],[225,54,234,14,"get"],[225,57,234,17],[225,58,234,18],[225,75,234,35,"competitionId"],[225,88,234,48],[225,111,234,71],[225,112,234,72],[226,4,236,2],[227,4,237,2,"createMock"],[227,14,237,12],[227,16,237,14],[227,22,237,21,"data"],[227,26,250,3],[227,30,250,8],[228,6,251,4,"console"],[228,13,251,11],[228,14,251,12,"log"],[228,17,251,15],[228,18,251,16],[228,50,251,48],[228,52,251,50,"data"],[228,56,251,54],[228,57,251,55,"name"],[228,61,251,59],[228,62,251,60],[229,6,252,4,"console"],[229,13,252,11],[229,14,252,12,"log"],[229,17,252,15],[229,18,252,16],[229,39,252,37],[229,41,252,39,"data"],[229,45,252,43],[229,46,252,44,"total_matchdays"],[229,61,252,59],[229,65,252,63],[229,67,252,65],[229,68,252,66],[231,6,254,4],[232,6,255,4],[232,12,255,10,"storedCompetitions"],[232,30,255,28],[232,33,255,31],[232,39,255,37,"CrossPlatformStorage"],[232,59,255,57],[232,60,255,58,"getItem"],[232,67,255,65],[232,68,255,66],[232,87,255,85],[232,88,255,86],[233,6,256,4],[233,10,256,8,"existingCompetitions"],[233,30,256,28],[233,33,256,31,"storedCompetitions"],[233,51,256,49],[233,54,256,52,"JSON"],[233,58,256,56],[233,59,256,57,"parse"],[233,64,256,62],[233,65,256,63,"storedCompetitions"],[233,83,256,81],[233,84,256,82],[233,87,256,85],[233,89,256,87],[234,6,258,4,"console"],[234,13,258,11],[234,14,258,12,"log"],[234,17,258,15],[234,18,258,16],[234,60,258,58],[234,62,258,60,"existingCompetitions"],[234,82,258,80],[234,83,258,81,"length"],[234,89,258,87],[234,90,258,88],[236,6,260,4],[237,6,261,4],[237,12,261,10,"existingNames"],[237,25,261,23],[237,28,261,26,"existingCompetitions"],[237,48,261,46],[237,49,261,47,"map"],[237,52,261,50],[237,53,261,52,"comp"],[237,57,261,61],[237,61,261,66,"comp"],[237,65,261,70],[237,66,261,71,"name"],[237,70,261,75],[237,71,261,76,"toLowerCase"],[237,82,261,87],[237,83,261,88],[237,84,261,89],[237,85,261,90],[238,6,262,4],[238,10,262,8,"existingNames"],[238,23,262,21],[238,24,262,22,"includes"],[238,32,262,30],[238,33,262,31,"data"],[238,37,262,35],[238,38,262,36,"name"],[238,42,262,40],[238,43,262,41,"toLowerCase"],[238,54,262,52],[238,55,262,53],[238,56,262,54],[238,57,262,55],[238,59,262,57],[239,8,263,6],[239,14,263,12],[239,18,263,16,"Error"],[239,23,263,21],[239,24,263,22],[239,86,263,84],[239,87,263,85],[240,6,264,4],[242,6,266,4],[243,6,267,4],[243,12,267,10,"newCompetition"],[243,26,267,24],[243,29,267,27],[244,8,268,6,"_id"],[244,11,268,9],[244,13,268,11],[244,21,268,19,"Date"],[244,25,268,23],[244,26,268,24,"now"],[244,29,268,27],[244,30,268,28],[244,31,268,29],[244,33,268,31],[245,8,269,6,"name"],[245,12,269,10],[245,14,269,12,"data"],[245,18,269,16],[245,19,269,17,"name"],[245,23,269,21],[246,8,270,6,"total_matchdays"],[246,23,270,21],[246,25,270,23,"data"],[246,29,270,27],[246,30,270,28,"total_matchdays"],[246,45,270,43],[246,49,270,47],[246,51,270,49],[247,8,271,6,"participation_cost_per_team"],[247,35,271,33],[247,37,271,35,"data"],[247,41,271,39],[247,42,271,40,"participation_cost_per_team"],[247,69,271,67],[247,73,271,71],[247,78,271,76],[248,8,272,6,"expected_teams"],[248,22,272,20],[248,24,272,22,"data"],[248,28,272,26],[248,29,272,27,"expected_teams"],[248,43,272,41],[248,47,272,45],[248,48,272,46],[249,8,273,6,"total_prize_pool"],[249,24,273,22],[249,26,273,24,"data"],[249,30,273,28],[249,31,273,29,"total_prize_pool"],[249,47,273,45],[249,51,273,49],[249,57,273,55],[250,8,274,6,"daily_payment_enabled"],[250,29,274,27],[250,31,274,29,"data"],[250,35,274,33],[250,36,274,34,"daily_payment_enabled"],[250,57,274,55],[250,61,274,59],[250,66,274,64],[251,8,275,6,"daily_payment_amount"],[251,28,275,26],[251,30,275,28,"data"],[251,34,275,32],[251,35,275,33,"daily_payment_amount"],[251,55,275,53],[251,59,275,57],[251,62,275,60],[252,8,276,6,"rules"],[252,13,276,11],[252,15,276,13,"data"],[252,19,276,17],[252,20,276,18,"rules"],[252,25,276,23],[253,8,277,6,"invite_code"],[253,19,277,17],[253,21,277,19,"Math"],[253,25,277,23],[253,26,277,24,"random"],[253,32,277,30],[253,33,277,31],[253,34,277,32],[253,35,277,33,"toString"],[253,43,277,41],[253,44,277,42],[253,46,277,44],[253,47,277,45],[253,48,277,46,"substr"],[253,54,277,52],[253,55,277,53],[253,56,277,54],[253,58,277,56],[253,59,277,57],[253,60,277,58],[253,61,277,59,"toUpperCase"],[253,72,277,70],[253,73,277,71],[253,74,277,72],[254,8,278,6,"invite_link"],[254,19,278,17],[254,21,278,19],[254,50,278,48,"Math"],[254,54,278,52],[254,55,278,53,"random"],[254,61,278,59],[254,62,278,60],[254,63,278,61],[254,64,278,62,"toString"],[254,72,278,70],[254,73,278,71],[254,75,278,73],[254,76,278,74],[254,77,278,75,"substr"],[254,83,278,81],[254,84,278,82],[254,85,278,83],[254,87,278,85],[254,88,278,86],[254,89,278,87],[254,90,278,88,"toUpperCase"],[254,101,278,99],[254,102,278,100],[254,103,278,101],[254,105,278,103],[255,8,279,6,"admin_id"],[255,16,279,14],[255,18,279,16],[255,44,279,42],[256,8,279,44],[257,8,280,6,"participants"],[257,20,280,18],[257,22,280,20],[257,23,281,8],[258,10,282,10,"id"],[258,12,282,12],[258,14,282,14],[258,40,282,40],[259,10,283,10,"name"],[259,14,283,14],[259,16,283,16],[259,33,283,33],[260,10,284,10,"email"],[260,15,284,15],[260,17,284,17],[260,36,284,36],[261,10,285,10,"is_admin"],[261,18,285,18],[261,20,285,20],[261,24,285,24],[262,10,286,10,"paid_matchdays"],[262,24,286,24],[262,26,286,26],[262,27,286,27],[262,28,286,28],[262,30,286,30],[262,31,286,31],[262,32,286,32],[263,10,286,34],[264,10,287,10,"points"],[264,16,287,16],[264,18,287,18],[265,8,288,8],[265,9,288,9],[265,10,289,7],[266,8,290,6,"wallet_balance"],[266,22,290,20],[266,24,290,22],[266,25,290,23],[267,8,291,6,"is_active"],[267,17,291,15],[267,19,291,17],[267,23,291,21],[268,8,292,6,"current_matchday"],[268,24,292,22],[268,26,292,24],[268,27,292,25],[269,8,292,27],[270,8,293,6,"standings"],[270,17,293,15],[270,19,293,17],[270,20,294,8],[271,10,294,10,"position"],[271,18,294,18],[271,20,294,20],[271,21,294,21],[272,10,294,23,"player_id"],[272,19,294,32],[272,21,294,34],[272,47,294,60],[273,10,294,62,"name"],[273,14,294,66],[273,16,294,68],[273,33,294,85],[274,10,294,87,"points"],[274,16,294,93],[274,18,294,95],[275,8,294,97],[275,9,294,98],[275,10,295,7],[276,8,296,6,"created_at"],[276,18,296,16],[276,20,296,18],[276,24,296,22,"Date"],[276,28,296,26],[276,29,296,27],[276,30,296,28],[276,31,296,29,"toISOString"],[276,42,296,40],[276,43,296,41],[276,44,296,42],[277,8,297,6,"updated_at"],[277,18,297,16],[277,20,297,18],[277,24,297,22,"Date"],[277,28,297,26],[277,29,297,27],[277,30,297,28],[277,31,297,29,"toISOString"],[277,42,297,40],[277,43,297,41],[278,6,298,4],[278,7,298,5],[280,6,300,4],[281,6,301,4,"existingCompetitions"],[281,26,301,24],[281,27,301,25,"push"],[281,31,301,29],[281,32,301,30,"newCompetition"],[281,46,301,44],[281,47,301,45],[282,6,302,4],[282,12,302,10,"CrossPlatformStorage"],[282,32,302,30],[282,33,302,31,"setItem"],[282,40,302,38],[282,41,302,39],[282,60,302,58],[282,62,302,60,"JSON"],[282,66,302,64],[282,67,302,65,"stringify"],[282,76,302,74],[282,77,302,75,"existingCompetitions"],[282,97,302,95],[282,98,302,96],[282,99,302,97],[283,6,304,4,"console"],[283,13,304,11],[283,14,304,12,"log"],[283,17,304,15],[283,18,304,16],[283,71,304,69],[283,73,304,71,"existingCompetitions"],[283,93,304,91],[283,94,304,92,"length"],[283,100,304,98],[283,101,304,99],[285,6,306,4],[286,6,307,4],[286,12,307,10,"logAdminAction"],[286,26,307,24],[286,27,307,25],[286,35,307,33],[286,37,307,35,"newCompetition"],[286,51,307,49],[286,52,307,50,"name"],[286,56,307,54],[286,58,307,56],[286,75,307,73],[286,77,307,75],[287,8,308,6,"competition_id"],[287,22,308,20],[287,24,308,22,"newCompetition"],[287,38,308,36],[287,39,308,37,"_id"],[287,42,308,40],[288,8,309,6,"rules"],[288,13,309,11],[288,15,309,13,"newCompetition"],[288,29,309,27],[288,30,309,28,"rules"],[288,35,309,33],[289,8,310,6,"total_matchdays"],[289,23,310,21],[289,25,310,23,"newCompetition"],[289,39,310,37],[289,40,310,38,"total_matchdays"],[289,55,310,53],[290,8,311,6,"participation_cost_per_team"],[290,35,311,33],[290,37,311,35,"newCompetition"],[290,51,311,49],[290,52,311,50,"participation_cost_per_team"],[290,79,311,77],[291,8,312,6,"expected_teams"],[291,22,312,20],[291,24,312,22,"newCompetition"],[291,38,312,36],[291,39,312,37,"expected_teams"],[291,53,312,51],[292,8,313,6,"total_prize_pool"],[292,24,313,22],[292,26,313,24,"newCompetition"],[292,40,313,38],[292,41,313,39,"total_prize_pool"],[292,57,313,55],[293,8,314,6,"daily_payment_enabled"],[293,29,314,27],[293,31,314,29,"newCompetition"],[293,45,314,43],[293,46,314,44,"daily_payment_enabled"],[293,67,314,65],[294,8,315,6,"daily_payment_amount"],[294,28,315,26],[294,30,315,28,"newCompetition"],[294,44,315,42],[294,45,315,43,"daily_payment_amount"],[295,6,316,4],[295,7,316,5],[295,8,316,6],[296,6,318,4,"console"],[296,13,318,11],[296,14,318,12,"log"],[296,17,318,15],[296,18,318,16],[296,47,318,45],[296,49,318,47,"newCompetition"],[296,63,318,61],[296,64,318,62,"name"],[296,68,318,66],[296,69,318,67],[297,6,319,4,"console"],[297,13,319,11],[297,14,319,12,"log"],[297,17,319,15],[297,18,319,16],[297,40,319,38],[297,42,319,40,"newCompetition"],[297,56,319,54],[297,57,319,55,"name"],[297,61,319,59],[297,62,319,60],[298,6,320,4,"console"],[298,13,320,11],[298,14,320,12,"log"],[298,17,320,15],[298,18,320,16],[298,37,320,35],[298,39,320,37,"newCompetition"],[298,53,320,51],[298,54,320,52,"daily_payment_enabled"],[298,75,320,73],[298,78,320,76],[298,82,320,80,"newCompetition"],[298,96,320,94],[298,97,320,95,"daily_payment_amount"],[298,117,320,115],[298,132,320,130],[298,135,320,133],[298,145,320,143],[298,146,320,144],[299,6,321,4,"console"],[299,13,321,11],[299,14,321,12,"log"],[299,17,321,15],[299,18,321,16],[299,40,321,38],[299,42,321,40],[299,46,321,44,"newCompetition"],[299,60,321,58],[299,61,321,59,"total_prize_pool"],[299,77,321,75],[299,79,321,77],[299,80,321,78],[300,6,322,4,"console"],[300,13,322,11],[300,14,322,12,"log"],[300,17,322,15],[300,18,322,16],[300,35,322,33],[300,37,322,35,"newCompetition"],[300,51,322,49],[300,52,322,50,"invite_code"],[300,63,322,61],[300,64,322,62],[301,6,324,4],[301,13,324,11],[302,8,324,13,"data"],[302,12,324,17],[302,14,324,19,"newCompetition"],[303,6,324,34],[303,7,324,35],[304,4,325,2],[304,5,325,3],[305,4,327,2],[306,4,328,2,"payMatchdaysMock"],[306,20,328,18],[306,22,328,20],[306,28,328,20,"payMatchdaysMock"],[306,29,328,27,"competitionId"],[306,42,328,48],[306,44,328,50,"matchdays"],[306,53,328,69],[306,58,328,74],[307,6,329,4,"console"],[307,13,329,11],[307,14,329,12,"log"],[307,17,329,15],[307,18,329,16],[307,49,329,47],[307,51,329,49,"matchdays"],[307,60,329,58],[307,62,329,60],[307,78,329,76],[307,80,329,78,"competitionId"],[307,93,329,91],[307,94,329,92],[309,6,331,4],[310,6,332,4],[310,12,332,10,"totalCost"],[310,21,332,19],[310,24,332,22,"matchdays"],[310,33,332,31],[310,34,332,32,"length"],[310,40,332,38],[310,43,332,41],[310,44,332,42],[310,45,332,43],[310,46,332,44],[312,6,334,4],[313,6,335,4],[313,13,335,11],[314,8,336,6,"data"],[314,12,336,10],[314,14,336,12],[315,10,337,8,"message"],[315,17,337,15],[315,19,337,17],[315,44,337,42,"matchdays"],[315,53,337,51],[315,54,337,52,"length"],[315,60,337,58],[315,72,337,70],[316,10,338,8,"paid_matchdays"],[316,24,338,22],[316,26,338,24,"matchdays"],[316,35,338,33],[317,10,339,8,"total_cost"],[317,20,339,18],[317,22,339,20,"totalCost"],[317,31,339,29],[318,10,340,8,"new_user_balance"],[318,26,340,24],[318,28,340,26],[318,31,340,29],[318,34,340,32,"totalCost"],[318,43,340,41],[318,44,340,42],[319,8,341,6],[320,6,342,4],[320,7,342,5],[321,4,343,2],[321,5,343,3],[322,4,345,2,"getMatchdayPaymentsMock"],[322,27,345,25],[322,29,345,27],[322,35,345,34,"competitionId"],[322,48,345,55],[322,52,345,60],[323,6,346,4,"console"],[323,13,346,11],[323,14,346,12,"log"],[323,17,346,15],[323,18,346,16],[323,70,346,68],[323,72,346,70,"competitionId"],[323,85,346,83],[323,86,346,84],[325,6,348,4],[326,6,349,4],[326,12,349,10,"mockPayments"],[326,24,349,22],[326,27,349,25],[326,29,349,27],[327,6,350,4],[327,11,350,9],[327,15,350,13,"i"],[327,16,350,14],[327,19,350,17],[327,20,350,18],[327,22,350,20,"i"],[327,23,350,21],[327,27,350,25],[327,29,350,27],[327,31,350,29,"i"],[327,32,350,30],[327,34,350,32],[327,36,350,34],[328,8,351,6,"mockPayments"],[328,20,351,18],[328,21,351,19,"push"],[328,25,351,23],[328,26,351,24],[329,10,352,8,"_id"],[329,13,352,11],[329,15,352,13],[329,26,352,24,"i"],[329,27,352,25],[329,29,352,27],[330,10,353,8,"user_id"],[330,17,353,15],[330,19,353,17],[330,45,353,43],[331,10,354,8,"competition_id"],[331,24,354,22],[331,26,354,24,"competitionId"],[331,39,354,37],[332,10,355,8,"matchday"],[332,18,355,16],[332,20,355,18,"i"],[332,21,355,19],[333,10,356,8,"amount"],[333,16,356,14],[333,18,356,16],[333,19,356,17],[334,10,357,8,"status"],[334,16,357,14],[334,18,357,16,"i"],[334,19,357,17],[334,23,357,21],[334,24,357,22],[334,27,357,25],[334,33,357,31],[334,36,357,34],[334,45,357,43],[335,10,358,8,"paid_at"],[335,17,358,15],[335,19,358,17,"i"],[335,20,358,18],[335,24,358,22],[335,25,358,23],[335,28,358,26],[335,32,358,30,"Date"],[335,36,358,34],[335,37,358,35],[335,38,358,36],[335,39,358,37,"toISOString"],[335,50,358,48],[335,51,358,49],[335,52,358,50],[335,55,358,53],[335,59,358,57],[336,10,359,8,"created_at"],[336,20,359,18],[336,22,359,20],[336,26,359,24,"Date"],[336,30,359,28],[336,31,359,29],[336,32,359,30],[336,33,359,31,"toISOString"],[336,44,359,42],[336,45,359,43],[337,8,360,6],[337,9,360,7],[337,10,360,8],[338,6,361,4],[339,6,363,4],[339,13,363,11],[340,8,364,6,"data"],[340,12,364,10],[340,14,364,12],[341,10,365,8,"competition_id"],[341,24,365,22],[341,26,365,24,"competitionId"],[341,39,365,37],[342,10,366,8,"daily_payment_enabled"],[342,31,366,29],[342,33,366,31],[342,37,366,35],[343,10,367,8,"daily_payment_amount"],[343,30,367,28],[343,32,367,30],[343,33,367,31],[344,10,368,8,"total_matchdays"],[344,25,368,23],[344,27,368,25],[344,29,368,27],[345,10,369,8,"payments"],[345,18,369,16],[345,20,369,18,"mockPayments"],[346,8,370,6],[347,6,371,4],[347,7,371,5],[348,4,372,2],[348,5,372,3],[349,4,374,2,"getPaymentStatusTableMock"],[349,29,374,27],[349,31,374,29],[349,37,374,36,"competitionId"],[349,50,374,57],[349,54,374,62],[350,6,375,4,"console"],[350,13,375,11],[350,14,375,12,"log"],[350,17,375,15],[350,18,375,16],[350,73,375,71],[350,75,375,73,"competitionId"],[350,88,375,86],[350,89,375,87],[352,6,377,4],[353,6,378,4],[353,12,378,10,"mockTable"],[353,21,378,19],[353,24,378,22],[353,25,378,23],[354,8,379,6,"user_id"],[354,15,379,13],[354,17,379,15],[354,43,379,41],[355,8,380,6,"username"],[355,16,380,14],[355,18,380,16],[355,35,380,33],[356,8,381,6,"name"],[356,12,381,10],[356,14,381,12],[356,31,381,29],[357,8,382,6,"email"],[357,13,382,11],[357,15,382,13],[357,34,382,32],[358,8,383,6,"matchday_payments"],[358,25,383,23],[358,27,383,25,"Array"],[358,32,383,30],[358,33,383,31,"from"],[358,37,383,35],[358,38,383,36],[359,10,383,37,"length"],[359,16,383,43],[359,18,383,45],[360,8,383,47],[360,9,383,48],[360,11,383,50],[360,12,383,51,"_"],[360,13,383,52],[360,15,383,54,"i"],[360,16,383,55],[360,22,383,61],[361,10,384,8,"matchday"],[361,18,384,16],[361,20,384,18,"i"],[361,21,384,19],[361,24,384,22],[361,25,384,23],[362,10,385,8,"status"],[362,16,385,14],[362,18,385,17,"i"],[362,19,385,18],[362,22,385,21],[362,23,385,22],[362,26,385,25],[362,32,385,31],[362,35,385,34],[362,44,385,44],[363,10,386,8,"amount"],[363,16,386,14],[363,18,386,16],[363,19,386,17],[364,10,387,8,"paid_at"],[364,17,387,15],[364,19,387,17,"i"],[364,20,387,18],[364,23,387,21],[364,24,387,22],[364,27,387,25],[364,31,387,29,"Date"],[364,35,387,33],[364,36,387,34],[364,37,387,35],[364,38,387,36,"toISOString"],[364,49,387,47],[364,50,387,48],[364,51,387,49],[364,54,387,52],[365,8,388,6],[365,9,388,7],[365,10,388,8],[366,6,389,4],[366,7,389,5],[366,8,389,6],[367,6,391,4],[367,13,391,11],[368,8,392,6,"data"],[368,12,392,10],[368,14,392,12],[369,10,393,8,"competition_name"],[369,26,393,24],[369,28,393,26],[369,49,393,47],[370,10,394,8,"total_matchdays"],[370,25,394,23],[370,27,394,25],[370,29,394,27],[371,10,395,8,"daily_payment_amount"],[371,30,395,28],[371,32,395,30],[371,33,395,31],[372,10,396,8,"participants"],[372,22,396,20],[372,24,396,22,"mockTable"],[373,8,397,6],[374,6,398,4],[374,7,398,5],[375,4,399,2],[375,5,399,3],[376,4,401,2],[377,4,402,2,"validateNameMock"],[377,20,402,18],[377,22,402,20],[377,28,402,27,"name"],[377,32,402,39],[377,36,402,44],[378,6,403,4,"console"],[378,13,403,11],[378,14,403,12,"log"],[378,17,403,15],[378,18,403,16],[378,57,403,55],[378,59,403,57,"name"],[378,63,403,61],[378,64,403,62],[379,6,405,4],[379,10,405,8],[379,11,405,9,"name"],[379,15,405,13],[379,16,405,14,"trim"],[379,20,405,18],[379,21,405,19],[379,22,405,20],[379,24,405,22],[380,8,406,6],[380,15,406,13],[381,10,406,15,"available"],[381,19,406,24],[381,21,406,26],[381,25,406,30],[382,10,406,32,"message"],[382,17,406,39],[382,19,406,41],[383,8,406,44],[383,9,406,45],[384,6,407,4],[386,6,409,4],[387,6,410,4],[387,12,410,10,"storedCompetitions"],[387,30,410,28],[387,33,410,31],[387,39,410,37,"CrossPlatformStorage"],[387,59,410,57],[387,60,410,58,"getItem"],[387,67,410,65],[387,68,410,66],[387,86,410,84],[387,87,410,85],[388,6,411,4],[388,10,411,8,"existingCompetitions"],[388,30,411,28],[388,33,411,31,"storedCompetitions"],[388,51,411,49],[388,54,411,52,"JSON"],[388,58,411,56],[388,59,411,57,"parse"],[388,64,411,62],[388,65,411,63,"storedCompetitions"],[388,83,411,81],[388,84,411,82],[388,87,411,85],[388,89,411,87],[390,6,413,4],[391,6,414,4],[391,12,414,10,"defaultNames"],[391,24,414,22],[391,27,414,25],[391,28,414,26],[391,50,414,48],[391,52,414,50],[391,78,414,76],[391,80,414,78],[391,96,414,94],[391,97,414,95],[392,6,415,4],[392,12,415,10,"allNames"],[392,20,415,18],[392,23,415,21],[392,24,416,6],[392,27,416,9,"existingCompetitions"],[392,47,416,29],[392,48,416,30,"map"],[392,51,416,33],[392,52,416,35,"comp"],[392,56,416,44],[392,60,416,49,"comp"],[392,64,416,53],[392,65,416,54,"name"],[392,69,416,58],[392,70,416,59,"toLowerCase"],[392,81,416,70],[392,82,416,71],[392,83,416,72],[392,84,416,73],[392,86,417,6],[392,89,417,9,"defaultNames"],[392,101,417,21],[392,102,417,22,"map"],[392,105,417,25],[392,106,417,26,"name"],[392,110,417,30],[392,114,417,34,"name"],[392,118,417,38],[392,119,417,39,"toLowerCase"],[392,130,417,50],[392,131,417,51],[392,132,417,52],[392,133,417,53],[392,134,418,5],[393,6,420,4],[393,12,420,10,"isAvailable"],[393,23,420,21],[393,26,420,24],[393,27,420,25,"allNames"],[393,35,420,33],[393,36,420,34,"includes"],[393,44,420,42],[393,45,420,43,"name"],[393,49,420,47],[393,50,420,48,"toLowerCase"],[393,61,420,59],[393,62,420,60],[393,63,420,61],[393,64,420,62],[394,6,422,4],[394,13,422,11],[395,8,423,6,"available"],[395,17,423,15],[395,19,423,17,"isAvailable"],[395,30,423,28],[396,8,424,6,"message"],[396,15,424,13],[396,17,424,15,"isAvailable"],[396,28,424,26],[396,31,424,29],[396,47,424,45],[396,50,424,48],[397,6,425,4],[397,7,425,5],[398,4,426,2],[398,5,426,3],[399,4,428,2],[400,4,429,2,"getMyCompetitionsMock"],[400,25,429,23],[400,27,429,25],[400,33,429,25,"getMyCompetitionsMock"],[400,34,429,25],[400,39,429,37],[401,6,430,4,"console"],[401,13,430,11],[401,14,430,12,"log"],[401,17,430,15],[401,18,430,16],[401,52,430,50],[401,53,430,51],[402,6,431,4],[402,12,431,10,"storedCompetitions"],[402,30,431,28],[402,33,431,31],[402,39,431,37,"CrossPlatformStorage"],[402,59,431,57],[402,60,431,58,"getItem"],[402,67,431,65],[402,68,431,66],[402,87,431,85],[402,88,431,86],[403,6,433,4],[403,10,433,8,"storedCompetitions"],[403,28,433,26],[403,30,433,28],[404,8,434,6],[404,14,434,12,"competitions"],[404,26,434,24],[404,29,434,27,"JSON"],[404,33,434,31],[404,34,434,32,"parse"],[404,39,434,37],[404,40,434,38,"storedCompetitions"],[404,58,434,56],[404,59,434,57],[405,8,435,6,"console"],[405,15,435,13],[405,16,435,14,"log"],[405,19,435,17],[405,20,435,18],[405,55,435,53],[405,57,435,55,"competitions"],[405,69,435,67],[405,70,435,68,"length"],[405,76,435,74],[405,77,435,75],[406,8,437,6,"competitions"],[406,20,437,18],[406,21,437,19,"forEach"],[406,28,437,26],[406,29,437,27],[406,30,437,28,"comp"],[406,34,437,37],[406,36,437,39,"index"],[406,41,437,52],[406,46,437,57],[407,10,438,8,"console"],[407,17,438,15],[407,18,438,16,"log"],[407,21,438,19],[407,22,438,20],[407,25,438,23,"index"],[407,30,438,28],[407,33,438,31],[407,34,438,32],[407,39,438,37,"comp"],[407,43,438,41],[407,44,438,42,"name"],[407,48,438,46],[407,57,438,55,"comp"],[407,61,438,59],[407,62,438,60,"_id"],[407,65,438,63],[407,68,438,66],[407,69,438,67],[408,8,439,6],[408,9,439,7],[408,10,439,8],[409,8,441,6],[409,15,441,13,"competitions"],[409,27,441,25],[410,6,442,4],[410,7,442,5],[410,13,442,11],[411,8,443,6,"console"],[411,15,443,13],[411,16,443,14,"log"],[411,19,443,17],[411,20,443,18],[411,80,443,78],[411,81,443,79],[412,8,444,6],[412,15,444,13],[412,17,444,15],[413,6,445,4],[414,4,446,2],[414,5,446,3],[415,4,448,2,"joinMock"],[415,12,448,10],[415,14,448,12],[415,20,448,19,"inviteCode"],[415,30,448,37],[415,34,448,42],[416,6,449,4,"console"],[416,13,449,11],[416,14,449,12,"log"],[416,17,449,15],[416,18,449,16],[416,59,449,57],[416,61,449,59,"inviteCode"],[416,71,449,69],[416,72,449,70],[417,6,450,4],[417,10,450,8,"inviteCode"],[417,20,450,18],[417,21,450,19,"length"],[417,27,450,25],[417,30,450,28],[417,31,450,29],[417,33,450,31],[418,8,451,6],[418,14,451,12],[418,18,451,16,"Error"],[418,23,451,21],[418,24,451,22],[418,45,451,43],[418,46,451,44],[419,6,452,4],[420,6,453,4],[420,13,453,11],[421,8,453,13,"message"],[421,15,453,20],[421,17,453,22],[422,6,453,57],[422,7,453,58],[423,4,454,2],[423,5,454,3],[424,4,456,2],[425,4,457,2,"deleteMock"],[425,14,457,12],[425,16,457,14],[425,22,457,21,"competitionId"],[425,35,457,42],[425,39,457,47],[426,6,458,4,"console"],[426,13,458,11],[426,14,458,12,"log"],[426,17,458,15],[426,18,458,16],[426,51,458,49],[426,53,458,51,"competitionId"],[426,66,458,64],[426,67,458,65],[427,6,460,4],[427,12,460,10,"storedCompetitions"],[427,30,460,28],[427,33,460,31],[427,39,460,37,"CrossPlatformStorage"],[427,59,460,57],[427,60,460,58,"getItem"],[427,67,460,65],[427,68,460,66],[427,86,460,84],[427,87,460,85],[428,6,461,4],[428,10,461,8,"competitions"],[428,22,461,20],[428,25,461,23,"storedCompetitions"],[428,43,461,41],[428,46,461,44,"JSON"],[428,50,461,48],[428,51,461,49,"parse"],[428,56,461,54],[428,57,461,55,"storedCompetitions"],[428,75,461,73],[428,76,461,74],[428,79,461,77],[428,81,461,79],[429,6,463,4],[429,12,463,10,"competitionToDelete"],[429,31,463,29],[429,34,463,32,"competitions"],[429,46,463,44],[429,47,463,45,"find"],[429,51,463,49],[429,52,463,51,"comp"],[429,56,463,60],[429,60,463,65,"comp"],[429,64,463,69],[429,65,463,70,"_id"],[429,68,463,73],[429,73,463,78,"competitionId"],[429,86,463,91],[429,87,463,92],[430,6,464,4],[430,10,464,8],[430,11,464,9,"competitionToDelete"],[430,30,464,28],[430,32,464,30],[431,8,465,6],[431,14,465,12],[431,18,465,16,"Error"],[431,23,465,21],[431,24,465,22],[431,47,465,45],[431,48,465,46],[432,6,466,4],[434,6,468,4],[435,6,469,4],[435,10,469,8,"competitionToDelete"],[435,29,469,27],[435,30,469,28,"admin_id"],[435,38,469,36],[435,43,469,41],[435,69,469,67],[435,71,469,69],[436,8,470,6],[436,14,470,12],[436,18,470,16,"Error"],[436,23,470,21],[436,24,470,22],[436,64,470,62],[436,65,470,63],[437,6,471,4],[439,6,473,4],[440,6,474,4,"competitions"],[440,18,474,16],[440,21,474,19,"competitions"],[440,33,474,31],[440,34,474,32,"filter"],[440,40,474,38],[440,41,474,40,"comp"],[440,45,474,49],[440,49,474,54,"comp"],[440,53,474,58],[440,54,474,59,"_id"],[440,57,474,62],[440,62,474,67,"competitionId"],[440,75,474,80],[440,76,474,81],[441,6,475,4],[441,12,475,10,"CrossPlatformStorage"],[441,32,475,30],[441,33,475,31,"setItem"],[441,40,475,38],[441,41,475,39],[441,59,475,57],[441,61,475,59,"JSON"],[441,65,475,63],[441,66,475,64,"stringify"],[441,75,475,73],[441,76,475,74,"competitions"],[441,88,475,86],[441,89,475,87],[441,90,475,88],[443,6,477,4],[444,6,478,4],[444,12,478,10,"logAdminAction"],[444,26,478,24],[444,27,478,25],[444,35,478,33],[444,37,478,35,"competitionToDelete"],[444,56,478,54],[444,57,478,55,"name"],[444,61,478,59],[444,63,478,61],[444,80,478,78],[444,81,478,79],[445,6,480,4,"console"],[445,13,480,11],[445,14,480,12,"log"],[445,17,480,15],[445,18,480,16],[445,54,480,52],[445,55,480,53],[446,6,481,4],[446,13,481,11],[447,8,481,13,"message"],[447,15,481,20],[447,17,481,22],[448,6,481,57],[448,7,481,58],[449,4,482,2],[449,5,482,3],[450,4,484,2],[451,4,485,2,"editMock"],[451,12,485,10],[451,14,485,12],[451,20,485,12,"editMock"],[451,21,485,19,"competitionId"],[451,34,485,40],[451,36,485,42,"updates"],[451,43,485,54],[451,48,485,59],[452,6,486,4,"console"],[452,13,486,11],[452,14,486,12,"log"],[452,17,486,15],[452,18,486,16],[452,49,486,47],[452,51,486,49,"competitionId"],[452,64,486,62],[452,66,486,64,"updates"],[452,73,486,71],[452,74,486,72],[453,6,488,4],[453,12,488,10,"storedCompetitions"],[453,30,488,28],[453,33,488,31],[453,39,488,37,"CrossPlatformStorage"],[453,59,488,57],[453,60,488,58,"getItem"],[453,67,488,65],[453,68,488,66],[453,86,488,84],[453,87,488,85],[454,6,489,4],[454,10,489,8,"competitions"],[454,22,489,20],[454,25,489,23,"storedCompetitions"],[454,43,489,41],[454,46,489,44,"JSON"],[454,50,489,48],[454,51,489,49,"parse"],[454,56,489,54],[454,57,489,55,"storedCompetitions"],[454,75,489,73],[454,76,489,74],[454,79,489,77],[454,81,489,79],[455,6,491,4],[455,12,491,10,"competitionIndex"],[455,28,491,26],[455,31,491,29,"competitions"],[455,43,491,41],[455,44,491,42,"findIndex"],[455,53,491,51],[455,54,491,53,"comp"],[455,58,491,62],[455,62,491,67,"comp"],[455,66,491,71],[455,67,491,72,"_id"],[455,70,491,75],[455,75,491,80,"competitionId"],[455,88,491,93],[455,89,491,94],[456,6,492,4],[456,10,492,8,"competitionIndex"],[456,26,492,24],[456,31,492,29],[456,32,492,30],[456,33,492,31],[456,35,492,33],[457,8,493,6],[457,14,493,12],[457,18,493,16,"Error"],[457,23,493,21],[457,24,493,22],[457,47,493,45],[457,48,493,46],[458,6,494,4],[459,6,496,4],[459,12,496,10,"competition"],[459,23,496,21],[459,26,496,24,"competitions"],[459,38,496,36],[459,39,496,37,"competitionIndex"],[459,55,496,53],[459,56,496,54],[461,6,498,4],[462,6,499,4],[462,10,499,8,"competition"],[462,21,499,19],[462,22,499,20,"admin_id"],[462,30,499,28],[462,35,499,33],[462,61,499,59],[462,63,499,61],[463,8,500,6],[463,14,500,12],[463,18,500,16,"Error"],[463,23,500,21],[463,24,500,22],[463,62,500,60],[463,63,500,61],[464,6,501,4],[466,6,503,4],[467,6,504,4,"competitions"],[467,18,504,16],[467,19,504,17,"competitionIndex"],[467,35,504,33],[467,36,504,34],[467,39,504,37],[468,8,505,6],[468,11,505,9,"competition"],[468,22,505,20],[469,8,506,6],[469,11,506,9,"updates"],[469,18,506,16],[470,8,507,6,"updated_at"],[470,18,507,16],[470,20,507,18],[470,24,507,22,"Date"],[470,28,507,26],[470,29,507,27],[470,30,507,28],[470,31,507,29,"toISOString"],[470,42,507,40],[470,43,507,41],[471,6,508,4],[471,7,508,5],[472,6,510,4],[472,12,510,10,"CrossPlatformStorage"],[472,32,510,30],[472,33,510,31,"setItem"],[472,40,510,38],[472,41,510,39],[472,59,510,57],[472,61,510,59,"JSON"],[472,65,510,63],[472,66,510,64,"stringify"],[472,75,510,73],[472,76,510,74,"competitions"],[472,88,510,86],[472,89,510,87],[472,90,510,88],[474,6,512,4],[475,6,513,4],[475,12,513,10,"logAdminAction"],[475,26,513,24],[475,27,513,25],[475,33,513,31],[475,35,513,33,"competition"],[475,46,513,44],[475,47,513,45,"name"],[475,51,513,49],[475,53,513,51],[475,70,513,68],[475,72,513,70,"updates"],[475,79,513,77],[475,80,513,78],[476,6,515,4,"console"],[476,13,515,11],[476,14,515,12,"log"],[476,17,515,15],[476,18,515,16],[476,54,515,52],[476,55,515,53],[477,6,516,4],[477,13,516,11,"competitions"],[477,25,516,23],[477,26,516,24,"competitionIndex"],[477,42,516,40],[477,43,516,41],[478,4,517,2],[478,5,517,3],[479,4,519,2],[480,4,520,2,"awardDailyPrizeMock"],[480,23,520,21],[480,25,520,23],[480,31,520,23,"awardDailyPrizeMock"],[480,32,520,30,"competitionId"],[480,45,520,51],[480,47,520,53,"matchday"],[480,55,520,69],[480,57,520,71,"winnerId"],[480,65,520,87],[480,70,520,92],[481,6,521,4,"console"],[481,13,521,11],[481,14,521,12,"log"],[481,17,521,15],[481,18,521,16],[481,62,521,60],[481,64,521,62,"matchday"],[481,72,521,70],[481,74,521,72],[481,83,521,81],[481,85,521,83,"winnerId"],[481,93,521,91],[481,94,521,92],[482,6,523,4],[482,12,523,10,"storedCompetitions"],[482,30,523,28],[482,33,523,31],[482,39,523,37,"CrossPlatformStorage"],[482,59,523,57],[482,60,523,58,"getItem"],[482,67,523,65],[482,68,523,66],[482,86,523,84],[482,87,523,85],[483,6,524,4],[483,10,524,8,"competitions"],[483,22,524,20],[483,25,524,23,"storedCompetitions"],[483,43,524,41],[483,46,524,44,"JSON"],[483,50,524,48],[483,51,524,49,"parse"],[483,56,524,54],[483,57,524,55,"storedCompetitions"],[483,75,524,73],[483,76,524,74],[483,79,524,77],[483,81,524,79],[484,6,526,4],[484,12,526,10,"competitionIndex"],[484,28,526,26],[484,31,526,29,"competitions"],[484,43,526,41],[484,44,526,42,"findIndex"],[484,53,526,51],[484,54,526,53,"comp"],[484,58,526,62],[484,62,526,67,"comp"],[484,66,526,71],[484,67,526,72,"_id"],[484,70,526,75],[484,75,526,80,"competitionId"],[484,88,526,93],[484,89,526,94],[485,6,527,4],[485,10,527,8,"competitionIndex"],[485,26,527,24],[485,31,527,29],[485,32,527,30],[485,33,527,31],[485,35,527,33],[486,8,528,6],[486,14,528,12],[486,18,528,16,"Error"],[486,23,528,21],[486,24,528,22],[486,47,528,45],[486,48,528,46],[487,6,529,4],[488,6,531,4],[488,12,531,10,"competition"],[488,23,531,21],[488,26,531,24,"competitions"],[488,38,531,36],[488,39,531,37,"competitionIndex"],[488,55,531,53],[488,56,531,54],[490,6,533,4],[491,6,534,4],[491,10,534,8,"competition"],[491,21,534,19],[491,22,534,20,"admin_id"],[491,30,534,28],[491,35,534,33],[491,61,534,59],[491,63,534,61],[492,8,535,6],[492,14,535,12],[492,18,535,16,"Error"],[492,23,535,21],[492,24,535,22],[492,59,535,57],[492,60,535,58],[493,6,536,4],[495,6,538,4],[496,6,539,4],[496,10,539,8],[496,11,539,9,"competition"],[496,22,539,20],[496,23,539,21,"rules"],[496,28,539,26],[496,32,539,30],[496,33,539,31],[496,34,539,32],[496,41,539,39],[496,43,539,41],[496,50,539,48],[496,51,539,49],[496,52,539,50,"includes"],[496,60,539,58],[496,61,539,59,"competition"],[496,72,539,70],[496,73,539,71,"rules"],[496,78,539,76],[496,79,539,77,"type"],[496,83,539,81],[496,84,539,82],[496,86,539,84],[497,8,540,6],[497,14,540,12],[497,18,540,16,"Error"],[497,23,540,21],[497,24,540,22],[497,69,540,67],[497,70,540,68],[498,6,541,4],[499,6,543,4],[499,12,543,10,"dailyPrizeAmount"],[499,28,543,26],[499,31,543,29,"competition"],[499,42,543,40],[499,43,543,41,"rules"],[499,48,543,46],[499,49,543,47,"daily_prize"],[499,60,543,58],[499,64,543,62],[499,65,543,63],[500,6,544,4],[500,12,544,10,"winner"],[500,18,544,16],[500,21,544,19,"competition"],[500,32,544,30],[500,33,544,31,"participants"],[500,45,544,43],[500,46,544,44,"find"],[500,50,544,48],[500,51,544,50,"p"],[500,52,544,56],[500,56,544,61,"p"],[500,57,544,62],[500,58,544,63,"id"],[500,60,544,65],[500,65,544,70,"winnerId"],[500,73,544,78],[500,74,544,79],[501,6,546,4],[501,10,546,8],[501,11,546,9,"winner"],[501,17,546,15],[501,19,546,17],[502,8,547,6],[502,14,547,12],[502,18,547,16,"Error"],[502,23,547,21],[502,24,547,22],[502,57,547,55],[502,58,547,56],[503,6,548,4],[505,6,550,4],[506,6,551,4],[506,10,551,8],[506,11,551,9,"competition"],[506,22,551,20],[506,23,551,21,"daily_winners"],[506,36,551,34],[506,38,551,36],[507,8,552,6,"competition"],[507,19,552,17],[507,20,552,18,"daily_winners"],[507,33,552,31],[507,36,552,34],[507,37,552,35],[507,38,552,36],[508,6,553,4],[510,6,555,4],[511,6,556,4],[511,10,556,8,"competition"],[511,21,556,19],[511,22,556,20,"daily_winners"],[511,35,556,33],[511,36,556,34,"matchday"],[511,44,556,42],[511,45,556,43],[511,47,556,45],[512,8,557,6],[512,14,557,12],[512,18,557,16,"Error"],[512,23,557,21],[512,24,557,22],[512,52,557,50,"matchday"],[512,60,557,58],[512,83,557,81,"competition"],[512,94,557,92],[512,95,557,93,"daily_winners"],[512,108,557,106],[512,109,557,107,"matchday"],[512,117,557,115],[512,118,557,116],[512,119,557,117,"name"],[512,123,557,121],[512,125,557,123],[512,126,557,124],[513,6,558,4],[515,6,560,4],[516,6,561,4,"competition"],[516,17,561,15],[516,18,561,16,"daily_winners"],[516,31,561,29],[516,32,561,30,"matchday"],[516,40,561,38],[516,41,561,39],[516,44,561,42],[517,8,562,6,"user_id"],[517,15,562,13],[517,17,562,15,"winnerId"],[517,25,562,23],[518,8,563,6,"name"],[518,12,563,10],[518,14,563,12,"winner"],[518,20,563,18],[518,21,563,19,"name"],[518,25,563,23],[519,8,564,6,"amount"],[519,14,564,12],[519,16,564,14,"dailyPrizeAmount"],[519,32,564,30],[520,8,565,6,"awarded_at"],[520,18,565,16],[520,20,565,18],[520,24,565,22,"Date"],[520,28,565,26],[520,29,565,27],[520,30,565,28],[520,31,565,29,"toISOString"],[520,42,565,40],[520,43,565,41],[521,6,566,4],[521,7,566,5],[523,6,568,4],[524,6,569,4,"competitions"],[524,18,569,16],[524,19,569,17,"competitionIndex"],[524,35,569,33],[524,36,569,34],[524,39,569,37,"competition"],[524,50,569,48],[525,6,570,4],[525,12,570,10,"CrossPlatformStorage"],[525,32,570,30],[525,33,570,31,"setItem"],[525,40,570,38],[525,41,570,39],[525,59,570,57],[525,61,570,59,"JSON"],[525,65,570,63],[525,66,570,64,"stringify"],[525,75,570,73],[525,76,570,74,"competitions"],[525,88,570,86],[525,89,570,87],[525,90,570,88],[527,6,572,4],[528,6,573,4],[528,12,573,10,"logAdminAction"],[528,26,573,24],[528,27,573,25],[528,46,573,44],[528,48,573,46,"competition"],[528,59,573,57],[528,60,573,58,"name"],[528,64,573,62],[528,66,573,64],[528,83,573,81],[528,85,573,83],[529,8,574,6,"matchday"],[529,16,574,14],[530,8,575,6,"winner"],[530,14,575,12],[530,16,575,14,"winner"],[530,22,575,20],[530,23,575,21,"name"],[530,27,575,25],[531,8,576,6,"amount"],[531,14,576,12],[531,16,576,14,"dailyPrizeAmount"],[532,6,577,4],[532,7,577,5],[532,8,577,6],[534,6,579,4],[535,6,580,4,"console"],[535,13,580,11],[535,14,580,12,"log"],[535,17,580,15],[535,18,580,16],[535,24,580,22,"winner"],[535,30,580,28],[535,31,580,29,"name"],[535,35,580,33],[535,48,580,46,"dailyPrizeAmount"],[535,64,580,62],[535,89,580,87,"matchday"],[535,97,580,95],[535,99,580,97],[535,100,580,98],[536,6,582,4,"console"],[536,13,582,11],[536,14,582,12,"log"],[536,17,582,15],[536,18,582,16],[536,54,582,52],[536,55,582,53],[537,6,583,4],[537,13,583,11],[538,8,584,6,"message"],[538,15,584,13],[538,17,584,15],[538,36,584,34,"dailyPrizeAmount"],[538,52,584,50],[538,67,584,65,"winner"],[538,73,584,71],[538,74,584,72,"name"],[538,78,584,76],[538,95,584,93,"matchday"],[538,103,584,101],[538,105,584,103],[539,8,585,6,"competition"],[539,19,585,17],[539,21,585,19,"competition"],[540,6,586,4],[540,7,586,5],[541,4,587,2],[541,5,587,3],[542,4,589,2],[543,4,590,2,"getAdminLogsMock"],[543,20,590,18],[543,22,590,20],[543,28,590,20,"getAdminLogsMock"],[543,29,590,20],[543,34,590,32],[544,6,591,4,"console"],[544,13,591,11],[544,14,591,12,"log"],[544,17,591,15],[544,18,591,16],[544,47,591,45],[544,48,591,46],[545,6,593,4],[545,10,593,8],[546,8,594,6],[546,14,594,12,"logs"],[546,18,594,16],[546,21,594,19],[546,28,594,25,"CrossPlatformStorage"],[546,48,594,45],[546,49,594,46,"getItem"],[546,56,594,53],[546,57,594,54],[546,68,594,65],[546,69,594,66],[546,74,594,70],[546,78,594,74],[547,8,595,6],[547,14,595,12,"adminLogs"],[547,23,595,21],[547,26,595,24,"JSON"],[547,30,595,28],[547,31,595,29,"parse"],[547,36,595,34],[547,37,595,35,"logs"],[547,41,595,39],[547,42,595,40],[549,8,597,6],[550,8,598,6,"adminLogs"],[550,17,598,15],[550,18,598,16,"sort"],[550,22,598,20],[550,23,598,21],[550,24,598,22,"a"],[550,25,598,28],[550,27,598,30,"b"],[550,28,598,36],[550,33,598,41],[550,37,598,45,"Date"],[550,41,598,49],[550,42,598,50,"b"],[550,43,598,51],[550,44,598,52,"timestamp"],[550,53,598,61],[550,54,598,62],[550,55,598,63,"getTime"],[550,62,598,70],[550,63,598,71],[550,64,598,72],[550,67,598,75],[550,71,598,79,"Date"],[550,75,598,83],[550,76,598,84,"a"],[550,77,598,85],[550,78,598,86,"timestamp"],[550,87,598,95],[550,88,598,96],[550,89,598,97,"getTime"],[550,96,598,104],[550,97,598,105],[550,98,598,106],[550,99,598,107],[551,8,600,6,"console"],[551,15,600,13],[551,16,600,14,"log"],[551,19,600,17],[551,20,600,18],[551,42,600,40],[551,44,600,42,"adminLogs"],[551,53,600,51],[551,54,600,52,"length"],[551,60,600,58],[551,61,600,59],[552,8,601,6],[552,15,601,13,"adminLogs"],[552,24,601,22],[553,6,602,4],[553,7,602,5],[553,8,602,6],[553,15,602,13,"error"],[553,20,602,18],[553,22,602,20],[554,8,603,6,"console"],[554,15,603,13],[554,16,603,14,"error"],[554,21,603,19],[554,22,603,20],[554,52,603,50],[554,54,603,52,"error"],[554,59,603,57],[554,60,603,58],[555,8,604,6],[555,15,604,13],[555,17,604,15],[556,6,605,4],[557,4,606,2],[558,2,607,0],[558,3,607,1],[560,2,609,0],[561,2,610,7],[561,8,610,13,"walletAPI"],[561,17,610,22],[561,20,610,25],[562,4,611,2,"getBalance"],[562,14,611,12],[562,16,611,14,"getBalance"],[562,17,611,14],[562,22,611,20,"apiClient"],[562,31,611,29],[562,32,611,30,"get"],[562,35,611,33],[562,36,611,34],[562,53,611,51],[562,54,611,52],[563,4,613,2,"topUp"],[563,9,613,7],[563,11,613,10,"amount"],[563,17,613,24],[563,21,614,4,"apiClient"],[563,30,614,13],[563,31,614,14,"post"],[563,35,614,18],[563,36,614,19],[563,51,614,34],[563,53,614,36],[563,57,614,40],[563,59,614,42],[564,6,615,6,"params"],[564,12,615,12],[564,14,615,14],[565,8,615,16,"amount"],[566,6,615,23],[567,4,616,4],[567,5,616,5],[567,6,616,6],[568,4,618,2,"withdraw"],[568,12,618,10],[568,14,618,13,"amount"],[568,20,618,27],[568,24,619,4,"apiClient"],[568,33,619,13],[568,34,619,14,"post"],[568,38,619,18],[568,39,619,19],[568,57,619,37],[568,59,619,39],[568,63,619,43],[568,65,619,45],[569,6,620,6,"params"],[569,12,620,12],[569,14,620,14],[570,8,620,16,"amount"],[571,6,620,23],[572,4,621,4],[572,5,621,5],[572,6,621,6],[573,4,623,2,"getTransactions"],[573,19,623,17],[573,21,623,19,"getTransactions"],[573,22,623,19],[573,27,623,25,"apiClient"],[573,36,623,34],[573,37,623,35,"get"],[573,40,623,38],[573,41,623,39],[573,56,623,54],[574,2,624,0],[574,3,624,1],[575,2,626,0],[575,6,626,0,"_default"],[575,14,626,0],[575,17,626,15,"apiClient"],[575,26,626,24],[576,0,626,25],[576,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnCgE;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CG;2BCQ;ODE;G3CO;Y6CE;G7CM;c8CG;kDCM,yCD;uCEW,yCF;G9CQ;YiDG;oDCM,yCD;GjD0B;uBmDG;oDDM,yCC;iDCkB,6BD;GnD2C;oBqDG;qBCQ,qFD;GrDQ;cuDK,sCvD;SwDE;MxDG;YyDE;MzDG;mB0DE,oC1D"},"hasCjsExports":false},"type":"js/module"}]}