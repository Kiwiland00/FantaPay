{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fintech-fantapay.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition created and saved! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":317,"map":[[27,2,323,0,"Object"],[27,8,323,0],[27,9,323,0,"defineProperty"],[27,23,323,0],[27,24,323,0,"exports"],[27,31,323,0],[28,4,323,0,"enumerable"],[28,14,323,0],[29,4,323,0,"get"],[29,7,323,0],[29,18,323,0,"get"],[29,19,323,0],[30,6,323,0],[30,13,323,0,"_default"],[30,21,323,0],[31,4,323,0],[32,2,323,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,156,0,"Object"],[39,8,156,0],[39,9,156,0,"defineProperty"],[39,23,156,0],[39,24,156,0,"exports"],[39,31,156,0],[40,4,156,0,"enumerable"],[40,14,156,0],[41,4,156,0,"get"],[41,7,156,0],[41,18,156,0,"get"],[41,19,156,0],[42,6,156,0],[42,13,156,0,"competitionAPI"],[42,27,156,0],[43,4,156,0],[44,2,156,0],[45,2,307,0,"Object"],[45,8,307,0],[45,9,307,0,"defineProperty"],[45,23,307,0],[45,24,307,0,"exports"],[45,31,307,0],[46,4,307,0,"enumerable"],[46,14,307,0],[47,4,307,0,"get"],[47,7,307,0],[47,18,307,0,"get"],[47,19,307,0],[48,6,307,0],[48,13,307,0,"walletAPI"],[48,22,307,0],[49,4,307,0],[50,2,307,0],[51,2,1,0],[51,6,1,0,"_axios"],[51,12,1,0],[51,15,1,0,"require"],[51,22,1,0],[51,23,1,0,"_dependencyMap"],[51,37,1,0],[52,2,1,0],[52,6,1,0,"axios"],[52,11,1,0],[52,14,1,0,"_interopDefault"],[52,29,1,0],[52,30,1,0,"_axios"],[52,36,1,0],[53,2,2,0],[53,6,2,0,"_expoSecureStore"],[53,22,2,0],[53,25,2,0,"require"],[53,32,2,0],[53,33,2,0,"_dependencyMap"],[53,47,2,0],[54,2,2,0],[54,6,2,0,"SecureStore"],[54,17,2,0],[54,20,2,0,"_interopNamespace"],[54,37,2,0],[54,38,2,0,"_expoSecureStore"],[54,54,2,0],[55,2,3,0],[55,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[55,42,3,0],[55,45,3,0,"require"],[55,52,3,0],[55,53,3,0,"_dependencyMap"],[55,67,3,0],[56,2,3,0],[56,6,3,0,"AsyncStorage"],[56,18,3,0],[56,21,3,0,"_interopDefault"],[56,36,3,0],[56,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,73,3,0],[57,2,4,0],[57,6,4,0,"_expoConstants"],[57,20,4,0],[57,23,4,0,"require"],[57,30,4,0],[57,31,4,0,"_dependencyMap"],[57,45,4,0],[58,2,4,0],[58,6,4,0,"Constants"],[58,15,4,0],[58,18,4,0,"_interopDefault"],[58,33,4,0],[58,34,4,0,"_expoConstants"],[58,48,4,0],[59,2,6,0],[60,2,7,0],[60,8,7,6,"CrossPlatformStorage"],[60,28,7,26],[60,29,7,27],[61,4,8,2],[61,17,8,15,"getItem"],[61,24,8,22,"getItem"],[61,25,8,23,"key"],[61,28,8,34],[61,30,8,60],[62,6,9,4],[62,10,9,8],[63,8,10,6],[64,8,11,6],[64,15,11,13],[64,21,11,19,"AsyncStorage"],[64,33,11,31],[64,34,11,31,"default"],[64,41,11,31],[64,42,11,32,"getItem"],[64,49,11,39],[64,50,11,40,"key"],[64,53,11,43],[64,54,11,44],[65,6,12,4],[65,7,12,5],[65,8,12,6],[65,15,12,13,"error"],[65,20,12,18],[65,22,12,20],[66,8,13,6],[67,8,14,6],[67,12,14,10],[67,21,14,43,"window"],[67,27,14,49],[67,28,14,50,"localStorage"],[67,40,14,62],[67,42,14,64],[68,10,15,8],[68,17,15,15,"window"],[68,23,15,21],[68,24,15,22,"localStorage"],[68,36,15,34],[68,37,15,35,"getItem"],[68,44,15,42],[68,45,15,43,"key"],[68,48,15,46],[68,49,15,47],[69,8,16,6],[70,8,17,6],[70,15,17,13],[70,19,17,17],[71,6,18,4],[72,4,19,2],[73,4,21,2],[73,17,21,15,"setItem"],[73,24,21,22,"setItem"],[73,25,21,23,"key"],[73,28,21,34],[73,30,21,36,"value"],[73,35,21,49],[73,37,21,66],[74,6,22,4],[74,10,22,8],[75,8,23,6],[76,8,24,6],[76,14,24,12,"AsyncStorage"],[76,26,24,24],[76,27,24,24,"default"],[76,34,24,24],[76,35,24,25,"setItem"],[76,42,24,32],[76,43,24,33,"key"],[76,46,24,36],[76,48,24,38,"value"],[76,53,24,43],[76,54,24,44],[77,6,25,4],[77,7,25,5],[77,8,25,6],[77,15,25,13,"error"],[77,20,25,18],[77,22,25,20],[78,8,26,6],[79,8,27,6],[79,12,27,10],[79,21,27,43,"window"],[79,27,27,49],[79,28,27,50,"localStorage"],[79,40,27,62],[79,42,27,64],[80,10,28,8,"window"],[80,16,28,14],[80,17,28,15,"localStorage"],[80,29,28,27],[80,30,28,28,"setItem"],[80,37,28,35],[80,38,28,36,"key"],[80,41,28,39],[80,43,28,41,"value"],[80,48,28,46],[80,49,28,47],[81,8,29,6],[82,6,30,4],[83,4,31,2],[84,4,33,2],[84,17,33,15,"removeItem"],[84,27,33,25,"removeItem"],[84,28,33,26,"key"],[84,31,33,37],[84,33,33,54],[85,6,34,4],[85,10,34,8],[86,8,35,6],[86,14,35,12,"AsyncStorage"],[86,26,35,24],[86,27,35,24,"default"],[86,34,35,24],[86,35,35,25,"removeItem"],[86,45,35,35],[86,46,35,36,"key"],[86,49,35,39],[86,50,35,40],[87,6,36,4],[87,7,36,5],[87,8,36,6],[87,15,36,13,"error"],[87,20,36,18],[87,22,36,20],[88,8,37,6],[88,12,37,10],[88,21,37,43,"window"],[88,27,37,49],[88,28,37,50,"localStorage"],[88,40,37,62],[88,42,37,64],[89,10,38,8,"window"],[89,16,38,14],[89,17,38,15,"localStorage"],[89,29,38,27],[89,30,38,28,"removeItem"],[89,40,38,38],[89,41,38,39,"key"],[89,44,38,42],[89,45,38,43],[90,8,39,6],[91,6,40,4],[92,4,41,2],[93,2,42,0],[95,2,44,0],[96,2,45,0],[96,8,45,6,"BACKEND_URL"],[96,19,45,17],[96,22,45,20,"Constants"],[96,31,45,29],[96,32,45,29,"default"],[96,39,45,29],[96,40,45,30,"expoConfig"],[96,50,45,40],[96,52,45,42,"extra"],[96,57,45,47],[96,59,45,49,"backendUrl"],[96,69,45,59],[96,73,45,63,"process"],[96,80,45,70],[96,81,45,71,"env"],[96,84,45,74],[96,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[96,108,45,98],[96,112,45,102],[96,164,45,154],[97,2,47,0],[97,8,47,6,"ApiClient"],[97,17,47,15],[97,18,47,16],[98,4,50,2,"constructor"],[98,15,50,13,"constructor"],[98,16,50,13],[98,18,50,16],[99,6,51,4],[99,10,51,8],[99,11,51,9,"client"],[99,17,51,15],[99,20,51,18,"axios"],[99,25,51,23],[99,26,51,23,"default"],[99,33,51,23],[99,34,51,24,"create"],[99,40,51,30],[99,41,51,31],[100,8,52,6,"baseURL"],[100,15,52,13],[100,17,52,15],[100,20,52,18,"BACKEND_URL"],[100,31,52,29],[100,37,52,35],[101,8,53,6,"timeout"],[101,15,53,13],[101,17,53,15],[101,22,53,20],[102,8,54,6,"headers"],[102,15,54,13],[102,17,54,15],[103,10,55,8],[103,24,55,22],[103,26,55,24],[104,8,56,6],[105,6,57,4],[105,7,57,5],[105,8,57,6],[107,6,59,4],[108,6,60,4],[108,10,60,8],[108,11,60,9,"client"],[108,17,60,15],[108,18,60,16,"interceptors"],[108,30,60,28],[108,31,60,29,"request"],[108,38,60,36],[108,39,60,37,"use"],[108,42,60,40],[108,43,60,41],[108,49,60,48,"config"],[108,55,60,54],[108,59,60,59],[109,8,61,6,"console"],[109,15,61,13],[109,16,61,14,"log"],[109,19,61,17],[109,20,61,18],[109,39,61,37,"config"],[109,45,61,43],[109,46,61,44,"method"],[109,52,61,50],[109,54,61,52,"toUpperCase"],[109,65,61,63],[109,66,61,64],[109,67,61,65],[109,71,61,69,"config"],[109,77,61,75],[109,78,61,76,"url"],[109,81,61,79],[109,83,61,81],[109,85,61,83,"config"],[109,91,61,89],[109,92,61,90,"data"],[109,96,61,94],[109,97,61,95],[110,8,63,6],[110,14,63,12,"token"],[110,19,63,17],[110,22,63,20],[110,28,63,26,"SecureStore"],[110,39,63,37],[110,40,63,38,"getItemAsync"],[110,52,63,50],[110,53,63,51],[110,68,63,66],[110,69,63,67],[111,8,64,6],[111,12,64,10,"token"],[111,17,64,15],[111,19,64,17],[112,10,65,8,"config"],[112,16,65,14],[112,17,65,15,"headers"],[112,24,65,22],[112,25,65,23,"Authorization"],[112,38,65,36],[112,41,65,39],[112,51,65,49,"token"],[112,56,65,54],[112,58,65,56],[113,8,66,6],[114,8,67,6],[114,15,67,13,"config"],[114,21,67,19],[115,6,68,4],[115,7,68,5],[115,8,68,6],[117,6,70,4],[118,6,71,4],[118,10,71,8],[118,11,71,9,"client"],[118,17,71,15],[118,18,71,16,"interceptors"],[118,30,71,28],[118,31,71,29,"response"],[118,39,71,37],[118,40,71,38,"use"],[118,43,71,41],[118,44,72,7,"response"],[118,52,72,15],[118,56,72,20],[119,8,73,8,"console"],[119,15,73,15],[119,16,73,16,"log"],[119,19,73,19],[119,20,73,20],[119,39,73,39,"response"],[119,47,73,47],[119,48,73,48,"status"],[119,54,73,54],[119,56,73,56],[119,58,73,58,"response"],[119,66,73,66],[119,67,73,67,"data"],[119,71,73,71],[119,72,73,72],[120,8,74,8],[120,15,74,15,"response"],[120,23,74,23],[121,6,75,6],[121,7,75,7],[121,9,76,7,"error"],[121,14,76,12],[121,18,76,17],[122,8,77,8,"console"],[122,15,77,15],[122,16,77,16,"log"],[122,19,77,19],[122,20,77,20],[122,36,77,36,"error"],[122,41,77,41],[122,42,77,42,"response"],[122,50,77,50],[122,52,77,52,"status"],[122,58,77,58],[122,62,77,62],[122,71,77,71],[122,73,77,73],[122,75,77,75,"error"],[122,80,77,80],[122,81,77,81,"response"],[122,89,77,89],[122,91,77,91,"data"],[122,95,77,95],[122,99,77,99,"error"],[122,104,77,104],[122,105,77,105,"message"],[122,112,77,112],[122,113,77,113],[123,8,79,8],[123,12,79,12,"error"],[123,17,79,17],[123,18,79,18,"response"],[123,26,79,26],[123,28,79,28,"status"],[123,34,79,34],[123,39,79,39],[123,42,79,42],[123,44,79,44],[124,10,80,10],[125,10,81,10,"SecureStore"],[125,21,81,21],[125,22,81,22,"deleteItemAsync"],[125,37,81,37],[125,38,81,38],[125,53,81,53],[125,54,81,54],[126,8,82,8],[127,8,83,8],[127,15,83,15,"Promise"],[127,22,83,22],[127,23,83,23,"reject"],[127,29,83,29],[127,30,83,30,"error"],[127,35,83,35],[127,36,83,36],[128,6,84,6],[128,7,85,4],[128,8,85,5],[129,4,86,2],[130,4,88,2],[130,10,88,8,"get"],[130,13,88,11,"get"],[130,14,88,21,"url"],[130,17,88,32],[130,19,88,46],[131,6,89,4],[131,12,89,10,"response"],[131,20,89,36],[131,23,89,39],[131,29,89,45],[131,33,89,49],[131,34,89,50,"client"],[131,40,89,56],[131,41,89,57,"get"],[131,44,89,60],[131,45,89,61,"url"],[131,48,89,64],[131,49,89,65],[132,6,90,4],[132,13,90,11,"response"],[132,21,90,19],[132,22,90,20,"data"],[132,26,90,24],[133,4,91,2],[134,4,93,2],[134,10,93,8,"post"],[134,14,93,12,"post"],[134,15,93,22,"url"],[134,18,93,33],[134,20,93,35,"data"],[134,24,93,45],[134,26,93,59],[135,6,94,4],[135,12,94,10,"response"],[135,20,94,36],[135,23,94,39],[135,29,94,45],[135,33,94,49],[135,34,94,50,"client"],[135,40,94,56],[135,41,94,57,"post"],[135,45,94,61],[135,46,94,62,"url"],[135,49,94,65],[135,51,94,67,"data"],[135,55,94,71],[135,56,94,72],[136,6,95,4],[136,13,95,11,"response"],[136,21,95,19],[136,22,95,20,"data"],[136,26,95,24],[137,4,96,2],[138,4,98,2],[138,10,98,8,"patch"],[138,15,98,13,"patch"],[138,16,98,23,"url"],[138,19,98,34],[138,21,98,36,"data"],[138,25,98,46],[138,27,98,60],[139,6,99,4],[139,12,99,10,"response"],[139,20,99,36],[139,23,99,39],[139,29,99,45],[139,33,99,49],[139,34,99,50,"client"],[139,40,99,56],[139,41,99,57,"patch"],[139,46,99,62],[139,47,99,63,"url"],[139,50,99,66],[139,52,99,68,"data"],[139,56,99,72],[139,57,99,73],[140,6,100,4],[140,13,100,11,"response"],[140,21,100,19],[140,22,100,20,"data"],[140,26,100,24],[141,4,101,2],[142,4,103,2],[142,10,103,8,"delete"],[142,16,103,14,"delete"],[142,17,103,24,"url"],[142,20,103,35],[142,22,103,49],[143,6,104,4],[143,12,104,10,"response"],[143,20,104,36],[143,23,104,39],[143,29,104,45],[143,33,104,49],[143,34,104,50,"client"],[143,40,104,56],[143,41,104,57,"delete"],[143,47,104,63],[143,48,104,64,"url"],[143,51,104,67],[143,52,104,68],[144,6,105,4],[144,13,105,11,"response"],[144,21,105,19],[144,22,105,20,"data"],[144,26,105,24],[145,4,106,2],[146,4,108,2],[146,10,108,8,"put"],[146,13,108,11,"put"],[146,14,108,21,"url"],[146,17,108,32],[146,19,108,34,"data"],[146,23,108,44],[146,25,108,58],[147,6,109,4],[147,12,109,10,"response"],[147,20,109,36],[147,23,109,39],[147,29,109,45],[147,33,109,49],[147,34,109,50,"client"],[147,40,109,56],[147,41,109,57,"put"],[147,44,109,60],[147,45,109,61,"url"],[147,48,109,64],[147,50,109,66,"data"],[147,54,109,70],[147,55,109,71],[148,6,110,4],[148,13,110,11,"response"],[148,21,110,19],[148,22,110,20,"data"],[148,26,110,24],[149,4,111,2],[150,2,112,0],[151,2,114,0],[151,8,114,6,"apiClient"],[151,17,114,15],[151,20,114,18],[151,24,114,22,"ApiClient"],[151,33,114,31],[151,34,114,32],[151,35,114,33],[153,2,116,0],[154,2,117,7],[154,8,117,13,"authAPI"],[154,15,117,20],[154,18,117,23],[155,4,118,2,"createSession"],[155,17,118,15],[155,19,118,18,"sessionId"],[155,28,118,35],[155,32,119,4,"apiClient"],[155,41,119,13],[155,42,119,14,"post"],[155,46,119,18],[155,47,119,19],[155,62,119,34],[155,64,119,36],[155,68,119,40],[155,70,119,42],[156,6,120,6,"headers"],[156,13,120,13],[156,15,120,15],[157,8,120,17],[157,22,120,31],[157,24,120,33,"sessionId"],[158,6,120,43],[159,4,121,4],[159,5,121,5],[159,6,121,6],[160,4,123,2,"signup"],[160,10,123,8],[160,12,123,11,"data"],[160,16,129,3],[160,20,129,8,"apiClient"],[160,29,129,17],[160,30,129,18,"post"],[160,34,129,22],[160,35,129,23],[160,49,129,37],[160,51,129,39,"data"],[160,55,129,43],[160,56,129,44],[161,4,131,2,"verifyOTP"],[161,13,131,11],[161,15,131,14,"data"],[161,19,131,55],[161,23,132,4,"apiClient"],[161,32,132,13],[161,33,132,14,"post"],[161,37,132,18],[161,38,132,19],[161,56,132,37],[161,58,132,39,"data"],[161,62,132,43],[161,63,132,44],[162,4,134,2,"login"],[162,9,134,7],[162,11,134,10,"data"],[162,15,134,51],[162,19,135,4,"apiClient"],[162,28,135,13],[162,29,135,14,"post"],[162,33,135,18],[162,34,135,19],[162,47,135,32],[162,49,135,34,"data"],[162,53,135,38],[162,54,135,39],[163,4,137,2,"resendOTP"],[163,13,137,11],[163,15,137,14,"email"],[163,20,137,27],[163,24,138,4,"apiClient"],[163,33,138,13],[163,34,138,14,"post"],[163,38,138,18],[163,39,138,19],[163,57,138,37],[163,59,138,39],[164,6,138,41,"email"],[165,4,138,47],[165,5,138,48],[165,6,138,49],[166,4,140,2,"getCurrentUser"],[166,18,140,16],[166,20,140,18,"getCurrentUser"],[166,21,140,18],[166,26,140,24,"apiClient"],[166,35,140,33],[166,36,140,34,"get"],[166,39,140,37],[166,40,140,38],[166,50,140,48],[166,51,140,49],[167,4,142,2,"logout"],[167,10,142,8],[167,12,142,10,"logout"],[167,13,142,10],[167,18,142,16,"apiClient"],[167,27,142,25],[167,28,142,26,"post"],[167,32,142,30],[167,33,142,31],[167,47,142,45],[167,48,142,46],[168,4,144,2,"updateLanguage"],[168,18,144,16],[168,20,144,19,"language"],[168,28,144,35],[168,32,145,4,"apiClient"],[168,41,145,13],[168,42,145,14,"patch"],[168,47,145,19],[168,48,145,20],[168,64,145,36],[168,66,145,38],[168,70,145,42],[168,72,145,44],[169,6,146,6,"params"],[169,12,146,12],[169,14,146,14],[170,8,146,16,"language"],[171,6,146,25],[172,4,147,4],[172,5,147,5],[172,6,147,6],[173,4,149,2,"toggleBiometric"],[173,19,149,17],[173,21,149,20,"enabled"],[173,28,149,36],[173,32,150,4,"apiClient"],[173,41,150,13],[173,42,150,14,"patch"],[173,47,150,19],[173,48,150,20],[173,65,150,37],[173,67,150,39],[173,71,150,43],[173,73,150,45],[174,6,151,6,"params"],[174,12,151,12],[174,14,151,14],[175,8,151,16,"enabled"],[176,6,151,24],[177,4,152,4],[177,5,152,5],[178,2,153,0],[178,3,153,1],[180,2,155,0],[181,2,156,7],[181,8,156,13,"competitionAPI"],[181,22,156,27],[181,25,156,30],[182,4,157,2,"create"],[182,10,157,8],[182,12,157,11,"data"],[182,16,164,3],[182,20,164,8,"apiClient"],[182,29,164,17],[182,30,164,18,"post"],[182,34,164,22],[182,35,164,23],[182,50,164,38],[182,52,164,40,"data"],[182,56,164,44],[182,57,164,45],[183,4,166,2,"join"],[183,8,166,6],[183,10,166,9,"inviteCode"],[183,20,166,27],[183,24,167,4,"apiClient"],[183,33,167,13],[183,34,167,14,"post"],[183,38,167,18],[183,39,167,19],[183,59,167,39],[183,61,167,41],[184,6,167,43,"invite_code"],[184,17,167,54],[184,19,167,56,"inviteCode"],[185,4,167,67],[185,5,167,68],[185,6,167,69],[186,4,169,2,"getMyCompetitions"],[186,21,169,19],[186,23,169,21,"getMyCompetitions"],[186,24,169,21],[186,29,169,27,"apiClient"],[186,38,169,36],[186,39,169,37,"get"],[186,42,169,40],[186,43,169,41],[186,61,169,59],[186,62,169,60],[187,4,171,2,"getCompetition"],[187,18,171,16],[187,20,171,19,"id"],[187,22,171,29],[187,26,171,34,"apiClient"],[187,35,171,43],[187,36,171,44,"get"],[187,39,171,47],[187,40,171,48],[187,57,171,65,"id"],[187,59,171,67],[187,61,171,69],[187,62,171,70],[188,4,173,2,"updateStandings"],[188,19,173,17],[188,21,173,19,"updateStandings"],[188,22,174,4,"id"],[188,24,174,14],[188,26,175,4,"standings"],[188,35,175,18],[188,37,176,4,"matchday"],[188,45,176,21],[188,50,178,4,"apiClient"],[188,59,178,13],[188,60,178,14,"patch"],[188,65,178,19],[188,66,178,20],[188,83,178,37,"id"],[188,85,178,39],[188,97,178,51],[188,99,178,53],[189,6,179,6,"standings"],[189,15,179,15],[190,6,180,6,"matchday"],[191,4,181,4],[191,5,181,5],[191,6,181,6],[192,4,183,2,"payFee"],[192,10,183,8],[192,12,183,10,"payFee"],[192,13,183,11,"id"],[192,15,183,21],[192,17,183,23,"amount"],[192,23,183,37],[192,28,184,4,"apiClient"],[192,37,184,13],[192,38,184,14,"post"],[192,42,184,18],[192,43,184,19],[192,60,184,36,"id"],[192,62,184,38],[192,68,184,44],[192,70,184,46],[192,74,184,50],[192,76,184,52],[193,6,185,6,"params"],[193,12,185,12],[193,14,185,14],[194,8,185,16,"amount"],[195,6,185,23],[196,4,186,4],[196,5,186,5],[196,6,186,6],[197,4,188,2,"getTransactions"],[197,19,188,17],[197,21,188,20,"id"],[197,23,188,30],[197,27,189,4,"apiClient"],[197,36,189,13],[197,37,189,14,"get"],[197,40,189,17],[197,41,189,18],[197,58,189,35,"id"],[197,60,189,37],[197,75,189,52],[197,76,189,53],[198,4,191,2],[199,4,192,2,"createMock"],[199,14,192,12],[199,16,192,14],[199,22,192,21,"data"],[199,26,199,3],[199,30,199,8],[200,6,200,4,"console"],[200,13,200,11],[200,14,200,12,"log"],[200,17,200,15],[200,18,200,16],[200,50,200,48],[200,52,200,50,"data"],[200,56,200,54],[200,57,200,55,"name"],[200,61,200,59],[200,62,200,60],[202,6,202,4],[203,6,203,4],[203,12,203,10,"storedCompetitions"],[203,30,203,28],[203,33,203,31],[203,39,203,37,"CrossPlatformStorage"],[203,59,203,57],[203,60,203,58,"getItem"],[203,67,203,65],[203,68,203,66],[203,86,203,84],[203,87,203,85],[204,6,204,4],[204,10,204,8,"existingCompetitions"],[204,30,204,28],[204,33,204,31,"storedCompetitions"],[204,51,204,49],[204,54,204,52,"JSON"],[204,58,204,56],[204,59,204,57,"parse"],[204,64,204,62],[204,65,204,63,"storedCompetitions"],[204,83,204,81],[204,84,204,82],[204,87,204,85],[204,89,204,87],[205,6,206,4,"console"],[205,13,206,11],[205,14,206,12,"log"],[205,17,206,15],[205,18,206,16],[205,60,206,58],[205,62,206,60,"existingCompetitions"],[205,82,206,80],[205,83,206,81,"length"],[205,89,206,87],[205,90,206,88],[207,6,208,4],[208,6,209,4],[208,12,209,10,"existingNames"],[208,25,209,23],[208,28,209,26,"existingCompetitions"],[208,48,209,46],[208,49,209,47,"map"],[208,52,209,50],[208,53,209,52,"comp"],[208,57,209,61],[208,61,209,66,"comp"],[208,65,209,70],[208,66,209,71,"name"],[208,70,209,75],[208,71,209,76,"toLowerCase"],[208,82,209,87],[208,83,209,88],[208,84,209,89],[208,85,209,90],[209,6,210,4],[209,10,210,8,"existingNames"],[209,23,210,21],[209,24,210,22,"includes"],[209,32,210,30],[209,33,210,31,"data"],[209,37,210,35],[209,38,210,36,"name"],[209,42,210,40],[209,43,210,41,"toLowerCase"],[209,54,210,52],[209,55,210,53],[209,56,210,54],[209,57,210,55],[209,59,210,57],[210,8,211,6],[210,14,211,12],[210,18,211,16,"Error"],[210,23,211,21],[210,24,211,22],[210,86,211,84],[210,87,211,85],[211,6,212,4],[213,6,214,4],[214,6,215,4],[214,12,215,10,"newCompetition"],[214,26,215,24],[214,29,215,27],[215,8,216,6,"_id"],[215,11,216,9],[215,13,216,11],[215,21,216,19,"Date"],[215,25,216,23],[215,26,216,24,"now"],[215,29,216,27],[215,30,216,28],[215,31,216,29],[215,33,216,31],[216,8,217,6,"name"],[216,12,217,10],[216,14,217,12,"data"],[216,18,217,16],[216,19,217,17,"name"],[216,23,217,21],[217,8,218,6,"rules"],[217,13,218,11],[217,15,218,13,"data"],[217,19,218,17],[217,20,218,18,"rules"],[217,25,218,23],[218,8,219,6,"invite_code"],[218,19,219,17],[218,21,219,19,"Math"],[218,25,219,23],[218,26,219,24,"random"],[218,32,219,30],[218,33,219,31],[218,34,219,32],[218,35,219,33,"toString"],[218,43,219,41],[218,44,219,42],[218,46,219,44],[218,47,219,45],[218,48,219,46,"substr"],[218,54,219,52],[218,55,219,53],[218,56,219,54],[218,58,219,56],[218,59,219,57],[218,60,219,58],[218,61,219,59,"toUpperCase"],[218,72,219,70],[218,73,219,71],[218,74,219,72],[219,8,220,6,"invite_link"],[219,19,220,17],[219,21,220,19],[219,50,220,48,"Math"],[219,54,220,52],[219,55,220,53,"random"],[219,61,220,59],[219,62,220,60],[219,63,220,61],[219,64,220,62,"toString"],[219,72,220,70],[219,73,220,71],[219,75,220,73],[219,76,220,74],[219,77,220,75,"substr"],[219,83,220,81],[219,84,220,82],[219,85,220,83],[219,87,220,85],[219,88,220,86],[219,89,220,87],[219,90,220,88,"toUpperCase"],[219,101,220,99],[219,102,220,100],[219,103,220,101],[219,105,220,103],[220,8,221,6,"admin_id"],[220,16,221,14],[220,18,221,16],[220,44,221,42],[221,8,221,44],[222,8,222,6,"participants"],[222,20,222,18],[222,22,222,20],[222,23,223,8],[223,10,224,10,"id"],[223,12,224,12],[223,14,224,14],[223,40,224,40],[224,10,225,10,"name"],[224,14,225,14],[224,16,225,16],[224,33,225,33],[225,10,226,10,"email"],[225,15,226,15],[225,17,226,17],[225,36,226,36],[226,10,227,10,"is_admin"],[226,18,227,18],[226,20,227,20],[226,24,227,24],[227,10,228,10,"paid_matchdays"],[227,24,228,24],[227,26,228,26],[227,27,228,27],[227,28,228,28],[227,30,228,30],[227,31,228,31],[227,32,228,32],[228,10,228,34],[229,10,229,10,"points"],[229,16,229,16],[229,18,229,18],[230,8,230,8],[230,9,230,9],[230,10,231,7],[231,8,232,6,"wallet_balance"],[231,22,232,20],[231,24,232,22],[231,25,232,23],[232,8,233,6,"is_active"],[232,17,233,15],[232,19,233,17],[232,23,233,21],[233,8,234,6,"current_matchday"],[233,24,234,22],[233,26,234,24],[233,27,234,25],[234,8,234,27],[235,8,235,6,"standings"],[235,17,235,15],[235,19,235,17],[235,20,236,8],[236,10,236,10,"position"],[236,18,236,18],[236,20,236,20],[236,21,236,21],[237,10,236,23,"player_id"],[237,19,236,32],[237,21,236,34],[237,47,236,60],[238,10,236,62,"name"],[238,14,236,66],[238,16,236,68],[238,33,236,85],[239,10,236,87,"points"],[239,16,236,93],[239,18,236,95],[240,8,236,97],[240,9,236,98],[240,10,237,7],[241,8,238,6,"created_at"],[241,18,238,16],[241,20,238,18],[241,24,238,22,"Date"],[241,28,238,26],[241,29,238,27],[241,30,238,28],[241,31,238,29,"toISOString"],[241,42,238,40],[241,43,238,41],[241,44,238,42],[242,8,239,6,"updated_at"],[242,18,239,16],[242,20,239,18],[242,24,239,22,"Date"],[242,28,239,26],[242,29,239,27],[242,30,239,28],[242,31,239,29,"toISOString"],[242,42,239,40],[242,43,239,41],[243,6,240,4],[243,7,240,5],[245,6,242,4],[246,6,243,4,"existingCompetitions"],[246,26,243,24],[246,27,243,25,"push"],[246,31,243,29],[246,32,243,30,"newCompetition"],[246,46,243,44],[246,47,243,45],[247,6,244,4],[247,12,244,10,"CrossPlatformStorage"],[247,32,244,30],[247,33,244,31,"setItem"],[247,40,244,38],[247,41,244,39],[247,59,244,57],[247,61,244,59,"JSON"],[247,65,244,63],[247,66,244,64,"stringify"],[247,75,244,73],[247,76,244,74,"existingCompetitions"],[247,96,244,94],[247,97,244,95],[247,98,244,96],[248,6,246,4,"console"],[248,13,246,11],[248,14,246,12,"log"],[248,17,246,15],[248,18,246,16],[248,63,246,61],[248,65,246,63,"existingCompetitions"],[248,85,246,83],[248,86,246,84,"length"],[248,92,246,90],[248,93,246,91],[249,6,247,4,"console"],[249,13,247,11],[249,14,247,12,"log"],[249,17,247,15],[249,18,247,16],[249,38,247,36],[249,40,247,38,"newCompetition"],[249,54,247,52],[249,55,247,53,"_id"],[249,58,247,56],[249,59,247,57],[250,6,248,4,"console"],[250,13,248,11],[250,14,248,12,"log"],[250,17,248,15],[250,18,248,16],[250,40,248,38],[250,42,248,40,"newCompetition"],[250,56,248,54],[250,57,248,55,"name"],[250,61,248,59],[250,62,248,60],[251,6,250,4],[251,13,250,11,"newCompetition"],[251,27,250,25],[252,4,251,2],[252,5,251,3],[253,4,253,2],[254,4,254,2,"validateNameMock"],[254,20,254,18],[254,22,254,20],[254,28,254,27,"name"],[254,32,254,39],[254,36,254,44],[255,6,255,4,"console"],[255,13,255,11],[255,14,255,12,"log"],[255,17,255,15],[255,18,255,16],[255,57,255,55],[255,59,255,57,"name"],[255,63,255,61],[255,64,255,62],[256,6,257,4],[256,10,257,8],[256,11,257,9,"name"],[256,15,257,13],[256,16,257,14,"trim"],[256,20,257,18],[256,21,257,19],[256,22,257,20],[256,24,257,22],[257,8,258,6],[257,15,258,13],[258,10,258,15,"available"],[258,19,258,24],[258,21,258,26],[258,25,258,30],[259,10,258,32,"message"],[259,17,258,39],[259,19,258,41],[260,8,258,44],[260,9,258,45],[261,6,259,4],[263,6,261,4],[264,6,262,4],[264,12,262,10,"storedCompetitions"],[264,30,262,28],[264,33,262,31],[264,39,262,37,"CrossPlatformStorage"],[264,59,262,57],[264,60,262,58,"getItem"],[264,67,262,65],[264,68,262,66],[264,86,262,84],[264,87,262,85],[265,6,263,4],[265,10,263,8,"existingCompetitions"],[265,30,263,28],[265,33,263,31,"storedCompetitions"],[265,51,263,49],[265,54,263,52,"JSON"],[265,58,263,56],[265,59,263,57,"parse"],[265,64,263,62],[265,65,263,63,"storedCompetitions"],[265,83,263,81],[265,84,263,82],[265,87,263,85],[265,89,263,87],[267,6,265,4],[268,6,266,4],[268,12,266,10,"defaultNames"],[268,24,266,22],[268,27,266,25],[268,28,266,26],[268,50,266,48],[268,52,266,50],[268,78,266,76],[268,80,266,78],[268,96,266,94],[268,97,266,95],[269,6,267,4],[269,12,267,10,"allNames"],[269,20,267,18],[269,23,267,21],[269,24,268,6],[269,27,268,9,"existingCompetitions"],[269,47,268,29],[269,48,268,30,"map"],[269,51,268,33],[269,52,268,35,"comp"],[269,56,268,44],[269,60,268,49,"comp"],[269,64,268,53],[269,65,268,54,"name"],[269,69,268,58],[269,70,268,59,"toLowerCase"],[269,81,268,70],[269,82,268,71],[269,83,268,72],[269,84,268,73],[269,86,269,6],[269,89,269,9,"defaultNames"],[269,101,269,21],[269,102,269,22,"map"],[269,105,269,25],[269,106,269,26,"name"],[269,110,269,30],[269,114,269,34,"name"],[269,118,269,38],[269,119,269,39,"toLowerCase"],[269,130,269,50],[269,131,269,51],[269,132,269,52],[269,133,269,53],[269,134,270,5],[270,6,272,4],[270,12,272,10,"isAvailable"],[270,23,272,21],[270,26,272,24],[270,27,272,25,"allNames"],[270,35,272,33],[270,36,272,34,"includes"],[270,44,272,42],[270,45,272,43,"name"],[270,49,272,47],[270,50,272,48,"toLowerCase"],[270,61,272,59],[270,62,272,60],[270,63,272,61],[270,64,272,62],[271,6,274,4],[271,13,274,11],[272,8,275,6,"available"],[272,17,275,15],[272,19,275,17,"isAvailable"],[272,30,275,28],[273,8,276,6,"message"],[273,15,276,13],[273,17,276,15,"isAvailable"],[273,28,276,26],[273,31,276,29],[273,47,276,45],[273,50,276,48],[274,6,277,4],[274,7,277,5],[275,4,278,2],[275,5,278,3],[276,4,280,2,"getMyCompetitionsMock"],[276,25,280,23],[276,27,280,25],[276,33,280,25,"getMyCompetitionsMock"],[276,34,280,25],[276,39,280,37],[277,6,281,4,"console"],[277,13,281,11],[277,14,281,12,"log"],[277,17,281,15],[277,18,281,16],[277,52,281,50],[277,53,281,51],[279,6,283,4],[280,6,284,4],[280,12,284,10,"storedCompetitions"],[280,30,284,28],[280,33,284,31],[280,39,284,37,"CrossPlatformStorage"],[280,59,284,57],[280,60,284,58,"getItem"],[280,67,284,65],[280,68,284,66],[280,86,284,84],[280,87,284,85],[281,6,285,4],[281,10,285,8,"competitions"],[281,22,285,20],[281,25,285,23,"storedCompetitions"],[281,43,285,41],[281,46,285,44,"JSON"],[281,50,285,48],[281,51,285,49,"parse"],[281,56,285,54],[281,57,285,55,"storedCompetitions"],[281,75,285,73],[281,76,285,74],[281,79,285,77],[281,81,285,79],[282,6,287,4,"console"],[282,13,287,11],[282,14,287,12,"log"],[282,17,287,15],[282,18,287,16],[282,53,287,51],[282,55,287,53,"competitions"],[282,67,287,65],[282,68,287,66,"length"],[282,74,287,72],[282,75,287,73],[284,6,289,4],[285,6,290,4,"competitions"],[285,18,290,16],[285,19,290,17,"forEach"],[285,26,290,24],[285,27,290,25],[285,28,290,26,"comp"],[285,32,290,35],[285,34,290,37,"index"],[285,39,290,50],[285,44,290,55],[286,8,291,6,"console"],[286,15,291,13],[286,16,291,14,"log"],[286,19,291,17],[286,20,291,18],[286,23,291,21,"index"],[286,28,291,26],[286,31,291,29],[286,32,291,30],[286,37,291,35,"comp"],[286,41,291,39],[286,42,291,40,"name"],[286,46,291,44],[286,55,291,53,"comp"],[286,59,291,57],[286,60,291,58,"_id"],[286,63,291,61],[286,66,291,64],[286,67,291,65],[287,6,292,4],[287,7,292,5],[287,8,292,6],[288,6,294,4],[288,13,294,11,"competitions"],[288,25,294,23],[289,4,295,2],[289,5,295,3],[290,4,297,2,"joinMock"],[290,12,297,10],[290,14,297,12],[290,20,297,19,"inviteCode"],[290,30,297,37],[290,34,297,42],[291,6,298,4,"console"],[291,13,298,11],[291,14,298,12,"log"],[291,17,298,15],[291,18,298,16],[291,59,298,57],[291,61,298,59,"inviteCode"],[291,71,298,69],[291,72,298,70],[292,6,299,4],[292,10,299,8,"inviteCode"],[292,20,299,18],[292,21,299,19,"length"],[292,27,299,25],[292,30,299,28],[292,31,299,29],[292,33,299,31],[293,8,300,6],[293,14,300,12],[293,18,300,16,"Error"],[293,23,300,21],[293,24,300,22],[293,45,300,43],[293,46,300,44],[294,6,301,4],[295,6,302,4],[295,13,302,11],[296,8,302,13,"message"],[296,15,302,20],[296,17,302,22],[297,6,302,57],[297,7,302,58],[298,4,303,2],[299,2,304,0],[299,3,304,1],[301,2,306,0],[302,2,307,7],[302,8,307,13,"walletAPI"],[302,17,307,22],[302,20,307,25],[303,4,308,2,"getBalance"],[303,14,308,12],[303,16,308,14,"getBalance"],[303,17,308,14],[303,22,308,20,"apiClient"],[303,31,308,29],[303,32,308,30,"get"],[303,35,308,33],[303,36,308,34],[303,53,308,51],[303,54,308,52],[304,4,310,2,"topUp"],[304,9,310,7],[304,11,310,10,"amount"],[304,17,310,24],[304,21,311,4,"apiClient"],[304,30,311,13],[304,31,311,14,"post"],[304,35,311,18],[304,36,311,19],[304,51,311,34],[304,53,311,36],[304,57,311,40],[304,59,311,42],[305,6,312,6,"params"],[305,12,312,12],[305,14,312,14],[306,8,312,16,"amount"],[307,6,312,23],[308,4,313,4],[308,5,313,5],[308,6,313,6],[309,4,315,2,"withdraw"],[309,12,315,10],[309,14,315,13,"amount"],[309,20,315,27],[309,24,316,4,"apiClient"],[309,33,316,13],[309,34,316,14,"post"],[309,38,316,18],[309,39,316,19],[309,57,316,37],[309,59,316,39],[309,63,316,43],[309,65,316,45],[310,6,317,6,"params"],[310,12,317,12],[310,14,317,14],[311,8,317,16,"amount"],[312,6,317,23],[313,4,318,4],[313,5,318,5],[313,6,318,6],[314,4,320,2,"getTransactions"],[314,19,320,17],[314,21,320,19,"getTransactions"],[314,22,320,19],[314,27,320,25,"apiClient"],[314,36,320,34],[314,37,320,35,"get"],[314,40,320,38],[314,41,320,39],[314,56,320,54],[315,2,321,0],[315,3,321,1],[316,2,323,0],[316,6,323,0,"_default"],[316,14,323,0],[316,17,323,15,"apiClient"],[316,26,323,24],[317,0,323,25],[317,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;UwBK;6CxBO;QyBE;qEzBC;qB0BE,uC1B;kB2BE,oD3B;mB4BE;M5BQ;U6BE;M7BG;mB8BE;qD9BC;c+BG;mDCiB,sCD;G/B0C;oBiCG;kCDc,sCC;0BCC,0BD;GjCS;yBmCE;yBCU;KDE;GnCG;YqCE;GrCM;csCK,sCtC;SuCE;MvCG;YwCE;MxCG;mByCE,oCzC"},"hasCjsExports":false},"type":"js/module"}]}