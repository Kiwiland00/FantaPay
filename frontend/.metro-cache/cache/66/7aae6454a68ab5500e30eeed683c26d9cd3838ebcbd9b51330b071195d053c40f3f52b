{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":39,"index":150}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"../utils/CrossPlatformStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":151},"end":{"line":4,"column":65,"index":216}}],"key":"f35s9TWsgQpxKKiCp9CmSar+L+U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _utilsCrossPlatformStorage = require(_dependencyMap[3], \"../utils/CrossPlatformStorage\");\n  var CrossPlatformStorage = _interopDefault(_utilsCrossPlatformStorage);\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantaleague-pay.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.default.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      // Generate truly random unique invite code (not based on name)\n      const generateRandomCode = () => {\n        const chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'; // Exclude confusing chars like O, 0, I, L\n        let result = '';\n        for (let i = 0; i < 8; i++) {\n          result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n      };\n\n      // Ensure invite code is globally unique\n      let inviteCode = generateRandomCode();\n      while (existingCompetitions.some(comp => comp.invite_code === inviteCode)) {\n        inviteCode = generateRandomCode();\n        console.log('🔄 Generated new code due to collision:', inviteCode);\n      }\n      console.log('✅ Generated unique invite code:', inviteCode);\n      const newCompetition = {\n        _id: `comp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: inviteCode,\n        // Random unique code\n        invite_link: `https://fantapay.app/join/${inviteCode}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n\n        // Enhance competitions with demo participants if they don't have enough\n        const enhancedCompetitions = competitions.map(comp => {\n          if (!comp.participants || comp.participants.length < 4) {\n            const demoParticipants = [{\n              id: '650f1f1f1f1f1f1f1f1f1f1f',\n              name: 'FantaPay Tester',\n              email: 'test@fantapay.com',\n              is_admin: true,\n              paid_matchdays: [1, 2, 3],\n              points: 87.5\n            }, {\n              id: 'user_marco_rossi',\n              name: 'Marco Rossi',\n              email: 'marco.rossi@email.com',\n              is_admin: false,\n              paid_matchdays: [1, 2],\n              points: 92.3\n            }, {\n              id: 'user_giulia_bianchi',\n              name: 'Giulia Bianchi',\n              email: 'giulia.bianchi@email.com',\n              is_admin: false,\n              paid_matchdays: [1],\n              points: 78.1\n            }, {\n              id: 'user_luca_ferrari',\n              name: 'Luca Ferrari',\n              email: 'luca.ferrari@email.com',\n              is_admin: false,\n              paid_matchdays: [],\n              points: 45.7\n            }, {\n              id: 'user_sofia_conti',\n              name: 'Sofia Conti',\n              email: 'sofia.conti@email.com',\n              is_admin: false,\n              paid_matchdays: [1, 2, 3],\n              points: 95.2\n            }];\n            return {\n              ...comp,\n              participants: demoParticipants\n            };\n          }\n          return comp;\n        });\n\n        // Save enhanced competitions back to storage\n        await CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(enhancedCompetitions));\n        enhancedCompetitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id}) - ${comp.participants?.length || 0} participants`);\n        });\n        return enhancedCompetitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    },\n    // Critical Missing Method: Get ALL competitions for uniqueness validation\n    getAllCompetitions: async () => {\n      console.log('🌐 Mock: Getting ALL competitions for validation');\n      try {\n        // Get competitions from both storage locations \n        const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n        let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Also check the old storage key for backwards compatibility\n        const oldStoredCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n        const oldCompetitions = oldStoredCompetitions ? JSON.parse(oldStoredCompetitions) : [];\n\n        // Combine both sources and remove duplicates\n        const allCompetitions = [...competitions, ...oldCompetitions];\n        const uniqueCompetitions = allCompetitions.filter((comp, index, self) => index === self.findIndex(c => c._id === comp._id));\n        console.log('📊 Total unique competitions found:', uniqueCompetitions.length);\n        return uniqueCompetitions;\n      } catch (error) {\n        console.error('💥 Error getting all competitions:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  const databaseAPI = {\n    resetDatabase: async () => {\n      console.log('🗑️ Resetting database - clearing all stored data');\n      try {\n        await CrossPlatformStorage.default.removeItem('competitions_mock');\n        await CrossPlatformStorage.default.removeItem('admin_logs_mock');\n        await CrossPlatformStorage.default.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n        await CrossPlatformStorage.default.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n        console.log('✅ Database reset complete - all data cleared');\n        return {\n          success: true,\n          message: 'Database reset complete'\n        };\n      } catch (error) {\n        console.error('❌ Database reset failed:', error);\n        return {\n          success: false,\n          message: 'Reset failed'\n        };\n      }\n    }\n  };\n  var _default = apiClient;\n});","lineCount":660,"map":[[27,2,709,0,"Object"],[27,8,709,0],[27,9,709,0,"defineProperty"],[27,23,709,0],[27,24,709,0,"exports"],[27,31,709,0],[28,4,709,0,"enumerable"],[28,14,709,0],[29,4,709,0,"get"],[29,7,709,0],[29,18,709,0,"get"],[29,19,709,0],[30,6,709,0],[30,13,709,0,"_default"],[30,21,709,0],[31,4,709,0],[32,2,709,0],[33,2,79,0,"Object"],[33,8,79,0],[33,9,79,0,"defineProperty"],[33,23,79,0],[33,24,79,0,"exports"],[33,31,79,0],[34,4,79,0,"enumerable"],[34,14,79,0],[35,4,79,0,"get"],[35,7,79,0],[35,18,79,0,"get"],[35,19,79,0],[36,6,79,0],[36,13,79,0,"authAPI"],[36,20,79,0],[37,4,79,0],[38,2,79,0],[39,2,142,0,"Object"],[39,8,142,0],[39,9,142,0,"defineProperty"],[39,23,142,0],[39,24,142,0,"exports"],[39,31,142,0],[40,4,142,0,"enumerable"],[40,14,142,0],[41,4,142,0,"get"],[41,7,142,0],[41,18,142,0,"get"],[41,19,142,0],[42,6,142,0],[42,13,142,0,"competitionAPI"],[42,27,142,0],[43,4,142,0],[44,2,142,0],[45,2,673,0,"Object"],[45,8,673,0],[45,9,673,0,"defineProperty"],[45,23,673,0],[45,24,673,0,"exports"],[45,31,673,0],[46,4,673,0,"enumerable"],[46,14,673,0],[47,4,673,0,"get"],[47,7,673,0],[47,18,673,0,"get"],[47,19,673,0],[48,6,673,0],[48,13,673,0,"walletAPI"],[48,22,673,0],[49,4,673,0],[50,2,673,0],[51,2,690,0,"Object"],[51,8,690,0],[51,9,690,0,"defineProperty"],[51,23,690,0],[51,24,690,0,"exports"],[51,31,690,0],[52,4,690,0,"enumerable"],[52,14,690,0],[53,4,690,0,"get"],[53,7,690,0],[53,18,690,0,"get"],[53,19,690,0],[54,6,690,0],[54,13,690,0,"databaseAPI"],[54,24,690,0],[55,4,690,0],[56,2,690,0],[57,2,1,0],[57,6,1,0,"_axios"],[57,12,1,0],[57,15,1,0,"require"],[57,22,1,0],[57,23,1,0,"_dependencyMap"],[57,37,1,0],[58,2,1,0],[58,6,1,0,"axios"],[58,11,1,0],[58,14,1,0,"_interopDefault"],[58,29,1,0],[58,30,1,0,"_axios"],[58,36,1,0],[59,2,2,0],[59,6,2,0,"_expoSecureStore"],[59,22,2,0],[59,25,2,0,"require"],[59,32,2,0],[59,33,2,0,"_dependencyMap"],[59,47,2,0],[60,2,2,0],[60,6,2,0,"SecureStore"],[60,17,2,0],[60,20,2,0,"_interopNamespace"],[60,37,2,0],[60,38,2,0,"_expoSecureStore"],[60,54,2,0],[61,2,3,0],[61,6,3,0,"_expoConstants"],[61,20,3,0],[61,23,3,0,"require"],[61,30,3,0],[61,31,3,0,"_dependencyMap"],[61,45,3,0],[62,2,3,0],[62,6,3,0,"Constants"],[62,15,3,0],[62,18,3,0,"_interopDefault"],[62,33,3,0],[62,34,3,0,"_expoConstants"],[62,48,3,0],[63,2,4,0],[63,6,4,0,"_utilsCrossPlatformStorage"],[63,32,4,0],[63,35,4,0,"require"],[63,42,4,0],[63,43,4,0,"_dependencyMap"],[63,57,4,0],[64,2,4,0],[64,6,4,0,"CrossPlatformStorage"],[64,26,4,0],[64,29,4,0,"_interopDefault"],[64,44,4,0],[64,45,4,0,"_utilsCrossPlatformStorage"],[64,71,4,0],[65,2,6,0],[66,2,7,0],[66,8,7,6,"BACKEND_URL"],[66,19,7,17],[66,22,7,20,"Constants"],[66,31,7,29],[66,32,7,29,"default"],[66,39,7,29],[66,40,7,30,"expoConfig"],[66,50,7,40],[66,52,7,42,"extra"],[66,57,7,47],[66,59,7,49,"backendUrl"],[66,69,7,59],[66,73,7,63,"process"],[66,80,7,70],[66,81,7,71,"env"],[66,84,7,74],[66,85,7,75,"EXPO_PUBLIC_BACKEND_URL"],[66,108,7,98],[66,112,7,102],[66,163,7,153],[67,2,9,0],[67,8,9,6,"ApiClient"],[67,17,9,15],[67,18,9,16],[68,4,12,2,"constructor"],[68,15,12,13,"constructor"],[68,16,12,13],[68,18,12,16],[69,6,13,4],[69,10,13,8],[69,11,13,9,"client"],[69,17,13,15],[69,20,13,18,"axios"],[69,25,13,23],[69,26,13,23,"default"],[69,33,13,23],[69,34,13,24,"create"],[69,40,13,30],[69,41,13,31],[70,8,14,6,"baseURL"],[70,15,14,13],[70,17,14,15],[70,20,14,18,"BACKEND_URL"],[70,31,14,29],[70,37,14,35],[71,8,15,6,"timeout"],[71,15,15,13],[71,17,15,15],[71,22,15,20],[72,8,16,6,"headers"],[72,15,16,13],[72,17,16,15],[73,10,17,8],[73,24,17,22],[73,26,17,24],[74,8,18,6],[75,6,19,4],[75,7,19,5],[75,8,19,6],[77,6,21,4],[78,6,22,4],[78,10,22,8],[78,11,22,9,"client"],[78,17,22,15],[78,18,22,16,"interceptors"],[78,30,22,28],[78,31,22,29,"request"],[78,38,22,36],[78,39,22,37,"use"],[78,42,22,40],[78,43,22,41],[78,49,22,48,"config"],[78,55,22,54],[78,59,22,59],[79,8,23,6,"console"],[79,15,23,13],[79,16,23,14,"log"],[79,19,23,17],[79,20,23,18],[79,39,23,37,"config"],[79,45,23,43],[79,46,23,44,"method"],[79,52,23,50],[79,54,23,52,"toUpperCase"],[79,65,23,63],[79,66,23,64],[79,67,23,65],[79,71,23,69,"config"],[79,77,23,75],[79,78,23,76,"url"],[79,81,23,79],[79,83,23,81],[79,85,23,83,"config"],[79,91,23,89],[79,92,23,90,"data"],[79,96,23,94],[79,97,23,95],[80,8,25,6],[80,14,25,12,"token"],[80,19,25,17],[80,22,25,20],[80,28,25,26,"SecureStore"],[80,39,25,37],[80,40,25,38,"getItemAsync"],[80,52,25,50],[80,53,25,51],[80,68,25,66],[80,69,25,67],[81,8,26,6],[81,12,26,10,"token"],[81,17,26,15],[81,19,26,17],[82,10,27,8,"config"],[82,16,27,14],[82,17,27,15,"headers"],[82,24,27,22],[82,25,27,23,"Authorization"],[82,38,27,36],[82,41,27,39],[82,51,27,49,"token"],[82,56,27,54],[82,58,27,56],[83,8,28,6],[84,8,29,6],[84,15,29,13,"config"],[84,21,29,19],[85,6,30,4],[85,7,30,5],[85,8,30,6],[87,6,32,4],[88,6,33,4],[88,10,33,8],[88,11,33,9,"client"],[88,17,33,15],[88,18,33,16,"interceptors"],[88,30,33,28],[88,31,33,29,"response"],[88,39,33,37],[88,40,33,38,"use"],[88,43,33,41],[88,44,34,7,"response"],[88,52,34,15],[88,56,34,20],[89,8,35,8,"console"],[89,15,35,15],[89,16,35,16,"log"],[89,19,35,19],[89,20,35,20],[89,39,35,39,"response"],[89,47,35,47],[89,48,35,48,"status"],[89,54,35,54],[89,56,35,56],[89,58,35,58,"response"],[89,66,35,66],[89,67,35,67,"data"],[89,71,35,71],[89,72,35,72],[90,8,36,8],[90,15,36,15,"response"],[90,23,36,23],[91,6,37,6],[91,7,37,7],[91,9,38,7,"error"],[91,14,38,12],[91,18,38,17],[92,8,39,8,"console"],[92,15,39,15],[92,16,39,16,"log"],[92,19,39,19],[92,20,39,20],[92,36,39,36,"error"],[92,41,39,41],[92,42,39,42,"response"],[92,50,39,50],[92,52,39,52,"status"],[92,58,39,58],[92,62,39,62],[92,71,39,71],[92,73,39,73],[92,75,39,75,"error"],[92,80,39,80],[92,81,39,81,"response"],[92,89,39,89],[92,91,39,91,"data"],[92,95,39,95],[92,99,39,99,"error"],[92,104,39,104],[92,105,39,105,"message"],[92,112,39,112],[92,113,39,113],[93,8,41,8],[93,12,41,12,"error"],[93,17,41,17],[93,18,41,18,"response"],[93,26,41,26],[93,28,41,28,"status"],[93,34,41,34],[93,39,41,39],[93,42,41,42],[93,44,41,44],[94,10,42,10],[95,10,43,10,"SecureStore"],[95,21,43,21],[95,22,43,22,"deleteItemAsync"],[95,37,43,37],[95,38,43,38],[95,53,43,53],[95,54,43,54],[96,8,44,8],[97,8,45,8],[97,15,45,15,"Promise"],[97,22,45,22],[97,23,45,23,"reject"],[97,29,45,29],[97,30,45,30,"error"],[97,35,45,35],[97,36,45,36],[98,6,46,6],[98,7,47,4],[98,8,47,5],[99,4,48,2],[100,4,50,2],[100,10,50,8,"get"],[100,13,50,11,"get"],[100,14,50,21,"url"],[100,17,50,32],[100,19,50,46],[101,6,51,4],[101,12,51,10,"response"],[101,20,51,36],[101,23,51,39],[101,29,51,45],[101,33,51,49],[101,34,51,50,"client"],[101,40,51,56],[101,41,51,57,"get"],[101,44,51,60],[101,45,51,61,"url"],[101,48,51,64],[101,49,51,65],[102,6,52,4],[102,13,52,11,"response"],[102,21,52,19],[102,22,52,20,"data"],[102,26,52,24],[103,4,53,2],[104,4,55,2],[104,10,55,8,"post"],[104,14,55,12,"post"],[104,15,55,22,"url"],[104,18,55,33],[104,20,55,35,"data"],[104,24,55,45],[104,26,55,59],[105,6,56,4],[105,12,56,10,"response"],[105,20,56,36],[105,23,56,39],[105,29,56,45],[105,33,56,49],[105,34,56,50,"client"],[105,40,56,56],[105,41,56,57,"post"],[105,45,56,61],[105,46,56,62,"url"],[105,49,56,65],[105,51,56,67,"data"],[105,55,56,71],[105,56,56,72],[106,6,57,4],[106,13,57,11,"response"],[106,21,57,19],[106,22,57,20,"data"],[106,26,57,24],[107,4,58,2],[108,4,60,2],[108,10,60,8,"patch"],[108,15,60,13,"patch"],[108,16,60,23,"url"],[108,19,60,34],[108,21,60,36,"data"],[108,25,60,46],[108,27,60,60],[109,6,61,4],[109,12,61,10,"response"],[109,20,61,36],[109,23,61,39],[109,29,61,45],[109,33,61,49],[109,34,61,50,"client"],[109,40,61,56],[109,41,61,57,"patch"],[109,46,61,62],[109,47,61,63,"url"],[109,50,61,66],[109,52,61,68,"data"],[109,56,61,72],[109,57,61,73],[110,6,62,4],[110,13,62,11,"response"],[110,21,62,19],[110,22,62,20,"data"],[110,26,62,24],[111,4,63,2],[112,4,65,2],[112,10,65,8,"delete"],[112,16,65,14,"delete"],[112,17,65,24,"url"],[112,20,65,35],[112,22,65,49],[113,6,66,4],[113,12,66,10,"response"],[113,20,66,36],[113,23,66,39],[113,29,66,45],[113,33,66,49],[113,34,66,50,"client"],[113,40,66,56],[113,41,66,57,"delete"],[113,47,66,63],[113,48,66,64,"url"],[113,51,66,67],[113,52,66,68],[114,6,67,4],[114,13,67,11,"response"],[114,21,67,19],[114,22,67,20,"data"],[114,26,67,24],[115,4,68,2],[116,4,70,2],[116,10,70,8,"put"],[116,13,70,11,"put"],[116,14,70,21,"url"],[116,17,70,32],[116,19,70,34,"data"],[116,23,70,44],[116,25,70,58],[117,6,71,4],[117,12,71,10,"response"],[117,20,71,36],[117,23,71,39],[117,29,71,45],[117,33,71,49],[117,34,71,50,"client"],[117,40,71,56],[117,41,71,57,"put"],[117,44,71,60],[117,45,71,61,"url"],[117,48,71,64],[117,50,71,66,"data"],[117,54,71,70],[117,55,71,71],[118,6,72,4],[118,13,72,11,"response"],[118,21,72,19],[118,22,72,20,"data"],[118,26,72,24],[119,4,73,2],[120,2,74,0],[121,2,76,0],[121,8,76,6,"apiClient"],[121,17,76,15],[121,20,76,18],[121,24,76,22,"ApiClient"],[121,33,76,31],[121,34,76,32],[121,35,76,33],[123,2,78,0],[124,2,79,7],[124,8,79,13,"authAPI"],[124,15,79,20],[124,18,79,23],[125,4,80,2,"createSession"],[125,17,80,15],[125,19,80,18,"sessionId"],[125,28,80,35],[125,32,81,4,"apiClient"],[125,41,81,13],[125,42,81,14,"post"],[125,46,81,18],[125,47,81,19],[125,62,81,34],[125,64,81,36],[125,68,81,40],[125,70,81,42],[126,6,82,6,"headers"],[126,13,82,13],[126,15,82,15],[127,8,82,17],[127,22,82,31],[127,24,82,33,"sessionId"],[128,6,82,43],[129,4,83,4],[129,5,83,5],[129,6,83,6],[130,4,85,2,"signup"],[130,10,85,8],[130,12,85,11,"data"],[130,16,91,3],[130,20,91,8,"apiClient"],[130,29,91,17],[130,30,91,18,"post"],[130,34,91,22],[130,35,91,23],[130,49,91,37],[130,51,91,39,"data"],[130,55,91,43],[130,56,91,44],[131,4,93,2,"verifyOTP"],[131,13,93,11],[131,15,93,14,"data"],[131,19,93,55],[131,23,94,4,"apiClient"],[131,32,94,13],[131,33,94,14,"post"],[131,37,94,18],[131,38,94,19],[131,56,94,37],[131,58,94,39,"data"],[131,62,94,43],[131,63,94,44],[132,4,96,2,"login"],[132,9,96,7],[132,11,96,10,"data"],[132,15,96,51],[132,19,97,4,"apiClient"],[132,28,97,13],[132,29,97,14,"post"],[132,33,97,18],[132,34,97,19],[132,47,97,32],[132,49,97,34,"data"],[132,53,97,38],[132,54,97,39],[133,4,99,2,"resendOTP"],[133,13,99,11],[133,15,99,14,"email"],[133,20,99,27],[133,24,100,4,"apiClient"],[133,33,100,13],[133,34,100,14,"post"],[133,38,100,18],[133,39,100,19],[133,57,100,37],[133,59,100,39],[134,6,100,41,"email"],[135,4,100,47],[135,5,100,48],[135,6,100,49],[136,4,102,2,"getCurrentUser"],[136,18,102,16],[136,20,102,18,"getCurrentUser"],[136,21,102,18],[136,26,102,24,"apiClient"],[136,35,102,33],[136,36,102,34,"get"],[136,39,102,37],[136,40,102,38],[136,50,102,48],[136,51,102,49],[137,4,104,2,"logout"],[137,10,104,8],[137,12,104,10,"logout"],[137,13,104,10],[137,18,104,16,"apiClient"],[137,27,104,25],[137,28,104,26,"post"],[137,32,104,30],[137,33,104,31],[137,47,104,45],[137,48,104,46],[138,4,106,2,"updateLanguage"],[138,18,106,16],[138,20,106,19,"language"],[138,28,106,35],[138,32,107,4,"apiClient"],[138,41,107,13],[138,42,107,14,"patch"],[138,47,107,19],[138,48,107,20],[138,64,107,36],[138,66,107,38],[138,70,107,42],[138,72,107,44],[139,6,108,6,"params"],[139,12,108,12],[139,14,108,14],[140,8,108,16,"language"],[141,6,108,25],[142,4,109,4],[142,5,109,5],[142,6,109,6],[143,4,111,2,"toggleBiometric"],[143,19,111,17],[143,21,111,20,"enabled"],[143,28,111,36],[143,32,112,4,"apiClient"],[143,41,112,13],[143,42,112,14,"patch"],[143,47,112,19],[143,48,112,20],[143,65,112,37],[143,67,112,39],[143,71,112,43],[143,73,112,45],[144,6,113,6,"params"],[144,12,113,12],[144,14,113,14],[145,8,113,16,"enabled"],[146,6,113,24],[147,4,114,4],[147,5,114,5],[148,2,115,0],[148,3,115,1],[150,2,117,0],[151,2,118,0],[151,8,118,6,"logAdminAction"],[151,22,118,20],[151,25,118,23],[151,31,118,23,"logAdminAction"],[151,32,118,30,"action"],[151,38,118,44],[151,40,118,46,"competitionName"],[151,55,118,69],[151,57,118,71,"adminName"],[151,66,118,88],[151,68,118,90,"details"],[151,75,118,103],[151,80,118,108],[152,4,119,2],[152,8,119,6],[153,6,120,4],[153,12,120,10,"logs"],[153,16,120,14],[153,19,120,17],[153,26,120,23,"CrossPlatformStorage"],[153,46,120,43],[153,47,120,43,"default"],[153,54,120,43],[153,55,120,44,"getItem"],[153,62,120,51],[153,63,120,52],[153,74,120,63],[153,75,120,64],[153,80,120,68],[153,84,120,72],[154,6,121,4],[154,12,121,10,"adminLogs"],[154,21,121,19],[154,24,121,22,"JSON"],[154,28,121,26],[154,29,121,27,"parse"],[154,34,121,32],[154,35,121,33,"logs"],[154,39,121,37],[154,40,121,38],[155,6,123,4],[155,12,123,10,"logEntry"],[155,20,123,18],[155,23,123,21],[156,8,124,6,"id"],[156,10,124,8],[156,12,124,10],[156,19,124,17,"Date"],[156,23,124,21],[156,24,124,22,"now"],[156,27,124,25],[156,28,124,26],[156,29,124,27],[156,31,124,29],[157,8,125,6,"action"],[157,14,125,12],[158,8,126,6,"competition_name"],[158,24,126,22],[158,26,126,24,"competitionName"],[158,41,126,39],[159,8,127,6,"admin_name"],[159,18,127,16],[159,20,127,18,"adminName"],[159,29,127,27],[160,8,128,6,"details"],[160,15,128,13],[161,8,129,6,"timestamp"],[161,17,129,15],[161,19,129,17],[161,23,129,21,"Date"],[161,27,129,25],[161,28,129,26],[161,29,129,27],[161,30,129,28,"toISOString"],[161,41,129,39],[161,42,129,40],[162,6,130,4],[162,7,130,5],[163,6,132,4,"adminLogs"],[163,15,132,13],[163,16,132,14,"push"],[163,20,132,18],[163,21,132,19,"logEntry"],[163,29,132,27],[163,30,132,28],[164,6,133,4],[164,12,133,10,"CrossPlatformStorage"],[164,32,133,30],[164,33,133,30,"default"],[164,40,133,30],[164,41,133,31,"setItem"],[164,48,133,38],[164,49,133,39],[164,60,133,50],[164,62,133,52,"JSON"],[164,66,133,56],[164,67,133,57,"stringify"],[164,76,133,66],[164,77,133,67,"adminLogs"],[164,86,133,76],[164,87,133,77],[164,88,133,78],[165,6,135,4,"console"],[165,13,135,11],[165,14,135,12,"log"],[165,17,135,15],[165,18,135,16],[165,43,135,41],[165,45,135,43,"action"],[165,51,135,49],[165,53,135,51,"competitionName"],[165,68,135,66],[165,69,135,67],[166,4,136,2],[166,5,136,3],[166,6,136,4],[166,13,136,11,"error"],[166,18,136,16],[166,20,136,18],[167,6,137,4,"console"],[167,13,137,11],[167,14,137,12,"error"],[167,19,137,17],[167,20,137,18],[167,49,137,47],[167,51,137,49,"error"],[167,56,137,54],[167,57,137,55],[168,4,138,2],[169,2,139,0],[169,3,139,1],[171,2,141,0],[172,2,142,7],[172,8,142,13,"competitionAPI"],[172,22,142,27],[172,25,142,30],[173,4,143,2,"create"],[173,10,143,8],[173,12,143,11,"data"],[173,16,158,3],[173,20,158,8,"apiClient"],[173,29,158,17],[173,30,158,18,"post"],[173,34,158,22],[173,35,158,23],[173,50,158,38],[173,52,158,40,"data"],[173,56,158,44],[173,57,158,45],[174,4,160,2,"join"],[174,8,160,6],[174,10,160,9,"inviteCode"],[174,20,160,27],[174,24,161,4,"apiClient"],[174,33,161,13],[174,34,161,14,"post"],[174,38,161,18],[174,39,161,19],[174,59,161,39],[174,61,161,41],[175,6,161,43,"invite_code"],[175,17,161,54],[175,19,161,56,"inviteCode"],[176,4,161,67],[176,5,161,68],[176,6,161,69],[177,4,163,2,"getMyCompetitions"],[177,21,163,19],[177,23,163,21,"getMyCompetitions"],[177,24,163,21],[177,29,163,27,"apiClient"],[177,38,163,36],[177,39,163,37,"get"],[177,42,163,40],[177,43,163,41],[177,61,163,59],[177,62,163,60],[178,4,165,2,"getCompetition"],[178,18,165,16],[178,20,165,19,"id"],[178,22,165,29],[178,26,165,34,"apiClient"],[178,35,165,43],[178,36,165,44,"get"],[178,39,165,47],[178,40,165,48],[178,57,165,65,"id"],[178,59,165,67],[178,61,165,69],[178,62,165,70],[179,4,167,2,"updateStandings"],[179,19,167,17],[179,21,167,19,"updateStandings"],[179,22,168,4,"id"],[179,24,168,14],[179,26,169,4,"standings"],[179,35,169,18],[179,37,170,4,"matchday"],[179,45,170,21],[179,50,172,4,"apiClient"],[179,59,172,13],[179,60,172,14,"patch"],[179,65,172,19],[179,66,172,20],[179,83,172,37,"id"],[179,85,172,39],[179,97,172,51],[179,99,172,53],[180,6,173,6,"standings"],[180,15,173,15],[181,6,174,6,"matchday"],[182,4,175,4],[182,5,175,5],[182,6,175,6],[183,4,177,2,"payFee"],[183,10,177,8],[183,12,177,10,"payFee"],[183,13,177,11,"id"],[183,15,177,21],[183,17,177,23,"amount"],[183,23,177,37],[183,28,178,4,"apiClient"],[183,37,178,13],[183,38,178,14,"post"],[183,42,178,18],[183,43,178,19],[183,60,178,36,"id"],[183,62,178,38],[183,68,178,44],[183,70,178,46],[183,74,178,50],[183,76,178,52],[184,6,179,6,"params"],[184,12,179,12],[184,14,179,14],[185,8,179,16,"amount"],[186,6,179,23],[187,4,180,4],[187,5,180,5],[187,6,180,6],[188,4,182,2,"getTransactions"],[188,19,182,17],[188,21,182,20,"id"],[188,23,182,30],[188,27,183,4,"apiClient"],[188,36,183,13],[188,37,183,14,"get"],[188,40,183,17],[188,41,183,18],[188,58,183,35,"id"],[188,60,183,37],[188,75,183,52],[188,76,183,53],[189,4,185,2],[190,4,186,2,"payMatchdays"],[190,16,186,14],[190,18,186,16,"payMatchdays"],[190,19,186,17,"competitionId"],[190,32,186,38],[190,34,186,40,"matchdays"],[190,43,186,59],[190,48,187,4,"apiClient"],[190,57,187,13],[190,58,187,14,"post"],[190,62,187,18],[190,63,187,19],[190,80,187,36,"competitionId"],[190,93,187,49],[190,113,187,69],[190,115,187,71],[191,6,188,6,"competition_id"],[191,20,188,20],[191,22,188,22,"competitionId"],[191,35,188,35],[192,6,189,6,"matchdays"],[193,4,190,4],[193,5,190,5],[193,6,190,6],[194,4,192,2,"getMatchdayPayments"],[194,23,192,21],[194,25,192,24,"competitionId"],[194,38,192,45],[194,42,193,4,"apiClient"],[194,51,193,13],[194,52,193,14,"get"],[194,55,193,17],[194,56,193,18],[194,73,193,35,"competitionId"],[194,86,193,48],[194,106,193,68],[194,107,193,69],[195,4,195,2,"getPaymentStatusTable"],[195,25,195,23],[195,27,195,26,"competitionId"],[195,40,195,47],[195,44,196,4,"apiClient"],[195,53,196,13],[195,54,196,14,"get"],[195,57,196,17],[195,58,196,18],[195,75,196,35,"competitionId"],[195,88,196,48],[195,111,196,71],[195,112,196,72],[196,4,198,2],[197,4,199,2,"createMock"],[197,14,199,12],[197,16,199,14],[197,22,199,21,"data"],[197,26,212,3],[197,30,212,8],[198,6,213,4,"console"],[198,13,213,11],[198,14,213,12,"log"],[198,17,213,15],[198,18,213,16],[198,50,213,48],[198,52,213,50,"data"],[198,56,213,54],[198,57,213,55,"name"],[198,61,213,59],[198,62,213,60],[199,6,214,4,"console"],[199,13,214,11],[199,14,214,12,"log"],[199,17,214,15],[199,18,214,16],[199,39,214,37],[199,41,214,39,"data"],[199,45,214,43],[199,46,214,44,"total_matchdays"],[199,61,214,59],[199,65,214,63],[199,67,214,65],[199,68,214,66],[201,6,216,4],[202,6,217,4],[202,12,217,10,"storedCompetitions"],[202,30,217,28],[202,33,217,31],[202,39,217,37,"CrossPlatformStorage"],[202,59,217,57],[202,60,217,57,"default"],[202,67,217,57],[202,68,217,58,"getItem"],[202,75,217,65],[202,76,217,66],[202,95,217,85],[202,96,217,86],[203,6,218,4],[203,10,218,8,"existingCompetitions"],[203,30,218,28],[203,33,218,31,"storedCompetitions"],[203,51,218,49],[203,54,218,52,"JSON"],[203,58,218,56],[203,59,218,57,"parse"],[203,64,218,62],[203,65,218,63,"storedCompetitions"],[203,83,218,81],[203,84,218,82],[203,87,218,85],[203,89,218,87],[204,6,220,4,"console"],[204,13,220,11],[204,14,220,12,"log"],[204,17,220,15],[204,18,220,16],[204,60,220,58],[204,62,220,60,"existingCompetitions"],[204,82,220,80],[204,83,220,81,"length"],[204,89,220,87],[204,90,220,88],[206,6,222,4],[207,6,223,4],[207,12,223,10,"existingNames"],[207,25,223,23],[207,28,223,26,"existingCompetitions"],[207,48,223,46],[207,49,223,47,"map"],[207,52,223,50],[207,53,223,52,"comp"],[207,57,223,61],[207,61,223,66,"comp"],[207,65,223,70],[207,66,223,71,"name"],[207,70,223,75],[207,71,223,76,"toLowerCase"],[207,82,223,87],[207,83,223,88],[207,84,223,89],[207,85,223,90],[208,6,224,4],[208,10,224,8,"existingNames"],[208,23,224,21],[208,24,224,22,"includes"],[208,32,224,30],[208,33,224,31,"data"],[208,37,224,35],[208,38,224,36,"name"],[208,42,224,40],[208,43,224,41,"toLowerCase"],[208,54,224,52],[208,55,224,53],[208,56,224,54],[208,57,224,55],[208,59,224,57],[209,8,225,6],[209,14,225,12],[209,18,225,16,"Error"],[209,23,225,21],[209,24,225,22],[209,86,225,84],[209,87,225,85],[210,6,226,4],[212,6,228,4],[213,6,229,4],[214,6,230,4],[214,12,230,10,"generateRandomCode"],[214,30,230,28],[214,33,230,31,"generateRandomCode"],[214,34,230,31],[214,39,230,37],[215,8,231,6],[215,14,231,12,"chars"],[215,19,231,17],[215,22,231,20],[215,58,231,56],[215,59,231,57],[215,60,231,58],[216,8,232,6],[216,12,232,10,"result"],[216,18,232,16],[216,21,232,19],[216,23,232,21],[217,8,233,6],[217,13,233,11],[217,17,233,15,"i"],[217,18,233,16],[217,21,233,19],[217,22,233,20],[217,24,233,22,"i"],[217,25,233,23],[217,28,233,26],[217,29,233,27],[217,31,233,29,"i"],[217,32,233,30],[217,34,233,32],[217,36,233,34],[218,10,234,8,"result"],[218,16,234,14],[218,20,234,18,"chars"],[218,25,234,23],[218,26,234,24,"charAt"],[218,32,234,30],[218,33,234,31,"Math"],[218,37,234,35],[218,38,234,36,"floor"],[218,43,234,41],[218,44,234,42,"Math"],[218,48,234,46],[218,49,234,47,"random"],[218,55,234,53],[218,56,234,54],[218,57,234,55],[218,60,234,58,"chars"],[218,65,234,63],[218,66,234,64,"length"],[218,72,234,70],[218,73,234,71],[218,74,234,72],[219,8,235,6],[220,8,236,6],[220,15,236,13,"result"],[220,21,236,19],[221,6,237,4],[221,7,237,5],[223,6,239,4],[224,6,240,4],[224,10,240,8,"inviteCode"],[224,20,240,18],[224,23,240,21,"generateRandomCode"],[224,41,240,39],[224,42,240,40],[224,43,240,41],[225,6,241,4],[225,13,241,11,"existingCompetitions"],[225,33,241,31],[225,34,241,32,"some"],[225,38,241,36],[225,39,241,38,"comp"],[225,43,241,47],[225,47,241,52,"comp"],[225,51,241,56],[225,52,241,57,"invite_code"],[225,63,241,68],[225,68,241,73,"inviteCode"],[225,78,241,83],[225,79,241,84],[225,81,241,86],[226,8,242,6,"inviteCode"],[226,18,242,16],[226,21,242,19,"generateRandomCode"],[226,39,242,37],[226,40,242,38],[226,41,242,39],[227,8,243,6,"console"],[227,15,243,13],[227,16,243,14,"log"],[227,19,243,17],[227,20,243,18],[227,61,243,59],[227,63,243,61,"inviteCode"],[227,73,243,71],[227,74,243,72],[228,6,244,4],[229,6,246,4,"console"],[229,13,246,11],[229,14,246,12,"log"],[229,17,246,15],[229,18,246,16],[229,51,246,49],[229,53,246,51,"inviteCode"],[229,63,246,61],[229,64,246,62],[230,6,248,4],[230,12,248,10,"newCompetition"],[230,26,248,24],[230,29,248,27],[231,8,249,6,"_id"],[231,11,249,9],[231,13,249,11],[231,21,249,19,"Date"],[231,25,249,23],[231,26,249,24,"now"],[231,29,249,27],[231,30,249,28],[231,31,249,29],[231,35,249,33,"Math"],[231,39,249,37],[231,40,249,38,"random"],[231,46,249,44],[231,47,249,45],[231,48,249,46],[231,49,249,47,"toString"],[231,57,249,55],[231,58,249,56],[231,60,249,58],[231,61,249,59],[231,62,249,60,"substr"],[231,68,249,66],[231,69,249,67],[231,70,249,68],[231,72,249,70],[231,73,249,71],[231,74,249,72],[231,76,249,74],[232,8,250,6,"name"],[232,12,250,10],[232,14,250,12,"data"],[232,18,250,16],[232,19,250,17,"name"],[232,23,250,21],[233,8,251,6,"total_matchdays"],[233,23,251,21],[233,25,251,23,"data"],[233,29,251,27],[233,30,251,28,"total_matchdays"],[233,45,251,43],[233,49,251,47],[233,51,251,49],[234,8,252,6,"participation_cost_per_team"],[234,35,252,33],[234,37,252,35,"data"],[234,41,252,39],[234,42,252,40,"participation_cost_per_team"],[234,69,252,67],[234,73,252,71],[234,78,252,76],[235,8,253,6,"expected_teams"],[235,22,253,20],[235,24,253,22,"data"],[235,28,253,26],[235,29,253,27,"expected_teams"],[235,43,253,41],[235,47,253,45],[235,48,253,46],[236,8,254,6,"total_prize_pool"],[236,24,254,22],[236,26,254,24,"data"],[236,30,254,28],[236,31,254,29,"total_prize_pool"],[236,47,254,45],[236,51,254,49],[236,57,254,55],[237,8,255,6,"daily_payment_enabled"],[237,29,255,27],[237,31,255,29,"data"],[237,35,255,33],[237,36,255,34,"daily_payment_enabled"],[237,57,255,55],[237,61,255,59],[237,66,255,64],[238,8,256,6,"daily_payment_amount"],[238,28,256,26],[238,30,256,28,"data"],[238,34,256,32],[238,35,256,33,"daily_payment_amount"],[238,55,256,53],[238,59,256,57],[238,62,256,60],[239,8,257,6,"rules"],[239,13,257,11],[239,15,257,13,"data"],[239,19,257,17],[239,20,257,18,"rules"],[239,25,257,23],[240,8,258,6,"invite_code"],[240,19,258,17],[240,21,258,19,"inviteCode"],[240,31,258,29],[241,8,258,31],[242,8,259,6,"invite_link"],[242,19,259,17],[242,21,259,19],[242,50,259,48,"inviteCode"],[242,60,259,58],[242,62,259,60],[243,8,260,6,"admin_id"],[243,16,260,14],[243,18,260,16],[243,44,260,42],[244,8,260,44],[245,8,261,6,"participants"],[245,20,261,18],[245,22,261,20],[245,23,262,8],[246,10,263,10,"id"],[246,12,263,12],[246,14,263,14],[246,40,263,40],[247,10,264,10,"name"],[247,14,264,14],[247,16,264,16],[247,33,264,33],[248,10,265,10,"email"],[248,15,265,15],[248,17,265,17],[248,36,265,36],[249,10,266,10,"is_admin"],[249,18,266,18],[249,20,266,20],[249,24,266,24],[250,10,267,10,"paid_matchdays"],[250,24,267,24],[250,26,267,26],[250,27,267,27],[250,28,267,28],[250,30,267,30],[250,31,267,31],[250,32,267,32],[251,10,267,34],[252,10,268,10,"points"],[252,16,268,16],[252,18,268,18],[253,8,269,8],[253,9,269,9],[253,10,270,7],[254,8,271,6,"wallet_balance"],[254,22,271,20],[254,24,271,22],[254,25,271,23],[255,8,272,6,"is_active"],[255,17,272,15],[255,19,272,17],[255,23,272,21],[256,8,273,6,"current_matchday"],[256,24,273,22],[256,26,273,24],[256,27,273,25],[257,8,273,27],[258,8,274,6,"standings"],[258,17,274,15],[258,19,274,17],[258,20,275,8],[259,10,275,10,"position"],[259,18,275,18],[259,20,275,20],[259,21,275,21],[260,10,275,23,"player_id"],[260,19,275,32],[260,21,275,34],[260,47,275,60],[261,10,275,62,"name"],[261,14,275,66],[261,16,275,68],[261,33,275,85],[262,10,275,87,"points"],[262,16,275,93],[262,18,275,95],[263,8,275,97],[263,9,275,98],[263,10,276,7],[264,8,277,6,"created_at"],[264,18,277,16],[264,20,277,18],[264,24,277,22,"Date"],[264,28,277,26],[264,29,277,27],[264,30,277,28],[264,31,277,29,"toISOString"],[264,42,277,40],[264,43,277,41],[264,44,277,42],[265,8,278,6,"updated_at"],[265,18,278,16],[265,20,278,18],[265,24,278,22,"Date"],[265,28,278,26],[265,29,278,27],[265,30,278,28],[265,31,278,29,"toISOString"],[265,42,278,40],[265,43,278,41],[266,6,279,4],[266,7,279,5],[268,6,281,4],[269,6,282,4,"existingCompetitions"],[269,26,282,24],[269,27,282,25,"push"],[269,31,282,29],[269,32,282,30,"newCompetition"],[269,46,282,44],[269,47,282,45],[270,6,283,4],[270,12,283,10,"CrossPlatformStorage"],[270,32,283,30],[270,33,283,30,"default"],[270,40,283,30],[270,41,283,31,"setItem"],[270,48,283,38],[270,49,283,39],[270,68,283,58],[270,70,283,60,"JSON"],[270,74,283,64],[270,75,283,65,"stringify"],[270,84,283,74],[270,85,283,75,"existingCompetitions"],[270,105,283,95],[270,106,283,96],[270,107,283,97],[271,6,285,4,"console"],[271,13,285,11],[271,14,285,12,"log"],[271,17,285,15],[271,18,285,16],[271,71,285,69],[271,73,285,71,"existingCompetitions"],[271,93,285,91],[271,94,285,92,"length"],[271,100,285,98],[271,101,285,99],[273,6,287,4],[274,6,288,4],[274,12,288,10,"logAdminAction"],[274,26,288,24],[274,27,288,25],[274,35,288,33],[274,37,288,35,"newCompetition"],[274,51,288,49],[274,52,288,50,"name"],[274,56,288,54],[274,58,288,56],[274,75,288,73],[274,77,288,75],[275,8,289,6,"competition_id"],[275,22,289,20],[275,24,289,22,"newCompetition"],[275,38,289,36],[275,39,289,37,"_id"],[275,42,289,40],[276,8,290,6,"rules"],[276,13,290,11],[276,15,290,13,"newCompetition"],[276,29,290,27],[276,30,290,28,"rules"],[276,35,290,33],[277,8,291,6,"total_matchdays"],[277,23,291,21],[277,25,291,23,"newCompetition"],[277,39,291,37],[277,40,291,38,"total_matchdays"],[277,55,291,53],[278,8,292,6,"participation_cost_per_team"],[278,35,292,33],[278,37,292,35,"newCompetition"],[278,51,292,49],[278,52,292,50,"participation_cost_per_team"],[278,79,292,77],[279,8,293,6,"expected_teams"],[279,22,293,20],[279,24,293,22,"newCompetition"],[279,38,293,36],[279,39,293,37,"expected_teams"],[279,53,293,51],[280,8,294,6,"total_prize_pool"],[280,24,294,22],[280,26,294,24,"newCompetition"],[280,40,294,38],[280,41,294,39,"total_prize_pool"],[280,57,294,55],[281,8,295,6,"daily_payment_enabled"],[281,29,295,27],[281,31,295,29,"newCompetition"],[281,45,295,43],[281,46,295,44,"daily_payment_enabled"],[281,67,295,65],[282,8,296,6,"daily_payment_amount"],[282,28,296,26],[282,30,296,28,"newCompetition"],[282,44,296,42],[282,45,296,43,"daily_payment_amount"],[283,6,297,4],[283,7,297,5],[283,8,297,6],[284,6,299,4,"console"],[284,13,299,11],[284,14,299,12,"log"],[284,17,299,15],[284,18,299,16],[284,47,299,45],[284,49,299,47,"newCompetition"],[284,63,299,61],[284,64,299,62,"name"],[284,68,299,66],[284,69,299,67],[285,6,300,4,"console"],[285,13,300,11],[285,14,300,12,"log"],[285,17,300,15],[285,18,300,16],[285,40,300,38],[285,42,300,40,"newCompetition"],[285,56,300,54],[285,57,300,55,"name"],[285,61,300,59],[285,62,300,60],[286,6,301,4,"console"],[286,13,301,11],[286,14,301,12,"log"],[286,17,301,15],[286,18,301,16],[286,37,301,35],[286,39,301,37,"newCompetition"],[286,53,301,51],[286,54,301,52,"daily_payment_enabled"],[286,75,301,73],[286,78,301,76],[286,82,301,80,"newCompetition"],[286,96,301,94],[286,97,301,95,"daily_payment_amount"],[286,117,301,115],[286,132,301,130],[286,135,301,133],[286,145,301,143],[286,146,301,144],[287,6,302,4,"console"],[287,13,302,11],[287,14,302,12,"log"],[287,17,302,15],[287,18,302,16],[287,40,302,38],[287,42,302,40],[287,46,302,44,"newCompetition"],[287,60,302,58],[287,61,302,59,"total_prize_pool"],[287,77,302,75],[287,79,302,77],[287,80,302,78],[288,6,303,4,"console"],[288,13,303,11],[288,14,303,12,"log"],[288,17,303,15],[288,18,303,16],[288,35,303,33],[288,37,303,35,"newCompetition"],[288,51,303,49],[288,52,303,50,"invite_code"],[288,63,303,61],[288,64,303,62],[289,6,305,4],[289,13,305,11],[290,8,305,13,"data"],[290,12,305,17],[290,14,305,19,"newCompetition"],[291,6,305,34],[291,7,305,35],[292,4,306,2],[292,5,306,3],[293,4,308,2],[294,4,309,2,"payMatchdaysMock"],[294,20,309,18],[294,22,309,20],[294,28,309,20,"payMatchdaysMock"],[294,29,309,27,"competitionId"],[294,42,309,48],[294,44,309,50,"matchdays"],[294,53,309,69],[294,58,309,74],[295,6,310,4,"console"],[295,13,310,11],[295,14,310,12,"log"],[295,17,310,15],[295,18,310,16],[295,49,310,47],[295,51,310,49,"matchdays"],[295,60,310,58],[295,62,310,60],[295,78,310,76],[295,80,310,78,"competitionId"],[295,93,310,91],[295,94,310,92],[297,6,312,4],[298,6,313,4],[298,12,313,10,"totalCost"],[298,21,313,19],[298,24,313,22,"matchdays"],[298,33,313,31],[298,34,313,32,"length"],[298,40,313,38],[298,43,313,41],[298,44,313,42],[298,45,313,43],[298,46,313,44],[300,6,315,4],[301,6,316,4],[301,13,316,11],[302,8,317,6,"data"],[302,12,317,10],[302,14,317,12],[303,10,318,8,"message"],[303,17,318,15],[303,19,318,17],[303,44,318,42,"matchdays"],[303,53,318,51],[303,54,318,52,"length"],[303,60,318,58],[303,72,318,70],[304,10,319,8,"paid_matchdays"],[304,24,319,22],[304,26,319,24,"matchdays"],[304,35,319,33],[305,10,320,8,"total_cost"],[305,20,320,18],[305,22,320,20,"totalCost"],[305,31,320,29],[306,10,321,8,"new_user_balance"],[306,26,321,24],[306,28,321,26],[306,31,321,29],[306,34,321,32,"totalCost"],[306,43,321,41],[306,44,321,42],[307,8,322,6],[308,6,323,4],[308,7,323,5],[309,4,324,2],[309,5,324,3],[310,4,326,2,"getMatchdayPaymentsMock"],[310,27,326,25],[310,29,326,27],[310,35,326,34,"competitionId"],[310,48,326,55],[310,52,326,60],[311,6,327,4,"console"],[311,13,327,11],[311,14,327,12,"log"],[311,17,327,15],[311,18,327,16],[311,70,327,68],[311,72,327,70,"competitionId"],[311,85,327,83],[311,86,327,84],[313,6,329,4],[314,6,330,4],[314,12,330,10,"mockPayments"],[314,24,330,22],[314,27,330,25],[314,29,330,27],[315,6,331,4],[315,11,331,9],[315,15,331,13,"i"],[315,16,331,14],[315,19,331,17],[315,20,331,18],[315,22,331,20,"i"],[315,23,331,21],[315,27,331,25],[315,29,331,27],[315,31,331,29,"i"],[315,32,331,30],[315,34,331,32],[315,36,331,34],[316,8,332,6,"mockPayments"],[316,20,332,18],[316,21,332,19,"push"],[316,25,332,23],[316,26,332,24],[317,10,333,8,"_id"],[317,13,333,11],[317,15,333,13],[317,26,333,24,"i"],[317,27,333,25],[317,29,333,27],[318,10,334,8,"user_id"],[318,17,334,15],[318,19,334,17],[318,45,334,43],[319,10,335,8,"competition_id"],[319,24,335,22],[319,26,335,24,"competitionId"],[319,39,335,37],[320,10,336,8,"matchday"],[320,18,336,16],[320,20,336,18,"i"],[320,21,336,19],[321,10,337,8,"amount"],[321,16,337,14],[321,18,337,16],[321,19,337,17],[322,10,338,8,"status"],[322,16,338,14],[322,18,338,16,"i"],[322,19,338,17],[322,23,338,21],[322,24,338,22],[322,27,338,25],[322,33,338,31],[322,36,338,34],[322,45,338,43],[323,10,339,8,"paid_at"],[323,17,339,15],[323,19,339,17,"i"],[323,20,339,18],[323,24,339,22],[323,25,339,23],[323,28,339,26],[323,32,339,30,"Date"],[323,36,339,34],[323,37,339,35],[323,38,339,36],[323,39,339,37,"toISOString"],[323,50,339,48],[323,51,339,49],[323,52,339,50],[323,55,339,53],[323,59,339,57],[324,10,340,8,"created_at"],[324,20,340,18],[324,22,340,20],[324,26,340,24,"Date"],[324,30,340,28],[324,31,340,29],[324,32,340,30],[324,33,340,31,"toISOString"],[324,44,340,42],[324,45,340,43],[325,8,341,6],[325,9,341,7],[325,10,341,8],[326,6,342,4],[327,6,344,4],[327,13,344,11],[328,8,345,6,"data"],[328,12,345,10],[328,14,345,12],[329,10,346,8,"competition_id"],[329,24,346,22],[329,26,346,24,"competitionId"],[329,39,346,37],[330,10,347,8,"daily_payment_enabled"],[330,31,347,29],[330,33,347,31],[330,37,347,35],[331,10,348,8,"daily_payment_amount"],[331,30,348,28],[331,32,348,30],[331,33,348,31],[332,10,349,8,"total_matchdays"],[332,25,349,23],[332,27,349,25],[332,29,349,27],[333,10,350,8,"payments"],[333,18,350,16],[333,20,350,18,"mockPayments"],[334,8,351,6],[335,6,352,4],[335,7,352,5],[336,4,353,2],[336,5,353,3],[337,4,355,2,"getPaymentStatusTableMock"],[337,29,355,27],[337,31,355,29],[337,37,355,36,"competitionId"],[337,50,355,57],[337,54,355,62],[338,6,356,4,"console"],[338,13,356,11],[338,14,356,12,"log"],[338,17,356,15],[338,18,356,16],[338,73,356,71],[338,75,356,73,"competitionId"],[338,88,356,86],[338,89,356,87],[340,6,358,4],[341,6,359,4],[341,12,359,10,"mockTable"],[341,21,359,19],[341,24,359,22],[341,25,359,23],[342,8,360,6,"user_id"],[342,15,360,13],[342,17,360,15],[342,43,360,41],[343,8,361,6,"username"],[343,16,361,14],[343,18,361,16],[343,35,361,33],[344,8,362,6,"name"],[344,12,362,10],[344,14,362,12],[344,31,362,29],[345,8,363,6,"email"],[345,13,363,11],[345,15,363,13],[345,34,363,32],[346,8,364,6,"matchday_payments"],[346,25,364,23],[346,27,364,25,"Array"],[346,32,364,30],[346,33,364,31,"from"],[346,37,364,35],[346,38,364,36],[347,10,364,37,"length"],[347,16,364,43],[347,18,364,45],[348,8,364,47],[348,9,364,48],[348,11,364,50],[348,12,364,51,"_"],[348,13,364,52],[348,15,364,54,"i"],[348,16,364,55],[348,22,364,61],[349,10,365,8,"matchday"],[349,18,365,16],[349,20,365,18,"i"],[349,21,365,19],[349,24,365,22],[349,25,365,23],[350,10,366,8,"status"],[350,16,366,14],[350,18,366,17,"i"],[350,19,366,18],[350,22,366,21],[350,23,366,22],[350,26,366,25],[350,32,366,31],[350,35,366,34],[350,44,366,44],[351,10,367,8,"amount"],[351,16,367,14],[351,18,367,16],[351,19,367,17],[352,10,368,8,"paid_at"],[352,17,368,15],[352,19,368,17,"i"],[352,20,368,18],[352,23,368,21],[352,24,368,22],[352,27,368,25],[352,31,368,29,"Date"],[352,35,368,33],[352,36,368,34],[352,37,368,35],[352,38,368,36,"toISOString"],[352,49,368,47],[352,50,368,48],[352,51,368,49],[352,54,368,52],[353,8,369,6],[353,9,369,7],[353,10,369,8],[354,6,370,4],[354,7,370,5],[354,8,370,6],[355,6,372,4],[355,13,372,11],[356,8,373,6,"data"],[356,12,373,10],[356,14,373,12],[357,10,374,8,"competition_name"],[357,26,374,24],[357,28,374,26],[357,49,374,47],[358,10,375,8,"total_matchdays"],[358,25,375,23],[358,27,375,25],[358,29,375,27],[359,10,376,8,"daily_payment_amount"],[359,30,376,28],[359,32,376,30],[359,33,376,31],[360,10,377,8,"participants"],[360,22,377,20],[360,24,377,22,"mockTable"],[361,8,378,6],[362,6,379,4],[362,7,379,5],[363,4,380,2],[363,5,380,3],[364,4,382,2],[365,4,383,2,"validateNameMock"],[365,20,383,18],[365,22,383,20],[365,28,383,27,"name"],[365,32,383,39],[365,36,383,44],[366,6,384,4,"console"],[366,13,384,11],[366,14,384,12,"log"],[366,17,384,15],[366,18,384,16],[366,57,384,55],[366,59,384,57,"name"],[366,63,384,61],[366,64,384,62],[367,6,386,4],[367,10,386,8],[367,11,386,9,"name"],[367,15,386,13],[367,16,386,14,"trim"],[367,20,386,18],[367,21,386,19],[367,22,386,20],[367,24,386,22],[368,8,387,6],[368,15,387,13],[369,10,387,15,"available"],[369,19,387,24],[369,21,387,26],[369,25,387,30],[370,10,387,32,"message"],[370,17,387,39],[370,19,387,41],[371,8,387,44],[371,9,387,45],[372,6,388,4],[374,6,390,4],[375,6,391,4],[375,12,391,10,"storedCompetitions"],[375,30,391,28],[375,33,391,31],[375,39,391,37,"CrossPlatformStorage"],[375,59,391,57],[375,60,391,57,"default"],[375,67,391,57],[375,68,391,58,"getItem"],[375,75,391,65],[375,76,391,66],[375,94,391,84],[375,95,391,85],[376,6,392,4],[376,10,392,8,"existingCompetitions"],[376,30,392,28],[376,33,392,31,"storedCompetitions"],[376,51,392,49],[376,54,392,52,"JSON"],[376,58,392,56],[376,59,392,57,"parse"],[376,64,392,62],[376,65,392,63,"storedCompetitions"],[376,83,392,81],[376,84,392,82],[376,87,392,85],[376,89,392,87],[378,6,394,4],[379,6,395,4],[379,12,395,10,"defaultNames"],[379,24,395,22],[379,27,395,25],[379,28,395,26],[379,50,395,48],[379,52,395,50],[379,78,395,76],[379,80,395,78],[379,96,395,94],[379,97,395,95],[380,6,396,4],[380,12,396,10,"allNames"],[380,20,396,18],[380,23,396,21],[380,24,397,6],[380,27,397,9,"existingCompetitions"],[380,47,397,29],[380,48,397,30,"map"],[380,51,397,33],[380,52,397,35,"comp"],[380,56,397,44],[380,60,397,49,"comp"],[380,64,397,53],[380,65,397,54,"name"],[380,69,397,58],[380,70,397,59,"toLowerCase"],[380,81,397,70],[380,82,397,71],[380,83,397,72],[380,84,397,73],[380,86,398,6],[380,89,398,9,"defaultNames"],[380,101,398,21],[380,102,398,22,"map"],[380,105,398,25],[380,106,398,26,"name"],[380,110,398,30],[380,114,398,34,"name"],[380,118,398,38],[380,119,398,39,"toLowerCase"],[380,130,398,50],[380,131,398,51],[380,132,398,52],[380,133,398,53],[380,134,399,5],[381,6,401,4],[381,12,401,10,"isAvailable"],[381,23,401,21],[381,26,401,24],[381,27,401,25,"allNames"],[381,35,401,33],[381,36,401,34,"includes"],[381,44,401,42],[381,45,401,43,"name"],[381,49,401,47],[381,50,401,48,"toLowerCase"],[381,61,401,59],[381,62,401,60],[381,63,401,61],[381,64,401,62],[382,6,403,4],[382,13,403,11],[383,8,404,6,"available"],[383,17,404,15],[383,19,404,17,"isAvailable"],[383,30,404,28],[384,8,405,6,"message"],[384,15,405,13],[384,17,405,15,"isAvailable"],[384,28,405,26],[384,31,405,29],[384,47,405,45],[384,50,405,48],[385,6,406,4],[385,7,406,5],[386,4,407,2],[386,5,407,3],[387,4,409,2],[388,4,410,2,"getMyCompetitionsMock"],[388,25,410,23],[388,27,410,25],[388,33,410,25,"getMyCompetitionsMock"],[388,34,410,25],[388,39,410,37],[389,6,411,4,"console"],[389,13,411,11],[389,14,411,12,"log"],[389,17,411,15],[389,18,411,16],[389,52,411,50],[389,53,411,51],[390,6,412,4],[390,12,412,10,"storedCompetitions"],[390,30,412,28],[390,33,412,31],[390,39,412,37,"CrossPlatformStorage"],[390,59,412,57],[390,60,412,57,"default"],[390,67,412,57],[390,68,412,58,"getItem"],[390,75,412,65],[390,76,412,66],[390,95,412,85],[390,96,412,86],[391,6,414,4],[391,10,414,8,"storedCompetitions"],[391,28,414,26],[391,30,414,28],[392,8,415,6],[392,14,415,12,"competitions"],[392,26,415,24],[392,29,415,27,"JSON"],[392,33,415,31],[392,34,415,32,"parse"],[392,39,415,37],[392,40,415,38,"storedCompetitions"],[392,58,415,56],[392,59,415,57],[393,8,416,6,"console"],[393,15,416,13],[393,16,416,14,"log"],[393,19,416,17],[393,20,416,18],[393,55,416,53],[393,57,416,55,"competitions"],[393,69,416,67],[393,70,416,68,"length"],[393,76,416,74],[393,77,416,75],[395,8,418,6],[396,8,419,6],[396,14,419,12,"enhancedCompetitions"],[396,34,419,32],[396,37,419,35,"competitions"],[396,49,419,47],[396,50,419,48,"map"],[396,53,419,51],[396,54,419,53,"comp"],[396,58,419,62],[396,62,419,67],[397,10,420,8],[397,14,420,12],[397,15,420,13,"comp"],[397,19,420,17],[397,20,420,18,"participants"],[397,32,420,30],[397,36,420,34,"comp"],[397,40,420,38],[397,41,420,39,"participants"],[397,53,420,51],[397,54,420,52,"length"],[397,60,420,58],[397,63,420,61],[397,64,420,62],[397,66,420,64],[398,12,421,10],[398,18,421,16,"demoParticipants"],[398,34,421,32],[398,37,421,35],[398,38,422,12],[399,14,423,14,"id"],[399,16,423,16],[399,18,423,18],[399,44,423,44],[400,14,424,14,"name"],[400,18,424,18],[400,20,424,20],[400,37,424,37],[401,14,425,14,"email"],[401,19,425,19],[401,21,425,21],[401,40,425,40],[402,14,426,14,"is_admin"],[402,22,426,22],[402,24,426,24],[402,28,426,28],[403,14,427,14,"paid_matchdays"],[403,28,427,28],[403,30,427,30],[403,31,427,31],[403,32,427,32],[403,34,427,34],[403,35,427,35],[403,37,427,37],[403,38,427,38],[403,39,427,39],[404,14,428,14,"points"],[404,20,428,20],[404,22,428,22],[405,12,429,12],[405,13,429,13],[405,15,430,12],[406,14,431,14,"id"],[406,16,431,16],[406,18,431,18],[406,36,431,36],[407,14,432,14,"name"],[407,18,432,18],[407,20,432,20],[407,33,432,33],[408,14,433,14,"email"],[408,19,433,19],[408,21,433,21],[408,44,433,44],[409,14,434,14,"is_admin"],[409,22,434,22],[409,24,434,24],[409,29,434,29],[410,14,435,14,"paid_matchdays"],[410,28,435,28],[410,30,435,30],[410,31,435,31],[410,32,435,32],[410,34,435,34],[410,35,435,35],[410,36,435,36],[411,14,436,14,"points"],[411,20,436,20],[411,22,436,22],[412,12,437,12],[412,13,437,13],[412,15,438,12],[413,14,439,14,"id"],[413,16,439,16],[413,18,439,18],[413,39,439,39],[414,14,440,14,"name"],[414,18,440,18],[414,20,440,20],[414,36,440,36],[415,14,441,14,"email"],[415,19,441,19],[415,21,441,21],[415,47,441,47],[416,14,442,14,"is_admin"],[416,22,442,22],[416,24,442,24],[416,29,442,29],[417,14,443,14,"paid_matchdays"],[417,28,443,28],[417,30,443,30],[417,31,443,31],[417,32,443,32],[417,33,443,33],[418,14,444,14,"points"],[418,20,444,20],[418,22,444,22],[419,12,445,12],[419,13,445,13],[419,15,446,12],[420,14,447,14,"id"],[420,16,447,16],[420,18,447,18],[420,37,447,37],[421,14,448,14,"name"],[421,18,448,18],[421,20,448,20],[421,34,448,34],[422,14,449,14,"email"],[422,19,449,19],[422,21,449,21],[422,45,449,45],[423,14,450,14,"is_admin"],[423,22,450,22],[423,24,450,24],[423,29,450,29],[424,14,451,14,"paid_matchdays"],[424,28,451,28],[424,30,451,30],[424,32,451,32],[425,14,452,14,"points"],[425,20,452,20],[425,22,452,22],[426,12,453,12],[426,13,453,13],[426,15,454,12],[427,14,455,14,"id"],[427,16,455,16],[427,18,455,18],[427,36,455,36],[428,14,456,14,"name"],[428,18,456,18],[428,20,456,20],[428,33,456,33],[429,14,457,14,"email"],[429,19,457,19],[429,21,457,21],[429,44,457,44],[430,14,458,14,"is_admin"],[430,22,458,22],[430,24,458,24],[430,29,458,29],[431,14,459,14,"paid_matchdays"],[431,28,459,28],[431,30,459,30],[431,31,459,31],[431,32,459,32],[431,34,459,34],[431,35,459,35],[431,37,459,37],[431,38,459,38],[431,39,459,39],[432,14,460,14,"points"],[432,20,460,20],[432,22,460,22],[433,12,461,12],[433,13,461,13],[433,14,462,11],[434,12,464,10],[434,19,464,17],[435,14,464,19],[435,17,464,22,"comp"],[435,21,464,26],[436,14,464,28,"participants"],[436,26,464,40],[436,28,464,42,"demoParticipants"],[437,12,464,59],[437,13,464,60],[438,10,465,8],[439,10,466,8],[439,17,466,15,"comp"],[439,21,466,19],[440,8,467,6],[440,9,467,7],[440,10,467,8],[442,8,469,6],[443,8,470,6],[443,14,470,12,"CrossPlatformStorage"],[443,34,470,32],[443,35,470,32,"default"],[443,42,470,32],[443,43,470,33,"setItem"],[443,50,470,40],[443,51,470,41],[443,70,470,60],[443,72,470,62,"JSON"],[443,76,470,66],[443,77,470,67,"stringify"],[443,86,470,76],[443,87,470,77,"enhancedCompetitions"],[443,107,470,97],[443,108,470,98],[443,109,470,99],[444,8,472,6,"enhancedCompetitions"],[444,28,472,26],[444,29,472,27,"forEach"],[444,36,472,34],[444,37,472,35],[444,38,472,36,"comp"],[444,42,472,45],[444,44,472,47,"index"],[444,49,472,60],[444,54,472,65],[445,10,473,8,"console"],[445,17,473,15],[445,18,473,16,"log"],[445,21,473,19],[445,22,473,20],[445,25,473,23,"index"],[445,30,473,28],[445,33,473,31],[445,34,473,32],[445,39,473,37,"comp"],[445,43,473,41],[445,44,473,42,"name"],[445,48,473,46],[445,57,473,55,"comp"],[445,61,473,59],[445,62,473,60,"_id"],[445,65,473,63],[445,72,473,70,"comp"],[445,76,473,74],[445,77,473,75,"participants"],[445,89,473,87],[445,91,473,89,"length"],[445,97,473,95],[445,101,473,99],[445,102,473,100],[445,117,473,115],[445,118,473,116],[446,8,474,6],[446,9,474,7],[446,10,474,8],[447,8,476,6],[447,15,476,13,"enhancedCompetitions"],[447,35,476,33],[448,6,477,4],[448,7,477,5],[448,13,477,11],[449,8,478,6,"console"],[449,15,478,13],[449,16,478,14,"log"],[449,19,478,17],[449,20,478,18],[449,80,478,78],[449,81,478,79],[450,8,479,6],[450,15,479,13],[450,17,479,15],[451,6,480,4],[452,4,481,2],[452,5,481,3],[453,4,483,2,"joinMock"],[453,12,483,10],[453,14,483,12],[453,20,483,19,"inviteCode"],[453,30,483,37],[453,34,483,42],[454,6,484,4,"console"],[454,13,484,11],[454,14,484,12,"log"],[454,17,484,15],[454,18,484,16],[454,59,484,57],[454,61,484,59,"inviteCode"],[454,71,484,69],[454,72,484,70],[455,6,485,4],[455,10,485,8,"inviteCode"],[455,20,485,18],[455,21,485,19,"length"],[455,27,485,25],[455,30,485,28],[455,31,485,29],[455,33,485,31],[456,8,486,6],[456,14,486,12],[456,18,486,16,"Error"],[456,23,486,21],[456,24,486,22],[456,45,486,43],[456,46,486,44],[457,6,487,4],[458,6,488,4],[458,13,488,11],[459,8,488,13,"message"],[459,15,488,20],[459,17,488,22],[460,6,488,57],[460,7,488,58],[461,4,489,2],[461,5,489,3],[462,4,491,2],[463,4,492,2,"deleteMock"],[463,14,492,12],[463,16,492,14],[463,22,492,21,"competitionId"],[463,35,492,42],[463,39,492,47],[464,6,493,4,"console"],[464,13,493,11],[464,14,493,12,"log"],[464,17,493,15],[464,18,493,16],[464,51,493,49],[464,53,493,51,"competitionId"],[464,66,493,64],[464,67,493,65],[465,6,495,4],[465,12,495,10,"storedCompetitions"],[465,30,495,28],[465,33,495,31],[465,39,495,37,"CrossPlatformStorage"],[465,59,495,57],[465,60,495,57,"default"],[465,67,495,57],[465,68,495,58,"getItem"],[465,75,495,65],[465,76,495,66],[465,94,495,84],[465,95,495,85],[466,6,496,4],[466,10,496,8,"competitions"],[466,22,496,20],[466,25,496,23,"storedCompetitions"],[466,43,496,41],[466,46,496,44,"JSON"],[466,50,496,48],[466,51,496,49,"parse"],[466,56,496,54],[466,57,496,55,"storedCompetitions"],[466,75,496,73],[466,76,496,74],[466,79,496,77],[466,81,496,79],[467,6,498,4],[467,12,498,10,"competitionToDelete"],[467,31,498,29],[467,34,498,32,"competitions"],[467,46,498,44],[467,47,498,45,"find"],[467,51,498,49],[467,52,498,51,"comp"],[467,56,498,60],[467,60,498,65,"comp"],[467,64,498,69],[467,65,498,70,"_id"],[467,68,498,73],[467,73,498,78,"competitionId"],[467,86,498,91],[467,87,498,92],[468,6,499,4],[468,10,499,8],[468,11,499,9,"competitionToDelete"],[468,30,499,28],[468,32,499,30],[469,8,500,6],[469,14,500,12],[469,18,500,16,"Error"],[469,23,500,21],[469,24,500,22],[469,47,500,45],[469,48,500,46],[470,6,501,4],[472,6,503,4],[473,6,504,4],[473,10,504,8,"competitionToDelete"],[473,29,504,27],[473,30,504,28,"admin_id"],[473,38,504,36],[473,43,504,41],[473,69,504,67],[473,71,504,69],[474,8,505,6],[474,14,505,12],[474,18,505,16,"Error"],[474,23,505,21],[474,24,505,22],[474,64,505,62],[474,65,505,63],[475,6,506,4],[477,6,508,4],[478,6,509,4,"competitions"],[478,18,509,16],[478,21,509,19,"competitions"],[478,33,509,31],[478,34,509,32,"filter"],[478,40,509,38],[478,41,509,40,"comp"],[478,45,509,49],[478,49,509,54,"comp"],[478,53,509,58],[478,54,509,59,"_id"],[478,57,509,62],[478,62,509,67,"competitionId"],[478,75,509,80],[478,76,509,81],[479,6,510,4],[479,12,510,10,"CrossPlatformStorage"],[479,32,510,30],[479,33,510,30,"default"],[479,40,510,30],[479,41,510,31,"setItem"],[479,48,510,38],[479,49,510,39],[479,67,510,57],[479,69,510,59,"JSON"],[479,73,510,63],[479,74,510,64,"stringify"],[479,83,510,73],[479,84,510,74,"competitions"],[479,96,510,86],[479,97,510,87],[479,98,510,88],[481,6,512,4],[482,6,513,4],[482,12,513,10,"logAdminAction"],[482,26,513,24],[482,27,513,25],[482,35,513,33],[482,37,513,35,"competitionToDelete"],[482,56,513,54],[482,57,513,55,"name"],[482,61,513,59],[482,63,513,61],[482,80,513,78],[482,81,513,79],[483,6,515,4,"console"],[483,13,515,11],[483,14,515,12,"log"],[483,17,515,15],[483,18,515,16],[483,54,515,52],[483,55,515,53],[484,6,516,4],[484,13,516,11],[485,8,516,13,"message"],[485,15,516,20],[485,17,516,22],[486,6,516,57],[486,7,516,58],[487,4,517,2],[487,5,517,3],[488,4,519,2],[489,4,520,2,"editMock"],[489,12,520,10],[489,14,520,12],[489,20,520,12,"editMock"],[489,21,520,19,"competitionId"],[489,34,520,40],[489,36,520,42,"updates"],[489,43,520,54],[489,48,520,59],[490,6,521,4,"console"],[490,13,521,11],[490,14,521,12,"log"],[490,17,521,15],[490,18,521,16],[490,49,521,47],[490,51,521,49,"competitionId"],[490,64,521,62],[490,66,521,64,"updates"],[490,73,521,71],[490,74,521,72],[491,6,523,4],[491,12,523,10,"storedCompetitions"],[491,30,523,28],[491,33,523,31],[491,39,523,37,"CrossPlatformStorage"],[491,59,523,57],[491,60,523,57,"default"],[491,67,523,57],[491,68,523,58,"getItem"],[491,75,523,65],[491,76,523,66],[491,94,523,84],[491,95,523,85],[492,6,524,4],[492,10,524,8,"competitions"],[492,22,524,20],[492,25,524,23,"storedCompetitions"],[492,43,524,41],[492,46,524,44,"JSON"],[492,50,524,48],[492,51,524,49,"parse"],[492,56,524,54],[492,57,524,55,"storedCompetitions"],[492,75,524,73],[492,76,524,74],[492,79,524,77],[492,81,524,79],[493,6,526,4],[493,12,526,10,"competitionIndex"],[493,28,526,26],[493,31,526,29,"competitions"],[493,43,526,41],[493,44,526,42,"findIndex"],[493,53,526,51],[493,54,526,53,"comp"],[493,58,526,62],[493,62,526,67,"comp"],[493,66,526,71],[493,67,526,72,"_id"],[493,70,526,75],[493,75,526,80,"competitionId"],[493,88,526,93],[493,89,526,94],[494,6,527,4],[494,10,527,8,"competitionIndex"],[494,26,527,24],[494,31,527,29],[494,32,527,30],[494,33,527,31],[494,35,527,33],[495,8,528,6],[495,14,528,12],[495,18,528,16,"Error"],[495,23,528,21],[495,24,528,22],[495,47,528,45],[495,48,528,46],[496,6,529,4],[497,6,531,4],[497,12,531,10,"competition"],[497,23,531,21],[497,26,531,24,"competitions"],[497,38,531,36],[497,39,531,37,"competitionIndex"],[497,55,531,53],[497,56,531,54],[499,6,533,4],[500,6,534,4],[500,10,534,8,"competition"],[500,21,534,19],[500,22,534,20,"admin_id"],[500,30,534,28],[500,35,534,33],[500,61,534,59],[500,63,534,61],[501,8,535,6],[501,14,535,12],[501,18,535,16,"Error"],[501,23,535,21],[501,24,535,22],[501,62,535,60],[501,63,535,61],[502,6,536,4],[504,6,538,4],[505,6,539,4,"competitions"],[505,18,539,16],[505,19,539,17,"competitionIndex"],[505,35,539,33],[505,36,539,34],[505,39,539,37],[506,8,540,6],[506,11,540,9,"competition"],[506,22,540,20],[507,8,541,6],[507,11,541,9,"updates"],[507,18,541,16],[508,8,542,6,"updated_at"],[508,18,542,16],[508,20,542,18],[508,24,542,22,"Date"],[508,28,542,26],[508,29,542,27],[508,30,542,28],[508,31,542,29,"toISOString"],[508,42,542,40],[508,43,542,41],[509,6,543,4],[509,7,543,5],[510,6,545,4],[510,12,545,10,"CrossPlatformStorage"],[510,32,545,30],[510,33,545,30,"default"],[510,40,545,30],[510,41,545,31,"setItem"],[510,48,545,38],[510,49,545,39],[510,67,545,57],[510,69,545,59,"JSON"],[510,73,545,63],[510,74,545,64,"stringify"],[510,83,545,73],[510,84,545,74,"competitions"],[510,96,545,86],[510,97,545,87],[510,98,545,88],[512,6,547,4],[513,6,548,4],[513,12,548,10,"logAdminAction"],[513,26,548,24],[513,27,548,25],[513,33,548,31],[513,35,548,33,"competition"],[513,46,548,44],[513,47,548,45,"name"],[513,51,548,49],[513,53,548,51],[513,70,548,68],[513,72,548,70,"updates"],[513,79,548,77],[513,80,548,78],[514,6,550,4,"console"],[514,13,550,11],[514,14,550,12,"log"],[514,17,550,15],[514,18,550,16],[514,54,550,52],[514,55,550,53],[515,6,551,4],[515,13,551,11,"competitions"],[515,25,551,23],[515,26,551,24,"competitionIndex"],[515,42,551,40],[515,43,551,41],[516,4,552,2],[516,5,552,3],[517,4,554,2],[518,4,555,2,"awardDailyPrizeMock"],[518,23,555,21],[518,25,555,23],[518,31,555,23,"awardDailyPrizeMock"],[518,32,555,30,"competitionId"],[518,45,555,51],[518,47,555,53,"matchday"],[518,55,555,69],[518,57,555,71,"winnerId"],[518,65,555,87],[518,70,555,92],[519,6,556,4,"console"],[519,13,556,11],[519,14,556,12,"log"],[519,17,556,15],[519,18,556,16],[519,62,556,60],[519,64,556,62,"matchday"],[519,72,556,70],[519,74,556,72],[519,83,556,81],[519,85,556,83,"winnerId"],[519,93,556,91],[519,94,556,92],[520,6,558,4],[520,12,558,10,"storedCompetitions"],[520,30,558,28],[520,33,558,31],[520,39,558,37,"CrossPlatformStorage"],[520,59,558,57],[520,60,558,57,"default"],[520,67,558,57],[520,68,558,58,"getItem"],[520,75,558,65],[520,76,558,66],[520,94,558,84],[520,95,558,85],[521,6,559,4],[521,10,559,8,"competitions"],[521,22,559,20],[521,25,559,23,"storedCompetitions"],[521,43,559,41],[521,46,559,44,"JSON"],[521,50,559,48],[521,51,559,49,"parse"],[521,56,559,54],[521,57,559,55,"storedCompetitions"],[521,75,559,73],[521,76,559,74],[521,79,559,77],[521,81,559,79],[522,6,561,4],[522,12,561,10,"competitionIndex"],[522,28,561,26],[522,31,561,29,"competitions"],[522,43,561,41],[522,44,561,42,"findIndex"],[522,53,561,51],[522,54,561,53,"comp"],[522,58,561,62],[522,62,561,67,"comp"],[522,66,561,71],[522,67,561,72,"_id"],[522,70,561,75],[522,75,561,80,"competitionId"],[522,88,561,93],[522,89,561,94],[523,6,562,4],[523,10,562,8,"competitionIndex"],[523,26,562,24],[523,31,562,29],[523,32,562,30],[523,33,562,31],[523,35,562,33],[524,8,563,6],[524,14,563,12],[524,18,563,16,"Error"],[524,23,563,21],[524,24,563,22],[524,47,563,45],[524,48,563,46],[525,6,564,4],[526,6,566,4],[526,12,566,10,"competition"],[526,23,566,21],[526,26,566,24,"competitions"],[526,38,566,36],[526,39,566,37,"competitionIndex"],[526,55,566,53],[526,56,566,54],[528,6,568,4],[529,6,569,4],[529,10,569,8,"competition"],[529,21,569,19],[529,22,569,20,"admin_id"],[529,30,569,28],[529,35,569,33],[529,61,569,59],[529,63,569,61],[530,8,570,6],[530,14,570,12],[530,18,570,16,"Error"],[530,23,570,21],[530,24,570,22],[530,59,570,57],[530,60,570,58],[531,6,571,4],[533,6,573,4],[534,6,574,4],[534,10,574,8],[534,11,574,9,"competition"],[534,22,574,20],[534,23,574,21,"rules"],[534,28,574,26],[534,32,574,30],[534,33,574,31],[534,34,574,32],[534,41,574,39],[534,43,574,41],[534,50,574,48],[534,51,574,49],[534,52,574,50,"includes"],[534,60,574,58],[534,61,574,59,"competition"],[534,72,574,70],[534,73,574,71,"rules"],[534,78,574,76],[534,79,574,77,"type"],[534,83,574,81],[534,84,574,82],[534,86,574,84],[535,8,575,6],[535,14,575,12],[535,18,575,16,"Error"],[535,23,575,21],[535,24,575,22],[535,69,575,67],[535,70,575,68],[536,6,576,4],[537,6,578,4],[537,12,578,10,"dailyPrizeAmount"],[537,28,578,26],[537,31,578,29,"competition"],[537,42,578,40],[537,43,578,41,"rules"],[537,48,578,46],[537,49,578,47,"daily_prize"],[537,60,578,58],[537,64,578,62],[537,65,578,63],[538,6,579,4],[538,12,579,10,"winner"],[538,18,579,16],[538,21,579,19,"competition"],[538,32,579,30],[538,33,579,31,"participants"],[538,45,579,43],[538,46,579,44,"find"],[538,50,579,48],[538,51,579,50,"p"],[538,52,579,56],[538,56,579,61,"p"],[538,57,579,62],[538,58,579,63,"id"],[538,60,579,65],[538,65,579,70,"winnerId"],[538,73,579,78],[538,74,579,79],[539,6,581,4],[539,10,581,8],[539,11,581,9,"winner"],[539,17,581,15],[539,19,581,17],[540,8,582,6],[540,14,582,12],[540,18,582,16,"Error"],[540,23,582,21],[540,24,582,22],[540,57,582,55],[540,58,582,56],[541,6,583,4],[543,6,585,4],[544,6,586,4],[544,10,586,8],[544,11,586,9,"competition"],[544,22,586,20],[544,23,586,21,"daily_winners"],[544,36,586,34],[544,38,586,36],[545,8,587,6,"competition"],[545,19,587,17],[545,20,587,18,"daily_winners"],[545,33,587,31],[545,36,587,34],[545,37,587,35],[545,38,587,36],[546,6,588,4],[548,6,590,4],[549,6,591,4],[549,10,591,8,"competition"],[549,21,591,19],[549,22,591,20,"daily_winners"],[549,35,591,33],[549,36,591,34,"matchday"],[549,44,591,42],[549,45,591,43],[549,47,591,45],[550,8,592,6],[550,14,592,12],[550,18,592,16,"Error"],[550,23,592,21],[550,24,592,22],[550,52,592,50,"matchday"],[550,60,592,58],[550,83,592,81,"competition"],[550,94,592,92],[550,95,592,93,"daily_winners"],[550,108,592,106],[550,109,592,107,"matchday"],[550,117,592,115],[550,118,592,116],[550,119,592,117,"name"],[550,123,592,121],[550,125,592,123],[550,126,592,124],[551,6,593,4],[553,6,595,4],[554,6,596,4,"competition"],[554,17,596,15],[554,18,596,16,"daily_winners"],[554,31,596,29],[554,32,596,30,"matchday"],[554,40,596,38],[554,41,596,39],[554,44,596,42],[555,8,597,6,"user_id"],[555,15,597,13],[555,17,597,15,"winnerId"],[555,25,597,23],[556,8,598,6,"name"],[556,12,598,10],[556,14,598,12,"winner"],[556,20,598,18],[556,21,598,19,"name"],[556,25,598,23],[557,8,599,6,"amount"],[557,14,599,12],[557,16,599,14,"dailyPrizeAmount"],[557,32,599,30],[558,8,600,6,"awarded_at"],[558,18,600,16],[558,20,600,18],[558,24,600,22,"Date"],[558,28,600,26],[558,29,600,27],[558,30,600,28],[558,31,600,29,"toISOString"],[558,42,600,40],[558,43,600,41],[559,6,601,4],[559,7,601,5],[561,6,603,4],[562,6,604,4,"competitions"],[562,18,604,16],[562,19,604,17,"competitionIndex"],[562,35,604,33],[562,36,604,34],[562,39,604,37,"competition"],[562,50,604,48],[563,6,605,4],[563,12,605,10,"CrossPlatformStorage"],[563,32,605,30],[563,33,605,30,"default"],[563,40,605,30],[563,41,605,31,"setItem"],[563,48,605,38],[563,49,605,39],[563,67,605,57],[563,69,605,59,"JSON"],[563,73,605,63],[563,74,605,64,"stringify"],[563,83,605,73],[563,84,605,74,"competitions"],[563,96,605,86],[563,97,605,87],[563,98,605,88],[565,6,607,4],[566,6,608,4],[566,12,608,10,"logAdminAction"],[566,26,608,24],[566,27,608,25],[566,46,608,44],[566,48,608,46,"competition"],[566,59,608,57],[566,60,608,58,"name"],[566,64,608,62],[566,66,608,64],[566,83,608,81],[566,85,608,83],[567,8,609,6,"matchday"],[567,16,609,14],[568,8,610,6,"winner"],[568,14,610,12],[568,16,610,14,"winner"],[568,22,610,20],[568,23,610,21,"name"],[568,27,610,25],[569,8,611,6,"amount"],[569,14,611,12],[569,16,611,14,"dailyPrizeAmount"],[570,6,612,4],[570,7,612,5],[570,8,612,6],[572,6,614,4],[573,6,615,4,"console"],[573,13,615,11],[573,14,615,12,"log"],[573,17,615,15],[573,18,615,16],[573,24,615,22,"winner"],[573,30,615,28],[573,31,615,29,"name"],[573,35,615,33],[573,48,615,46,"dailyPrizeAmount"],[573,64,615,62],[573,89,615,87,"matchday"],[573,97,615,95],[573,99,615,97],[573,100,615,98],[574,6,617,4,"console"],[574,13,617,11],[574,14,617,12,"log"],[574,17,617,15],[574,18,617,16],[574,54,617,52],[574,55,617,53],[575,6,618,4],[575,13,618,11],[576,8,619,6,"message"],[576,15,619,13],[576,17,619,15],[576,36,619,34,"dailyPrizeAmount"],[576,52,619,50],[576,67,619,65,"winner"],[576,73,619,71],[576,74,619,72,"name"],[576,78,619,76],[576,95,619,93,"matchday"],[576,103,619,101],[576,105,619,103],[577,8,620,6,"competition"],[577,19,620,17],[577,21,620,19,"competition"],[578,6,621,4],[578,7,621,5],[579,4,622,2],[579,5,622,3],[580,4,624,2],[581,4,625,2,"getAdminLogsMock"],[581,20,625,18],[581,22,625,20],[581,28,625,20,"getAdminLogsMock"],[581,29,625,20],[581,34,625,32],[582,6,626,4,"console"],[582,13,626,11],[582,14,626,12,"log"],[582,17,626,15],[582,18,626,16],[582,47,626,45],[582,48,626,46],[583,6,628,4],[583,10,628,8],[584,8,629,6],[584,14,629,12,"logs"],[584,18,629,16],[584,21,629,19],[584,28,629,25,"CrossPlatformStorage"],[584,48,629,45],[584,49,629,45,"default"],[584,56,629,45],[584,57,629,46,"getItem"],[584,64,629,53],[584,65,629,54],[584,76,629,65],[584,77,629,66],[584,82,629,70],[584,86,629,74],[585,8,630,6],[585,14,630,12,"adminLogs"],[585,23,630,21],[585,26,630,24,"JSON"],[585,30,630,28],[585,31,630,29,"parse"],[585,36,630,34],[585,37,630,35,"logs"],[585,41,630,39],[585,42,630,40],[587,8,632,6],[588,8,633,6,"adminLogs"],[588,17,633,15],[588,18,633,16,"sort"],[588,22,633,20],[588,23,633,21],[588,24,633,22,"a"],[588,25,633,28],[588,27,633,30,"b"],[588,28,633,36],[588,33,633,41],[588,37,633,45,"Date"],[588,41,633,49],[588,42,633,50,"b"],[588,43,633,51],[588,44,633,52,"timestamp"],[588,53,633,61],[588,54,633,62],[588,55,633,63,"getTime"],[588,62,633,70],[588,63,633,71],[588,64,633,72],[588,67,633,75],[588,71,633,79,"Date"],[588,75,633,83],[588,76,633,84,"a"],[588,77,633,85],[588,78,633,86,"timestamp"],[588,87,633,95],[588,88,633,96],[588,89,633,97,"getTime"],[588,96,633,104],[588,97,633,105],[588,98,633,106],[588,99,633,107],[589,8,635,6,"console"],[589,15,635,13],[589,16,635,14,"log"],[589,19,635,17],[589,20,635,18],[589,42,635,40],[589,44,635,42,"adminLogs"],[589,53,635,51],[589,54,635,52,"length"],[589,60,635,58],[589,61,635,59],[590,8,636,6],[590,15,636,13,"adminLogs"],[590,24,636,22],[591,6,637,4],[591,7,637,5],[591,8,637,6],[591,15,637,13,"error"],[591,20,637,18],[591,22,637,20],[592,8,638,6,"console"],[592,15,638,13],[592,16,638,14,"error"],[592,21,638,19],[592,22,638,20],[592,52,638,50],[592,54,638,52,"error"],[592,59,638,57],[592,60,638,58],[593,8,639,6],[593,15,639,13],[593,17,639,15],[594,6,640,4],[595,4,641,2],[595,5,641,3],[596,4,643,2],[597,4,644,2,"getAllCompetitions"],[597,22,644,20],[597,24,644,22],[597,30,644,22,"getAllCompetitions"],[597,31,644,22],[597,36,644,34],[598,6,645,4,"console"],[598,13,645,11],[598,14,645,12,"log"],[598,17,645,15],[598,18,645,16],[598,68,645,66],[598,69,645,67],[599,6,647,4],[599,10,647,8],[600,8,648,6],[601,8,649,6],[601,14,649,12,"storedCompetitions"],[601,32,649,30],[601,35,649,33],[601,41,649,39,"CrossPlatformStorage"],[601,61,649,59],[601,62,649,59,"default"],[601,69,649,59],[601,70,649,60,"getItem"],[601,77,649,67],[601,78,649,68],[601,97,649,87],[601,98,649,88],[602,8,650,6],[602,12,650,10,"competitions"],[602,24,650,22],[602,27,650,25,"storedCompetitions"],[602,45,650,43],[602,48,650,46,"JSON"],[602,52,650,50],[602,53,650,51,"parse"],[602,58,650,56],[602,59,650,57,"storedCompetitions"],[602,77,650,75],[602,78,650,76],[602,81,650,79],[602,83,650,81],[604,8,652,6],[605,8,653,6],[605,14,653,12,"oldStoredCompetitions"],[605,35,653,33],[605,38,653,36],[605,44,653,42,"CrossPlatformStorage"],[605,64,653,62],[605,65,653,62,"default"],[605,72,653,62],[605,73,653,63,"getItem"],[605,80,653,70],[605,81,653,71],[605,99,653,89],[605,100,653,90],[606,8,654,6],[606,14,654,12,"oldCompetitions"],[606,29,654,27],[606,32,654,30,"oldStoredCompetitions"],[606,53,654,51],[606,56,654,54,"JSON"],[606,60,654,58],[606,61,654,59,"parse"],[606,66,654,64],[606,67,654,65,"oldStoredCompetitions"],[606,88,654,86],[606,89,654,87],[606,92,654,90],[606,94,654,92],[608,8,656,6],[609,8,657,6],[609,14,657,12,"allCompetitions"],[609,29,657,27],[609,32,657,30],[609,33,657,31],[609,36,657,34,"competitions"],[609,48,657,46],[609,50,657,48],[609,53,657,51,"oldCompetitions"],[609,68,657,66],[609,69,657,67],[610,8,658,6],[610,14,658,12,"uniqueCompetitions"],[610,32,658,30],[610,35,658,33,"allCompetitions"],[610,50,658,48],[610,51,658,49,"filter"],[610,57,658,55],[610,58,658,56],[610,59,658,57,"comp"],[610,63,658,61],[610,65,658,63,"index"],[610,70,658,68],[610,72,658,70,"self"],[610,76,658,74],[610,81,659,8,"index"],[610,86,659,13],[610,91,659,18,"self"],[610,95,659,22],[610,96,659,23,"findIndex"],[610,105,659,32],[610,106,659,33,"c"],[610,107,659,34],[610,111,659,38,"c"],[610,112,659,39],[610,113,659,40,"_id"],[610,116,659,43],[610,121,659,48,"comp"],[610,125,659,52],[610,126,659,53,"_id"],[610,129,659,56],[610,130,660,6],[610,131,660,7],[611,8,662,6,"console"],[611,15,662,13],[611,16,662,14,"log"],[611,19,662,17],[611,20,662,18],[611,57,662,55],[611,59,662,57,"uniqueCompetitions"],[611,77,662,75],[611,78,662,76,"length"],[611,84,662,82],[611,85,662,83],[612,8,663,6],[612,15,663,13,"uniqueCompetitions"],[612,33,663,31],[613,6,665,4],[613,7,665,5],[613,8,665,6],[613,15,665,13,"error"],[613,20,665,18],[613,22,665,20],[614,8,666,6,"console"],[614,15,666,13],[614,16,666,14,"error"],[614,21,666,19],[614,22,666,20],[614,58,666,56],[614,60,666,58,"error"],[614,65,666,63],[614,66,666,64],[615,8,667,6],[615,15,667,13],[615,17,667,15],[616,6,668,4],[617,4,669,2],[618,2,670,0],[618,3,670,1],[620,2,672,0],[621,2,673,7],[621,8,673,13,"walletAPI"],[621,17,673,22],[621,20,673,25],[622,4,674,2,"getBalance"],[622,14,674,12],[622,16,674,14,"getBalance"],[622,17,674,14],[622,22,674,20,"apiClient"],[622,31,674,29],[622,32,674,30,"get"],[622,35,674,33],[622,36,674,34],[622,53,674,51],[622,54,674,52],[623,4,676,2,"topUp"],[623,9,676,7],[623,11,676,10,"amount"],[623,17,676,24],[623,21,677,4,"apiClient"],[623,30,677,13],[623,31,677,14,"post"],[623,35,677,18],[623,36,677,19],[623,51,677,34],[623,53,677,36],[623,57,677,40],[623,59,677,42],[624,6,678,6,"params"],[624,12,678,12],[624,14,678,14],[625,8,678,16,"amount"],[626,6,678,23],[627,4,679,4],[627,5,679,5],[627,6,679,6],[628,4,681,2,"withdraw"],[628,12,681,10],[628,14,681,13,"amount"],[628,20,681,27],[628,24,682,4,"apiClient"],[628,33,682,13],[628,34,682,14,"post"],[628,38,682,18],[628,39,682,19],[628,57,682,37],[628,59,682,39],[628,63,682,43],[628,65,682,45],[629,6,683,6,"params"],[629,12,683,12],[629,14,683,14],[630,8,683,16,"amount"],[631,6,683,23],[632,4,684,4],[632,5,684,5],[632,6,684,6],[633,4,686,2,"getTransactions"],[633,19,686,17],[633,21,686,19,"getTransactions"],[633,22,686,19],[633,27,686,25,"apiClient"],[633,36,686,34],[633,37,686,35,"get"],[633,40,686,38],[633,41,686,39],[633,56,686,54],[634,2,687,0],[634,3,687,1],[636,2,689,0],[637,2,690,7],[637,8,690,13,"databaseAPI"],[637,19,690,24],[637,22,690,27],[638,4,691,2,"resetDatabase"],[638,17,691,15],[638,19,691,17],[638,25,691,17,"resetDatabase"],[638,26,691,17],[638,31,691,29],[639,6,692,4,"console"],[639,13,692,11],[639,14,692,12,"log"],[639,17,692,15],[639,18,692,16],[639,69,692,67],[639,70,692,68],[640,6,694,4],[640,10,694,8],[641,8,695,6],[641,14,695,12,"CrossPlatformStorage"],[641,34,695,32],[641,35,695,32,"default"],[641,42,695,32],[641,43,695,33,"removeItem"],[641,53,695,43],[641,54,695,44],[641,73,695,63],[641,74,695,64],[642,8,696,6],[642,14,696,12,"CrossPlatformStorage"],[642,34,696,32],[642,35,696,32,"default"],[642,42,696,32],[642,43,696,33,"removeItem"],[642,53,696,43],[642,54,696,44],[642,71,696,61],[642,72,696,62],[643,8,697,6],[643,14,697,12,"CrossPlatformStorage"],[643,34,697,32],[643,35,697,32,"default"],[643,42,697,32],[643,43,697,33,"removeItem"],[643,53,697,43],[643,54,697,44],[643,95,697,85],[643,96,697,86],[644,8,698,6],[644,14,698,12,"CrossPlatformStorage"],[644,34,698,32],[644,35,698,32,"default"],[644,42,698,32],[644,43,698,33,"removeItem"],[644,53,698,43],[644,54,698,44],[644,93,698,83],[644,94,698,84],[645,8,700,6,"console"],[645,15,700,13],[645,16,700,14,"log"],[645,19,700,17],[645,20,700,18],[645,66,700,64],[645,67,700,65],[646,8,701,6],[646,15,701,13],[647,10,701,15,"success"],[647,17,701,22],[647,19,701,24],[647,23,701,28],[648,10,701,30,"message"],[648,17,701,37],[648,19,701,39],[649,8,701,65],[649,9,701,66],[650,6,702,4],[650,7,702,5],[650,8,702,6],[650,15,702,13,"error"],[650,20,702,18],[650,22,702,20],[651,8,703,6,"console"],[651,15,703,13],[651,16,703,14,"error"],[651,21,703,19],[651,22,703,20],[651,48,703,46],[651,50,703,48,"error"],[651,55,703,53],[651,56,703,54],[652,8,704,6],[652,15,704,13],[653,10,704,15,"success"],[653,17,704,22],[653,19,704,24],[653,24,704,29],[654,10,704,31,"message"],[654,17,704,38],[654,19,704,40],[655,8,704,55],[655,9,704,56],[656,6,705,4],[657,4,706,2],[658,2,707,0],[658,3,707,1],[659,2,709,0],[659,6,709,0,"_default"],[659,14,709,0],[659,17,709,15,"apiClient"],[659,26,709,24],[660,0,709,25],[660,3]],"functionMap":{"names":["<global>","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","generateRandomCode","existingCompetitions.some$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.map$argument_0","enhancedCompetitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","competitionAPI.getAllCompetitions","allCompetitions.filter$argument_0","self.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACQ;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CDC;iBWM;MXG;UYE;4CZM;aaE;4CbC;ScE;uCdC;aeE;iDfC;kBgBE,+BhB;UiBE,oCjB;kBkBE;MlBG;mBmBE;MnBG;uBoBI;CpBqB;UqBI;6CrBe;QsBE;qEtBC;qBuBE,uCvB;kBwBE,oDxB;mByBE;MzBQ;U0BE;M1BG;mB2BE;qD3BC;gB4BG;M5BI;uB6BE;qE7BC;yB8BE;wE9BC;c+BG;mDCwB,sCD;+BEO;KFO;qCGI,8CH;G/BiE;oBmCG;GnCe;2BoCE;GpC2B;6BqCE;kDCS;QDK;GrCW;oBuCG;kCPc,sCO;0BCC,0BD;GvCS;yByCG;oDCS;ODgD;mCEK;OFE;GzCO;Y4CE;G5CM;c6CG;kDCM,yCD;uCEW,yCF;G7CQ;YgDG;oDCM,yCD;GhD0B;uBkDG;oDDM,yCC;iDCkB,6BD;GlD2C;oBoDG;qBCQ,qFD;GpDQ;sBsDG;wDCc;iCCC,uBD,CD;GtDU;cyDK,sCzD;S0DE;M1DG;Y2DE;M3DG;mB4DE,oC5D;iB6DK;G7De"},"hasCjsExports":false},"type":"js/module"}]}