{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        competitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n        });\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":575,"map":[[27,2,624,0,"Object"],[27,8,624,0],[27,9,624,0,"defineProperty"],[27,23,624,0],[27,24,624,0,"exports"],[27,31,624,0],[28,4,624,0,"enumerable"],[28,14,624,0],[29,4,624,0,"get"],[29,7,624,0],[29,18,624,0,"get"],[29,19,624,0],[30,6,624,0],[30,13,624,0,"_default"],[30,21,624,0],[31,4,624,0],[32,2,624,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,608,0,"Object"],[45,8,608,0],[45,9,608,0,"defineProperty"],[45,23,608,0],[45,24,608,0,"exports"],[45,31,608,0],[46,4,608,0,"enumerable"],[46,14,608,0],[47,4,608,0,"get"],[47,7,608,0],[47,18,608,0,"get"],[47,19,608,0],[48,6,608,0],[48,13,608,0,"walletAPI"],[48,22,608,0],[49,4,608,0],[50,2,608,0],[51,2,1,0],[51,6,1,0,"_axios"],[51,12,1,0],[51,15,1,0,"require"],[51,22,1,0],[51,23,1,0,"_dependencyMap"],[51,37,1,0],[52,2,1,0],[52,6,1,0,"axios"],[52,11,1,0],[52,14,1,0,"_interopDefault"],[52,29,1,0],[52,30,1,0,"_axios"],[52,36,1,0],[53,2,2,0],[53,6,2,0,"_expoSecureStore"],[53,22,2,0],[53,25,2,0,"require"],[53,32,2,0],[53,33,2,0,"_dependencyMap"],[53,47,2,0],[54,2,2,0],[54,6,2,0,"SecureStore"],[54,17,2,0],[54,20,2,0,"_interopNamespace"],[54,37,2,0],[54,38,2,0,"_expoSecureStore"],[54,54,2,0],[55,2,3,0],[55,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[55,42,3,0],[55,45,3,0,"require"],[55,52,3,0],[55,53,3,0,"_dependencyMap"],[55,67,3,0],[56,2,3,0],[56,6,3,0,"AsyncStorage"],[56,18,3,0],[56,21,3,0,"_interopDefault"],[56,36,3,0],[56,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,73,3,0],[57,2,4,0],[57,6,4,0,"_expoConstants"],[57,20,4,0],[57,23,4,0,"require"],[57,30,4,0],[57,31,4,0,"_dependencyMap"],[57,45,4,0],[58,2,4,0],[58,6,4,0,"Constants"],[58,15,4,0],[58,18,4,0,"_interopDefault"],[58,33,4,0],[58,34,4,0,"_expoConstants"],[58,48,4,0],[59,2,6,0],[60,2,7,0],[60,8,7,6,"CrossPlatformStorage"],[60,28,7,26],[60,29,7,27],[61,4,8,2],[61,17,8,15,"getItem"],[61,24,8,22,"getItem"],[61,25,8,23,"key"],[61,28,8,34],[61,30,8,60],[62,6,9,4],[62,10,9,8],[63,8,10,6],[64,8,11,6],[64,15,11,13],[64,21,11,19,"AsyncStorage"],[64,33,11,31],[64,34,11,31,"default"],[64,41,11,31],[64,42,11,32,"getItem"],[64,49,11,39],[64,50,11,40,"key"],[64,53,11,43],[64,54,11,44],[65,6,12,4],[65,7,12,5],[65,8,12,6],[65,15,12,13,"error"],[65,20,12,18],[65,22,12,20],[66,8,13,6],[67,8,14,6],[67,12,14,10],[67,21,14,43,"window"],[67,27,14,49],[67,28,14,50,"localStorage"],[67,40,14,62],[67,42,14,64],[68,10,15,8],[68,17,15,15,"window"],[68,23,15,21],[68,24,15,22,"localStorage"],[68,36,15,34],[68,37,15,35,"getItem"],[68,44,15,42],[68,45,15,43,"key"],[68,48,15,46],[68,49,15,47],[69,8,16,6],[70,8,17,6],[70,15,17,13],[70,19,17,17],[71,6,18,4],[72,4,19,2],[73,4,21,2],[73,17,21,15,"setItem"],[73,24,21,22,"setItem"],[73,25,21,23,"key"],[73,28,21,34],[73,30,21,36,"value"],[73,35,21,49],[73,37,21,66],[74,6,22,4],[74,10,22,8],[75,8,23,6],[76,8,24,6],[76,14,24,12,"AsyncStorage"],[76,26,24,24],[76,27,24,24,"default"],[76,34,24,24],[76,35,24,25,"setItem"],[76,42,24,32],[76,43,24,33,"key"],[76,46,24,36],[76,48,24,38,"value"],[76,53,24,43],[76,54,24,44],[77,6,25,4],[77,7,25,5],[77,8,25,6],[77,15,25,13,"error"],[77,20,25,18],[77,22,25,20],[78,8,26,6],[79,8,27,6],[79,12,27,10],[79,21,27,43,"window"],[79,27,27,49],[79,28,27,50,"localStorage"],[79,40,27,62],[79,42,27,64],[80,10,28,8,"window"],[80,16,28,14],[80,17,28,15,"localStorage"],[80,29,28,27],[80,30,28,28,"setItem"],[80,37,28,35],[80,38,28,36,"key"],[80,41,28,39],[80,43,28,41,"value"],[80,48,28,46],[80,49,28,47],[81,8,29,6],[82,6,30,4],[83,4,31,2],[84,4,33,2],[84,17,33,15,"removeItem"],[84,27,33,25,"removeItem"],[84,28,33,26,"key"],[84,31,33,37],[84,33,33,54],[85,6,34,4],[85,10,34,8],[86,8,35,6],[86,14,35,12,"AsyncStorage"],[86,26,35,24],[86,27,35,24,"default"],[86,34,35,24],[86,35,35,25,"removeItem"],[86,45,35,35],[86,46,35,36,"key"],[86,49,35,39],[86,50,35,40],[87,6,36,4],[87,7,36,5],[87,8,36,6],[87,15,36,13,"error"],[87,20,36,18],[87,22,36,20],[88,8,37,6],[88,12,37,10],[88,21,37,43,"window"],[88,27,37,49],[88,28,37,50,"localStorage"],[88,40,37,62],[88,42,37,64],[89,10,38,8,"window"],[89,16,38,14],[89,17,38,15,"localStorage"],[89,29,38,27],[89,30,38,28,"removeItem"],[89,40,38,38],[89,41,38,39,"key"],[89,44,38,42],[89,45,38,43],[90,8,39,6],[91,6,40,4],[92,4,41,2],[93,2,42,0],[95,2,44,0],[96,2,45,0],[96,8,45,6,"BACKEND_URL"],[96,19,45,17],[96,22,45,20,"Constants"],[96,31,45,29],[96,32,45,29,"default"],[96,39,45,29],[96,40,45,30,"expoConfig"],[96,50,45,40],[96,52,45,42,"extra"],[96,57,45,47],[96,59,45,49,"backendUrl"],[96,69,45,59],[96,73,45,63,"process"],[96,80,45,70],[96,81,45,71,"env"],[96,84,45,74],[96,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[96,108,45,98],[96,112,45,102],[96,163,45,153],[97,2,47,0],[97,8,47,6,"ApiClient"],[97,17,47,15],[97,18,47,16],[98,4,50,2,"constructor"],[98,15,50,13,"constructor"],[98,16,50,13],[98,18,50,16],[99,6,51,4],[99,10,51,8],[99,11,51,9,"client"],[99,17,51,15],[99,20,51,18,"axios"],[99,25,51,23],[99,26,51,23,"default"],[99,33,51,23],[99,34,51,24,"create"],[99,40,51,30],[99,41,51,31],[100,8,52,6,"baseURL"],[100,15,52,13],[100,17,52,15],[100,20,52,18,"BACKEND_URL"],[100,31,52,29],[100,37,52,35],[101,8,53,6,"timeout"],[101,15,53,13],[101,17,53,15],[101,22,53,20],[102,8,54,6,"headers"],[102,15,54,13],[102,17,54,15],[103,10,55,8],[103,24,55,22],[103,26,55,24],[104,8,56,6],[105,6,57,4],[105,7,57,5],[105,8,57,6],[107,6,59,4],[108,6,60,4],[108,10,60,8],[108,11,60,9,"client"],[108,17,60,15],[108,18,60,16,"interceptors"],[108,30,60,28],[108,31,60,29,"request"],[108,38,60,36],[108,39,60,37,"use"],[108,42,60,40],[108,43,60,41],[108,49,60,48,"config"],[108,55,60,54],[108,59,60,59],[109,8,61,6,"console"],[109,15,61,13],[109,16,61,14,"log"],[109,19,61,17],[109,20,61,18],[109,39,61,37,"config"],[109,45,61,43],[109,46,61,44,"method"],[109,52,61,50],[109,54,61,52,"toUpperCase"],[109,65,61,63],[109,66,61,64],[109,67,61,65],[109,71,61,69,"config"],[109,77,61,75],[109,78,61,76,"url"],[109,81,61,79],[109,83,61,81],[109,85,61,83,"config"],[109,91,61,89],[109,92,61,90,"data"],[109,96,61,94],[109,97,61,95],[110,8,63,6],[110,14,63,12,"token"],[110,19,63,17],[110,22,63,20],[110,28,63,26,"SecureStore"],[110,39,63,37],[110,40,63,38,"getItemAsync"],[110,52,63,50],[110,53,63,51],[110,68,63,66],[110,69,63,67],[111,8,64,6],[111,12,64,10,"token"],[111,17,64,15],[111,19,64,17],[112,10,65,8,"config"],[112,16,65,14],[112,17,65,15,"headers"],[112,24,65,22],[112,25,65,23,"Authorization"],[112,38,65,36],[112,41,65,39],[112,51,65,49,"token"],[112,56,65,54],[112,58,65,56],[113,8,66,6],[114,8,67,6],[114,15,67,13,"config"],[114,21,67,19],[115,6,68,4],[115,7,68,5],[115,8,68,6],[117,6,70,4],[118,6,71,4],[118,10,71,8],[118,11,71,9,"client"],[118,17,71,15],[118,18,71,16,"interceptors"],[118,30,71,28],[118,31,71,29,"response"],[118,39,71,37],[118,40,71,38,"use"],[118,43,71,41],[118,44,72,7,"response"],[118,52,72,15],[118,56,72,20],[119,8,73,8,"console"],[119,15,73,15],[119,16,73,16,"log"],[119,19,73,19],[119,20,73,20],[119,39,73,39,"response"],[119,47,73,47],[119,48,73,48,"status"],[119,54,73,54],[119,56,73,56],[119,58,73,58,"response"],[119,66,73,66],[119,67,73,67,"data"],[119,71,73,71],[119,72,73,72],[120,8,74,8],[120,15,74,15,"response"],[120,23,74,23],[121,6,75,6],[121,7,75,7],[121,9,76,7,"error"],[121,14,76,12],[121,18,76,17],[122,8,77,8,"console"],[122,15,77,15],[122,16,77,16,"log"],[122,19,77,19],[122,20,77,20],[122,36,77,36,"error"],[122,41,77,41],[122,42,77,42,"response"],[122,50,77,50],[122,52,77,52,"status"],[122,58,77,58],[122,62,77,62],[122,71,77,71],[122,73,77,73],[122,75,77,75,"error"],[122,80,77,80],[122,81,77,81,"response"],[122,89,77,89],[122,91,77,91,"data"],[122,95,77,95],[122,99,77,99,"error"],[122,104,77,104],[122,105,77,105,"message"],[122,112,77,112],[122,113,77,113],[123,8,79,8],[123,12,79,12,"error"],[123,17,79,17],[123,18,79,18,"response"],[123,26,79,26],[123,28,79,28,"status"],[123,34,79,34],[123,39,79,39],[123,42,79,42],[123,44,79,44],[124,10,80,10],[125,10,81,10,"SecureStore"],[125,21,81,21],[125,22,81,22,"deleteItemAsync"],[125,37,81,37],[125,38,81,38],[125,53,81,53],[125,54,81,54],[126,8,82,8],[127,8,83,8],[127,15,83,15,"Promise"],[127,22,83,22],[127,23,83,23,"reject"],[127,29,83,29],[127,30,83,30,"error"],[127,35,83,35],[127,36,83,36],[128,6,84,6],[128,7,85,4],[128,8,85,5],[129,4,86,2],[130,4,88,2],[130,10,88,8,"get"],[130,13,88,11,"get"],[130,14,88,21,"url"],[130,17,88,32],[130,19,88,46],[131,6,89,4],[131,12,89,10,"response"],[131,20,89,36],[131,23,89,39],[131,29,89,45],[131,33,89,49],[131,34,89,50,"client"],[131,40,89,56],[131,41,89,57,"get"],[131,44,89,60],[131,45,89,61,"url"],[131,48,89,64],[131,49,89,65],[132,6,90,4],[132,13,90,11,"response"],[132,21,90,19],[132,22,90,20,"data"],[132,26,90,24],[133,4,91,2],[134,4,93,2],[134,10,93,8,"post"],[134,14,93,12,"post"],[134,15,93,22,"url"],[134,18,93,33],[134,20,93,35,"data"],[134,24,93,45],[134,26,93,59],[135,6,94,4],[135,12,94,10,"response"],[135,20,94,36],[135,23,94,39],[135,29,94,45],[135,33,94,49],[135,34,94,50,"client"],[135,40,94,56],[135,41,94,57,"post"],[135,45,94,61],[135,46,94,62,"url"],[135,49,94,65],[135,51,94,67,"data"],[135,55,94,71],[135,56,94,72],[136,6,95,4],[136,13,95,11,"response"],[136,21,95,19],[136,22,95,20,"data"],[136,26,95,24],[137,4,96,2],[138,4,98,2],[138,10,98,8,"patch"],[138,15,98,13,"patch"],[138,16,98,23,"url"],[138,19,98,34],[138,21,98,36,"data"],[138,25,98,46],[138,27,98,60],[139,6,99,4],[139,12,99,10,"response"],[139,20,99,36],[139,23,99,39],[139,29,99,45],[139,33,99,49],[139,34,99,50,"client"],[139,40,99,56],[139,41,99,57,"patch"],[139,46,99,62],[139,47,99,63,"url"],[139,50,99,66],[139,52,99,68,"data"],[139,56,99,72],[139,57,99,73],[140,6,100,4],[140,13,100,11,"response"],[140,21,100,19],[140,22,100,20,"data"],[140,26,100,24],[141,4,101,2],[142,4,103,2],[142,10,103,8,"delete"],[142,16,103,14,"delete"],[142,17,103,24,"url"],[142,20,103,35],[142,22,103,49],[143,6,104,4],[143,12,104,10,"response"],[143,20,104,36],[143,23,104,39],[143,29,104,45],[143,33,104,49],[143,34,104,50,"client"],[143,40,104,56],[143,41,104,57,"delete"],[143,47,104,63],[143,48,104,64,"url"],[143,51,104,67],[143,52,104,68],[144,6,105,4],[144,13,105,11,"response"],[144,21,105,19],[144,22,105,20,"data"],[144,26,105,24],[145,4,106,2],[146,4,108,2],[146,10,108,8,"put"],[146,13,108,11,"put"],[146,14,108,21,"url"],[146,17,108,32],[146,19,108,34,"data"],[146,23,108,44],[146,25,108,58],[147,6,109,4],[147,12,109,10,"response"],[147,20,109,36],[147,23,109,39],[147,29,109,45],[147,33,109,49],[147,34,109,50,"client"],[147,40,109,56],[147,41,109,57,"put"],[147,44,109,60],[147,45,109,61,"url"],[147,48,109,64],[147,50,109,66,"data"],[147,54,109,70],[147,55,109,71],[148,6,110,4],[148,13,110,11,"response"],[148,21,110,19],[148,22,110,20,"data"],[148,26,110,24],[149,4,111,2],[150,2,112,0],[151,2,114,0],[151,8,114,6,"apiClient"],[151,17,114,15],[151,20,114,18],[151,24,114,22,"ApiClient"],[151,33,114,31],[151,34,114,32],[151,35,114,33],[153,2,116,0],[154,2,117,7],[154,8,117,13,"authAPI"],[154,15,117,20],[154,18,117,23],[155,4,118,2,"createSession"],[155,17,118,15],[155,19,118,18,"sessionId"],[155,28,118,35],[155,32,119,4,"apiClient"],[155,41,119,13],[155,42,119,14,"post"],[155,46,119,18],[155,47,119,19],[155,62,119,34],[155,64,119,36],[155,68,119,40],[155,70,119,42],[156,6,120,6,"headers"],[156,13,120,13],[156,15,120,15],[157,8,120,17],[157,22,120,31],[157,24,120,33,"sessionId"],[158,6,120,43],[159,4,121,4],[159,5,121,5],[159,6,121,6],[160,4,123,2,"signup"],[160,10,123,8],[160,12,123,11,"data"],[160,16,129,3],[160,20,129,8,"apiClient"],[160,29,129,17],[160,30,129,18,"post"],[160,34,129,22],[160,35,129,23],[160,49,129,37],[160,51,129,39,"data"],[160,55,129,43],[160,56,129,44],[161,4,131,2,"verifyOTP"],[161,13,131,11],[161,15,131,14,"data"],[161,19,131,55],[161,23,132,4,"apiClient"],[161,32,132,13],[161,33,132,14,"post"],[161,37,132,18],[161,38,132,19],[161,56,132,37],[161,58,132,39,"data"],[161,62,132,43],[161,63,132,44],[162,4,134,2,"login"],[162,9,134,7],[162,11,134,10,"data"],[162,15,134,51],[162,19,135,4,"apiClient"],[162,28,135,13],[162,29,135,14,"post"],[162,33,135,18],[162,34,135,19],[162,47,135,32],[162,49,135,34,"data"],[162,53,135,38],[162,54,135,39],[163,4,137,2,"resendOTP"],[163,13,137,11],[163,15,137,14,"email"],[163,20,137,27],[163,24,138,4,"apiClient"],[163,33,138,13],[163,34,138,14,"post"],[163,38,138,18],[163,39,138,19],[163,57,138,37],[163,59,138,39],[164,6,138,41,"email"],[165,4,138,47],[165,5,138,48],[165,6,138,49],[166,4,140,2,"getCurrentUser"],[166,18,140,16],[166,20,140,18,"getCurrentUser"],[166,21,140,18],[166,26,140,24,"apiClient"],[166,35,140,33],[166,36,140,34,"get"],[166,39,140,37],[166,40,140,38],[166,50,140,48],[166,51,140,49],[167,4,142,2,"logout"],[167,10,142,8],[167,12,142,10,"logout"],[167,13,142,10],[167,18,142,16,"apiClient"],[167,27,142,25],[167,28,142,26,"post"],[167,32,142,30],[167,33,142,31],[167,47,142,45],[167,48,142,46],[168,4,144,2,"updateLanguage"],[168,18,144,16],[168,20,144,19,"language"],[168,28,144,35],[168,32,145,4,"apiClient"],[168,41,145,13],[168,42,145,14,"patch"],[168,47,145,19],[168,48,145,20],[168,64,145,36],[168,66,145,38],[168,70,145,42],[168,72,145,44],[169,6,146,6,"params"],[169,12,146,12],[169,14,146,14],[170,8,146,16,"language"],[171,6,146,25],[172,4,147,4],[172,5,147,5],[172,6,147,6],[173,4,149,2,"toggleBiometric"],[173,19,149,17],[173,21,149,20,"enabled"],[173,28,149,36],[173,32,150,4,"apiClient"],[173,41,150,13],[173,42,150,14,"patch"],[173,47,150,19],[173,48,150,20],[173,65,150,37],[173,67,150,39],[173,71,150,43],[173,73,150,45],[174,6,151,6,"params"],[174,12,151,12],[174,14,151,14],[175,8,151,16,"enabled"],[176,6,151,24],[177,4,152,4],[177,5,152,5],[178,2,153,0],[178,3,153,1],[180,2,155,0],[181,2,156,0],[181,8,156,6,"logAdminAction"],[181,22,156,20],[181,25,156,23],[181,31,156,23,"logAdminAction"],[181,32,156,30,"action"],[181,38,156,44],[181,40,156,46,"competitionName"],[181,55,156,69],[181,57,156,71,"adminName"],[181,66,156,88],[181,68,156,90,"details"],[181,75,156,103],[181,80,156,108],[182,4,157,2],[182,8,157,6],[183,6,158,4],[183,12,158,10,"logs"],[183,16,158,14],[183,19,158,17],[183,26,158,23,"CrossPlatformStorage"],[183,46,158,43],[183,47,158,44,"getItem"],[183,54,158,51],[183,55,158,52],[183,66,158,63],[183,67,158,64],[183,72,158,68],[183,76,158,72],[184,6,159,4],[184,12,159,10,"adminLogs"],[184,21,159,19],[184,24,159,22,"JSON"],[184,28,159,26],[184,29,159,27,"parse"],[184,34,159,32],[184,35,159,33,"logs"],[184,39,159,37],[184,40,159,38],[185,6,161,4],[185,12,161,10,"logEntry"],[185,20,161,18],[185,23,161,21],[186,8,162,6,"id"],[186,10,162,8],[186,12,162,10],[186,19,162,17,"Date"],[186,23,162,21],[186,24,162,22,"now"],[186,27,162,25],[186,28,162,26],[186,29,162,27],[186,31,162,29],[187,8,163,6,"action"],[187,14,163,12],[188,8,164,6,"competition_name"],[188,24,164,22],[188,26,164,24,"competitionName"],[188,41,164,39],[189,8,165,6,"admin_name"],[189,18,165,16],[189,20,165,18,"adminName"],[189,29,165,27],[190,8,166,6,"details"],[190,15,166,13],[191,8,167,6,"timestamp"],[191,17,167,15],[191,19,167,17],[191,23,167,21,"Date"],[191,27,167,25],[191,28,167,26],[191,29,167,27],[191,30,167,28,"toISOString"],[191,41,167,39],[191,42,167,40],[192,6,168,4],[192,7,168,5],[193,6,170,4,"adminLogs"],[193,15,170,13],[193,16,170,14,"push"],[193,20,170,18],[193,21,170,19,"logEntry"],[193,29,170,27],[193,30,170,28],[194,6,171,4],[194,12,171,10,"CrossPlatformStorage"],[194,32,171,30],[194,33,171,31,"setItem"],[194,40,171,38],[194,41,171,39],[194,52,171,50],[194,54,171,52,"JSON"],[194,58,171,56],[194,59,171,57,"stringify"],[194,68,171,66],[194,69,171,67,"adminLogs"],[194,78,171,76],[194,79,171,77],[194,80,171,78],[195,6,173,4,"console"],[195,13,173,11],[195,14,173,12,"log"],[195,17,173,15],[195,18,173,16],[195,43,173,41],[195,45,173,43,"action"],[195,51,173,49],[195,53,173,51,"competitionName"],[195,68,173,66],[195,69,173,67],[196,4,174,2],[196,5,174,3],[196,6,174,4],[196,13,174,11,"error"],[196,18,174,16],[196,20,174,18],[197,6,175,4,"console"],[197,13,175,11],[197,14,175,12,"error"],[197,19,175,17],[197,20,175,18],[197,49,175,47],[197,51,175,49,"error"],[197,56,175,54],[197,57,175,55],[198,4,176,2],[199,2,177,0],[199,3,177,1],[201,2,179,0],[202,2,180,7],[202,8,180,13,"competitionAPI"],[202,22,180,27],[202,25,180,30],[203,4,181,2,"create"],[203,10,181,8],[203,12,181,11,"data"],[203,16,196,3],[203,20,196,8,"apiClient"],[203,29,196,17],[203,30,196,18,"post"],[203,34,196,22],[203,35,196,23],[203,50,196,38],[203,52,196,40,"data"],[203,56,196,44],[203,57,196,45],[204,4,198,2,"join"],[204,8,198,6],[204,10,198,9,"inviteCode"],[204,20,198,27],[204,24,199,4,"apiClient"],[204,33,199,13],[204,34,199,14,"post"],[204,38,199,18],[204,39,199,19],[204,59,199,39],[204,61,199,41],[205,6,199,43,"invite_code"],[205,17,199,54],[205,19,199,56,"inviteCode"],[206,4,199,67],[206,5,199,68],[206,6,199,69],[207,4,201,2,"getMyCompetitions"],[207,21,201,19],[207,23,201,21,"getMyCompetitions"],[207,24,201,21],[207,29,201,27,"apiClient"],[207,38,201,36],[207,39,201,37,"get"],[207,42,201,40],[207,43,201,41],[207,61,201,59],[207,62,201,60],[208,4,203,2,"getCompetition"],[208,18,203,16],[208,20,203,19,"id"],[208,22,203,29],[208,26,203,34,"apiClient"],[208,35,203,43],[208,36,203,44,"get"],[208,39,203,47],[208,40,203,48],[208,57,203,65,"id"],[208,59,203,67],[208,61,203,69],[208,62,203,70],[209,4,205,2,"updateStandings"],[209,19,205,17],[209,21,205,19,"updateStandings"],[209,22,206,4,"id"],[209,24,206,14],[209,26,207,4,"standings"],[209,35,207,18],[209,37,208,4,"matchday"],[209,45,208,21],[209,50,210,4,"apiClient"],[209,59,210,13],[209,60,210,14,"patch"],[209,65,210,19],[209,66,210,20],[209,83,210,37,"id"],[209,85,210,39],[209,97,210,51],[209,99,210,53],[210,6,211,6,"standings"],[210,15,211,15],[211,6,212,6,"matchday"],[212,4,213,4],[212,5,213,5],[212,6,213,6],[213,4,215,2,"payFee"],[213,10,215,8],[213,12,215,10,"payFee"],[213,13,215,11,"id"],[213,15,215,21],[213,17,215,23,"amount"],[213,23,215,37],[213,28,216,4,"apiClient"],[213,37,216,13],[213,38,216,14,"post"],[213,42,216,18],[213,43,216,19],[213,60,216,36,"id"],[213,62,216,38],[213,68,216,44],[213,70,216,46],[213,74,216,50],[213,76,216,52],[214,6,217,6,"params"],[214,12,217,12],[214,14,217,14],[215,8,217,16,"amount"],[216,6,217,23],[217,4,218,4],[217,5,218,5],[217,6,218,6],[218,4,220,2,"getTransactions"],[218,19,220,17],[218,21,220,20,"id"],[218,23,220,30],[218,27,221,4,"apiClient"],[218,36,221,13],[218,37,221,14,"get"],[218,40,221,17],[218,41,221,18],[218,58,221,35,"id"],[218,60,221,37],[218,75,221,52],[218,76,221,53],[219,4,223,2],[220,4,224,2,"payMatchdays"],[220,16,224,14],[220,18,224,16,"payMatchdays"],[220,19,224,17,"competitionId"],[220,32,224,38],[220,34,224,40,"matchdays"],[220,43,224,59],[220,48,225,4,"apiClient"],[220,57,225,13],[220,58,225,14,"post"],[220,62,225,18],[220,63,225,19],[220,80,225,36,"competitionId"],[220,93,225,49],[220,113,225,69],[220,115,225,71],[221,6,226,6,"competition_id"],[221,20,226,20],[221,22,226,22,"competitionId"],[221,35,226,35],[222,6,227,6,"matchdays"],[223,4,228,4],[223,5,228,5],[223,6,228,6],[224,4,230,2,"getMatchdayPayments"],[224,23,230,21],[224,25,230,24,"competitionId"],[224,38,230,45],[224,42,231,4,"apiClient"],[224,51,231,13],[224,52,231,14,"get"],[224,55,231,17],[224,56,231,18],[224,73,231,35,"competitionId"],[224,86,231,48],[224,106,231,68],[224,107,231,69],[225,4,233,2,"getPaymentStatusTable"],[225,25,233,23],[225,27,233,26,"competitionId"],[225,40,233,47],[225,44,234,4,"apiClient"],[225,53,234,13],[225,54,234,14,"get"],[225,57,234,17],[225,58,234,18],[225,75,234,35,"competitionId"],[225,88,234,48],[225,111,234,71],[225,112,234,72],[226,4,236,2],[227,4,237,2,"createMock"],[227,14,237,12],[227,16,237,14],[227,22,237,21,"data"],[227,26,250,3],[227,30,250,8],[228,6,251,4,"console"],[228,13,251,11],[228,14,251,12,"log"],[228,17,251,15],[228,18,251,16],[228,50,251,48],[228,52,251,50,"data"],[228,56,251,54],[228,57,251,55,"name"],[228,61,251,59],[228,62,251,60],[229,6,252,4,"console"],[229,13,252,11],[229,14,252,12,"log"],[229,17,252,15],[229,18,252,16],[229,39,252,37],[229,41,252,39,"data"],[229,45,252,43],[229,46,252,44,"total_matchdays"],[229,61,252,59],[229,65,252,63],[229,67,252,65],[229,68,252,66],[231,6,254,4],[232,6,255,4],[232,12,255,10,"storedCompetitions"],[232,30,255,28],[232,33,255,31],[232,39,255,37,"CrossPlatformStorage"],[232,59,255,57],[232,60,255,58,"getItem"],[232,67,255,65],[232,68,255,66],[232,86,255,84],[232,87,255,85],[233,6,256,4],[233,10,256,8,"existingCompetitions"],[233,30,256,28],[233,33,256,31,"storedCompetitions"],[233,51,256,49],[233,54,256,52,"JSON"],[233,58,256,56],[233,59,256,57,"parse"],[233,64,256,62],[233,65,256,63,"storedCompetitions"],[233,83,256,81],[233,84,256,82],[233,87,256,85],[233,89,256,87],[234,6,258,4,"console"],[234,13,258,11],[234,14,258,12,"log"],[234,17,258,15],[234,18,258,16],[234,60,258,58],[234,62,258,60,"existingCompetitions"],[234,82,258,80],[234,83,258,81,"length"],[234,89,258,87],[234,90,258,88],[236,6,260,4],[237,6,261,4],[237,12,261,10,"existingNames"],[237,25,261,23],[237,28,261,26,"existingCompetitions"],[237,48,261,46],[237,49,261,47,"map"],[237,52,261,50],[237,53,261,52,"comp"],[237,57,261,61],[237,61,261,66,"comp"],[237,65,261,70],[237,66,261,71,"name"],[237,70,261,75],[237,71,261,76,"toLowerCase"],[237,82,261,87],[237,83,261,88],[237,84,261,89],[237,85,261,90],[238,6,262,4],[238,10,262,8,"existingNames"],[238,23,262,21],[238,24,262,22,"includes"],[238,32,262,30],[238,33,262,31,"data"],[238,37,262,35],[238,38,262,36,"name"],[238,42,262,40],[238,43,262,41,"toLowerCase"],[238,54,262,52],[238,55,262,53],[238,56,262,54],[238,57,262,55],[238,59,262,57],[239,8,263,6],[239,14,263,12],[239,18,263,16,"Error"],[239,23,263,21],[239,24,263,22],[239,86,263,84],[239,87,263,85],[240,6,264,4],[242,6,266,4],[243,6,267,4],[243,12,267,10,"newCompetition"],[243,26,267,24],[243,29,267,27],[244,8,268,6,"_id"],[244,11,268,9],[244,13,268,11],[244,21,268,19,"Date"],[244,25,268,23],[244,26,268,24,"now"],[244,29,268,27],[244,30,268,28],[244,31,268,29],[244,33,268,31],[245,8,269,6,"name"],[245,12,269,10],[245,14,269,12,"data"],[245,18,269,16],[245,19,269,17,"name"],[245,23,269,21],[246,8,270,6,"total_matchdays"],[246,23,270,21],[246,25,270,23,"data"],[246,29,270,27],[246,30,270,28,"total_matchdays"],[246,45,270,43],[246,49,270,47],[246,51,270,49],[247,8,271,6,"participation_cost_per_team"],[247,35,271,33],[247,37,271,35,"data"],[247,41,271,39],[247,42,271,40,"participation_cost_per_team"],[247,69,271,67],[247,73,271,71],[247,78,271,76],[248,8,272,6,"expected_teams"],[248,22,272,20],[248,24,272,22,"data"],[248,28,272,26],[248,29,272,27,"expected_teams"],[248,43,272,41],[248,47,272,45],[248,48,272,46],[249,8,273,6,"total_prize_pool"],[249,24,273,22],[249,26,273,24,"data"],[249,30,273,28],[249,31,273,29,"total_prize_pool"],[249,47,273,45],[249,51,273,49],[249,57,273,55],[250,8,274,6,"daily_payment_enabled"],[250,29,274,27],[250,31,274,29,"data"],[250,35,274,33],[250,36,274,34,"daily_payment_enabled"],[250,57,274,55],[250,61,274,59],[250,66,274,64],[251,8,275,6,"daily_payment_amount"],[251,28,275,26],[251,30,275,28,"data"],[251,34,275,32],[251,35,275,33,"daily_payment_amount"],[251,55,275,53],[251,59,275,57],[251,62,275,60],[252,8,276,6,"rules"],[252,13,276,11],[252,15,276,13,"data"],[252,19,276,17],[252,20,276,18,"rules"],[252,25,276,23],[253,8,277,6,"invite_code"],[253,19,277,17],[253,21,277,19,"Math"],[253,25,277,23],[253,26,277,24,"random"],[253,32,277,30],[253,33,277,31],[253,34,277,32],[253,35,277,33,"toString"],[253,43,277,41],[253,44,277,42],[253,46,277,44],[253,47,277,45],[253,48,277,46,"substr"],[253,54,277,52],[253,55,277,53],[253,56,277,54],[253,58,277,56],[253,59,277,57],[253,60,277,58],[253,61,277,59,"toUpperCase"],[253,72,277,70],[253,73,277,71],[253,74,277,72],[254,8,278,6,"invite_link"],[254,19,278,17],[254,21,278,19],[254,50,278,48,"Math"],[254,54,278,52],[254,55,278,53,"random"],[254,61,278,59],[254,62,278,60],[254,63,278,61],[254,64,278,62,"toString"],[254,72,278,70],[254,73,278,71],[254,75,278,73],[254,76,278,74],[254,77,278,75,"substr"],[254,83,278,81],[254,84,278,82],[254,85,278,83],[254,87,278,85],[254,88,278,86],[254,89,278,87],[254,90,278,88,"toUpperCase"],[254,101,278,99],[254,102,278,100],[254,103,278,101],[254,105,278,103],[255,8,279,6,"admin_id"],[255,16,279,14],[255,18,279,16],[255,44,279,42],[256,8,279,44],[257,8,280,6,"participants"],[257,20,280,18],[257,22,280,20],[257,23,281,8],[258,10,282,10,"id"],[258,12,282,12],[258,14,282,14],[258,40,282,40],[259,10,283,10,"name"],[259,14,283,14],[259,16,283,16],[259,33,283,33],[260,10,284,10,"email"],[260,15,284,15],[260,17,284,17],[260,36,284,36],[261,10,285,10,"is_admin"],[261,18,285,18],[261,20,285,20],[261,24,285,24],[262,10,286,10,"paid_matchdays"],[262,24,286,24],[262,26,286,26],[262,27,286,27],[262,28,286,28],[262,30,286,30],[262,31,286,31],[262,32,286,32],[263,10,286,34],[264,10,287,10,"points"],[264,16,287,16],[264,18,287,18],[265,8,288,8],[265,9,288,9],[265,10,289,7],[266,8,290,6,"wallet_balance"],[266,22,290,20],[266,24,290,22],[266,25,290,23],[267,8,291,6,"is_active"],[267,17,291,15],[267,19,291,17],[267,23,291,21],[268,8,292,6,"current_matchday"],[268,24,292,22],[268,26,292,24],[268,27,292,25],[269,8,292,27],[270,8,293,6,"standings"],[270,17,293,15],[270,19,293,17],[270,20,294,8],[271,10,294,10,"position"],[271,18,294,18],[271,20,294,20],[271,21,294,21],[272,10,294,23,"player_id"],[272,19,294,32],[272,21,294,34],[272,47,294,60],[273,10,294,62,"name"],[273,14,294,66],[273,16,294,68],[273,33,294,85],[274,10,294,87,"points"],[274,16,294,93],[274,18,294,95],[275,8,294,97],[275,9,294,98],[275,10,295,7],[276,8,296,6,"created_at"],[276,18,296,16],[276,20,296,18],[276,24,296,22,"Date"],[276,28,296,26],[276,29,296,27],[276,30,296,28],[276,31,296,29,"toISOString"],[276,42,296,40],[276,43,296,41],[276,44,296,42],[277,8,297,6,"updated_at"],[277,18,297,16],[277,20,297,18],[277,24,297,22,"Date"],[277,28,297,26],[277,29,297,27],[277,30,297,28],[277,31,297,29,"toISOString"],[277,42,297,40],[277,43,297,41],[278,6,298,4],[278,7,298,5],[280,6,300,4],[281,6,301,4,"existingCompetitions"],[281,26,301,24],[281,27,301,25,"push"],[281,31,301,29],[281,32,301,30,"newCompetition"],[281,46,301,44],[281,47,301,45],[282,6,302,4],[282,12,302,10,"CrossPlatformStorage"],[282,32,302,30],[282,33,302,31,"setItem"],[282,40,302,38],[282,41,302,39],[282,59,302,57],[282,61,302,59,"JSON"],[282,65,302,63],[282,66,302,64,"stringify"],[282,75,302,73],[282,76,302,74,"existingCompetitions"],[282,96,302,94],[282,97,302,95],[282,98,302,96],[284,6,304,4],[285,6,305,4],[285,12,305,10,"logAdminAction"],[285,26,305,24],[285,27,305,25],[285,35,305,33],[285,37,305,35,"newCompetition"],[285,51,305,49],[285,52,305,50,"name"],[285,56,305,54],[285,58,305,56],[285,75,305,73],[285,77,305,75],[286,8,306,6,"competition_id"],[286,22,306,20],[286,24,306,22,"newCompetition"],[286,38,306,36],[286,39,306,37,"_id"],[286,42,306,40],[287,8,307,6,"rules"],[287,13,307,11],[287,15,307,13,"newCompetition"],[287,29,307,27],[287,30,307,28,"rules"],[287,35,307,33],[288,8,308,6,"total_matchdays"],[288,23,308,21],[288,25,308,23,"newCompetition"],[288,39,308,37],[288,40,308,38,"total_matchdays"],[288,55,308,53],[289,8,309,6,"participation_cost_per_team"],[289,35,309,33],[289,37,309,35,"newCompetition"],[289,51,309,49],[289,52,309,50,"participation_cost_per_team"],[289,79,309,77],[290,8,310,6,"expected_teams"],[290,22,310,20],[290,24,310,22,"newCompetition"],[290,38,310,36],[290,39,310,37,"expected_teams"],[290,53,310,51],[291,8,311,6,"total_prize_pool"],[291,24,311,22],[291,26,311,24,"newCompetition"],[291,40,311,38],[291,41,311,39,"total_prize_pool"],[291,57,311,55],[292,8,312,6,"daily_payment_enabled"],[292,29,312,27],[292,31,312,29,"newCompetition"],[292,45,312,43],[292,46,312,44,"daily_payment_enabled"],[292,67,312,65],[293,8,313,6,"daily_payment_amount"],[293,28,313,26],[293,30,313,28,"newCompetition"],[293,44,313,42],[293,45,313,43,"daily_payment_amount"],[294,6,314,4],[294,7,314,5],[294,8,314,6],[295,6,316,4,"console"],[295,13,316,11],[295,14,316,12,"log"],[295,17,316,15],[295,18,316,16],[295,47,316,45],[295,49,316,47,"newCompetition"],[295,63,316,61],[295,64,316,62,"name"],[295,68,316,66],[295,69,316,67],[296,6,317,4,"console"],[296,13,317,11],[296,14,317,12,"log"],[296,17,317,15],[296,18,317,16],[296,40,317,38],[296,42,317,40,"newCompetition"],[296,56,317,54],[296,57,317,55,"name"],[296,61,317,59],[296,62,317,60],[297,6,318,4,"console"],[297,13,318,11],[297,14,318,12,"log"],[297,17,318,15],[297,18,318,16],[297,37,318,35],[297,39,318,37,"newCompetition"],[297,53,318,51],[297,54,318,52,"daily_payment_enabled"],[297,75,318,73],[297,78,318,76],[297,82,318,80,"newCompetition"],[297,96,318,94],[297,97,318,95,"daily_payment_amount"],[297,117,318,115],[297,132,318,130],[297,135,318,133],[297,145,318,143],[297,146,318,144],[298,6,319,4,"console"],[298,13,319,11],[298,14,319,12,"log"],[298,17,319,15],[298,18,319,16],[298,40,319,38],[298,42,319,40],[298,46,319,44,"newCompetition"],[298,60,319,58],[298,61,319,59,"total_prize_pool"],[298,77,319,75],[298,79,319,77],[298,80,319,78],[299,6,320,4,"console"],[299,13,320,11],[299,14,320,12,"log"],[299,17,320,15],[299,18,320,16],[299,35,320,33],[299,37,320,35,"newCompetition"],[299,51,320,49],[299,52,320,50,"invite_code"],[299,63,320,61],[299,64,320,62],[300,6,322,4],[300,13,322,11],[301,8,322,13,"data"],[301,12,322,17],[301,14,322,19,"newCompetition"],[302,6,322,34],[302,7,322,35],[303,4,323,2],[303,5,323,3],[304,4,325,2],[305,4,326,2,"payMatchdaysMock"],[305,20,326,18],[305,22,326,20],[305,28,326,20,"payMatchdaysMock"],[305,29,326,27,"competitionId"],[305,42,326,48],[305,44,326,50,"matchdays"],[305,53,326,69],[305,58,326,74],[306,6,327,4,"console"],[306,13,327,11],[306,14,327,12,"log"],[306,17,327,15],[306,18,327,16],[306,49,327,47],[306,51,327,49,"matchdays"],[306,60,327,58],[306,62,327,60],[306,78,327,76],[306,80,327,78,"competitionId"],[306,93,327,91],[306,94,327,92],[308,6,329,4],[309,6,330,4],[309,12,330,10,"totalCost"],[309,21,330,19],[309,24,330,22,"matchdays"],[309,33,330,31],[309,34,330,32,"length"],[309,40,330,38],[309,43,330,41],[309,44,330,42],[309,45,330,43],[309,46,330,44],[311,6,332,4],[312,6,333,4],[312,13,333,11],[313,8,334,6,"data"],[313,12,334,10],[313,14,334,12],[314,10,335,8,"message"],[314,17,335,15],[314,19,335,17],[314,44,335,42,"matchdays"],[314,53,335,51],[314,54,335,52,"length"],[314,60,335,58],[314,72,335,70],[315,10,336,8,"paid_matchdays"],[315,24,336,22],[315,26,336,24,"matchdays"],[315,35,336,33],[316,10,337,8,"total_cost"],[316,20,337,18],[316,22,337,20,"totalCost"],[316,31,337,29],[317,10,338,8,"new_user_balance"],[317,26,338,24],[317,28,338,26],[317,31,338,29],[317,34,338,32,"totalCost"],[317,43,338,41],[317,44,338,42],[318,8,339,6],[319,6,340,4],[319,7,340,5],[320,4,341,2],[320,5,341,3],[321,4,343,2,"getMatchdayPaymentsMock"],[321,27,343,25],[321,29,343,27],[321,35,343,34,"competitionId"],[321,48,343,55],[321,52,343,60],[322,6,344,4,"console"],[322,13,344,11],[322,14,344,12,"log"],[322,17,344,15],[322,18,344,16],[322,70,344,68],[322,72,344,70,"competitionId"],[322,85,344,83],[322,86,344,84],[324,6,346,4],[325,6,347,4],[325,12,347,10,"mockPayments"],[325,24,347,22],[325,27,347,25],[325,29,347,27],[326,6,348,4],[326,11,348,9],[326,15,348,13,"i"],[326,16,348,14],[326,19,348,17],[326,20,348,18],[326,22,348,20,"i"],[326,23,348,21],[326,27,348,25],[326,29,348,27],[326,31,348,29,"i"],[326,32,348,30],[326,34,348,32],[326,36,348,34],[327,8,349,6,"mockPayments"],[327,20,349,18],[327,21,349,19,"push"],[327,25,349,23],[327,26,349,24],[328,10,350,8,"_id"],[328,13,350,11],[328,15,350,13],[328,26,350,24,"i"],[328,27,350,25],[328,29,350,27],[329,10,351,8,"user_id"],[329,17,351,15],[329,19,351,17],[329,45,351,43],[330,10,352,8,"competition_id"],[330,24,352,22],[330,26,352,24,"competitionId"],[330,39,352,37],[331,10,353,8,"matchday"],[331,18,353,16],[331,20,353,18,"i"],[331,21,353,19],[332,10,354,8,"amount"],[332,16,354,14],[332,18,354,16],[332,19,354,17],[333,10,355,8,"status"],[333,16,355,14],[333,18,355,16,"i"],[333,19,355,17],[333,23,355,21],[333,24,355,22],[333,27,355,25],[333,33,355,31],[333,36,355,34],[333,45,355,43],[334,10,356,8,"paid_at"],[334,17,356,15],[334,19,356,17,"i"],[334,20,356,18],[334,24,356,22],[334,25,356,23],[334,28,356,26],[334,32,356,30,"Date"],[334,36,356,34],[334,37,356,35],[334,38,356,36],[334,39,356,37,"toISOString"],[334,50,356,48],[334,51,356,49],[334,52,356,50],[334,55,356,53],[334,59,356,57],[335,10,357,8,"created_at"],[335,20,357,18],[335,22,357,20],[335,26,357,24,"Date"],[335,30,357,28],[335,31,357,29],[335,32,357,30],[335,33,357,31,"toISOString"],[335,44,357,42],[335,45,357,43],[336,8,358,6],[336,9,358,7],[336,10,358,8],[337,6,359,4],[338,6,361,4],[338,13,361,11],[339,8,362,6,"data"],[339,12,362,10],[339,14,362,12],[340,10,363,8,"competition_id"],[340,24,363,22],[340,26,363,24,"competitionId"],[340,39,363,37],[341,10,364,8,"daily_payment_enabled"],[341,31,364,29],[341,33,364,31],[341,37,364,35],[342,10,365,8,"daily_payment_amount"],[342,30,365,28],[342,32,365,30],[342,33,365,31],[343,10,366,8,"total_matchdays"],[343,25,366,23],[343,27,366,25],[343,29,366,27],[344,10,367,8,"payments"],[344,18,367,16],[344,20,367,18,"mockPayments"],[345,8,368,6],[346,6,369,4],[346,7,369,5],[347,4,370,2],[347,5,370,3],[348,4,372,2,"getPaymentStatusTableMock"],[348,29,372,27],[348,31,372,29],[348,37,372,36,"competitionId"],[348,50,372,57],[348,54,372,62],[349,6,373,4,"console"],[349,13,373,11],[349,14,373,12,"log"],[349,17,373,15],[349,18,373,16],[349,73,373,71],[349,75,373,73,"competitionId"],[349,88,373,86],[349,89,373,87],[351,6,375,4],[352,6,376,4],[352,12,376,10,"mockTable"],[352,21,376,19],[352,24,376,22],[352,25,376,23],[353,8,377,6,"user_id"],[353,15,377,13],[353,17,377,15],[353,43,377,41],[354,8,378,6,"username"],[354,16,378,14],[354,18,378,16],[354,35,378,33],[355,8,379,6,"name"],[355,12,379,10],[355,14,379,12],[355,31,379,29],[356,8,380,6,"email"],[356,13,380,11],[356,15,380,13],[356,34,380,32],[357,8,381,6,"matchday_payments"],[357,25,381,23],[357,27,381,25,"Array"],[357,32,381,30],[357,33,381,31,"from"],[357,37,381,35],[357,38,381,36],[358,10,381,37,"length"],[358,16,381,43],[358,18,381,45],[359,8,381,47],[359,9,381,48],[359,11,381,50],[359,12,381,51,"_"],[359,13,381,52],[359,15,381,54,"i"],[359,16,381,55],[359,22,381,61],[360,10,382,8,"matchday"],[360,18,382,16],[360,20,382,18,"i"],[360,21,382,19],[360,24,382,22],[360,25,382,23],[361,10,383,8,"status"],[361,16,383,14],[361,18,383,17,"i"],[361,19,383,18],[361,22,383,21],[361,23,383,22],[361,26,383,25],[361,32,383,31],[361,35,383,34],[361,44,383,44],[362,10,384,8,"amount"],[362,16,384,14],[362,18,384,16],[362,19,384,17],[363,10,385,8,"paid_at"],[363,17,385,15],[363,19,385,17,"i"],[363,20,385,18],[363,23,385,21],[363,24,385,22],[363,27,385,25],[363,31,385,29,"Date"],[363,35,385,33],[363,36,385,34],[363,37,385,35],[363,38,385,36,"toISOString"],[363,49,385,47],[363,50,385,48],[363,51,385,49],[363,54,385,52],[364,8,386,6],[364,9,386,7],[364,10,386,8],[365,6,387,4],[365,7,387,5],[365,8,387,6],[366,6,389,4],[366,13,389,11],[367,8,390,6,"data"],[367,12,390,10],[367,14,390,12],[368,10,391,8,"competition_name"],[368,26,391,24],[368,28,391,26],[368,49,391,47],[369,10,392,8,"total_matchdays"],[369,25,392,23],[369,27,392,25],[369,29,392,27],[370,10,393,8,"daily_payment_amount"],[370,30,393,28],[370,32,393,30],[370,33,393,31],[371,10,394,8,"participants"],[371,22,394,20],[371,24,394,22,"mockTable"],[372,8,395,6],[373,6,396,4],[373,7,396,5],[374,4,397,2],[374,5,397,3],[375,4,399,2],[376,4,400,2,"validateNameMock"],[376,20,400,18],[376,22,400,20],[376,28,400,27,"name"],[376,32,400,39],[376,36,400,44],[377,6,401,4,"console"],[377,13,401,11],[377,14,401,12,"log"],[377,17,401,15],[377,18,401,16],[377,57,401,55],[377,59,401,57,"name"],[377,63,401,61],[377,64,401,62],[378,6,403,4],[378,10,403,8],[378,11,403,9,"name"],[378,15,403,13],[378,16,403,14,"trim"],[378,20,403,18],[378,21,403,19],[378,22,403,20],[378,24,403,22],[379,8,404,6],[379,15,404,13],[380,10,404,15,"available"],[380,19,404,24],[380,21,404,26],[380,25,404,30],[381,10,404,32,"message"],[381,17,404,39],[381,19,404,41],[382,8,404,44],[382,9,404,45],[383,6,405,4],[385,6,407,4],[386,6,408,4],[386,12,408,10,"storedCompetitions"],[386,30,408,28],[386,33,408,31],[386,39,408,37,"CrossPlatformStorage"],[386,59,408,57],[386,60,408,58,"getItem"],[386,67,408,65],[386,68,408,66],[386,86,408,84],[386,87,408,85],[387,6,409,4],[387,10,409,8,"existingCompetitions"],[387,30,409,28],[387,33,409,31,"storedCompetitions"],[387,51,409,49],[387,54,409,52,"JSON"],[387,58,409,56],[387,59,409,57,"parse"],[387,64,409,62],[387,65,409,63,"storedCompetitions"],[387,83,409,81],[387,84,409,82],[387,87,409,85],[387,89,409,87],[389,6,411,4],[390,6,412,4],[390,12,412,10,"defaultNames"],[390,24,412,22],[390,27,412,25],[390,28,412,26],[390,50,412,48],[390,52,412,50],[390,78,412,76],[390,80,412,78],[390,96,412,94],[390,97,412,95],[391,6,413,4],[391,12,413,10,"allNames"],[391,20,413,18],[391,23,413,21],[391,24,414,6],[391,27,414,9,"existingCompetitions"],[391,47,414,29],[391,48,414,30,"map"],[391,51,414,33],[391,52,414,35,"comp"],[391,56,414,44],[391,60,414,49,"comp"],[391,64,414,53],[391,65,414,54,"name"],[391,69,414,58],[391,70,414,59,"toLowerCase"],[391,81,414,70],[391,82,414,71],[391,83,414,72],[391,84,414,73],[391,86,415,6],[391,89,415,9,"defaultNames"],[391,101,415,21],[391,102,415,22,"map"],[391,105,415,25],[391,106,415,26,"name"],[391,110,415,30],[391,114,415,34,"name"],[391,118,415,38],[391,119,415,39,"toLowerCase"],[391,130,415,50],[391,131,415,51],[391,132,415,52],[391,133,415,53],[391,134,416,5],[392,6,418,4],[392,12,418,10,"isAvailable"],[392,23,418,21],[392,26,418,24],[392,27,418,25,"allNames"],[392,35,418,33],[392,36,418,34,"includes"],[392,44,418,42],[392,45,418,43,"name"],[392,49,418,47],[392,50,418,48,"toLowerCase"],[392,61,418,59],[392,62,418,60],[392,63,418,61],[392,64,418,62],[393,6,420,4],[393,13,420,11],[394,8,421,6,"available"],[394,17,421,15],[394,19,421,17,"isAvailable"],[394,30,421,28],[395,8,422,6,"message"],[395,15,422,13],[395,17,422,15,"isAvailable"],[395,28,422,26],[395,31,422,29],[395,47,422,45],[395,50,422,48],[396,6,423,4],[396,7,423,5],[397,4,424,2],[397,5,424,3],[398,4,426,2],[399,4,427,2,"getMyCompetitionsMock"],[399,25,427,23],[399,27,427,25],[399,33,427,25,"getMyCompetitionsMock"],[399,34,427,25],[399,39,427,37],[400,6,428,4,"console"],[400,13,428,11],[400,14,428,12,"log"],[400,17,428,15],[400,18,428,16],[400,52,428,50],[400,53,428,51],[401,6,429,4],[401,12,429,10,"storedCompetitions"],[401,30,429,28],[401,33,429,31],[401,39,429,37,"CrossPlatformStorage"],[401,59,429,57],[401,60,429,58,"getItem"],[401,67,429,65],[401,68,429,66],[401,87,429,85],[401,88,429,86],[402,6,431,4],[402,10,431,8,"storedCompetitions"],[402,28,431,26],[402,30,431,28],[403,8,432,6],[403,14,432,12,"competitions"],[403,26,432,24],[403,29,432,27,"JSON"],[403,33,432,31],[403,34,432,32,"parse"],[403,39,432,37],[403,40,432,38,"storedCompetitions"],[403,58,432,56],[403,59,432,57],[404,8,433,6,"console"],[404,15,433,13],[404,16,433,14,"log"],[404,19,433,17],[404,20,433,18],[404,55,433,53],[404,57,433,55,"competitions"],[404,69,433,67],[404,70,433,68,"length"],[404,76,433,74],[404,77,433,75],[405,8,435,6,"competitions"],[405,20,435,18],[405,21,435,19,"forEach"],[405,28,435,26],[405,29,435,27],[405,30,435,28,"comp"],[405,34,435,37],[405,36,435,39,"index"],[405,41,435,52],[405,46,435,57],[406,10,436,8,"console"],[406,17,436,15],[406,18,436,16,"log"],[406,21,436,19],[406,22,436,20],[406,25,436,23,"index"],[406,30,436,28],[406,33,436,31],[406,34,436,32],[406,39,436,37,"comp"],[406,43,436,41],[406,44,436,42,"name"],[406,48,436,46],[406,57,436,55,"comp"],[406,61,436,59],[406,62,436,60,"_id"],[406,65,436,63],[406,68,436,66],[406,69,436,67],[407,8,437,6],[407,9,437,7],[407,10,437,8],[408,8,439,6],[408,15,439,13,"competitions"],[408,27,439,25],[409,6,440,4],[409,7,440,5],[409,13,440,11],[410,8,441,6,"console"],[410,15,441,13],[410,16,441,14,"log"],[410,19,441,17],[410,20,441,18],[410,80,441,78],[410,81,441,79],[411,8,442,6],[411,15,442,13],[411,17,442,15],[412,6,443,4],[413,4,444,2],[413,5,444,3],[414,4,446,2,"joinMock"],[414,12,446,10],[414,14,446,12],[414,20,446,19,"inviteCode"],[414,30,446,37],[414,34,446,42],[415,6,447,4,"console"],[415,13,447,11],[415,14,447,12,"log"],[415,17,447,15],[415,18,447,16],[415,59,447,57],[415,61,447,59,"inviteCode"],[415,71,447,69],[415,72,447,70],[416,6,448,4],[416,10,448,8,"inviteCode"],[416,20,448,18],[416,21,448,19,"length"],[416,27,448,25],[416,30,448,28],[416,31,448,29],[416,33,448,31],[417,8,449,6],[417,14,449,12],[417,18,449,16,"Error"],[417,23,449,21],[417,24,449,22],[417,45,449,43],[417,46,449,44],[418,6,450,4],[419,6,451,4],[419,13,451,11],[420,8,451,13,"message"],[420,15,451,20],[420,17,451,22],[421,6,451,57],[421,7,451,58],[422,4,452,2],[422,5,452,3],[423,4,454,2],[424,4,455,2,"deleteMock"],[424,14,455,12],[424,16,455,14],[424,22,455,21,"competitionId"],[424,35,455,42],[424,39,455,47],[425,6,456,4,"console"],[425,13,456,11],[425,14,456,12,"log"],[425,17,456,15],[425,18,456,16],[425,51,456,49],[425,53,456,51,"competitionId"],[425,66,456,64],[425,67,456,65],[426,6,458,4],[426,12,458,10,"storedCompetitions"],[426,30,458,28],[426,33,458,31],[426,39,458,37,"CrossPlatformStorage"],[426,59,458,57],[426,60,458,58,"getItem"],[426,67,458,65],[426,68,458,66],[426,86,458,84],[426,87,458,85],[427,6,459,4],[427,10,459,8,"competitions"],[427,22,459,20],[427,25,459,23,"storedCompetitions"],[427,43,459,41],[427,46,459,44,"JSON"],[427,50,459,48],[427,51,459,49,"parse"],[427,56,459,54],[427,57,459,55,"storedCompetitions"],[427,75,459,73],[427,76,459,74],[427,79,459,77],[427,81,459,79],[428,6,461,4],[428,12,461,10,"competitionToDelete"],[428,31,461,29],[428,34,461,32,"competitions"],[428,46,461,44],[428,47,461,45,"find"],[428,51,461,49],[428,52,461,51,"comp"],[428,56,461,60],[428,60,461,65,"comp"],[428,64,461,69],[428,65,461,70,"_id"],[428,68,461,73],[428,73,461,78,"competitionId"],[428,86,461,91],[428,87,461,92],[429,6,462,4],[429,10,462,8],[429,11,462,9,"competitionToDelete"],[429,30,462,28],[429,32,462,30],[430,8,463,6],[430,14,463,12],[430,18,463,16,"Error"],[430,23,463,21],[430,24,463,22],[430,47,463,45],[430,48,463,46],[431,6,464,4],[433,6,466,4],[434,6,467,4],[434,10,467,8,"competitionToDelete"],[434,29,467,27],[434,30,467,28,"admin_id"],[434,38,467,36],[434,43,467,41],[434,69,467,67],[434,71,467,69],[435,8,468,6],[435,14,468,12],[435,18,468,16,"Error"],[435,23,468,21],[435,24,468,22],[435,64,468,62],[435,65,468,63],[436,6,469,4],[438,6,471,4],[439,6,472,4,"competitions"],[439,18,472,16],[439,21,472,19,"competitions"],[439,33,472,31],[439,34,472,32,"filter"],[439,40,472,38],[439,41,472,40,"comp"],[439,45,472,49],[439,49,472,54,"comp"],[439,53,472,58],[439,54,472,59,"_id"],[439,57,472,62],[439,62,472,67,"competitionId"],[439,75,472,80],[439,76,472,81],[440,6,473,4],[440,12,473,10,"CrossPlatformStorage"],[440,32,473,30],[440,33,473,31,"setItem"],[440,40,473,38],[440,41,473,39],[440,59,473,57],[440,61,473,59,"JSON"],[440,65,473,63],[440,66,473,64,"stringify"],[440,75,473,73],[440,76,473,74,"competitions"],[440,88,473,86],[440,89,473,87],[440,90,473,88],[442,6,475,4],[443,6,476,4],[443,12,476,10,"logAdminAction"],[443,26,476,24],[443,27,476,25],[443,35,476,33],[443,37,476,35,"competitionToDelete"],[443,56,476,54],[443,57,476,55,"name"],[443,61,476,59],[443,63,476,61],[443,80,476,78],[443,81,476,79],[444,6,478,4,"console"],[444,13,478,11],[444,14,478,12,"log"],[444,17,478,15],[444,18,478,16],[444,54,478,52],[444,55,478,53],[445,6,479,4],[445,13,479,11],[446,8,479,13,"message"],[446,15,479,20],[446,17,479,22],[447,6,479,57],[447,7,479,58],[448,4,480,2],[448,5,480,3],[449,4,482,2],[450,4,483,2,"editMock"],[450,12,483,10],[450,14,483,12],[450,20,483,12,"editMock"],[450,21,483,19,"competitionId"],[450,34,483,40],[450,36,483,42,"updates"],[450,43,483,54],[450,48,483,59],[451,6,484,4,"console"],[451,13,484,11],[451,14,484,12,"log"],[451,17,484,15],[451,18,484,16],[451,49,484,47],[451,51,484,49,"competitionId"],[451,64,484,62],[451,66,484,64,"updates"],[451,73,484,71],[451,74,484,72],[452,6,486,4],[452,12,486,10,"storedCompetitions"],[452,30,486,28],[452,33,486,31],[452,39,486,37,"CrossPlatformStorage"],[452,59,486,57],[452,60,486,58,"getItem"],[452,67,486,65],[452,68,486,66],[452,86,486,84],[452,87,486,85],[453,6,487,4],[453,10,487,8,"competitions"],[453,22,487,20],[453,25,487,23,"storedCompetitions"],[453,43,487,41],[453,46,487,44,"JSON"],[453,50,487,48],[453,51,487,49,"parse"],[453,56,487,54],[453,57,487,55,"storedCompetitions"],[453,75,487,73],[453,76,487,74],[453,79,487,77],[453,81,487,79],[454,6,489,4],[454,12,489,10,"competitionIndex"],[454,28,489,26],[454,31,489,29,"competitions"],[454,43,489,41],[454,44,489,42,"findIndex"],[454,53,489,51],[454,54,489,53,"comp"],[454,58,489,62],[454,62,489,67,"comp"],[454,66,489,71],[454,67,489,72,"_id"],[454,70,489,75],[454,75,489,80,"competitionId"],[454,88,489,93],[454,89,489,94],[455,6,490,4],[455,10,490,8,"competitionIndex"],[455,26,490,24],[455,31,490,29],[455,32,490,30],[455,33,490,31],[455,35,490,33],[456,8,491,6],[456,14,491,12],[456,18,491,16,"Error"],[456,23,491,21],[456,24,491,22],[456,47,491,45],[456,48,491,46],[457,6,492,4],[458,6,494,4],[458,12,494,10,"competition"],[458,23,494,21],[458,26,494,24,"competitions"],[458,38,494,36],[458,39,494,37,"competitionIndex"],[458,55,494,53],[458,56,494,54],[460,6,496,4],[461,6,497,4],[461,10,497,8,"competition"],[461,21,497,19],[461,22,497,20,"admin_id"],[461,30,497,28],[461,35,497,33],[461,61,497,59],[461,63,497,61],[462,8,498,6],[462,14,498,12],[462,18,498,16,"Error"],[462,23,498,21],[462,24,498,22],[462,62,498,60],[462,63,498,61],[463,6,499,4],[465,6,501,4],[466,6,502,4,"competitions"],[466,18,502,16],[466,19,502,17,"competitionIndex"],[466,35,502,33],[466,36,502,34],[466,39,502,37],[467,8,503,6],[467,11,503,9,"competition"],[467,22,503,20],[468,8,504,6],[468,11,504,9,"updates"],[468,18,504,16],[469,8,505,6,"updated_at"],[469,18,505,16],[469,20,505,18],[469,24,505,22,"Date"],[469,28,505,26],[469,29,505,27],[469,30,505,28],[469,31,505,29,"toISOString"],[469,42,505,40],[469,43,505,41],[470,6,506,4],[470,7,506,5],[471,6,508,4],[471,12,508,10,"CrossPlatformStorage"],[471,32,508,30],[471,33,508,31,"setItem"],[471,40,508,38],[471,41,508,39],[471,59,508,57],[471,61,508,59,"JSON"],[471,65,508,63],[471,66,508,64,"stringify"],[471,75,508,73],[471,76,508,74,"competitions"],[471,88,508,86],[471,89,508,87],[471,90,508,88],[473,6,510,4],[474,6,511,4],[474,12,511,10,"logAdminAction"],[474,26,511,24],[474,27,511,25],[474,33,511,31],[474,35,511,33,"competition"],[474,46,511,44],[474,47,511,45,"name"],[474,51,511,49],[474,53,511,51],[474,70,511,68],[474,72,511,70,"updates"],[474,79,511,77],[474,80,511,78],[475,6,513,4,"console"],[475,13,513,11],[475,14,513,12,"log"],[475,17,513,15],[475,18,513,16],[475,54,513,52],[475,55,513,53],[476,6,514,4],[476,13,514,11,"competitions"],[476,25,514,23],[476,26,514,24,"competitionIndex"],[476,42,514,40],[476,43,514,41],[477,4,515,2],[477,5,515,3],[478,4,517,2],[479,4,518,2,"awardDailyPrizeMock"],[479,23,518,21],[479,25,518,23],[479,31,518,23,"awardDailyPrizeMock"],[479,32,518,30,"competitionId"],[479,45,518,51],[479,47,518,53,"matchday"],[479,55,518,69],[479,57,518,71,"winnerId"],[479,65,518,87],[479,70,518,92],[480,6,519,4,"console"],[480,13,519,11],[480,14,519,12,"log"],[480,17,519,15],[480,18,519,16],[480,62,519,60],[480,64,519,62,"matchday"],[480,72,519,70],[480,74,519,72],[480,83,519,81],[480,85,519,83,"winnerId"],[480,93,519,91],[480,94,519,92],[481,6,521,4],[481,12,521,10,"storedCompetitions"],[481,30,521,28],[481,33,521,31],[481,39,521,37,"CrossPlatformStorage"],[481,59,521,57],[481,60,521,58,"getItem"],[481,67,521,65],[481,68,521,66],[481,86,521,84],[481,87,521,85],[482,6,522,4],[482,10,522,8,"competitions"],[482,22,522,20],[482,25,522,23,"storedCompetitions"],[482,43,522,41],[482,46,522,44,"JSON"],[482,50,522,48],[482,51,522,49,"parse"],[482,56,522,54],[482,57,522,55,"storedCompetitions"],[482,75,522,73],[482,76,522,74],[482,79,522,77],[482,81,522,79],[483,6,524,4],[483,12,524,10,"competitionIndex"],[483,28,524,26],[483,31,524,29,"competitions"],[483,43,524,41],[483,44,524,42,"findIndex"],[483,53,524,51],[483,54,524,53,"comp"],[483,58,524,62],[483,62,524,67,"comp"],[483,66,524,71],[483,67,524,72,"_id"],[483,70,524,75],[483,75,524,80,"competitionId"],[483,88,524,93],[483,89,524,94],[484,6,525,4],[484,10,525,8,"competitionIndex"],[484,26,525,24],[484,31,525,29],[484,32,525,30],[484,33,525,31],[484,35,525,33],[485,8,526,6],[485,14,526,12],[485,18,526,16,"Error"],[485,23,526,21],[485,24,526,22],[485,47,526,45],[485,48,526,46],[486,6,527,4],[487,6,529,4],[487,12,529,10,"competition"],[487,23,529,21],[487,26,529,24,"competitions"],[487,38,529,36],[487,39,529,37,"competitionIndex"],[487,55,529,53],[487,56,529,54],[489,6,531,4],[490,6,532,4],[490,10,532,8,"competition"],[490,21,532,19],[490,22,532,20,"admin_id"],[490,30,532,28],[490,35,532,33],[490,61,532,59],[490,63,532,61],[491,8,533,6],[491,14,533,12],[491,18,533,16,"Error"],[491,23,533,21],[491,24,533,22],[491,59,533,57],[491,60,533,58],[492,6,534,4],[494,6,536,4],[495,6,537,4],[495,10,537,8],[495,11,537,9,"competition"],[495,22,537,20],[495,23,537,21,"rules"],[495,28,537,26],[495,32,537,30],[495,33,537,31],[495,34,537,32],[495,41,537,39],[495,43,537,41],[495,50,537,48],[495,51,537,49],[495,52,537,50,"includes"],[495,60,537,58],[495,61,537,59,"competition"],[495,72,537,70],[495,73,537,71,"rules"],[495,78,537,76],[495,79,537,77,"type"],[495,83,537,81],[495,84,537,82],[495,86,537,84],[496,8,538,6],[496,14,538,12],[496,18,538,16,"Error"],[496,23,538,21],[496,24,538,22],[496,69,538,67],[496,70,538,68],[497,6,539,4],[498,6,541,4],[498,12,541,10,"dailyPrizeAmount"],[498,28,541,26],[498,31,541,29,"competition"],[498,42,541,40],[498,43,541,41,"rules"],[498,48,541,46],[498,49,541,47,"daily_prize"],[498,60,541,58],[498,64,541,62],[498,65,541,63],[499,6,542,4],[499,12,542,10,"winner"],[499,18,542,16],[499,21,542,19,"competition"],[499,32,542,30],[499,33,542,31,"participants"],[499,45,542,43],[499,46,542,44,"find"],[499,50,542,48],[499,51,542,50,"p"],[499,52,542,56],[499,56,542,61,"p"],[499,57,542,62],[499,58,542,63,"id"],[499,60,542,65],[499,65,542,70,"winnerId"],[499,73,542,78],[499,74,542,79],[500,6,544,4],[500,10,544,8],[500,11,544,9,"winner"],[500,17,544,15],[500,19,544,17],[501,8,545,6],[501,14,545,12],[501,18,545,16,"Error"],[501,23,545,21],[501,24,545,22],[501,57,545,55],[501,58,545,56],[502,6,546,4],[504,6,548,4],[505,6,549,4],[505,10,549,8],[505,11,549,9,"competition"],[505,22,549,20],[505,23,549,21,"daily_winners"],[505,36,549,34],[505,38,549,36],[506,8,550,6,"competition"],[506,19,550,17],[506,20,550,18,"daily_winners"],[506,33,550,31],[506,36,550,34],[506,37,550,35],[506,38,550,36],[507,6,551,4],[509,6,553,4],[510,6,554,4],[510,10,554,8,"competition"],[510,21,554,19],[510,22,554,20,"daily_winners"],[510,35,554,33],[510,36,554,34,"matchday"],[510,44,554,42],[510,45,554,43],[510,47,554,45],[511,8,555,6],[511,14,555,12],[511,18,555,16,"Error"],[511,23,555,21],[511,24,555,22],[511,52,555,50,"matchday"],[511,60,555,58],[511,83,555,81,"competition"],[511,94,555,92],[511,95,555,93,"daily_winners"],[511,108,555,106],[511,109,555,107,"matchday"],[511,117,555,115],[511,118,555,116],[511,119,555,117,"name"],[511,123,555,121],[511,125,555,123],[511,126,555,124],[512,6,556,4],[514,6,558,4],[515,6,559,4,"competition"],[515,17,559,15],[515,18,559,16,"daily_winners"],[515,31,559,29],[515,32,559,30,"matchday"],[515,40,559,38],[515,41,559,39],[515,44,559,42],[516,8,560,6,"user_id"],[516,15,560,13],[516,17,560,15,"winnerId"],[516,25,560,23],[517,8,561,6,"name"],[517,12,561,10],[517,14,561,12,"winner"],[517,20,561,18],[517,21,561,19,"name"],[517,25,561,23],[518,8,562,6,"amount"],[518,14,562,12],[518,16,562,14,"dailyPrizeAmount"],[518,32,562,30],[519,8,563,6,"awarded_at"],[519,18,563,16],[519,20,563,18],[519,24,563,22,"Date"],[519,28,563,26],[519,29,563,27],[519,30,563,28],[519,31,563,29,"toISOString"],[519,42,563,40],[519,43,563,41],[520,6,564,4],[520,7,564,5],[522,6,566,4],[523,6,567,4,"competitions"],[523,18,567,16],[523,19,567,17,"competitionIndex"],[523,35,567,33],[523,36,567,34],[523,39,567,37,"competition"],[523,50,567,48],[524,6,568,4],[524,12,568,10,"CrossPlatformStorage"],[524,32,568,30],[524,33,568,31,"setItem"],[524,40,568,38],[524,41,568,39],[524,59,568,57],[524,61,568,59,"JSON"],[524,65,568,63],[524,66,568,64,"stringify"],[524,75,568,73],[524,76,568,74,"competitions"],[524,88,568,86],[524,89,568,87],[524,90,568,88],[526,6,570,4],[527,6,571,4],[527,12,571,10,"logAdminAction"],[527,26,571,24],[527,27,571,25],[527,46,571,44],[527,48,571,46,"competition"],[527,59,571,57],[527,60,571,58,"name"],[527,64,571,62],[527,66,571,64],[527,83,571,81],[527,85,571,83],[528,8,572,6,"matchday"],[528,16,572,14],[529,8,573,6,"winner"],[529,14,573,12],[529,16,573,14,"winner"],[529,22,573,20],[529,23,573,21,"name"],[529,27,573,25],[530,8,574,6,"amount"],[530,14,574,12],[530,16,574,14,"dailyPrizeAmount"],[531,6,575,4],[531,7,575,5],[531,8,575,6],[533,6,577,4],[534,6,578,4,"console"],[534,13,578,11],[534,14,578,12,"log"],[534,17,578,15],[534,18,578,16],[534,24,578,22,"winner"],[534,30,578,28],[534,31,578,29,"name"],[534,35,578,33],[534,48,578,46,"dailyPrizeAmount"],[534,64,578,62],[534,89,578,87,"matchday"],[534,97,578,95],[534,99,578,97],[534,100,578,98],[535,6,580,4,"console"],[535,13,580,11],[535,14,580,12,"log"],[535,17,580,15],[535,18,580,16],[535,54,580,52],[535,55,580,53],[536,6,581,4],[536,13,581,11],[537,8,582,6,"message"],[537,15,582,13],[537,17,582,15],[537,36,582,34,"dailyPrizeAmount"],[537,52,582,50],[537,67,582,65,"winner"],[537,73,582,71],[537,74,582,72,"name"],[537,78,582,76],[537,95,582,93,"matchday"],[537,103,582,101],[537,105,582,103],[538,8,583,6,"competition"],[538,19,583,17],[538,21,583,19,"competition"],[539,6,584,4],[539,7,584,5],[540,4,585,2],[540,5,585,3],[541,4,587,2],[542,4,588,2,"getAdminLogsMock"],[542,20,588,18],[542,22,588,20],[542,28,588,20,"getAdminLogsMock"],[542,29,588,20],[542,34,588,32],[543,6,589,4,"console"],[543,13,589,11],[543,14,589,12,"log"],[543,17,589,15],[543,18,589,16],[543,47,589,45],[543,48,589,46],[544,6,591,4],[544,10,591,8],[545,8,592,6],[545,14,592,12,"logs"],[545,18,592,16],[545,21,592,19],[545,28,592,25,"CrossPlatformStorage"],[545,48,592,45],[545,49,592,46,"getItem"],[545,56,592,53],[545,57,592,54],[545,68,592,65],[545,69,592,66],[545,74,592,70],[545,78,592,74],[546,8,593,6],[546,14,593,12,"adminLogs"],[546,23,593,21],[546,26,593,24,"JSON"],[546,30,593,28],[546,31,593,29,"parse"],[546,36,593,34],[546,37,593,35,"logs"],[546,41,593,39],[546,42,593,40],[548,8,595,6],[549,8,596,6,"adminLogs"],[549,17,596,15],[549,18,596,16,"sort"],[549,22,596,20],[549,23,596,21],[549,24,596,22,"a"],[549,25,596,28],[549,27,596,30,"b"],[549,28,596,36],[549,33,596,41],[549,37,596,45,"Date"],[549,41,596,49],[549,42,596,50,"b"],[549,43,596,51],[549,44,596,52,"timestamp"],[549,53,596,61],[549,54,596,62],[549,55,596,63,"getTime"],[549,62,596,70],[549,63,596,71],[549,64,596,72],[549,67,596,75],[549,71,596,79,"Date"],[549,75,596,83],[549,76,596,84,"a"],[549,77,596,85],[549,78,596,86,"timestamp"],[549,87,596,95],[549,88,596,96],[549,89,596,97,"getTime"],[549,96,596,104],[549,97,596,105],[549,98,596,106],[549,99,596,107],[550,8,598,6,"console"],[550,15,598,13],[550,16,598,14,"log"],[550,19,598,17],[550,20,598,18],[550,42,598,40],[550,44,598,42,"adminLogs"],[550,53,598,51],[550,54,598,52,"length"],[550,60,598,58],[550,61,598,59],[551,8,599,6],[551,15,599,13,"adminLogs"],[551,24,599,22],[552,6,600,4],[552,7,600,5],[552,8,600,6],[552,15,600,13,"error"],[552,20,600,18],[552,22,600,20],[553,8,601,6,"console"],[553,15,601,13],[553,16,601,14,"error"],[553,21,601,19],[553,22,601,20],[553,52,601,50],[553,54,601,52,"error"],[553,59,601,57],[553,60,601,58],[554,8,602,6],[554,15,602,13],[554,17,602,15],[555,6,603,4],[556,4,604,2],[557,2,605,0],[557,3,605,1],[559,2,607,0],[560,2,608,7],[560,8,608,13,"walletAPI"],[560,17,608,22],[560,20,608,25],[561,4,609,2,"getBalance"],[561,14,609,12],[561,16,609,14,"getBalance"],[561,17,609,14],[561,22,609,20,"apiClient"],[561,31,609,29],[561,32,609,30,"get"],[561,35,609,33],[561,36,609,34],[561,53,609,51],[561,54,609,52],[562,4,611,2,"topUp"],[562,9,611,7],[562,11,611,10,"amount"],[562,17,611,24],[562,21,612,4,"apiClient"],[562,30,612,13],[562,31,612,14,"post"],[562,35,612,18],[562,36,612,19],[562,51,612,34],[562,53,612,36],[562,57,612,40],[562,59,612,42],[563,6,613,6,"params"],[563,12,613,12],[563,14,613,14],[564,8,613,16,"amount"],[565,6,613,23],[566,4,614,4],[566,5,614,5],[566,6,614,6],[567,4,616,2,"withdraw"],[567,12,616,10],[567,14,616,13,"amount"],[567,20,616,27],[567,24,617,4,"apiClient"],[567,33,617,13],[567,34,617,14,"post"],[567,38,617,18],[567,39,617,19],[567,57,617,37],[567,59,617,39],[567,63,617,43],[567,65,617,45],[568,6,618,6,"params"],[568,12,618,12],[568,14,618,14],[569,8,618,16,"amount"],[570,6,618,23],[571,4,619,4],[571,5,619,5],[571,6,619,6],[572,4,621,2,"getTransactions"],[572,19,621,17],[572,21,621,19,"getTransactions"],[572,22,621,19],[572,27,621,25,"apiClient"],[572,36,621,34],[572,37,621,35,"get"],[572,40,621,38],[572,41,621,39],[572,56,621,54],[573,2,622,0],[573,3,622,1],[574,2,624,0],[574,6,624,0,"_default"],[574,14,624,0],[574,17,624,15,"apiClient"],[574,26,624,24],[575,0,624,25],[575,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnC8D;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CG;2BCQ;ODE;G3CO;Y6CE;G7CM;c8CG;kDCM,yCD;uCEW,yCF;G9CQ;YiDG;oDCM,yCD;GjD0B;uBmDG;oDDM,yCC;iDCkB,6BD;GnD2C;oBqDG;qBCQ,qFD;GrDQ;cuDK,sCvD;SwDE;MxDG;YyDE;MzDG;mB0DE,oC1D"},"hasCjsExports":false},"type":"js/module"}]}