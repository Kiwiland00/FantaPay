{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool\n      });\n      console.log('✅ Competition created and logged! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":497,"map":[[27,2,544,0,"Object"],[27,8,544,0],[27,9,544,0,"defineProperty"],[27,23,544,0],[27,24,544,0,"exports"],[27,31,544,0],[28,4,544,0,"enumerable"],[28,14,544,0],[29,4,544,0,"get"],[29,7,544,0],[29,18,544,0,"get"],[29,19,544,0],[30,6,544,0],[30,13,544,0,"_default"],[30,21,544,0],[31,4,544,0],[32,2,544,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,528,0,"Object"],[45,8,528,0],[45,9,528,0,"defineProperty"],[45,23,528,0],[45,24,528,0,"exports"],[45,31,528,0],[46,4,528,0,"enumerable"],[46,14,528,0],[47,4,528,0,"get"],[47,7,528,0],[47,18,528,0,"get"],[47,19,528,0],[48,6,528,0],[48,13,528,0,"walletAPI"],[48,22,528,0],[49,4,528,0],[50,2,528,0],[51,2,1,0],[51,6,1,0,"_axios"],[51,12,1,0],[51,15,1,0,"require"],[51,22,1,0],[51,23,1,0,"_dependencyMap"],[51,37,1,0],[52,2,1,0],[52,6,1,0,"axios"],[52,11,1,0],[52,14,1,0,"_interopDefault"],[52,29,1,0],[52,30,1,0,"_axios"],[52,36,1,0],[53,2,2,0],[53,6,2,0,"_expoSecureStore"],[53,22,2,0],[53,25,2,0,"require"],[53,32,2,0],[53,33,2,0,"_dependencyMap"],[53,47,2,0],[54,2,2,0],[54,6,2,0,"SecureStore"],[54,17,2,0],[54,20,2,0,"_interopNamespace"],[54,37,2,0],[54,38,2,0,"_expoSecureStore"],[54,54,2,0],[55,2,3,0],[55,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[55,42,3,0],[55,45,3,0,"require"],[55,52,3,0],[55,53,3,0,"_dependencyMap"],[55,67,3,0],[56,2,3,0],[56,6,3,0,"AsyncStorage"],[56,18,3,0],[56,21,3,0,"_interopDefault"],[56,36,3,0],[56,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,73,3,0],[57,2,4,0],[57,6,4,0,"_expoConstants"],[57,20,4,0],[57,23,4,0,"require"],[57,30,4,0],[57,31,4,0,"_dependencyMap"],[57,45,4,0],[58,2,4,0],[58,6,4,0,"Constants"],[58,15,4,0],[58,18,4,0,"_interopDefault"],[58,33,4,0],[58,34,4,0,"_expoConstants"],[58,48,4,0],[59,2,6,0],[60,2,7,0],[60,8,7,6,"CrossPlatformStorage"],[60,28,7,26],[60,29,7,27],[61,4,8,2],[61,17,8,15,"getItem"],[61,24,8,22,"getItem"],[61,25,8,23,"key"],[61,28,8,34],[61,30,8,60],[62,6,9,4],[62,10,9,8],[63,8,10,6],[64,8,11,6],[64,15,11,13],[64,21,11,19,"AsyncStorage"],[64,33,11,31],[64,34,11,31,"default"],[64,41,11,31],[64,42,11,32,"getItem"],[64,49,11,39],[64,50,11,40,"key"],[64,53,11,43],[64,54,11,44],[65,6,12,4],[65,7,12,5],[65,8,12,6],[65,15,12,13,"error"],[65,20,12,18],[65,22,12,20],[66,8,13,6],[67,8,14,6],[67,12,14,10],[67,21,14,43,"window"],[67,27,14,49],[67,28,14,50,"localStorage"],[67,40,14,62],[67,42,14,64],[68,10,15,8],[68,17,15,15,"window"],[68,23,15,21],[68,24,15,22,"localStorage"],[68,36,15,34],[68,37,15,35,"getItem"],[68,44,15,42],[68,45,15,43,"key"],[68,48,15,46],[68,49,15,47],[69,8,16,6],[70,8,17,6],[70,15,17,13],[70,19,17,17],[71,6,18,4],[72,4,19,2],[73,4,21,2],[73,17,21,15,"setItem"],[73,24,21,22,"setItem"],[73,25,21,23,"key"],[73,28,21,34],[73,30,21,36,"value"],[73,35,21,49],[73,37,21,66],[74,6,22,4],[74,10,22,8],[75,8,23,6],[76,8,24,6],[76,14,24,12,"AsyncStorage"],[76,26,24,24],[76,27,24,24,"default"],[76,34,24,24],[76,35,24,25,"setItem"],[76,42,24,32],[76,43,24,33,"key"],[76,46,24,36],[76,48,24,38,"value"],[76,53,24,43],[76,54,24,44],[77,6,25,4],[77,7,25,5],[77,8,25,6],[77,15,25,13,"error"],[77,20,25,18],[77,22,25,20],[78,8,26,6],[79,8,27,6],[79,12,27,10],[79,21,27,43,"window"],[79,27,27,49],[79,28,27,50,"localStorage"],[79,40,27,62],[79,42,27,64],[80,10,28,8,"window"],[80,16,28,14],[80,17,28,15,"localStorage"],[80,29,28,27],[80,30,28,28,"setItem"],[80,37,28,35],[80,38,28,36,"key"],[80,41,28,39],[80,43,28,41,"value"],[80,48,28,46],[80,49,28,47],[81,8,29,6],[82,6,30,4],[83,4,31,2],[84,4,33,2],[84,17,33,15,"removeItem"],[84,27,33,25,"removeItem"],[84,28,33,26,"key"],[84,31,33,37],[84,33,33,54],[85,6,34,4],[85,10,34,8],[86,8,35,6],[86,14,35,12,"AsyncStorage"],[86,26,35,24],[86,27,35,24,"default"],[86,34,35,24],[86,35,35,25,"removeItem"],[86,45,35,35],[86,46,35,36,"key"],[86,49,35,39],[86,50,35,40],[87,6,36,4],[87,7,36,5],[87,8,36,6],[87,15,36,13,"error"],[87,20,36,18],[87,22,36,20],[88,8,37,6],[88,12,37,10],[88,21,37,43,"window"],[88,27,37,49],[88,28,37,50,"localStorage"],[88,40,37,62],[88,42,37,64],[89,10,38,8,"window"],[89,16,38,14],[89,17,38,15,"localStorage"],[89,29,38,27],[89,30,38,28,"removeItem"],[89,40,38,38],[89,41,38,39,"key"],[89,44,38,42],[89,45,38,43],[90,8,39,6],[91,6,40,4],[92,4,41,2],[93,2,42,0],[95,2,44,0],[96,2,45,0],[96,8,45,6,"BACKEND_URL"],[96,19,45,17],[96,22,45,20,"Constants"],[96,31,45,29],[96,32,45,29,"default"],[96,39,45,29],[96,40,45,30,"expoConfig"],[96,50,45,40],[96,52,45,42,"extra"],[96,57,45,47],[96,59,45,49,"backendUrl"],[96,69,45,59],[96,73,45,63,"process"],[96,80,45,70],[96,81,45,71,"env"],[96,84,45,74],[96,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[96,108,45,98],[96,112,45,102],[96,163,45,153],[97,2,47,0],[97,8,47,6,"ApiClient"],[97,17,47,15],[97,18,47,16],[98,4,50,2,"constructor"],[98,15,50,13,"constructor"],[98,16,50,13],[98,18,50,16],[99,6,51,4],[99,10,51,8],[99,11,51,9,"client"],[99,17,51,15],[99,20,51,18,"axios"],[99,25,51,23],[99,26,51,23,"default"],[99,33,51,23],[99,34,51,24,"create"],[99,40,51,30],[99,41,51,31],[100,8,52,6,"baseURL"],[100,15,52,13],[100,17,52,15],[100,20,52,18,"BACKEND_URL"],[100,31,52,29],[100,37,52,35],[101,8,53,6,"timeout"],[101,15,53,13],[101,17,53,15],[101,22,53,20],[102,8,54,6,"headers"],[102,15,54,13],[102,17,54,15],[103,10,55,8],[103,24,55,22],[103,26,55,24],[104,8,56,6],[105,6,57,4],[105,7,57,5],[105,8,57,6],[107,6,59,4],[108,6,60,4],[108,10,60,8],[108,11,60,9,"client"],[108,17,60,15],[108,18,60,16,"interceptors"],[108,30,60,28],[108,31,60,29,"request"],[108,38,60,36],[108,39,60,37,"use"],[108,42,60,40],[108,43,60,41],[108,49,60,48,"config"],[108,55,60,54],[108,59,60,59],[109,8,61,6,"console"],[109,15,61,13],[109,16,61,14,"log"],[109,19,61,17],[109,20,61,18],[109,39,61,37,"config"],[109,45,61,43],[109,46,61,44,"method"],[109,52,61,50],[109,54,61,52,"toUpperCase"],[109,65,61,63],[109,66,61,64],[109,67,61,65],[109,71,61,69,"config"],[109,77,61,75],[109,78,61,76,"url"],[109,81,61,79],[109,83,61,81],[109,85,61,83,"config"],[109,91,61,89],[109,92,61,90,"data"],[109,96,61,94],[109,97,61,95],[110,8,63,6],[110,14,63,12,"token"],[110,19,63,17],[110,22,63,20],[110,28,63,26,"SecureStore"],[110,39,63,37],[110,40,63,38,"getItemAsync"],[110,52,63,50],[110,53,63,51],[110,68,63,66],[110,69,63,67],[111,8,64,6],[111,12,64,10,"token"],[111,17,64,15],[111,19,64,17],[112,10,65,8,"config"],[112,16,65,14],[112,17,65,15,"headers"],[112,24,65,22],[112,25,65,23,"Authorization"],[112,38,65,36],[112,41,65,39],[112,51,65,49,"token"],[112,56,65,54],[112,58,65,56],[113,8,66,6],[114,8,67,6],[114,15,67,13,"config"],[114,21,67,19],[115,6,68,4],[115,7,68,5],[115,8,68,6],[117,6,70,4],[118,6,71,4],[118,10,71,8],[118,11,71,9,"client"],[118,17,71,15],[118,18,71,16,"interceptors"],[118,30,71,28],[118,31,71,29,"response"],[118,39,71,37],[118,40,71,38,"use"],[118,43,71,41],[118,44,72,7,"response"],[118,52,72,15],[118,56,72,20],[119,8,73,8,"console"],[119,15,73,15],[119,16,73,16,"log"],[119,19,73,19],[119,20,73,20],[119,39,73,39,"response"],[119,47,73,47],[119,48,73,48,"status"],[119,54,73,54],[119,56,73,56],[119,58,73,58,"response"],[119,66,73,66],[119,67,73,67,"data"],[119,71,73,71],[119,72,73,72],[120,8,74,8],[120,15,74,15,"response"],[120,23,74,23],[121,6,75,6],[121,7,75,7],[121,9,76,7,"error"],[121,14,76,12],[121,18,76,17],[122,8,77,8,"console"],[122,15,77,15],[122,16,77,16,"log"],[122,19,77,19],[122,20,77,20],[122,36,77,36,"error"],[122,41,77,41],[122,42,77,42,"response"],[122,50,77,50],[122,52,77,52,"status"],[122,58,77,58],[122,62,77,62],[122,71,77,71],[122,73,77,73],[122,75,77,75,"error"],[122,80,77,80],[122,81,77,81,"response"],[122,89,77,89],[122,91,77,91,"data"],[122,95,77,95],[122,99,77,99,"error"],[122,104,77,104],[122,105,77,105,"message"],[122,112,77,112],[122,113,77,113],[123,8,79,8],[123,12,79,12,"error"],[123,17,79,17],[123,18,79,18,"response"],[123,26,79,26],[123,28,79,28,"status"],[123,34,79,34],[123,39,79,39],[123,42,79,42],[123,44,79,44],[124,10,80,10],[125,10,81,10,"SecureStore"],[125,21,81,21],[125,22,81,22,"deleteItemAsync"],[125,37,81,37],[125,38,81,38],[125,53,81,53],[125,54,81,54],[126,8,82,8],[127,8,83,8],[127,15,83,15,"Promise"],[127,22,83,22],[127,23,83,23,"reject"],[127,29,83,29],[127,30,83,30,"error"],[127,35,83,35],[127,36,83,36],[128,6,84,6],[128,7,85,4],[128,8,85,5],[129,4,86,2],[130,4,88,2],[130,10,88,8,"get"],[130,13,88,11,"get"],[130,14,88,21,"url"],[130,17,88,32],[130,19,88,46],[131,6,89,4],[131,12,89,10,"response"],[131,20,89,36],[131,23,89,39],[131,29,89,45],[131,33,89,49],[131,34,89,50,"client"],[131,40,89,56],[131,41,89,57,"get"],[131,44,89,60],[131,45,89,61,"url"],[131,48,89,64],[131,49,89,65],[132,6,90,4],[132,13,90,11,"response"],[132,21,90,19],[132,22,90,20,"data"],[132,26,90,24],[133,4,91,2],[134,4,93,2],[134,10,93,8,"post"],[134,14,93,12,"post"],[134,15,93,22,"url"],[134,18,93,33],[134,20,93,35,"data"],[134,24,93,45],[134,26,93,59],[135,6,94,4],[135,12,94,10,"response"],[135,20,94,36],[135,23,94,39],[135,29,94,45],[135,33,94,49],[135,34,94,50,"client"],[135,40,94,56],[135,41,94,57,"post"],[135,45,94,61],[135,46,94,62,"url"],[135,49,94,65],[135,51,94,67,"data"],[135,55,94,71],[135,56,94,72],[136,6,95,4],[136,13,95,11,"response"],[136,21,95,19],[136,22,95,20,"data"],[136,26,95,24],[137,4,96,2],[138,4,98,2],[138,10,98,8,"patch"],[138,15,98,13,"patch"],[138,16,98,23,"url"],[138,19,98,34],[138,21,98,36,"data"],[138,25,98,46],[138,27,98,60],[139,6,99,4],[139,12,99,10,"response"],[139,20,99,36],[139,23,99,39],[139,29,99,45],[139,33,99,49],[139,34,99,50,"client"],[139,40,99,56],[139,41,99,57,"patch"],[139,46,99,62],[139,47,99,63,"url"],[139,50,99,66],[139,52,99,68,"data"],[139,56,99,72],[139,57,99,73],[140,6,100,4],[140,13,100,11,"response"],[140,21,100,19],[140,22,100,20,"data"],[140,26,100,24],[141,4,101,2],[142,4,103,2],[142,10,103,8,"delete"],[142,16,103,14,"delete"],[142,17,103,24,"url"],[142,20,103,35],[142,22,103,49],[143,6,104,4],[143,12,104,10,"response"],[143,20,104,36],[143,23,104,39],[143,29,104,45],[143,33,104,49],[143,34,104,50,"client"],[143,40,104,56],[143,41,104,57,"delete"],[143,47,104,63],[143,48,104,64,"url"],[143,51,104,67],[143,52,104,68],[144,6,105,4],[144,13,105,11,"response"],[144,21,105,19],[144,22,105,20,"data"],[144,26,105,24],[145,4,106,2],[146,4,108,2],[146,10,108,8,"put"],[146,13,108,11,"put"],[146,14,108,21,"url"],[146,17,108,32],[146,19,108,34,"data"],[146,23,108,44],[146,25,108,58],[147,6,109,4],[147,12,109,10,"response"],[147,20,109,36],[147,23,109,39],[147,29,109,45],[147,33,109,49],[147,34,109,50,"client"],[147,40,109,56],[147,41,109,57,"put"],[147,44,109,60],[147,45,109,61,"url"],[147,48,109,64],[147,50,109,66,"data"],[147,54,109,70],[147,55,109,71],[148,6,110,4],[148,13,110,11,"response"],[148,21,110,19],[148,22,110,20,"data"],[148,26,110,24],[149,4,111,2],[150,2,112,0],[151,2,114,0],[151,8,114,6,"apiClient"],[151,17,114,15],[151,20,114,18],[151,24,114,22,"ApiClient"],[151,33,114,31],[151,34,114,32],[151,35,114,33],[153,2,116,0],[154,2,117,7],[154,8,117,13,"authAPI"],[154,15,117,20],[154,18,117,23],[155,4,118,2,"createSession"],[155,17,118,15],[155,19,118,18,"sessionId"],[155,28,118,35],[155,32,119,4,"apiClient"],[155,41,119,13],[155,42,119,14,"post"],[155,46,119,18],[155,47,119,19],[155,62,119,34],[155,64,119,36],[155,68,119,40],[155,70,119,42],[156,6,120,6,"headers"],[156,13,120,13],[156,15,120,15],[157,8,120,17],[157,22,120,31],[157,24,120,33,"sessionId"],[158,6,120,43],[159,4,121,4],[159,5,121,5],[159,6,121,6],[160,4,123,2,"signup"],[160,10,123,8],[160,12,123,11,"data"],[160,16,129,3],[160,20,129,8,"apiClient"],[160,29,129,17],[160,30,129,18,"post"],[160,34,129,22],[160,35,129,23],[160,49,129,37],[160,51,129,39,"data"],[160,55,129,43],[160,56,129,44],[161,4,131,2,"verifyOTP"],[161,13,131,11],[161,15,131,14,"data"],[161,19,131,55],[161,23,132,4,"apiClient"],[161,32,132,13],[161,33,132,14,"post"],[161,37,132,18],[161,38,132,19],[161,56,132,37],[161,58,132,39,"data"],[161,62,132,43],[161,63,132,44],[162,4,134,2,"login"],[162,9,134,7],[162,11,134,10,"data"],[162,15,134,51],[162,19,135,4,"apiClient"],[162,28,135,13],[162,29,135,14,"post"],[162,33,135,18],[162,34,135,19],[162,47,135,32],[162,49,135,34,"data"],[162,53,135,38],[162,54,135,39],[163,4,137,2,"resendOTP"],[163,13,137,11],[163,15,137,14,"email"],[163,20,137,27],[163,24,138,4,"apiClient"],[163,33,138,13],[163,34,138,14,"post"],[163,38,138,18],[163,39,138,19],[163,57,138,37],[163,59,138,39],[164,6,138,41,"email"],[165,4,138,47],[165,5,138,48],[165,6,138,49],[166,4,140,2,"getCurrentUser"],[166,18,140,16],[166,20,140,18,"getCurrentUser"],[166,21,140,18],[166,26,140,24,"apiClient"],[166,35,140,33],[166,36,140,34,"get"],[166,39,140,37],[166,40,140,38],[166,50,140,48],[166,51,140,49],[167,4,142,2,"logout"],[167,10,142,8],[167,12,142,10,"logout"],[167,13,142,10],[167,18,142,16,"apiClient"],[167,27,142,25],[167,28,142,26,"post"],[167,32,142,30],[167,33,142,31],[167,47,142,45],[167,48,142,46],[168,4,144,2,"updateLanguage"],[168,18,144,16],[168,20,144,19,"language"],[168,28,144,35],[168,32,145,4,"apiClient"],[168,41,145,13],[168,42,145,14,"patch"],[168,47,145,19],[168,48,145,20],[168,64,145,36],[168,66,145,38],[168,70,145,42],[168,72,145,44],[169,6,146,6,"params"],[169,12,146,12],[169,14,146,14],[170,8,146,16,"language"],[171,6,146,25],[172,4,147,4],[172,5,147,5],[172,6,147,6],[173,4,149,2,"toggleBiometric"],[173,19,149,17],[173,21,149,20,"enabled"],[173,28,149,36],[173,32,150,4,"apiClient"],[173,41,150,13],[173,42,150,14,"patch"],[173,47,150,19],[173,48,150,20],[173,65,150,37],[173,67,150,39],[173,71,150,43],[173,73,150,45],[174,6,151,6,"params"],[174,12,151,12],[174,14,151,14],[175,8,151,16,"enabled"],[176,6,151,24],[177,4,152,4],[177,5,152,5],[178,2,153,0],[178,3,153,1],[180,2,155,0],[181,2,156,0],[181,8,156,6,"logAdminAction"],[181,22,156,20],[181,25,156,23],[181,31,156,23,"logAdminAction"],[181,32,156,30,"action"],[181,38,156,44],[181,40,156,46,"competitionName"],[181,55,156,69],[181,57,156,71,"adminName"],[181,66,156,88],[181,68,156,90,"details"],[181,75,156,103],[181,80,156,108],[182,4,157,2],[182,8,157,6],[183,6,158,4],[183,12,158,10,"logs"],[183,16,158,14],[183,19,158,17],[183,26,158,23,"CrossPlatformStorage"],[183,46,158,43],[183,47,158,44,"getItem"],[183,54,158,51],[183,55,158,52],[183,66,158,63],[183,67,158,64],[183,72,158,68],[183,76,158,72],[184,6,159,4],[184,12,159,10,"adminLogs"],[184,21,159,19],[184,24,159,22,"JSON"],[184,28,159,26],[184,29,159,27,"parse"],[184,34,159,32],[184,35,159,33,"logs"],[184,39,159,37],[184,40,159,38],[185,6,161,4],[185,12,161,10,"logEntry"],[185,20,161,18],[185,23,161,21],[186,8,162,6,"id"],[186,10,162,8],[186,12,162,10],[186,19,162,17,"Date"],[186,23,162,21],[186,24,162,22,"now"],[186,27,162,25],[186,28,162,26],[186,29,162,27],[186,31,162,29],[187,8,163,6,"action"],[187,14,163,12],[188,8,164,6,"competition_name"],[188,24,164,22],[188,26,164,24,"competitionName"],[188,41,164,39],[189,8,165,6,"admin_name"],[189,18,165,16],[189,20,165,18,"adminName"],[189,29,165,27],[190,8,166,6,"details"],[190,15,166,13],[191,8,167,6,"timestamp"],[191,17,167,15],[191,19,167,17],[191,23,167,21,"Date"],[191,27,167,25],[191,28,167,26],[191,29,167,27],[191,30,167,28,"toISOString"],[191,41,167,39],[191,42,167,40],[192,6,168,4],[192,7,168,5],[193,6,170,4,"adminLogs"],[193,15,170,13],[193,16,170,14,"push"],[193,20,170,18],[193,21,170,19,"logEntry"],[193,29,170,27],[193,30,170,28],[194,6,171,4],[194,12,171,10,"CrossPlatformStorage"],[194,32,171,30],[194,33,171,31,"setItem"],[194,40,171,38],[194,41,171,39],[194,52,171,50],[194,54,171,52,"JSON"],[194,58,171,56],[194,59,171,57,"stringify"],[194,68,171,66],[194,69,171,67,"adminLogs"],[194,78,171,76],[194,79,171,77],[194,80,171,78],[195,6,173,4,"console"],[195,13,173,11],[195,14,173,12,"log"],[195,17,173,15],[195,18,173,16],[195,43,173,41],[195,45,173,43,"action"],[195,51,173,49],[195,53,173,51,"competitionName"],[195,68,173,66],[195,69,173,67],[196,4,174,2],[196,5,174,3],[196,6,174,4],[196,13,174,11,"error"],[196,18,174,16],[196,20,174,18],[197,6,175,4,"console"],[197,13,175,11],[197,14,175,12,"error"],[197,19,175,17],[197,20,175,18],[197,49,175,47],[197,51,175,49,"error"],[197,56,175,54],[197,57,175,55],[198,4,176,2],[199,2,177,0],[199,3,177,1],[201,2,179,0],[202,2,180,7],[202,8,180,13,"competitionAPI"],[202,22,180,27],[202,25,180,30],[203,4,181,2,"create"],[203,10,181,8],[203,12,181,11,"data"],[203,16,196,3],[203,20,196,8,"apiClient"],[203,29,196,17],[203,30,196,18,"post"],[203,34,196,22],[203,35,196,23],[203,50,196,38],[203,52,196,40,"data"],[203,56,196,44],[203,57,196,45],[204,4,198,2,"join"],[204,8,198,6],[204,10,198,9,"inviteCode"],[204,20,198,27],[204,24,199,4,"apiClient"],[204,33,199,13],[204,34,199,14,"post"],[204,38,199,18],[204,39,199,19],[204,59,199,39],[204,61,199,41],[205,6,199,43,"invite_code"],[205,17,199,54],[205,19,199,56,"inviteCode"],[206,4,199,67],[206,5,199,68],[206,6,199,69],[207,4,201,2,"getMyCompetitions"],[207,21,201,19],[207,23,201,21,"getMyCompetitions"],[207,24,201,21],[207,29,201,27,"apiClient"],[207,38,201,36],[207,39,201,37,"get"],[207,42,201,40],[207,43,201,41],[207,61,201,59],[207,62,201,60],[208,4,203,2,"getCompetition"],[208,18,203,16],[208,20,203,19,"id"],[208,22,203,29],[208,26,203,34,"apiClient"],[208,35,203,43],[208,36,203,44,"get"],[208,39,203,47],[208,40,203,48],[208,57,203,65,"id"],[208,59,203,67],[208,61,203,69],[208,62,203,70],[209,4,205,2,"updateStandings"],[209,19,205,17],[209,21,205,19,"updateStandings"],[209,22,206,4,"id"],[209,24,206,14],[209,26,207,4,"standings"],[209,35,207,18],[209,37,208,4,"matchday"],[209,45,208,21],[209,50,210,4,"apiClient"],[209,59,210,13],[209,60,210,14,"patch"],[209,65,210,19],[209,66,210,20],[209,83,210,37,"id"],[209,85,210,39],[209,97,210,51],[209,99,210,53],[210,6,211,6,"standings"],[210,15,211,15],[211,6,212,6,"matchday"],[212,4,213,4],[212,5,213,5],[212,6,213,6],[213,4,215,2,"payFee"],[213,10,215,8],[213,12,215,10,"payFee"],[213,13,215,11,"id"],[213,15,215,21],[213,17,215,23,"amount"],[213,23,215,37],[213,28,216,4,"apiClient"],[213,37,216,13],[213,38,216,14,"post"],[213,42,216,18],[213,43,216,19],[213,60,216,36,"id"],[213,62,216,38],[213,68,216,44],[213,70,216,46],[213,74,216,50],[213,76,216,52],[214,6,217,6,"params"],[214,12,217,12],[214,14,217,14],[215,8,217,16,"amount"],[216,6,217,23],[217,4,218,4],[217,5,218,5],[217,6,218,6],[218,4,220,2,"getTransactions"],[218,19,220,17],[218,21,220,20,"id"],[218,23,220,30],[218,27,221,4,"apiClient"],[218,36,221,13],[218,37,221,14,"get"],[218,40,221,17],[218,41,221,18],[218,58,221,35,"id"],[218,60,221,37],[218,75,221,52],[218,76,221,53],[219,4,223,2],[220,4,224,2,"payMatchdays"],[220,16,224,14],[220,18,224,16,"payMatchdays"],[220,19,224,17,"competitionId"],[220,32,224,38],[220,34,224,40,"matchdays"],[220,43,224,59],[220,48,225,4,"apiClient"],[220,57,225,13],[220,58,225,14,"post"],[220,62,225,18],[220,63,225,19],[220,80,225,36,"competitionId"],[220,93,225,49],[220,113,225,69],[220,115,225,71],[221,6,226,6,"competition_id"],[221,20,226,20],[221,22,226,22,"competitionId"],[221,35,226,35],[222,6,227,6,"matchdays"],[223,4,228,4],[223,5,228,5],[223,6,228,6],[224,4,230,2,"getMatchdayPayments"],[224,23,230,21],[224,25,230,24,"competitionId"],[224,38,230,45],[224,42,231,4,"apiClient"],[224,51,231,13],[224,52,231,14,"get"],[224,55,231,17],[224,56,231,18],[224,73,231,35,"competitionId"],[224,86,231,48],[224,106,231,68],[224,107,231,69],[225,4,233,2,"getPaymentStatusTable"],[225,25,233,23],[225,27,233,26,"competitionId"],[225,40,233,47],[225,44,234,4,"apiClient"],[225,53,234,13],[225,54,234,14,"get"],[225,57,234,17],[225,58,234,18],[225,75,234,35,"competitionId"],[225,88,234,48],[225,111,234,71],[225,112,234,72],[226,4,236,2],[227,4,237,2,"createMock"],[227,14,237,12],[227,16,237,14],[227,22,237,21,"data"],[227,26,250,3],[227,30,250,8],[228,6,251,4,"console"],[228,13,251,11],[228,14,251,12,"log"],[228,17,251,15],[228,18,251,16],[228,50,251,48],[228,52,251,50,"data"],[228,56,251,54],[228,57,251,55,"name"],[228,61,251,59],[228,62,251,60],[229,6,252,4,"console"],[229,13,252,11],[229,14,252,12,"log"],[229,17,252,15],[229,18,252,16],[229,39,252,37],[229,41,252,39,"data"],[229,45,252,43],[229,46,252,44,"total_matchdays"],[229,61,252,59],[229,65,252,63],[229,67,252,65],[229,68,252,66],[231,6,254,4],[232,6,255,4],[232,12,255,10,"storedCompetitions"],[232,30,255,28],[232,33,255,31],[232,39,255,37,"CrossPlatformStorage"],[232,59,255,57],[232,60,255,58,"getItem"],[232,67,255,65],[232,68,255,66],[232,86,255,84],[232,87,255,85],[233,6,256,4],[233,10,256,8,"existingCompetitions"],[233,30,256,28],[233,33,256,31,"storedCompetitions"],[233,51,256,49],[233,54,256,52,"JSON"],[233,58,256,56],[233,59,256,57,"parse"],[233,64,256,62],[233,65,256,63,"storedCompetitions"],[233,83,256,81],[233,84,256,82],[233,87,256,85],[233,89,256,87],[234,6,258,4,"console"],[234,13,258,11],[234,14,258,12,"log"],[234,17,258,15],[234,18,258,16],[234,60,258,58],[234,62,258,60,"existingCompetitions"],[234,82,258,80],[234,83,258,81,"length"],[234,89,258,87],[234,90,258,88],[236,6,260,4],[237,6,261,4],[237,12,261,10,"existingNames"],[237,25,261,23],[237,28,261,26,"existingCompetitions"],[237,48,261,46],[237,49,261,47,"map"],[237,52,261,50],[237,53,261,52,"comp"],[237,57,261,61],[237,61,261,66,"comp"],[237,65,261,70],[237,66,261,71,"name"],[237,70,261,75],[237,71,261,76,"toLowerCase"],[237,82,261,87],[237,83,261,88],[237,84,261,89],[237,85,261,90],[238,6,262,4],[238,10,262,8,"existingNames"],[238,23,262,21],[238,24,262,22,"includes"],[238,32,262,30],[238,33,262,31,"data"],[238,37,262,35],[238,38,262,36,"name"],[238,42,262,40],[238,43,262,41,"toLowerCase"],[238,54,262,52],[238,55,262,53],[238,56,262,54],[238,57,262,55],[238,59,262,57],[239,8,263,6],[239,14,263,12],[239,18,263,16,"Error"],[239,23,263,21],[239,24,263,22],[239,86,263,84],[239,87,263,85],[240,6,264,4],[242,6,266,4],[243,6,267,4],[243,12,267,10,"newCompetition"],[243,26,267,24],[243,29,267,27],[244,8,268,6,"_id"],[244,11,268,9],[244,13,268,11],[244,21,268,19,"Date"],[244,25,268,23],[244,26,268,24,"now"],[244,29,268,27],[244,30,268,28],[244,31,268,29],[244,33,268,31],[245,8,269,6,"name"],[245,12,269,10],[245,14,269,12,"data"],[245,18,269,16],[245,19,269,17,"name"],[245,23,269,21],[246,8,270,6,"total_matchdays"],[246,23,270,21],[246,25,270,23,"data"],[246,29,270,27],[246,30,270,28,"total_matchdays"],[246,45,270,43],[246,49,270,47],[246,51,270,49],[247,8,271,6,"participation_cost_per_team"],[247,35,271,33],[247,37,271,35,"data"],[247,41,271,39],[247,42,271,40,"participation_cost_per_team"],[247,69,271,67],[247,73,271,71],[247,78,271,76],[248,8,272,6,"expected_teams"],[248,22,272,20],[248,24,272,22,"data"],[248,28,272,26],[248,29,272,27,"expected_teams"],[248,43,272,41],[248,47,272,45],[248,48,272,46],[249,8,273,6,"total_prize_pool"],[249,24,273,22],[249,26,273,24,"data"],[249,30,273,28],[249,31,273,29,"total_prize_pool"],[249,47,273,45],[249,51,273,49],[249,57,273,55],[250,8,274,6,"daily_payment_enabled"],[250,29,274,27],[250,31,274,29,"data"],[250,35,274,33],[250,36,274,34,"daily_payment_enabled"],[250,57,274,55],[250,61,274,59],[250,66,274,64],[251,8,275,6,"daily_payment_amount"],[251,28,275,26],[251,30,275,28,"data"],[251,34,275,32],[251,35,275,33,"daily_payment_amount"],[251,55,275,53],[251,59,275,57],[251,62,275,60],[252,8,276,6,"rules"],[252,13,276,11],[252,15,276,13,"data"],[252,19,276,17],[252,20,276,18,"rules"],[252,25,276,23],[253,8,277,6,"invite_code"],[253,19,277,17],[253,21,277,19,"Math"],[253,25,277,23],[253,26,277,24,"random"],[253,32,277,30],[253,33,277,31],[253,34,277,32],[253,35,277,33,"toString"],[253,43,277,41],[253,44,277,42],[253,46,277,44],[253,47,277,45],[253,48,277,46,"substr"],[253,54,277,52],[253,55,277,53],[253,56,277,54],[253,58,277,56],[253,59,277,57],[253,60,277,58],[253,61,277,59,"toUpperCase"],[253,72,277,70],[253,73,277,71],[253,74,277,72],[254,8,278,6,"invite_link"],[254,19,278,17],[254,21,278,19],[254,50,278,48,"Math"],[254,54,278,52],[254,55,278,53,"random"],[254,61,278,59],[254,62,278,60],[254,63,278,61],[254,64,278,62,"toString"],[254,72,278,70],[254,73,278,71],[254,75,278,73],[254,76,278,74],[254,77,278,75,"substr"],[254,83,278,81],[254,84,278,82],[254,85,278,83],[254,87,278,85],[254,88,278,86],[254,89,278,87],[254,90,278,88,"toUpperCase"],[254,101,278,99],[254,102,278,100],[254,103,278,101],[254,105,278,103],[255,8,279,6,"admin_id"],[255,16,279,14],[255,18,279,16],[255,44,279,42],[256,8,279,44],[257,8,280,6,"participants"],[257,20,280,18],[257,22,280,20],[257,23,281,8],[258,10,282,10,"id"],[258,12,282,12],[258,14,282,14],[258,40,282,40],[259,10,283,10,"name"],[259,14,283,14],[259,16,283,16],[259,33,283,33],[260,10,284,10,"email"],[260,15,284,15],[260,17,284,17],[260,36,284,36],[261,10,285,10,"is_admin"],[261,18,285,18],[261,20,285,20],[261,24,285,24],[262,10,286,10,"paid_matchdays"],[262,24,286,24],[262,26,286,26],[262,27,286,27],[262,28,286,28],[262,30,286,30],[262,31,286,31],[262,32,286,32],[263,10,286,34],[264,10,287,10,"points"],[264,16,287,16],[264,18,287,18],[265,8,288,8],[265,9,288,9],[265,10,289,7],[266,8,290,6,"wallet_balance"],[266,22,290,20],[266,24,290,22],[266,25,290,23],[267,8,291,6,"is_active"],[267,17,291,15],[267,19,291,17],[267,23,291,21],[268,8,292,6,"current_matchday"],[268,24,292,22],[268,26,292,24],[268,27,292,25],[269,8,292,27],[270,8,293,6,"standings"],[270,17,293,15],[270,19,293,17],[270,20,294,8],[271,10,294,10,"position"],[271,18,294,18],[271,20,294,20],[271,21,294,21],[272,10,294,23,"player_id"],[272,19,294,32],[272,21,294,34],[272,47,294,60],[273,10,294,62,"name"],[273,14,294,66],[273,16,294,68],[273,33,294,85],[274,10,294,87,"points"],[274,16,294,93],[274,18,294,95],[275,8,294,97],[275,9,294,98],[275,10,295,7],[276,8,296,6,"created_at"],[276,18,296,16],[276,20,296,18],[276,24,296,22,"Date"],[276,28,296,26],[276,29,296,27],[276,30,296,28],[276,31,296,29,"toISOString"],[276,42,296,40],[276,43,296,41],[276,44,296,42],[277,8,297,6,"updated_at"],[277,18,297,16],[277,20,297,18],[277,24,297,22,"Date"],[277,28,297,26],[277,29,297,27],[277,30,297,28],[277,31,297,29,"toISOString"],[277,42,297,40],[277,43,297,41],[278,6,298,4],[278,7,298,5],[280,6,300,4],[281,6,301,4,"existingCompetitions"],[281,26,301,24],[281,27,301,25,"push"],[281,31,301,29],[281,32,301,30,"newCompetition"],[281,46,301,44],[281,47,301,45],[282,6,302,4],[282,12,302,10,"CrossPlatformStorage"],[282,32,302,30],[282,33,302,31,"setItem"],[282,40,302,38],[282,41,302,39],[282,59,302,57],[282,61,302,59,"JSON"],[282,65,302,63],[282,66,302,64,"stringify"],[282,75,302,73],[282,76,302,74,"existingCompetitions"],[282,96,302,94],[282,97,302,95],[282,98,302,96],[284,6,304,4],[285,6,305,4],[285,12,305,10,"logAdminAction"],[285,26,305,24],[285,27,305,25],[285,35,305,33],[285,37,305,35,"newCompetition"],[285,51,305,49],[285,52,305,50,"name"],[285,56,305,54],[285,58,305,56],[285,75,305,73],[285,77,305,75],[286,8,306,6,"competition_id"],[286,22,306,20],[286,24,306,22,"newCompetition"],[286,38,306,36],[286,39,306,37,"_id"],[286,42,306,40],[287,8,307,6,"rules"],[287,13,307,11],[287,15,307,13,"newCompetition"],[287,29,307,27],[287,30,307,28,"rules"],[287,35,307,33],[288,8,308,6,"total_matchdays"],[288,23,308,21],[288,25,308,23,"newCompetition"],[288,39,308,37],[288,40,308,38,"total_matchdays"],[288,55,308,53],[289,8,309,6,"participation_cost_per_team"],[289,35,309,33],[289,37,309,35,"newCompetition"],[289,51,309,49],[289,52,309,50,"participation_cost_per_team"],[289,79,309,77],[290,8,310,6,"expected_teams"],[290,22,310,20],[290,24,310,22,"newCompetition"],[290,38,310,36],[290,39,310,37,"expected_teams"],[290,53,310,51],[291,8,311,6,"total_prize_pool"],[291,24,311,22],[291,26,311,24,"newCompetition"],[291,40,311,38],[291,41,311,39,"total_prize_pool"],[292,6,312,4],[292,7,312,5],[292,8,312,6],[293,6,314,4,"console"],[293,13,314,11],[293,14,314,12,"log"],[293,17,314,15],[293,18,314,16],[293,64,314,62],[293,66,314,64,"existingCompetitions"],[293,86,314,84],[293,87,314,85,"length"],[293,93,314,91],[293,94,314,92],[294,6,315,4,"console"],[294,13,315,11],[294,14,315,12,"log"],[294,17,315,15],[294,18,315,16],[294,38,315,36],[294,40,315,38,"newCompetition"],[294,54,315,52],[294,55,315,53,"_id"],[294,58,315,56],[294,59,315,57],[295,6,316,4,"console"],[295,13,316,11],[295,14,316,12,"log"],[295,17,316,15],[295,18,316,16],[295,40,316,38],[295,42,316,40,"newCompetition"],[295,56,316,54],[295,57,316,55,"name"],[295,61,316,59],[295,62,316,60],[296,6,317,4,"console"],[296,13,317,11],[296,14,317,12,"log"],[296,17,317,15],[296,18,317,16],[296,44,317,42],[296,46,317,44,"newCompetition"],[296,60,317,58],[296,61,317,59,"total_matchdays"],[296,76,317,74],[296,77,317,75],[297,6,319,4],[297,13,319,11,"newCompetition"],[297,27,319,25],[298,4,320,2],[298,5,320,3],[299,4,322,2],[300,4,323,2,"validateNameMock"],[300,20,323,18],[300,22,323,20],[300,28,323,27,"name"],[300,32,323,39],[300,36,323,44],[301,6,324,4,"console"],[301,13,324,11],[301,14,324,12,"log"],[301,17,324,15],[301,18,324,16],[301,57,324,55],[301,59,324,57,"name"],[301,63,324,61],[301,64,324,62],[302,6,326,4],[302,10,326,8],[302,11,326,9,"name"],[302,15,326,13],[302,16,326,14,"trim"],[302,20,326,18],[302,21,326,19],[302,22,326,20],[302,24,326,22],[303,8,327,6],[303,15,327,13],[304,10,327,15,"available"],[304,19,327,24],[304,21,327,26],[304,25,327,30],[305,10,327,32,"message"],[305,17,327,39],[305,19,327,41],[306,8,327,44],[306,9,327,45],[307,6,328,4],[309,6,330,4],[310,6,331,4],[310,12,331,10,"storedCompetitions"],[310,30,331,28],[310,33,331,31],[310,39,331,37,"CrossPlatformStorage"],[310,59,331,57],[310,60,331,58,"getItem"],[310,67,331,65],[310,68,331,66],[310,86,331,84],[310,87,331,85],[311,6,332,4],[311,10,332,8,"existingCompetitions"],[311,30,332,28],[311,33,332,31,"storedCompetitions"],[311,51,332,49],[311,54,332,52,"JSON"],[311,58,332,56],[311,59,332,57,"parse"],[311,64,332,62],[311,65,332,63,"storedCompetitions"],[311,83,332,81],[311,84,332,82],[311,87,332,85],[311,89,332,87],[313,6,334,4],[314,6,335,4],[314,12,335,10,"defaultNames"],[314,24,335,22],[314,27,335,25],[314,28,335,26],[314,50,335,48],[314,52,335,50],[314,78,335,76],[314,80,335,78],[314,96,335,94],[314,97,335,95],[315,6,336,4],[315,12,336,10,"allNames"],[315,20,336,18],[315,23,336,21],[315,24,337,6],[315,27,337,9,"existingCompetitions"],[315,47,337,29],[315,48,337,30,"map"],[315,51,337,33],[315,52,337,35,"comp"],[315,56,337,44],[315,60,337,49,"comp"],[315,64,337,53],[315,65,337,54,"name"],[315,69,337,58],[315,70,337,59,"toLowerCase"],[315,81,337,70],[315,82,337,71],[315,83,337,72],[315,84,337,73],[315,86,338,6],[315,89,338,9,"defaultNames"],[315,101,338,21],[315,102,338,22,"map"],[315,105,338,25],[315,106,338,26,"name"],[315,110,338,30],[315,114,338,34,"name"],[315,118,338,38],[315,119,338,39,"toLowerCase"],[315,130,338,50],[315,131,338,51],[315,132,338,52],[315,133,338,53],[315,134,339,5],[316,6,341,4],[316,12,341,10,"isAvailable"],[316,23,341,21],[316,26,341,24],[316,27,341,25,"allNames"],[316,35,341,33],[316,36,341,34,"includes"],[316,44,341,42],[316,45,341,43,"name"],[316,49,341,47],[316,50,341,48,"toLowerCase"],[316,61,341,59],[316,62,341,60],[316,63,341,61],[316,64,341,62],[317,6,343,4],[317,13,343,11],[318,8,344,6,"available"],[318,17,344,15],[318,19,344,17,"isAvailable"],[318,30,344,28],[319,8,345,6,"message"],[319,15,345,13],[319,17,345,15,"isAvailable"],[319,28,345,26],[319,31,345,29],[319,47,345,45],[319,50,345,48],[320,6,346,4],[320,7,346,5],[321,4,347,2],[321,5,347,3],[322,4,349,2,"getMyCompetitionsMock"],[322,25,349,23],[322,27,349,25],[322,33,349,25,"getMyCompetitionsMock"],[322,34,349,25],[322,39,349,37],[323,6,350,4,"console"],[323,13,350,11],[323,14,350,12,"log"],[323,17,350,15],[323,18,350,16],[323,52,350,50],[323,53,350,51],[325,6,352,4],[326,6,353,4],[326,12,353,10,"storedCompetitions"],[326,30,353,28],[326,33,353,31],[326,39,353,37,"CrossPlatformStorage"],[326,59,353,57],[326,60,353,58,"getItem"],[326,67,353,65],[326,68,353,66],[326,86,353,84],[326,87,353,85],[327,6,354,4],[327,10,354,8,"competitions"],[327,22,354,20],[327,25,354,23,"storedCompetitions"],[327,43,354,41],[327,46,354,44,"JSON"],[327,50,354,48],[327,51,354,49,"parse"],[327,56,354,54],[327,57,354,55,"storedCompetitions"],[327,75,354,73],[327,76,354,74],[327,79,354,77],[327,81,354,79],[328,6,356,4,"console"],[328,13,356,11],[328,14,356,12,"log"],[328,17,356,15],[328,18,356,16],[328,53,356,51],[328,55,356,53,"competitions"],[328,67,356,65],[328,68,356,66,"length"],[328,74,356,72],[328,75,356,73],[330,6,358,4],[331,6,359,4,"competitions"],[331,18,359,16],[331,19,359,17,"forEach"],[331,26,359,24],[331,27,359,25],[331,28,359,26,"comp"],[331,32,359,35],[331,34,359,37,"index"],[331,39,359,50],[331,44,359,55],[332,8,360,6,"console"],[332,15,360,13],[332,16,360,14,"log"],[332,19,360,17],[332,20,360,18],[332,23,360,21,"index"],[332,28,360,26],[332,31,360,29],[332,32,360,30],[332,37,360,35,"comp"],[332,41,360,39],[332,42,360,40,"name"],[332,46,360,44],[332,55,360,53,"comp"],[332,59,360,57],[332,60,360,58,"_id"],[332,63,360,61],[332,66,360,64],[332,67,360,65],[333,6,361,4],[333,7,361,5],[333,8,361,6],[334,6,363,4],[334,13,363,11,"competitions"],[334,25,363,23],[335,4,364,2],[335,5,364,3],[336,4,366,2,"joinMock"],[336,12,366,10],[336,14,366,12],[336,20,366,19,"inviteCode"],[336,30,366,37],[336,34,366,42],[337,6,367,4,"console"],[337,13,367,11],[337,14,367,12,"log"],[337,17,367,15],[337,18,367,16],[337,59,367,57],[337,61,367,59,"inviteCode"],[337,71,367,69],[337,72,367,70],[338,6,368,4],[338,10,368,8,"inviteCode"],[338,20,368,18],[338,21,368,19,"length"],[338,27,368,25],[338,30,368,28],[338,31,368,29],[338,33,368,31],[339,8,369,6],[339,14,369,12],[339,18,369,16,"Error"],[339,23,369,21],[339,24,369,22],[339,45,369,43],[339,46,369,44],[340,6,370,4],[341,6,371,4],[341,13,371,11],[342,8,371,13,"message"],[342,15,371,20],[342,17,371,22],[343,6,371,57],[343,7,371,58],[344,4,372,2],[344,5,372,3],[345,4,374,2],[346,4,375,2,"deleteMock"],[346,14,375,12],[346,16,375,14],[346,22,375,21,"competitionId"],[346,35,375,42],[346,39,375,47],[347,6,376,4,"console"],[347,13,376,11],[347,14,376,12,"log"],[347,17,376,15],[347,18,376,16],[347,51,376,49],[347,53,376,51,"competitionId"],[347,66,376,64],[347,67,376,65],[348,6,378,4],[348,12,378,10,"storedCompetitions"],[348,30,378,28],[348,33,378,31],[348,39,378,37,"CrossPlatformStorage"],[348,59,378,57],[348,60,378,58,"getItem"],[348,67,378,65],[348,68,378,66],[348,86,378,84],[348,87,378,85],[349,6,379,4],[349,10,379,8,"competitions"],[349,22,379,20],[349,25,379,23,"storedCompetitions"],[349,43,379,41],[349,46,379,44,"JSON"],[349,50,379,48],[349,51,379,49,"parse"],[349,56,379,54],[349,57,379,55,"storedCompetitions"],[349,75,379,73],[349,76,379,74],[349,79,379,77],[349,81,379,79],[350,6,381,4],[350,12,381,10,"competitionToDelete"],[350,31,381,29],[350,34,381,32,"competitions"],[350,46,381,44],[350,47,381,45,"find"],[350,51,381,49],[350,52,381,51,"comp"],[350,56,381,60],[350,60,381,65,"comp"],[350,64,381,69],[350,65,381,70,"_id"],[350,68,381,73],[350,73,381,78,"competitionId"],[350,86,381,91],[350,87,381,92],[351,6,382,4],[351,10,382,8],[351,11,382,9,"competitionToDelete"],[351,30,382,28],[351,32,382,30],[352,8,383,6],[352,14,383,12],[352,18,383,16,"Error"],[352,23,383,21],[352,24,383,22],[352,47,383,45],[352,48,383,46],[353,6,384,4],[355,6,386,4],[356,6,387,4],[356,10,387,8,"competitionToDelete"],[356,29,387,27],[356,30,387,28,"admin_id"],[356,38,387,36],[356,43,387,41],[356,69,387,67],[356,71,387,69],[357,8,388,6],[357,14,388,12],[357,18,388,16,"Error"],[357,23,388,21],[357,24,388,22],[357,64,388,62],[357,65,388,63],[358,6,389,4],[360,6,391,4],[361,6,392,4,"competitions"],[361,18,392,16],[361,21,392,19,"competitions"],[361,33,392,31],[361,34,392,32,"filter"],[361,40,392,38],[361,41,392,40,"comp"],[361,45,392,49],[361,49,392,54,"comp"],[361,53,392,58],[361,54,392,59,"_id"],[361,57,392,62],[361,62,392,67,"competitionId"],[361,75,392,80],[361,76,392,81],[362,6,393,4],[362,12,393,10,"CrossPlatformStorage"],[362,32,393,30],[362,33,393,31,"setItem"],[362,40,393,38],[362,41,393,39],[362,59,393,57],[362,61,393,59,"JSON"],[362,65,393,63],[362,66,393,64,"stringify"],[362,75,393,73],[362,76,393,74,"competitions"],[362,88,393,86],[362,89,393,87],[362,90,393,88],[364,6,395,4],[365,6,396,4],[365,12,396,10,"logAdminAction"],[365,26,396,24],[365,27,396,25],[365,35,396,33],[365,37,396,35,"competitionToDelete"],[365,56,396,54],[365,57,396,55,"name"],[365,61,396,59],[365,63,396,61],[365,80,396,78],[365,81,396,79],[366,6,398,4,"console"],[366,13,398,11],[366,14,398,12,"log"],[366,17,398,15],[366,18,398,16],[366,54,398,52],[366,55,398,53],[367,6,399,4],[367,13,399,11],[368,8,399,13,"message"],[368,15,399,20],[368,17,399,22],[369,6,399,57],[369,7,399,58],[370,4,400,2],[370,5,400,3],[371,4,402,2],[372,4,403,2,"editMock"],[372,12,403,10],[372,14,403,12],[372,20,403,12,"editMock"],[372,21,403,19,"competitionId"],[372,34,403,40],[372,36,403,42,"updates"],[372,43,403,54],[372,48,403,59],[373,6,404,4,"console"],[373,13,404,11],[373,14,404,12,"log"],[373,17,404,15],[373,18,404,16],[373,49,404,47],[373,51,404,49,"competitionId"],[373,64,404,62],[373,66,404,64,"updates"],[373,73,404,71],[373,74,404,72],[374,6,406,4],[374,12,406,10,"storedCompetitions"],[374,30,406,28],[374,33,406,31],[374,39,406,37,"CrossPlatformStorage"],[374,59,406,57],[374,60,406,58,"getItem"],[374,67,406,65],[374,68,406,66],[374,86,406,84],[374,87,406,85],[375,6,407,4],[375,10,407,8,"competitions"],[375,22,407,20],[375,25,407,23,"storedCompetitions"],[375,43,407,41],[375,46,407,44,"JSON"],[375,50,407,48],[375,51,407,49,"parse"],[375,56,407,54],[375,57,407,55,"storedCompetitions"],[375,75,407,73],[375,76,407,74],[375,79,407,77],[375,81,407,79],[376,6,409,4],[376,12,409,10,"competitionIndex"],[376,28,409,26],[376,31,409,29,"competitions"],[376,43,409,41],[376,44,409,42,"findIndex"],[376,53,409,51],[376,54,409,53,"comp"],[376,58,409,62],[376,62,409,67,"comp"],[376,66,409,71],[376,67,409,72,"_id"],[376,70,409,75],[376,75,409,80,"competitionId"],[376,88,409,93],[376,89,409,94],[377,6,410,4],[377,10,410,8,"competitionIndex"],[377,26,410,24],[377,31,410,29],[377,32,410,30],[377,33,410,31],[377,35,410,33],[378,8,411,6],[378,14,411,12],[378,18,411,16,"Error"],[378,23,411,21],[378,24,411,22],[378,47,411,45],[378,48,411,46],[379,6,412,4],[380,6,414,4],[380,12,414,10,"competition"],[380,23,414,21],[380,26,414,24,"competitions"],[380,38,414,36],[380,39,414,37,"competitionIndex"],[380,55,414,53],[380,56,414,54],[382,6,416,4],[383,6,417,4],[383,10,417,8,"competition"],[383,21,417,19],[383,22,417,20,"admin_id"],[383,30,417,28],[383,35,417,33],[383,61,417,59],[383,63,417,61],[384,8,418,6],[384,14,418,12],[384,18,418,16,"Error"],[384,23,418,21],[384,24,418,22],[384,62,418,60],[384,63,418,61],[385,6,419,4],[387,6,421,4],[388,6,422,4,"competitions"],[388,18,422,16],[388,19,422,17,"competitionIndex"],[388,35,422,33],[388,36,422,34],[388,39,422,37],[389,8,423,6],[389,11,423,9,"competition"],[389,22,423,20],[390,8,424,6],[390,11,424,9,"updates"],[390,18,424,16],[391,8,425,6,"updated_at"],[391,18,425,16],[391,20,425,18],[391,24,425,22,"Date"],[391,28,425,26],[391,29,425,27],[391,30,425,28],[391,31,425,29,"toISOString"],[391,42,425,40],[391,43,425,41],[392,6,426,4],[392,7,426,5],[393,6,428,4],[393,12,428,10,"CrossPlatformStorage"],[393,32,428,30],[393,33,428,31,"setItem"],[393,40,428,38],[393,41,428,39],[393,59,428,57],[393,61,428,59,"JSON"],[393,65,428,63],[393,66,428,64,"stringify"],[393,75,428,73],[393,76,428,74,"competitions"],[393,88,428,86],[393,89,428,87],[393,90,428,88],[395,6,430,4],[396,6,431,4],[396,12,431,10,"logAdminAction"],[396,26,431,24],[396,27,431,25],[396,33,431,31],[396,35,431,33,"competition"],[396,46,431,44],[396,47,431,45,"name"],[396,51,431,49],[396,53,431,51],[396,70,431,68],[396,72,431,70,"updates"],[396,79,431,77],[396,80,431,78],[397,6,433,4,"console"],[397,13,433,11],[397,14,433,12,"log"],[397,17,433,15],[397,18,433,16],[397,54,433,52],[397,55,433,53],[398,6,434,4],[398,13,434,11,"competitions"],[398,25,434,23],[398,26,434,24,"competitionIndex"],[398,42,434,40],[398,43,434,41],[399,4,435,2],[399,5,435,3],[400,4,437,2],[401,4,438,2,"awardDailyPrizeMock"],[401,23,438,21],[401,25,438,23],[401,31,438,23,"awardDailyPrizeMock"],[401,32,438,30,"competitionId"],[401,45,438,51],[401,47,438,53,"matchday"],[401,55,438,69],[401,57,438,71,"winnerId"],[401,65,438,87],[401,70,438,92],[402,6,439,4,"console"],[402,13,439,11],[402,14,439,12,"log"],[402,17,439,15],[402,18,439,16],[402,62,439,60],[402,64,439,62,"matchday"],[402,72,439,70],[402,74,439,72],[402,83,439,81],[402,85,439,83,"winnerId"],[402,93,439,91],[402,94,439,92],[403,6,441,4],[403,12,441,10,"storedCompetitions"],[403,30,441,28],[403,33,441,31],[403,39,441,37,"CrossPlatformStorage"],[403,59,441,57],[403,60,441,58,"getItem"],[403,67,441,65],[403,68,441,66],[403,86,441,84],[403,87,441,85],[404,6,442,4],[404,10,442,8,"competitions"],[404,22,442,20],[404,25,442,23,"storedCompetitions"],[404,43,442,41],[404,46,442,44,"JSON"],[404,50,442,48],[404,51,442,49,"parse"],[404,56,442,54],[404,57,442,55,"storedCompetitions"],[404,75,442,73],[404,76,442,74],[404,79,442,77],[404,81,442,79],[405,6,444,4],[405,12,444,10,"competitionIndex"],[405,28,444,26],[405,31,444,29,"competitions"],[405,43,444,41],[405,44,444,42,"findIndex"],[405,53,444,51],[405,54,444,53,"comp"],[405,58,444,62],[405,62,444,67,"comp"],[405,66,444,71],[405,67,444,72,"_id"],[405,70,444,75],[405,75,444,80,"competitionId"],[405,88,444,93],[405,89,444,94],[406,6,445,4],[406,10,445,8,"competitionIndex"],[406,26,445,24],[406,31,445,29],[406,32,445,30],[406,33,445,31],[406,35,445,33],[407,8,446,6],[407,14,446,12],[407,18,446,16,"Error"],[407,23,446,21],[407,24,446,22],[407,47,446,45],[407,48,446,46],[408,6,447,4],[409,6,449,4],[409,12,449,10,"competition"],[409,23,449,21],[409,26,449,24,"competitions"],[409,38,449,36],[409,39,449,37,"competitionIndex"],[409,55,449,53],[409,56,449,54],[411,6,451,4],[412,6,452,4],[412,10,452,8,"competition"],[412,21,452,19],[412,22,452,20,"admin_id"],[412,30,452,28],[412,35,452,33],[412,61,452,59],[412,63,452,61],[413,8,453,6],[413,14,453,12],[413,18,453,16,"Error"],[413,23,453,21],[413,24,453,22],[413,59,453,57],[413,60,453,58],[414,6,454,4],[416,6,456,4],[417,6,457,4],[417,10,457,8],[417,11,457,9,"competition"],[417,22,457,20],[417,23,457,21,"rules"],[417,28,457,26],[417,32,457,30],[417,33,457,31],[417,34,457,32],[417,41,457,39],[417,43,457,41],[417,50,457,48],[417,51,457,49],[417,52,457,50,"includes"],[417,60,457,58],[417,61,457,59,"competition"],[417,72,457,70],[417,73,457,71,"rules"],[417,78,457,76],[417,79,457,77,"type"],[417,83,457,81],[417,84,457,82],[417,86,457,84],[418,8,458,6],[418,14,458,12],[418,18,458,16,"Error"],[418,23,458,21],[418,24,458,22],[418,69,458,67],[418,70,458,68],[419,6,459,4],[420,6,461,4],[420,12,461,10,"dailyPrizeAmount"],[420,28,461,26],[420,31,461,29,"competition"],[420,42,461,40],[420,43,461,41,"rules"],[420,48,461,46],[420,49,461,47,"daily_prize"],[420,60,461,58],[420,64,461,62],[420,65,461,63],[421,6,462,4],[421,12,462,10,"winner"],[421,18,462,16],[421,21,462,19,"competition"],[421,32,462,30],[421,33,462,31,"participants"],[421,45,462,43],[421,46,462,44,"find"],[421,50,462,48],[421,51,462,50,"p"],[421,52,462,56],[421,56,462,61,"p"],[421,57,462,62],[421,58,462,63,"id"],[421,60,462,65],[421,65,462,70,"winnerId"],[421,73,462,78],[421,74,462,79],[422,6,464,4],[422,10,464,8],[422,11,464,9,"winner"],[422,17,464,15],[422,19,464,17],[423,8,465,6],[423,14,465,12],[423,18,465,16,"Error"],[423,23,465,21],[423,24,465,22],[423,57,465,55],[423,58,465,56],[424,6,466,4],[426,6,468,4],[427,6,469,4],[427,10,469,8],[427,11,469,9,"competition"],[427,22,469,20],[427,23,469,21,"daily_winners"],[427,36,469,34],[427,38,469,36],[428,8,470,6,"competition"],[428,19,470,17],[428,20,470,18,"daily_winners"],[428,33,470,31],[428,36,470,34],[428,37,470,35],[428,38,470,36],[429,6,471,4],[431,6,473,4],[432,6,474,4],[432,10,474,8,"competition"],[432,21,474,19],[432,22,474,20,"daily_winners"],[432,35,474,33],[432,36,474,34,"matchday"],[432,44,474,42],[432,45,474,43],[432,47,474,45],[433,8,475,6],[433,14,475,12],[433,18,475,16,"Error"],[433,23,475,21],[433,24,475,22],[433,52,475,50,"matchday"],[433,60,475,58],[433,83,475,81,"competition"],[433,94,475,92],[433,95,475,93,"daily_winners"],[433,108,475,106],[433,109,475,107,"matchday"],[433,117,475,115],[433,118,475,116],[433,119,475,117,"name"],[433,123,475,121],[433,125,475,123],[433,126,475,124],[434,6,476,4],[436,6,478,4],[437,6,479,4,"competition"],[437,17,479,15],[437,18,479,16,"daily_winners"],[437,31,479,29],[437,32,479,30,"matchday"],[437,40,479,38],[437,41,479,39],[437,44,479,42],[438,8,480,6,"user_id"],[438,15,480,13],[438,17,480,15,"winnerId"],[438,25,480,23],[439,8,481,6,"name"],[439,12,481,10],[439,14,481,12,"winner"],[439,20,481,18],[439,21,481,19,"name"],[439,25,481,23],[440,8,482,6,"amount"],[440,14,482,12],[440,16,482,14,"dailyPrizeAmount"],[440,32,482,30],[441,8,483,6,"awarded_at"],[441,18,483,16],[441,20,483,18],[441,24,483,22,"Date"],[441,28,483,26],[441,29,483,27],[441,30,483,28],[441,31,483,29,"toISOString"],[441,42,483,40],[441,43,483,41],[442,6,484,4],[442,7,484,5],[444,6,486,4],[445,6,487,4,"competitions"],[445,18,487,16],[445,19,487,17,"competitionIndex"],[445,35,487,33],[445,36,487,34],[445,39,487,37,"competition"],[445,50,487,48],[446,6,488,4],[446,12,488,10,"CrossPlatformStorage"],[446,32,488,30],[446,33,488,31,"setItem"],[446,40,488,38],[446,41,488,39],[446,59,488,57],[446,61,488,59,"JSON"],[446,65,488,63],[446,66,488,64,"stringify"],[446,75,488,73],[446,76,488,74,"competitions"],[446,88,488,86],[446,89,488,87],[446,90,488,88],[448,6,490,4],[449,6,491,4],[449,12,491,10,"logAdminAction"],[449,26,491,24],[449,27,491,25],[449,46,491,44],[449,48,491,46,"competition"],[449,59,491,57],[449,60,491,58,"name"],[449,64,491,62],[449,66,491,64],[449,83,491,81],[449,85,491,83],[450,8,492,6,"matchday"],[450,16,492,14],[451,8,493,6,"winner"],[451,14,493,12],[451,16,493,14,"winner"],[451,22,493,20],[451,23,493,21,"name"],[451,27,493,25],[452,8,494,6,"amount"],[452,14,494,12],[452,16,494,14,"dailyPrizeAmount"],[453,6,495,4],[453,7,495,5],[453,8,495,6],[455,6,497,4],[456,6,498,4,"console"],[456,13,498,11],[456,14,498,12,"log"],[456,17,498,15],[456,18,498,16],[456,24,498,22,"winner"],[456,30,498,28],[456,31,498,29,"name"],[456,35,498,33],[456,48,498,46,"dailyPrizeAmount"],[456,64,498,62],[456,89,498,87,"matchday"],[456,97,498,95],[456,99,498,97],[456,100,498,98],[457,6,500,4,"console"],[457,13,500,11],[457,14,500,12,"log"],[457,17,500,15],[457,18,500,16],[457,54,500,52],[457,55,500,53],[458,6,501,4],[458,13,501,11],[459,8,502,6,"message"],[459,15,502,13],[459,17,502,15],[459,36,502,34,"dailyPrizeAmount"],[459,52,502,50],[459,67,502,65,"winner"],[459,73,502,71],[459,74,502,72,"name"],[459,78,502,76],[459,95,502,93,"matchday"],[459,103,502,101],[459,105,502,103],[460,8,503,6,"competition"],[460,19,503,17],[460,21,503,19,"competition"],[461,6,504,4],[461,7,504,5],[462,4,505,2],[462,5,505,3],[463,4,507,2],[464,4,508,2,"getAdminLogsMock"],[464,20,508,18],[464,22,508,20],[464,28,508,20,"getAdminLogsMock"],[464,29,508,20],[464,34,508,32],[465,6,509,4,"console"],[465,13,509,11],[465,14,509,12,"log"],[465,17,509,15],[465,18,509,16],[465,47,509,45],[465,48,509,46],[466,6,511,4],[466,10,511,8],[467,8,512,6],[467,14,512,12,"logs"],[467,18,512,16],[467,21,512,19],[467,28,512,25,"CrossPlatformStorage"],[467,48,512,45],[467,49,512,46,"getItem"],[467,56,512,53],[467,57,512,54],[467,68,512,65],[467,69,512,66],[467,74,512,70],[467,78,512,74],[468,8,513,6],[468,14,513,12,"adminLogs"],[468,23,513,21],[468,26,513,24,"JSON"],[468,30,513,28],[468,31,513,29,"parse"],[468,36,513,34],[468,37,513,35,"logs"],[468,41,513,39],[468,42,513,40],[470,8,515,6],[471,8,516,6,"adminLogs"],[471,17,516,15],[471,18,516,16,"sort"],[471,22,516,20],[471,23,516,21],[471,24,516,22,"a"],[471,25,516,28],[471,27,516,30,"b"],[471,28,516,36],[471,33,516,41],[471,37,516,45,"Date"],[471,41,516,49],[471,42,516,50,"b"],[471,43,516,51],[471,44,516,52,"timestamp"],[471,53,516,61],[471,54,516,62],[471,55,516,63,"getTime"],[471,62,516,70],[471,63,516,71],[471,64,516,72],[471,67,516,75],[471,71,516,79,"Date"],[471,75,516,83],[471,76,516,84,"a"],[471,77,516,85],[471,78,516,86,"timestamp"],[471,87,516,95],[471,88,516,96],[471,89,516,97,"getTime"],[471,96,516,104],[471,97,516,105],[471,98,516,106],[471,99,516,107],[472,8,518,6,"console"],[472,15,518,13],[472,16,518,14,"log"],[472,19,518,17],[472,20,518,18],[472,42,518,40],[472,44,518,42,"adminLogs"],[472,53,518,51],[472,54,518,52,"length"],[472,60,518,58],[472,61,518,59],[473,8,519,6],[473,15,519,13,"adminLogs"],[473,24,519,22],[474,6,520,4],[474,7,520,5],[474,8,520,6],[474,15,520,13,"error"],[474,20,520,18],[474,22,520,20],[475,8,521,6,"console"],[475,15,521,13],[475,16,521,14,"error"],[475,21,521,19],[475,22,521,20],[475,52,521,50],[475,54,521,52,"error"],[475,59,521,57],[475,60,521,58],[476,8,522,6],[476,15,522,13],[476,17,522,15],[477,6,523,4],[478,4,524,2],[479,2,525,0],[479,3,525,1],[481,2,527,0],[482,2,528,7],[482,8,528,13,"walletAPI"],[482,17,528,22],[482,20,528,25],[483,4,529,2,"getBalance"],[483,14,529,12],[483,16,529,14,"getBalance"],[483,17,529,14],[483,22,529,20,"apiClient"],[483,31,529,29],[483,32,529,30,"get"],[483,35,529,33],[483,36,529,34],[483,53,529,51],[483,54,529,52],[484,4,531,2,"topUp"],[484,9,531,7],[484,11,531,10,"amount"],[484,17,531,24],[484,21,532,4,"apiClient"],[484,30,532,13],[484,31,532,14,"post"],[484,35,532,18],[484,36,532,19],[484,51,532,34],[484,53,532,36],[484,57,532,40],[484,59,532,42],[485,6,533,6,"params"],[485,12,533,12],[485,14,533,14],[486,8,533,16,"amount"],[487,6,533,23],[488,4,534,4],[488,5,534,5],[488,6,534,6],[489,4,536,2,"withdraw"],[489,12,536,10],[489,14,536,13,"amount"],[489,20,536,27],[489,24,537,4,"apiClient"],[489,33,537,13],[489,34,537,14,"post"],[489,38,537,18],[489,39,537,19],[489,57,537,37],[489,59,537,39],[489,63,537,43],[489,65,537,45],[490,6,538,6,"params"],[490,12,538,12],[490,14,538,14],[491,8,538,16,"amount"],[492,6,538,23],[493,4,539,4],[493,5,539,5],[493,6,539,6],[494,4,541,2,"getTransactions"],[494,19,541,17],[494,21,541,19,"getTransactions"],[494,22,541,19],[494,27,541,25,"apiClient"],[494,36,541,34],[494,37,541,35,"get"],[494,40,541,38],[494,41,541,39],[494,56,541,54],[495,2,542,0],[495,3,542,1],[496,2,544,0],[496,6,544,0,"_default"],[496,14,544,0],[496,17,544,15,"apiClient"],[496,26,544,24],[497,0,544,25],[497,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnC2D;oBqCG;kCDc,sCC;0BCC,0BD;GrCS;yBuCE;yBCU;KDE;GvCG;YyCE;GzCM;c0CG;kDCM,yCD;uCEW,yCF;G1CQ;Y6CG;oDCM,yCD;G7C0B;uB+CG;oDDM,yCC;iDCkB,6BD;G/C2C;oBiDG;qBCQ,qFD;GjDQ;cmDK,sCnD;SoDE;MpDG;YqDE;MrDG;mBsDE,oCtD"},"hasCjsExports":false},"type":"js/module"}]}