{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool\n      });\n      console.log('✅ Competition created and logged! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":488,"map":[[27,2,524,0,"Object"],[27,8,524,0],[27,9,524,0,"defineProperty"],[27,23,524,0],[27,24,524,0,"exports"],[27,31,524,0],[28,4,524,0,"enumerable"],[28,14,524,0],[29,4,524,0,"get"],[29,7,524,0],[29,18,524,0,"get"],[29,19,524,0],[30,6,524,0],[30,13,524,0,"_default"],[30,21,524,0],[31,4,524,0],[32,2,524,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,508,0,"Object"],[45,8,508,0],[45,9,508,0,"defineProperty"],[45,23,508,0],[45,24,508,0,"exports"],[45,31,508,0],[46,4,508,0,"enumerable"],[46,14,508,0],[47,4,508,0,"get"],[47,7,508,0],[47,18,508,0,"get"],[47,19,508,0],[48,6,508,0],[48,13,508,0,"walletAPI"],[48,22,508,0],[49,4,508,0],[50,2,508,0],[51,2,1,0],[51,6,1,0,"_axios"],[51,12,1,0],[51,15,1,0,"require"],[51,22,1,0],[51,23,1,0,"_dependencyMap"],[51,37,1,0],[52,2,1,0],[52,6,1,0,"axios"],[52,11,1,0],[52,14,1,0,"_interopDefault"],[52,29,1,0],[52,30,1,0,"_axios"],[52,36,1,0],[53,2,2,0],[53,6,2,0,"_expoSecureStore"],[53,22,2,0],[53,25,2,0,"require"],[53,32,2,0],[53,33,2,0,"_dependencyMap"],[53,47,2,0],[54,2,2,0],[54,6,2,0,"SecureStore"],[54,17,2,0],[54,20,2,0,"_interopNamespace"],[54,37,2,0],[54,38,2,0,"_expoSecureStore"],[54,54,2,0],[55,2,3,0],[55,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[55,42,3,0],[55,45,3,0,"require"],[55,52,3,0],[55,53,3,0,"_dependencyMap"],[55,67,3,0],[56,2,3,0],[56,6,3,0,"AsyncStorage"],[56,18,3,0],[56,21,3,0,"_interopDefault"],[56,36,3,0],[56,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,73,3,0],[57,2,4,0],[57,6,4,0,"_expoConstants"],[57,20,4,0],[57,23,4,0,"require"],[57,30,4,0],[57,31,4,0,"_dependencyMap"],[57,45,4,0],[58,2,4,0],[58,6,4,0,"Constants"],[58,15,4,0],[58,18,4,0,"_interopDefault"],[58,33,4,0],[58,34,4,0,"_expoConstants"],[58,48,4,0],[59,2,6,0],[60,2,7,0],[60,8,7,6,"CrossPlatformStorage"],[60,28,7,26],[60,29,7,27],[61,4,8,2],[61,17,8,15,"getItem"],[61,24,8,22,"getItem"],[61,25,8,23,"key"],[61,28,8,34],[61,30,8,60],[62,6,9,4],[62,10,9,8],[63,8,10,6],[64,8,11,6],[64,15,11,13],[64,21,11,19,"AsyncStorage"],[64,33,11,31],[64,34,11,31,"default"],[64,41,11,31],[64,42,11,32,"getItem"],[64,49,11,39],[64,50,11,40,"key"],[64,53,11,43],[64,54,11,44],[65,6,12,4],[65,7,12,5],[65,8,12,6],[65,15,12,13,"error"],[65,20,12,18],[65,22,12,20],[66,8,13,6],[67,8,14,6],[67,12,14,10],[67,21,14,43,"window"],[67,27,14,49],[67,28,14,50,"localStorage"],[67,40,14,62],[67,42,14,64],[68,10,15,8],[68,17,15,15,"window"],[68,23,15,21],[68,24,15,22,"localStorage"],[68,36,15,34],[68,37,15,35,"getItem"],[68,44,15,42],[68,45,15,43,"key"],[68,48,15,46],[68,49,15,47],[69,8,16,6],[70,8,17,6],[70,15,17,13],[70,19,17,17],[71,6,18,4],[72,4,19,2],[73,4,21,2],[73,17,21,15,"setItem"],[73,24,21,22,"setItem"],[73,25,21,23,"key"],[73,28,21,34],[73,30,21,36,"value"],[73,35,21,49],[73,37,21,66],[74,6,22,4],[74,10,22,8],[75,8,23,6],[76,8,24,6],[76,14,24,12,"AsyncStorage"],[76,26,24,24],[76,27,24,24,"default"],[76,34,24,24],[76,35,24,25,"setItem"],[76,42,24,32],[76,43,24,33,"key"],[76,46,24,36],[76,48,24,38,"value"],[76,53,24,43],[76,54,24,44],[77,6,25,4],[77,7,25,5],[77,8,25,6],[77,15,25,13,"error"],[77,20,25,18],[77,22,25,20],[78,8,26,6],[79,8,27,6],[79,12,27,10],[79,21,27,43,"window"],[79,27,27,49],[79,28,27,50,"localStorage"],[79,40,27,62],[79,42,27,64],[80,10,28,8,"window"],[80,16,28,14],[80,17,28,15,"localStorage"],[80,29,28,27],[80,30,28,28,"setItem"],[80,37,28,35],[80,38,28,36,"key"],[80,41,28,39],[80,43,28,41,"value"],[80,48,28,46],[80,49,28,47],[81,8,29,6],[82,6,30,4],[83,4,31,2],[84,4,33,2],[84,17,33,15,"removeItem"],[84,27,33,25,"removeItem"],[84,28,33,26,"key"],[84,31,33,37],[84,33,33,54],[85,6,34,4],[85,10,34,8],[86,8,35,6],[86,14,35,12,"AsyncStorage"],[86,26,35,24],[86,27,35,24,"default"],[86,34,35,24],[86,35,35,25,"removeItem"],[86,45,35,35],[86,46,35,36,"key"],[86,49,35,39],[86,50,35,40],[87,6,36,4],[87,7,36,5],[87,8,36,6],[87,15,36,13,"error"],[87,20,36,18],[87,22,36,20],[88,8,37,6],[88,12,37,10],[88,21,37,43,"window"],[88,27,37,49],[88,28,37,50,"localStorage"],[88,40,37,62],[88,42,37,64],[89,10,38,8,"window"],[89,16,38,14],[89,17,38,15,"localStorage"],[89,29,38,27],[89,30,38,28,"removeItem"],[89,40,38,38],[89,41,38,39,"key"],[89,44,38,42],[89,45,38,43],[90,8,39,6],[91,6,40,4],[92,4,41,2],[93,2,42,0],[95,2,44,0],[96,2,45,0],[96,8,45,6,"BACKEND_URL"],[96,19,45,17],[96,22,45,20,"Constants"],[96,31,45,29],[96,32,45,29,"default"],[96,39,45,29],[96,40,45,30,"expoConfig"],[96,50,45,40],[96,52,45,42,"extra"],[96,57,45,47],[96,59,45,49,"backendUrl"],[96,69,45,59],[96,73,45,63,"process"],[96,80,45,70],[96,81,45,71,"env"],[96,84,45,74],[96,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[96,108,45,98],[96,112,45,102],[96,163,45,153],[97,2,47,0],[97,8,47,6,"ApiClient"],[97,17,47,15],[97,18,47,16],[98,4,50,2,"constructor"],[98,15,50,13,"constructor"],[98,16,50,13],[98,18,50,16],[99,6,51,4],[99,10,51,8],[99,11,51,9,"client"],[99,17,51,15],[99,20,51,18,"axios"],[99,25,51,23],[99,26,51,23,"default"],[99,33,51,23],[99,34,51,24,"create"],[99,40,51,30],[99,41,51,31],[100,8,52,6,"baseURL"],[100,15,52,13],[100,17,52,15],[100,20,52,18,"BACKEND_URL"],[100,31,52,29],[100,37,52,35],[101,8,53,6,"timeout"],[101,15,53,13],[101,17,53,15],[101,22,53,20],[102,8,54,6,"headers"],[102,15,54,13],[102,17,54,15],[103,10,55,8],[103,24,55,22],[103,26,55,24],[104,8,56,6],[105,6,57,4],[105,7,57,5],[105,8,57,6],[107,6,59,4],[108,6,60,4],[108,10,60,8],[108,11,60,9,"client"],[108,17,60,15],[108,18,60,16,"interceptors"],[108,30,60,28],[108,31,60,29,"request"],[108,38,60,36],[108,39,60,37,"use"],[108,42,60,40],[108,43,60,41],[108,49,60,48,"config"],[108,55,60,54],[108,59,60,59],[109,8,61,6,"console"],[109,15,61,13],[109,16,61,14,"log"],[109,19,61,17],[109,20,61,18],[109,39,61,37,"config"],[109,45,61,43],[109,46,61,44,"method"],[109,52,61,50],[109,54,61,52,"toUpperCase"],[109,65,61,63],[109,66,61,64],[109,67,61,65],[109,71,61,69,"config"],[109,77,61,75],[109,78,61,76,"url"],[109,81,61,79],[109,83,61,81],[109,85,61,83,"config"],[109,91,61,89],[109,92,61,90,"data"],[109,96,61,94],[109,97,61,95],[110,8,63,6],[110,14,63,12,"token"],[110,19,63,17],[110,22,63,20],[110,28,63,26,"SecureStore"],[110,39,63,37],[110,40,63,38,"getItemAsync"],[110,52,63,50],[110,53,63,51],[110,68,63,66],[110,69,63,67],[111,8,64,6],[111,12,64,10,"token"],[111,17,64,15],[111,19,64,17],[112,10,65,8,"config"],[112,16,65,14],[112,17,65,15,"headers"],[112,24,65,22],[112,25,65,23,"Authorization"],[112,38,65,36],[112,41,65,39],[112,51,65,49,"token"],[112,56,65,54],[112,58,65,56],[113,8,66,6],[114,8,67,6],[114,15,67,13,"config"],[114,21,67,19],[115,6,68,4],[115,7,68,5],[115,8,68,6],[117,6,70,4],[118,6,71,4],[118,10,71,8],[118,11,71,9,"client"],[118,17,71,15],[118,18,71,16,"interceptors"],[118,30,71,28],[118,31,71,29,"response"],[118,39,71,37],[118,40,71,38,"use"],[118,43,71,41],[118,44,72,7,"response"],[118,52,72,15],[118,56,72,20],[119,8,73,8,"console"],[119,15,73,15],[119,16,73,16,"log"],[119,19,73,19],[119,20,73,20],[119,39,73,39,"response"],[119,47,73,47],[119,48,73,48,"status"],[119,54,73,54],[119,56,73,56],[119,58,73,58,"response"],[119,66,73,66],[119,67,73,67,"data"],[119,71,73,71],[119,72,73,72],[120,8,74,8],[120,15,74,15,"response"],[120,23,74,23],[121,6,75,6],[121,7,75,7],[121,9,76,7,"error"],[121,14,76,12],[121,18,76,17],[122,8,77,8,"console"],[122,15,77,15],[122,16,77,16,"log"],[122,19,77,19],[122,20,77,20],[122,36,77,36,"error"],[122,41,77,41],[122,42,77,42,"response"],[122,50,77,50],[122,52,77,52,"status"],[122,58,77,58],[122,62,77,62],[122,71,77,71],[122,73,77,73],[122,75,77,75,"error"],[122,80,77,80],[122,81,77,81,"response"],[122,89,77,89],[122,91,77,91,"data"],[122,95,77,95],[122,99,77,99,"error"],[122,104,77,104],[122,105,77,105,"message"],[122,112,77,112],[122,113,77,113],[123,8,79,8],[123,12,79,12,"error"],[123,17,79,17],[123,18,79,18,"response"],[123,26,79,26],[123,28,79,28,"status"],[123,34,79,34],[123,39,79,39],[123,42,79,42],[123,44,79,44],[124,10,80,10],[125,10,81,10,"SecureStore"],[125,21,81,21],[125,22,81,22,"deleteItemAsync"],[125,37,81,37],[125,38,81,38],[125,53,81,53],[125,54,81,54],[126,8,82,8],[127,8,83,8],[127,15,83,15,"Promise"],[127,22,83,22],[127,23,83,23,"reject"],[127,29,83,29],[127,30,83,30,"error"],[127,35,83,35],[127,36,83,36],[128,6,84,6],[128,7,85,4],[128,8,85,5],[129,4,86,2],[130,4,88,2],[130,10,88,8,"get"],[130,13,88,11,"get"],[130,14,88,21,"url"],[130,17,88,32],[130,19,88,46],[131,6,89,4],[131,12,89,10,"response"],[131,20,89,36],[131,23,89,39],[131,29,89,45],[131,33,89,49],[131,34,89,50,"client"],[131,40,89,56],[131,41,89,57,"get"],[131,44,89,60],[131,45,89,61,"url"],[131,48,89,64],[131,49,89,65],[132,6,90,4],[132,13,90,11,"response"],[132,21,90,19],[132,22,90,20,"data"],[132,26,90,24],[133,4,91,2],[134,4,93,2],[134,10,93,8,"post"],[134,14,93,12,"post"],[134,15,93,22,"url"],[134,18,93,33],[134,20,93,35,"data"],[134,24,93,45],[134,26,93,59],[135,6,94,4],[135,12,94,10,"response"],[135,20,94,36],[135,23,94,39],[135,29,94,45],[135,33,94,49],[135,34,94,50,"client"],[135,40,94,56],[135,41,94,57,"post"],[135,45,94,61],[135,46,94,62,"url"],[135,49,94,65],[135,51,94,67,"data"],[135,55,94,71],[135,56,94,72],[136,6,95,4],[136,13,95,11,"response"],[136,21,95,19],[136,22,95,20,"data"],[136,26,95,24],[137,4,96,2],[138,4,98,2],[138,10,98,8,"patch"],[138,15,98,13,"patch"],[138,16,98,23,"url"],[138,19,98,34],[138,21,98,36,"data"],[138,25,98,46],[138,27,98,60],[139,6,99,4],[139,12,99,10,"response"],[139,20,99,36],[139,23,99,39],[139,29,99,45],[139,33,99,49],[139,34,99,50,"client"],[139,40,99,56],[139,41,99,57,"patch"],[139,46,99,62],[139,47,99,63,"url"],[139,50,99,66],[139,52,99,68,"data"],[139,56,99,72],[139,57,99,73],[140,6,100,4],[140,13,100,11,"response"],[140,21,100,19],[140,22,100,20,"data"],[140,26,100,24],[141,4,101,2],[142,4,103,2],[142,10,103,8,"delete"],[142,16,103,14,"delete"],[142,17,103,24,"url"],[142,20,103,35],[142,22,103,49],[143,6,104,4],[143,12,104,10,"response"],[143,20,104,36],[143,23,104,39],[143,29,104,45],[143,33,104,49],[143,34,104,50,"client"],[143,40,104,56],[143,41,104,57,"delete"],[143,47,104,63],[143,48,104,64,"url"],[143,51,104,67],[143,52,104,68],[144,6,105,4],[144,13,105,11,"response"],[144,21,105,19],[144,22,105,20,"data"],[144,26,105,24],[145,4,106,2],[146,4,108,2],[146,10,108,8,"put"],[146,13,108,11,"put"],[146,14,108,21,"url"],[146,17,108,32],[146,19,108,34,"data"],[146,23,108,44],[146,25,108,58],[147,6,109,4],[147,12,109,10,"response"],[147,20,109,36],[147,23,109,39],[147,29,109,45],[147,33,109,49],[147,34,109,50,"client"],[147,40,109,56],[147,41,109,57,"put"],[147,44,109,60],[147,45,109,61,"url"],[147,48,109,64],[147,50,109,66,"data"],[147,54,109,70],[147,55,109,71],[148,6,110,4],[148,13,110,11,"response"],[148,21,110,19],[148,22,110,20,"data"],[148,26,110,24],[149,4,111,2],[150,2,112,0],[151,2,114,0],[151,8,114,6,"apiClient"],[151,17,114,15],[151,20,114,18],[151,24,114,22,"ApiClient"],[151,33,114,31],[151,34,114,32],[151,35,114,33],[153,2,116,0],[154,2,117,7],[154,8,117,13,"authAPI"],[154,15,117,20],[154,18,117,23],[155,4,118,2,"createSession"],[155,17,118,15],[155,19,118,18,"sessionId"],[155,28,118,35],[155,32,119,4,"apiClient"],[155,41,119,13],[155,42,119,14,"post"],[155,46,119,18],[155,47,119,19],[155,62,119,34],[155,64,119,36],[155,68,119,40],[155,70,119,42],[156,6,120,6,"headers"],[156,13,120,13],[156,15,120,15],[157,8,120,17],[157,22,120,31],[157,24,120,33,"sessionId"],[158,6,120,43],[159,4,121,4],[159,5,121,5],[159,6,121,6],[160,4,123,2,"signup"],[160,10,123,8],[160,12,123,11,"data"],[160,16,129,3],[160,20,129,8,"apiClient"],[160,29,129,17],[160,30,129,18,"post"],[160,34,129,22],[160,35,129,23],[160,49,129,37],[160,51,129,39,"data"],[160,55,129,43],[160,56,129,44],[161,4,131,2,"verifyOTP"],[161,13,131,11],[161,15,131,14,"data"],[161,19,131,55],[161,23,132,4,"apiClient"],[161,32,132,13],[161,33,132,14,"post"],[161,37,132,18],[161,38,132,19],[161,56,132,37],[161,58,132,39,"data"],[161,62,132,43],[161,63,132,44],[162,4,134,2,"login"],[162,9,134,7],[162,11,134,10,"data"],[162,15,134,51],[162,19,135,4,"apiClient"],[162,28,135,13],[162,29,135,14,"post"],[162,33,135,18],[162,34,135,19],[162,47,135,32],[162,49,135,34,"data"],[162,53,135,38],[162,54,135,39],[163,4,137,2,"resendOTP"],[163,13,137,11],[163,15,137,14,"email"],[163,20,137,27],[163,24,138,4,"apiClient"],[163,33,138,13],[163,34,138,14,"post"],[163,38,138,18],[163,39,138,19],[163,57,138,37],[163,59,138,39],[164,6,138,41,"email"],[165,4,138,47],[165,5,138,48],[165,6,138,49],[166,4,140,2,"getCurrentUser"],[166,18,140,16],[166,20,140,18,"getCurrentUser"],[166,21,140,18],[166,26,140,24,"apiClient"],[166,35,140,33],[166,36,140,34,"get"],[166,39,140,37],[166,40,140,38],[166,50,140,48],[166,51,140,49],[167,4,142,2,"logout"],[167,10,142,8],[167,12,142,10,"logout"],[167,13,142,10],[167,18,142,16,"apiClient"],[167,27,142,25],[167,28,142,26,"post"],[167,32,142,30],[167,33,142,31],[167,47,142,45],[167,48,142,46],[168,4,144,2,"updateLanguage"],[168,18,144,16],[168,20,144,19,"language"],[168,28,144,35],[168,32,145,4,"apiClient"],[168,41,145,13],[168,42,145,14,"patch"],[168,47,145,19],[168,48,145,20],[168,64,145,36],[168,66,145,38],[168,70,145,42],[168,72,145,44],[169,6,146,6,"params"],[169,12,146,12],[169,14,146,14],[170,8,146,16,"language"],[171,6,146,25],[172,4,147,4],[172,5,147,5],[172,6,147,6],[173,4,149,2,"toggleBiometric"],[173,19,149,17],[173,21,149,20,"enabled"],[173,28,149,36],[173,32,150,4,"apiClient"],[173,41,150,13],[173,42,150,14,"patch"],[173,47,150,19],[173,48,150,20],[173,65,150,37],[173,67,150,39],[173,71,150,43],[173,73,150,45],[174,6,151,6,"params"],[174,12,151,12],[174,14,151,14],[175,8,151,16,"enabled"],[176,6,151,24],[177,4,152,4],[177,5,152,5],[178,2,153,0],[178,3,153,1],[180,2,155,0],[181,2,156,0],[181,8,156,6,"logAdminAction"],[181,22,156,20],[181,25,156,23],[181,31,156,23,"logAdminAction"],[181,32,156,30,"action"],[181,38,156,44],[181,40,156,46,"competitionName"],[181,55,156,69],[181,57,156,71,"adminName"],[181,66,156,88],[181,68,156,90,"details"],[181,75,156,103],[181,80,156,108],[182,4,157,2],[182,8,157,6],[183,6,158,4],[183,12,158,10,"logs"],[183,16,158,14],[183,19,158,17],[183,26,158,23,"CrossPlatformStorage"],[183,46,158,43],[183,47,158,44,"getItem"],[183,54,158,51],[183,55,158,52],[183,66,158,63],[183,67,158,64],[183,72,158,68],[183,76,158,72],[184,6,159,4],[184,12,159,10,"adminLogs"],[184,21,159,19],[184,24,159,22,"JSON"],[184,28,159,26],[184,29,159,27,"parse"],[184,34,159,32],[184,35,159,33,"logs"],[184,39,159,37],[184,40,159,38],[185,6,161,4],[185,12,161,10,"logEntry"],[185,20,161,18],[185,23,161,21],[186,8,162,6,"id"],[186,10,162,8],[186,12,162,10],[186,19,162,17,"Date"],[186,23,162,21],[186,24,162,22,"now"],[186,27,162,25],[186,28,162,26],[186,29,162,27],[186,31,162,29],[187,8,163,6,"action"],[187,14,163,12],[188,8,164,6,"competition_name"],[188,24,164,22],[188,26,164,24,"competitionName"],[188,41,164,39],[189,8,165,6,"admin_name"],[189,18,165,16],[189,20,165,18,"adminName"],[189,29,165,27],[190,8,166,6,"details"],[190,15,166,13],[191,8,167,6,"timestamp"],[191,17,167,15],[191,19,167,17],[191,23,167,21,"Date"],[191,27,167,25],[191,28,167,26],[191,29,167,27],[191,30,167,28,"toISOString"],[191,41,167,39],[191,42,167,40],[192,6,168,4],[192,7,168,5],[193,6,170,4,"adminLogs"],[193,15,170,13],[193,16,170,14,"push"],[193,20,170,18],[193,21,170,19,"logEntry"],[193,29,170,27],[193,30,170,28],[194,6,171,4],[194,12,171,10,"CrossPlatformStorage"],[194,32,171,30],[194,33,171,31,"setItem"],[194,40,171,38],[194,41,171,39],[194,52,171,50],[194,54,171,52,"JSON"],[194,58,171,56],[194,59,171,57,"stringify"],[194,68,171,66],[194,69,171,67,"adminLogs"],[194,78,171,76],[194,79,171,77],[194,80,171,78],[195,6,173,4,"console"],[195,13,173,11],[195,14,173,12,"log"],[195,17,173,15],[195,18,173,16],[195,43,173,41],[195,45,173,43,"action"],[195,51,173,49],[195,53,173,51,"competitionName"],[195,68,173,66],[195,69,173,67],[196,4,174,2],[196,5,174,3],[196,6,174,4],[196,13,174,11,"error"],[196,18,174,16],[196,20,174,18],[197,6,175,4,"console"],[197,13,175,11],[197,14,175,12,"error"],[197,19,175,17],[197,20,175,18],[197,49,175,47],[197,51,175,49,"error"],[197,56,175,54],[197,57,175,55],[198,4,176,2],[199,2,177,0],[199,3,177,1],[201,2,179,0],[202,2,180,7],[202,8,180,13,"competitionAPI"],[202,22,180,27],[202,25,180,30],[203,4,181,2,"create"],[203,10,181,8],[203,12,181,11,"data"],[203,16,193,3],[203,20,193,8,"apiClient"],[203,29,193,17],[203,30,193,18,"post"],[203,34,193,22],[203,35,193,23],[203,50,193,38],[203,52,193,40,"data"],[203,56,193,44],[203,57,193,45],[204,4,195,2,"join"],[204,8,195,6],[204,10,195,9,"inviteCode"],[204,20,195,27],[204,24,196,4,"apiClient"],[204,33,196,13],[204,34,196,14,"post"],[204,38,196,18],[204,39,196,19],[204,59,196,39],[204,61,196,41],[205,6,196,43,"invite_code"],[205,17,196,54],[205,19,196,56,"inviteCode"],[206,4,196,67],[206,5,196,68],[206,6,196,69],[207,4,198,2,"getMyCompetitions"],[207,21,198,19],[207,23,198,21,"getMyCompetitions"],[207,24,198,21],[207,29,198,27,"apiClient"],[207,38,198,36],[207,39,198,37,"get"],[207,42,198,40],[207,43,198,41],[207,61,198,59],[207,62,198,60],[208,4,200,2,"getCompetition"],[208,18,200,16],[208,20,200,19,"id"],[208,22,200,29],[208,26,200,34,"apiClient"],[208,35,200,43],[208,36,200,44,"get"],[208,39,200,47],[208,40,200,48],[208,57,200,65,"id"],[208,59,200,67],[208,61,200,69],[208,62,200,70],[209,4,202,2,"updateStandings"],[209,19,202,17],[209,21,202,19,"updateStandings"],[209,22,203,4,"id"],[209,24,203,14],[209,26,204,4,"standings"],[209,35,204,18],[209,37,205,4,"matchday"],[209,45,205,21],[209,50,207,4,"apiClient"],[209,59,207,13],[209,60,207,14,"patch"],[209,65,207,19],[209,66,207,20],[209,83,207,37,"id"],[209,85,207,39],[209,97,207,51],[209,99,207,53],[210,6,208,6,"standings"],[210,15,208,15],[211,6,209,6,"matchday"],[212,4,210,4],[212,5,210,5],[212,6,210,6],[213,4,212,2,"payFee"],[213,10,212,8],[213,12,212,10,"payFee"],[213,13,212,11,"id"],[213,15,212,21],[213,17,212,23,"amount"],[213,23,212,37],[213,28,213,4,"apiClient"],[213,37,213,13],[213,38,213,14,"post"],[213,42,213,18],[213,43,213,19],[213,60,213,36,"id"],[213,62,213,38],[213,68,213,44],[213,70,213,46],[213,74,213,50],[213,76,213,52],[214,6,214,6,"params"],[214,12,214,12],[214,14,214,14],[215,8,214,16,"amount"],[216,6,214,23],[217,4,215,4],[217,5,215,5],[217,6,215,6],[218,4,217,2,"getTransactions"],[218,19,217,17],[218,21,217,20,"id"],[218,23,217,30],[218,27,218,4,"apiClient"],[218,36,218,13],[218,37,218,14,"get"],[218,40,218,17],[218,41,218,18],[218,58,218,35,"id"],[218,60,218,37],[218,75,218,52],[218,76,218,53],[219,4,220,2],[220,4,221,2,"createMock"],[220,14,221,12],[220,16,221,14],[220,22,221,21,"data"],[220,26,232,3],[220,30,232,8],[221,6,233,4,"console"],[221,13,233,11],[221,14,233,12,"log"],[221,17,233,15],[221,18,233,16],[221,50,233,48],[221,52,233,50,"data"],[221,56,233,54],[221,57,233,55,"name"],[221,61,233,59],[221,62,233,60],[222,6,234,4,"console"],[222,13,234,11],[222,14,234,12,"log"],[222,17,234,15],[222,18,234,16],[222,39,234,37],[222,41,234,39,"data"],[222,45,234,43],[222,46,234,44,"total_matchdays"],[222,61,234,59],[222,65,234,63],[222,67,234,65],[222,68,234,66],[224,6,236,4],[225,6,237,4],[225,12,237,10,"storedCompetitions"],[225,30,237,28],[225,33,237,31],[225,39,237,37,"CrossPlatformStorage"],[225,59,237,57],[225,60,237,58,"getItem"],[225,67,237,65],[225,68,237,66],[225,86,237,84],[225,87,237,85],[226,6,238,4],[226,10,238,8,"existingCompetitions"],[226,30,238,28],[226,33,238,31,"storedCompetitions"],[226,51,238,49],[226,54,238,52,"JSON"],[226,58,238,56],[226,59,238,57,"parse"],[226,64,238,62],[226,65,238,63,"storedCompetitions"],[226,83,238,81],[226,84,238,82],[226,87,238,85],[226,89,238,87],[227,6,240,4,"console"],[227,13,240,11],[227,14,240,12,"log"],[227,17,240,15],[227,18,240,16],[227,60,240,58],[227,62,240,60,"existingCompetitions"],[227,82,240,80],[227,83,240,81,"length"],[227,89,240,87],[227,90,240,88],[229,6,242,4],[230,6,243,4],[230,12,243,10,"existingNames"],[230,25,243,23],[230,28,243,26,"existingCompetitions"],[230,48,243,46],[230,49,243,47,"map"],[230,52,243,50],[230,53,243,52,"comp"],[230,57,243,61],[230,61,243,66,"comp"],[230,65,243,70],[230,66,243,71,"name"],[230,70,243,75],[230,71,243,76,"toLowerCase"],[230,82,243,87],[230,83,243,88],[230,84,243,89],[230,85,243,90],[231,6,244,4],[231,10,244,8,"existingNames"],[231,23,244,21],[231,24,244,22,"includes"],[231,32,244,30],[231,33,244,31,"data"],[231,37,244,35],[231,38,244,36,"name"],[231,42,244,40],[231,43,244,41,"toLowerCase"],[231,54,244,52],[231,55,244,53],[231,56,244,54],[231,57,244,55],[231,59,244,57],[232,8,245,6],[232,14,245,12],[232,18,245,16,"Error"],[232,23,245,21],[232,24,245,22],[232,86,245,84],[232,87,245,85],[233,6,246,4],[235,6,248,4],[236,6,249,4],[236,12,249,10,"newCompetition"],[236,26,249,24],[236,29,249,27],[237,8,250,6,"_id"],[237,11,250,9],[237,13,250,11],[237,21,250,19,"Date"],[237,25,250,23],[237,26,250,24,"now"],[237,29,250,27],[237,30,250,28],[237,31,250,29],[237,33,250,31],[238,8,251,6,"name"],[238,12,251,10],[238,14,251,12,"data"],[238,18,251,16],[238,19,251,17,"name"],[238,23,251,21],[239,8,252,6,"total_matchdays"],[239,23,252,21],[239,25,252,23,"data"],[239,29,252,27],[239,30,252,28,"total_matchdays"],[239,45,252,43],[239,49,252,47],[239,51,252,49],[240,8,253,6,"participation_cost_per_team"],[240,35,253,33],[240,37,253,35,"data"],[240,41,253,39],[240,42,253,40,"participation_cost_per_team"],[240,69,253,67],[240,73,253,71],[240,78,253,76],[241,8,254,6,"expected_teams"],[241,22,254,20],[241,24,254,22,"data"],[241,28,254,26],[241,29,254,27,"expected_teams"],[241,43,254,41],[241,47,254,45],[241,48,254,46],[242,8,255,6,"total_prize_pool"],[242,24,255,22],[242,26,255,24,"data"],[242,30,255,28],[242,31,255,29,"total_prize_pool"],[242,47,255,45],[242,51,255,49],[242,57,255,55],[243,8,256,6,"rules"],[243,13,256,11],[243,15,256,13,"data"],[243,19,256,17],[243,20,256,18,"rules"],[243,25,256,23],[244,8,257,6,"invite_code"],[244,19,257,17],[244,21,257,19,"Math"],[244,25,257,23],[244,26,257,24,"random"],[244,32,257,30],[244,33,257,31],[244,34,257,32],[244,35,257,33,"toString"],[244,43,257,41],[244,44,257,42],[244,46,257,44],[244,47,257,45],[244,48,257,46,"substr"],[244,54,257,52],[244,55,257,53],[244,56,257,54],[244,58,257,56],[244,59,257,57],[244,60,257,58],[244,61,257,59,"toUpperCase"],[244,72,257,70],[244,73,257,71],[244,74,257,72],[245,8,258,6,"invite_link"],[245,19,258,17],[245,21,258,19],[245,50,258,48,"Math"],[245,54,258,52],[245,55,258,53,"random"],[245,61,258,59],[245,62,258,60],[245,63,258,61],[245,64,258,62,"toString"],[245,72,258,70],[245,73,258,71],[245,75,258,73],[245,76,258,74],[245,77,258,75,"substr"],[245,83,258,81],[245,84,258,82],[245,85,258,83],[245,87,258,85],[245,88,258,86],[245,89,258,87],[245,90,258,88,"toUpperCase"],[245,101,258,99],[245,102,258,100],[245,103,258,101],[245,105,258,103],[246,8,259,6,"admin_id"],[246,16,259,14],[246,18,259,16],[246,44,259,42],[247,8,259,44],[248,8,260,6,"participants"],[248,20,260,18],[248,22,260,20],[248,23,261,8],[249,10,262,10,"id"],[249,12,262,12],[249,14,262,14],[249,40,262,40],[250,10,263,10,"name"],[250,14,263,14],[250,16,263,16],[250,33,263,33],[251,10,264,10,"email"],[251,15,264,15],[251,17,264,17],[251,36,264,36],[252,10,265,10,"is_admin"],[252,18,265,18],[252,20,265,20],[252,24,265,24],[253,10,266,10,"paid_matchdays"],[253,24,266,24],[253,26,266,26],[253,27,266,27],[253,28,266,28],[253,30,266,30],[253,31,266,31],[253,32,266,32],[254,10,266,34],[255,10,267,10,"points"],[255,16,267,16],[255,18,267,18],[256,8,268,8],[256,9,268,9],[256,10,269,7],[257,8,270,6,"wallet_balance"],[257,22,270,20],[257,24,270,22],[257,25,270,23],[258,8,271,6,"is_active"],[258,17,271,15],[258,19,271,17],[258,23,271,21],[259,8,272,6,"current_matchday"],[259,24,272,22],[259,26,272,24],[259,27,272,25],[260,8,272,27],[261,8,273,6,"standings"],[261,17,273,15],[261,19,273,17],[261,20,274,8],[262,10,274,10,"position"],[262,18,274,18],[262,20,274,20],[262,21,274,21],[263,10,274,23,"player_id"],[263,19,274,32],[263,21,274,34],[263,47,274,60],[264,10,274,62,"name"],[264,14,274,66],[264,16,274,68],[264,33,274,85],[265,10,274,87,"points"],[265,16,274,93],[265,18,274,95],[266,8,274,97],[266,9,274,98],[266,10,275,7],[267,8,276,6,"created_at"],[267,18,276,16],[267,20,276,18],[267,24,276,22,"Date"],[267,28,276,26],[267,29,276,27],[267,30,276,28],[267,31,276,29,"toISOString"],[267,42,276,40],[267,43,276,41],[267,44,276,42],[268,8,277,6,"updated_at"],[268,18,277,16],[268,20,277,18],[268,24,277,22,"Date"],[268,28,277,26],[268,29,277,27],[268,30,277,28],[268,31,277,29,"toISOString"],[268,42,277,40],[268,43,277,41],[269,6,278,4],[269,7,278,5],[271,6,280,4],[272,6,281,4,"existingCompetitions"],[272,26,281,24],[272,27,281,25,"push"],[272,31,281,29],[272,32,281,30,"newCompetition"],[272,46,281,44],[272,47,281,45],[273,6,282,4],[273,12,282,10,"CrossPlatformStorage"],[273,32,282,30],[273,33,282,31,"setItem"],[273,40,282,38],[273,41,282,39],[273,59,282,57],[273,61,282,59,"JSON"],[273,65,282,63],[273,66,282,64,"stringify"],[273,75,282,73],[273,76,282,74,"existingCompetitions"],[273,96,282,94],[273,97,282,95],[273,98,282,96],[275,6,284,4],[276,6,285,4],[276,12,285,10,"logAdminAction"],[276,26,285,24],[276,27,285,25],[276,35,285,33],[276,37,285,35,"newCompetition"],[276,51,285,49],[276,52,285,50,"name"],[276,56,285,54],[276,58,285,56],[276,75,285,73],[276,77,285,75],[277,8,286,6,"competition_id"],[277,22,286,20],[277,24,286,22,"newCompetition"],[277,38,286,36],[277,39,286,37,"_id"],[277,42,286,40],[278,8,287,6,"rules"],[278,13,287,11],[278,15,287,13,"newCompetition"],[278,29,287,27],[278,30,287,28,"rules"],[278,35,287,33],[279,8,288,6,"total_matchdays"],[279,23,288,21],[279,25,288,23,"newCompetition"],[279,39,288,37],[279,40,288,38,"total_matchdays"],[279,55,288,53],[280,8,289,6,"participation_cost_per_team"],[280,35,289,33],[280,37,289,35,"newCompetition"],[280,51,289,49],[280,52,289,50,"participation_cost_per_team"],[280,79,289,77],[281,8,290,6,"expected_teams"],[281,22,290,20],[281,24,290,22,"newCompetition"],[281,38,290,36],[281,39,290,37,"expected_teams"],[281,53,290,51],[282,8,291,6,"total_prize_pool"],[282,24,291,22],[282,26,291,24,"newCompetition"],[282,40,291,38],[282,41,291,39,"total_prize_pool"],[283,6,292,4],[283,7,292,5],[283,8,292,6],[284,6,294,4,"console"],[284,13,294,11],[284,14,294,12,"log"],[284,17,294,15],[284,18,294,16],[284,64,294,62],[284,66,294,64,"existingCompetitions"],[284,86,294,84],[284,87,294,85,"length"],[284,93,294,91],[284,94,294,92],[285,6,295,4,"console"],[285,13,295,11],[285,14,295,12,"log"],[285,17,295,15],[285,18,295,16],[285,38,295,36],[285,40,295,38,"newCompetition"],[285,54,295,52],[285,55,295,53,"_id"],[285,58,295,56],[285,59,295,57],[286,6,296,4,"console"],[286,13,296,11],[286,14,296,12,"log"],[286,17,296,15],[286,18,296,16],[286,40,296,38],[286,42,296,40,"newCompetition"],[286,56,296,54],[286,57,296,55,"name"],[286,61,296,59],[286,62,296,60],[287,6,297,4,"console"],[287,13,297,11],[287,14,297,12,"log"],[287,17,297,15],[287,18,297,16],[287,44,297,42],[287,46,297,44,"newCompetition"],[287,60,297,58],[287,61,297,59,"total_matchdays"],[287,76,297,74],[287,77,297,75],[288,6,299,4],[288,13,299,11,"newCompetition"],[288,27,299,25],[289,4,300,2],[289,5,300,3],[290,4,302,2],[291,4,303,2,"validateNameMock"],[291,20,303,18],[291,22,303,20],[291,28,303,27,"name"],[291,32,303,39],[291,36,303,44],[292,6,304,4,"console"],[292,13,304,11],[292,14,304,12,"log"],[292,17,304,15],[292,18,304,16],[292,57,304,55],[292,59,304,57,"name"],[292,63,304,61],[292,64,304,62],[293,6,306,4],[293,10,306,8],[293,11,306,9,"name"],[293,15,306,13],[293,16,306,14,"trim"],[293,20,306,18],[293,21,306,19],[293,22,306,20],[293,24,306,22],[294,8,307,6],[294,15,307,13],[295,10,307,15,"available"],[295,19,307,24],[295,21,307,26],[295,25,307,30],[296,10,307,32,"message"],[296,17,307,39],[296,19,307,41],[297,8,307,44],[297,9,307,45],[298,6,308,4],[300,6,310,4],[301,6,311,4],[301,12,311,10,"storedCompetitions"],[301,30,311,28],[301,33,311,31],[301,39,311,37,"CrossPlatformStorage"],[301,59,311,57],[301,60,311,58,"getItem"],[301,67,311,65],[301,68,311,66],[301,86,311,84],[301,87,311,85],[302,6,312,4],[302,10,312,8,"existingCompetitions"],[302,30,312,28],[302,33,312,31,"storedCompetitions"],[302,51,312,49],[302,54,312,52,"JSON"],[302,58,312,56],[302,59,312,57,"parse"],[302,64,312,62],[302,65,312,63,"storedCompetitions"],[302,83,312,81],[302,84,312,82],[302,87,312,85],[302,89,312,87],[304,6,314,4],[305,6,315,4],[305,12,315,10,"defaultNames"],[305,24,315,22],[305,27,315,25],[305,28,315,26],[305,50,315,48],[305,52,315,50],[305,78,315,76],[305,80,315,78],[305,96,315,94],[305,97,315,95],[306,6,316,4],[306,12,316,10,"allNames"],[306,20,316,18],[306,23,316,21],[306,24,317,6],[306,27,317,9,"existingCompetitions"],[306,47,317,29],[306,48,317,30,"map"],[306,51,317,33],[306,52,317,35,"comp"],[306,56,317,44],[306,60,317,49,"comp"],[306,64,317,53],[306,65,317,54,"name"],[306,69,317,58],[306,70,317,59,"toLowerCase"],[306,81,317,70],[306,82,317,71],[306,83,317,72],[306,84,317,73],[306,86,318,6],[306,89,318,9,"defaultNames"],[306,101,318,21],[306,102,318,22,"map"],[306,105,318,25],[306,106,318,26,"name"],[306,110,318,30],[306,114,318,34,"name"],[306,118,318,38],[306,119,318,39,"toLowerCase"],[306,130,318,50],[306,131,318,51],[306,132,318,52],[306,133,318,53],[306,134,319,5],[307,6,321,4],[307,12,321,10,"isAvailable"],[307,23,321,21],[307,26,321,24],[307,27,321,25,"allNames"],[307,35,321,33],[307,36,321,34,"includes"],[307,44,321,42],[307,45,321,43,"name"],[307,49,321,47],[307,50,321,48,"toLowerCase"],[307,61,321,59],[307,62,321,60],[307,63,321,61],[307,64,321,62],[308,6,323,4],[308,13,323,11],[309,8,324,6,"available"],[309,17,324,15],[309,19,324,17,"isAvailable"],[309,30,324,28],[310,8,325,6,"message"],[310,15,325,13],[310,17,325,15,"isAvailable"],[310,28,325,26],[310,31,325,29],[310,47,325,45],[310,50,325,48],[311,6,326,4],[311,7,326,5],[312,4,327,2],[312,5,327,3],[313,4,329,2,"getMyCompetitionsMock"],[313,25,329,23],[313,27,329,25],[313,33,329,25,"getMyCompetitionsMock"],[313,34,329,25],[313,39,329,37],[314,6,330,4,"console"],[314,13,330,11],[314,14,330,12,"log"],[314,17,330,15],[314,18,330,16],[314,52,330,50],[314,53,330,51],[316,6,332,4],[317,6,333,4],[317,12,333,10,"storedCompetitions"],[317,30,333,28],[317,33,333,31],[317,39,333,37,"CrossPlatformStorage"],[317,59,333,57],[317,60,333,58,"getItem"],[317,67,333,65],[317,68,333,66],[317,86,333,84],[317,87,333,85],[318,6,334,4],[318,10,334,8,"competitions"],[318,22,334,20],[318,25,334,23,"storedCompetitions"],[318,43,334,41],[318,46,334,44,"JSON"],[318,50,334,48],[318,51,334,49,"parse"],[318,56,334,54],[318,57,334,55,"storedCompetitions"],[318,75,334,73],[318,76,334,74],[318,79,334,77],[318,81,334,79],[319,6,336,4,"console"],[319,13,336,11],[319,14,336,12,"log"],[319,17,336,15],[319,18,336,16],[319,53,336,51],[319,55,336,53,"competitions"],[319,67,336,65],[319,68,336,66,"length"],[319,74,336,72],[319,75,336,73],[321,6,338,4],[322,6,339,4,"competitions"],[322,18,339,16],[322,19,339,17,"forEach"],[322,26,339,24],[322,27,339,25],[322,28,339,26,"comp"],[322,32,339,35],[322,34,339,37,"index"],[322,39,339,50],[322,44,339,55],[323,8,340,6,"console"],[323,15,340,13],[323,16,340,14,"log"],[323,19,340,17],[323,20,340,18],[323,23,340,21,"index"],[323,28,340,26],[323,31,340,29],[323,32,340,30],[323,37,340,35,"comp"],[323,41,340,39],[323,42,340,40,"name"],[323,46,340,44],[323,55,340,53,"comp"],[323,59,340,57],[323,60,340,58,"_id"],[323,63,340,61],[323,66,340,64],[323,67,340,65],[324,6,341,4],[324,7,341,5],[324,8,341,6],[325,6,343,4],[325,13,343,11,"competitions"],[325,25,343,23],[326,4,344,2],[326,5,344,3],[327,4,346,2,"joinMock"],[327,12,346,10],[327,14,346,12],[327,20,346,19,"inviteCode"],[327,30,346,37],[327,34,346,42],[328,6,347,4,"console"],[328,13,347,11],[328,14,347,12,"log"],[328,17,347,15],[328,18,347,16],[328,59,347,57],[328,61,347,59,"inviteCode"],[328,71,347,69],[328,72,347,70],[329,6,348,4],[329,10,348,8,"inviteCode"],[329,20,348,18],[329,21,348,19,"length"],[329,27,348,25],[329,30,348,28],[329,31,348,29],[329,33,348,31],[330,8,349,6],[330,14,349,12],[330,18,349,16,"Error"],[330,23,349,21],[330,24,349,22],[330,45,349,43],[330,46,349,44],[331,6,350,4],[332,6,351,4],[332,13,351,11],[333,8,351,13,"message"],[333,15,351,20],[333,17,351,22],[334,6,351,57],[334,7,351,58],[335,4,352,2],[335,5,352,3],[336,4,354,2],[337,4,355,2,"deleteMock"],[337,14,355,12],[337,16,355,14],[337,22,355,21,"competitionId"],[337,35,355,42],[337,39,355,47],[338,6,356,4,"console"],[338,13,356,11],[338,14,356,12,"log"],[338,17,356,15],[338,18,356,16],[338,51,356,49],[338,53,356,51,"competitionId"],[338,66,356,64],[338,67,356,65],[339,6,358,4],[339,12,358,10,"storedCompetitions"],[339,30,358,28],[339,33,358,31],[339,39,358,37,"CrossPlatformStorage"],[339,59,358,57],[339,60,358,58,"getItem"],[339,67,358,65],[339,68,358,66],[339,86,358,84],[339,87,358,85],[340,6,359,4],[340,10,359,8,"competitions"],[340,22,359,20],[340,25,359,23,"storedCompetitions"],[340,43,359,41],[340,46,359,44,"JSON"],[340,50,359,48],[340,51,359,49,"parse"],[340,56,359,54],[340,57,359,55,"storedCompetitions"],[340,75,359,73],[340,76,359,74],[340,79,359,77],[340,81,359,79],[341,6,361,4],[341,12,361,10,"competitionToDelete"],[341,31,361,29],[341,34,361,32,"competitions"],[341,46,361,44],[341,47,361,45,"find"],[341,51,361,49],[341,52,361,51,"comp"],[341,56,361,60],[341,60,361,65,"comp"],[341,64,361,69],[341,65,361,70,"_id"],[341,68,361,73],[341,73,361,78,"competitionId"],[341,86,361,91],[341,87,361,92],[342,6,362,4],[342,10,362,8],[342,11,362,9,"competitionToDelete"],[342,30,362,28],[342,32,362,30],[343,8,363,6],[343,14,363,12],[343,18,363,16,"Error"],[343,23,363,21],[343,24,363,22],[343,47,363,45],[343,48,363,46],[344,6,364,4],[346,6,366,4],[347,6,367,4],[347,10,367,8,"competitionToDelete"],[347,29,367,27],[347,30,367,28,"admin_id"],[347,38,367,36],[347,43,367,41],[347,69,367,67],[347,71,367,69],[348,8,368,6],[348,14,368,12],[348,18,368,16,"Error"],[348,23,368,21],[348,24,368,22],[348,64,368,62],[348,65,368,63],[349,6,369,4],[351,6,371,4],[352,6,372,4,"competitions"],[352,18,372,16],[352,21,372,19,"competitions"],[352,33,372,31],[352,34,372,32,"filter"],[352,40,372,38],[352,41,372,40,"comp"],[352,45,372,49],[352,49,372,54,"comp"],[352,53,372,58],[352,54,372,59,"_id"],[352,57,372,62],[352,62,372,67,"competitionId"],[352,75,372,80],[352,76,372,81],[353,6,373,4],[353,12,373,10,"CrossPlatformStorage"],[353,32,373,30],[353,33,373,31,"setItem"],[353,40,373,38],[353,41,373,39],[353,59,373,57],[353,61,373,59,"JSON"],[353,65,373,63],[353,66,373,64,"stringify"],[353,75,373,73],[353,76,373,74,"competitions"],[353,88,373,86],[353,89,373,87],[353,90,373,88],[355,6,375,4],[356,6,376,4],[356,12,376,10,"logAdminAction"],[356,26,376,24],[356,27,376,25],[356,35,376,33],[356,37,376,35,"competitionToDelete"],[356,56,376,54],[356,57,376,55,"name"],[356,61,376,59],[356,63,376,61],[356,80,376,78],[356,81,376,79],[357,6,378,4,"console"],[357,13,378,11],[357,14,378,12,"log"],[357,17,378,15],[357,18,378,16],[357,54,378,52],[357,55,378,53],[358,6,379,4],[358,13,379,11],[359,8,379,13,"message"],[359,15,379,20],[359,17,379,22],[360,6,379,57],[360,7,379,58],[361,4,380,2],[361,5,380,3],[362,4,382,2],[363,4,383,2,"editMock"],[363,12,383,10],[363,14,383,12],[363,20,383,12,"editMock"],[363,21,383,19,"competitionId"],[363,34,383,40],[363,36,383,42,"updates"],[363,43,383,54],[363,48,383,59],[364,6,384,4,"console"],[364,13,384,11],[364,14,384,12,"log"],[364,17,384,15],[364,18,384,16],[364,49,384,47],[364,51,384,49,"competitionId"],[364,64,384,62],[364,66,384,64,"updates"],[364,73,384,71],[364,74,384,72],[365,6,386,4],[365,12,386,10,"storedCompetitions"],[365,30,386,28],[365,33,386,31],[365,39,386,37,"CrossPlatformStorage"],[365,59,386,57],[365,60,386,58,"getItem"],[365,67,386,65],[365,68,386,66],[365,86,386,84],[365,87,386,85],[366,6,387,4],[366,10,387,8,"competitions"],[366,22,387,20],[366,25,387,23,"storedCompetitions"],[366,43,387,41],[366,46,387,44,"JSON"],[366,50,387,48],[366,51,387,49,"parse"],[366,56,387,54],[366,57,387,55,"storedCompetitions"],[366,75,387,73],[366,76,387,74],[366,79,387,77],[366,81,387,79],[367,6,389,4],[367,12,389,10,"competitionIndex"],[367,28,389,26],[367,31,389,29,"competitions"],[367,43,389,41],[367,44,389,42,"findIndex"],[367,53,389,51],[367,54,389,53,"comp"],[367,58,389,62],[367,62,389,67,"comp"],[367,66,389,71],[367,67,389,72,"_id"],[367,70,389,75],[367,75,389,80,"competitionId"],[367,88,389,93],[367,89,389,94],[368,6,390,4],[368,10,390,8,"competitionIndex"],[368,26,390,24],[368,31,390,29],[368,32,390,30],[368,33,390,31],[368,35,390,33],[369,8,391,6],[369,14,391,12],[369,18,391,16,"Error"],[369,23,391,21],[369,24,391,22],[369,47,391,45],[369,48,391,46],[370,6,392,4],[371,6,394,4],[371,12,394,10,"competition"],[371,23,394,21],[371,26,394,24,"competitions"],[371,38,394,36],[371,39,394,37,"competitionIndex"],[371,55,394,53],[371,56,394,54],[373,6,396,4],[374,6,397,4],[374,10,397,8,"competition"],[374,21,397,19],[374,22,397,20,"admin_id"],[374,30,397,28],[374,35,397,33],[374,61,397,59],[374,63,397,61],[375,8,398,6],[375,14,398,12],[375,18,398,16,"Error"],[375,23,398,21],[375,24,398,22],[375,62,398,60],[375,63,398,61],[376,6,399,4],[378,6,401,4],[379,6,402,4,"competitions"],[379,18,402,16],[379,19,402,17,"competitionIndex"],[379,35,402,33],[379,36,402,34],[379,39,402,37],[380,8,403,6],[380,11,403,9,"competition"],[380,22,403,20],[381,8,404,6],[381,11,404,9,"updates"],[381,18,404,16],[382,8,405,6,"updated_at"],[382,18,405,16],[382,20,405,18],[382,24,405,22,"Date"],[382,28,405,26],[382,29,405,27],[382,30,405,28],[382,31,405,29,"toISOString"],[382,42,405,40],[382,43,405,41],[383,6,406,4],[383,7,406,5],[384,6,408,4],[384,12,408,10,"CrossPlatformStorage"],[384,32,408,30],[384,33,408,31,"setItem"],[384,40,408,38],[384,41,408,39],[384,59,408,57],[384,61,408,59,"JSON"],[384,65,408,63],[384,66,408,64,"stringify"],[384,75,408,73],[384,76,408,74,"competitions"],[384,88,408,86],[384,89,408,87],[384,90,408,88],[386,6,410,4],[387,6,411,4],[387,12,411,10,"logAdminAction"],[387,26,411,24],[387,27,411,25],[387,33,411,31],[387,35,411,33,"competition"],[387,46,411,44],[387,47,411,45,"name"],[387,51,411,49],[387,53,411,51],[387,70,411,68],[387,72,411,70,"updates"],[387,79,411,77],[387,80,411,78],[388,6,413,4,"console"],[388,13,413,11],[388,14,413,12,"log"],[388,17,413,15],[388,18,413,16],[388,54,413,52],[388,55,413,53],[389,6,414,4],[389,13,414,11,"competitions"],[389,25,414,23],[389,26,414,24,"competitionIndex"],[389,42,414,40],[389,43,414,41],[390,4,415,2],[390,5,415,3],[391,4,417,2],[392,4,418,2,"awardDailyPrizeMock"],[392,23,418,21],[392,25,418,23],[392,31,418,23,"awardDailyPrizeMock"],[392,32,418,30,"competitionId"],[392,45,418,51],[392,47,418,53,"matchday"],[392,55,418,69],[392,57,418,71,"winnerId"],[392,65,418,87],[392,70,418,92],[393,6,419,4,"console"],[393,13,419,11],[393,14,419,12,"log"],[393,17,419,15],[393,18,419,16],[393,62,419,60],[393,64,419,62,"matchday"],[393,72,419,70],[393,74,419,72],[393,83,419,81],[393,85,419,83,"winnerId"],[393,93,419,91],[393,94,419,92],[394,6,421,4],[394,12,421,10,"storedCompetitions"],[394,30,421,28],[394,33,421,31],[394,39,421,37,"CrossPlatformStorage"],[394,59,421,57],[394,60,421,58,"getItem"],[394,67,421,65],[394,68,421,66],[394,86,421,84],[394,87,421,85],[395,6,422,4],[395,10,422,8,"competitions"],[395,22,422,20],[395,25,422,23,"storedCompetitions"],[395,43,422,41],[395,46,422,44,"JSON"],[395,50,422,48],[395,51,422,49,"parse"],[395,56,422,54],[395,57,422,55,"storedCompetitions"],[395,75,422,73],[395,76,422,74],[395,79,422,77],[395,81,422,79],[396,6,424,4],[396,12,424,10,"competitionIndex"],[396,28,424,26],[396,31,424,29,"competitions"],[396,43,424,41],[396,44,424,42,"findIndex"],[396,53,424,51],[396,54,424,53,"comp"],[396,58,424,62],[396,62,424,67,"comp"],[396,66,424,71],[396,67,424,72,"_id"],[396,70,424,75],[396,75,424,80,"competitionId"],[396,88,424,93],[396,89,424,94],[397,6,425,4],[397,10,425,8,"competitionIndex"],[397,26,425,24],[397,31,425,29],[397,32,425,30],[397,33,425,31],[397,35,425,33],[398,8,426,6],[398,14,426,12],[398,18,426,16,"Error"],[398,23,426,21],[398,24,426,22],[398,47,426,45],[398,48,426,46],[399,6,427,4],[400,6,429,4],[400,12,429,10,"competition"],[400,23,429,21],[400,26,429,24,"competitions"],[400,38,429,36],[400,39,429,37,"competitionIndex"],[400,55,429,53],[400,56,429,54],[402,6,431,4],[403,6,432,4],[403,10,432,8,"competition"],[403,21,432,19],[403,22,432,20,"admin_id"],[403,30,432,28],[403,35,432,33],[403,61,432,59],[403,63,432,61],[404,8,433,6],[404,14,433,12],[404,18,433,16,"Error"],[404,23,433,21],[404,24,433,22],[404,59,433,57],[404,60,433,58],[405,6,434,4],[407,6,436,4],[408,6,437,4],[408,10,437,8],[408,11,437,9,"competition"],[408,22,437,20],[408,23,437,21,"rules"],[408,28,437,26],[408,32,437,30],[408,33,437,31],[408,34,437,32],[408,41,437,39],[408,43,437,41],[408,50,437,48],[408,51,437,49],[408,52,437,50,"includes"],[408,60,437,58],[408,61,437,59,"competition"],[408,72,437,70],[408,73,437,71,"rules"],[408,78,437,76],[408,79,437,77,"type"],[408,83,437,81],[408,84,437,82],[408,86,437,84],[409,8,438,6],[409,14,438,12],[409,18,438,16,"Error"],[409,23,438,21],[409,24,438,22],[409,69,438,67],[409,70,438,68],[410,6,439,4],[411,6,441,4],[411,12,441,10,"dailyPrizeAmount"],[411,28,441,26],[411,31,441,29,"competition"],[411,42,441,40],[411,43,441,41,"rules"],[411,48,441,46],[411,49,441,47,"daily_prize"],[411,60,441,58],[411,64,441,62],[411,65,441,63],[412,6,442,4],[412,12,442,10,"winner"],[412,18,442,16],[412,21,442,19,"competition"],[412,32,442,30],[412,33,442,31,"participants"],[412,45,442,43],[412,46,442,44,"find"],[412,50,442,48],[412,51,442,50,"p"],[412,52,442,56],[412,56,442,61,"p"],[412,57,442,62],[412,58,442,63,"id"],[412,60,442,65],[412,65,442,70,"winnerId"],[412,73,442,78],[412,74,442,79],[413,6,444,4],[413,10,444,8],[413,11,444,9,"winner"],[413,17,444,15],[413,19,444,17],[414,8,445,6],[414,14,445,12],[414,18,445,16,"Error"],[414,23,445,21],[414,24,445,22],[414,57,445,55],[414,58,445,56],[415,6,446,4],[417,6,448,4],[418,6,449,4],[418,10,449,8],[418,11,449,9,"competition"],[418,22,449,20],[418,23,449,21,"daily_winners"],[418,36,449,34],[418,38,449,36],[419,8,450,6,"competition"],[419,19,450,17],[419,20,450,18,"daily_winners"],[419,33,450,31],[419,36,450,34],[419,37,450,35],[419,38,450,36],[420,6,451,4],[422,6,453,4],[423,6,454,4],[423,10,454,8,"competition"],[423,21,454,19],[423,22,454,20,"daily_winners"],[423,35,454,33],[423,36,454,34,"matchday"],[423,44,454,42],[423,45,454,43],[423,47,454,45],[424,8,455,6],[424,14,455,12],[424,18,455,16,"Error"],[424,23,455,21],[424,24,455,22],[424,52,455,50,"matchday"],[424,60,455,58],[424,83,455,81,"competition"],[424,94,455,92],[424,95,455,93,"daily_winners"],[424,108,455,106],[424,109,455,107,"matchday"],[424,117,455,115],[424,118,455,116],[424,119,455,117,"name"],[424,123,455,121],[424,125,455,123],[424,126,455,124],[425,6,456,4],[427,6,458,4],[428,6,459,4,"competition"],[428,17,459,15],[428,18,459,16,"daily_winners"],[428,31,459,29],[428,32,459,30,"matchday"],[428,40,459,38],[428,41,459,39],[428,44,459,42],[429,8,460,6,"user_id"],[429,15,460,13],[429,17,460,15,"winnerId"],[429,25,460,23],[430,8,461,6,"name"],[430,12,461,10],[430,14,461,12,"winner"],[430,20,461,18],[430,21,461,19,"name"],[430,25,461,23],[431,8,462,6,"amount"],[431,14,462,12],[431,16,462,14,"dailyPrizeAmount"],[431,32,462,30],[432,8,463,6,"awarded_at"],[432,18,463,16],[432,20,463,18],[432,24,463,22,"Date"],[432,28,463,26],[432,29,463,27],[432,30,463,28],[432,31,463,29,"toISOString"],[432,42,463,40],[432,43,463,41],[433,6,464,4],[433,7,464,5],[435,6,466,4],[436,6,467,4,"competitions"],[436,18,467,16],[436,19,467,17,"competitionIndex"],[436,35,467,33],[436,36,467,34],[436,39,467,37,"competition"],[436,50,467,48],[437,6,468,4],[437,12,468,10,"CrossPlatformStorage"],[437,32,468,30],[437,33,468,31,"setItem"],[437,40,468,38],[437,41,468,39],[437,59,468,57],[437,61,468,59,"JSON"],[437,65,468,63],[437,66,468,64,"stringify"],[437,75,468,73],[437,76,468,74,"competitions"],[437,88,468,86],[437,89,468,87],[437,90,468,88],[439,6,470,4],[440,6,471,4],[440,12,471,10,"logAdminAction"],[440,26,471,24],[440,27,471,25],[440,46,471,44],[440,48,471,46,"competition"],[440,59,471,57],[440,60,471,58,"name"],[440,64,471,62],[440,66,471,64],[440,83,471,81],[440,85,471,83],[441,8,472,6,"matchday"],[441,16,472,14],[442,8,473,6,"winner"],[442,14,473,12],[442,16,473,14,"winner"],[442,22,473,20],[442,23,473,21,"name"],[442,27,473,25],[443,8,474,6,"amount"],[443,14,474,12],[443,16,474,14,"dailyPrizeAmount"],[444,6,475,4],[444,7,475,5],[444,8,475,6],[446,6,477,4],[447,6,478,4,"console"],[447,13,478,11],[447,14,478,12,"log"],[447,17,478,15],[447,18,478,16],[447,24,478,22,"winner"],[447,30,478,28],[447,31,478,29,"name"],[447,35,478,33],[447,48,478,46,"dailyPrizeAmount"],[447,64,478,62],[447,89,478,87,"matchday"],[447,97,478,95],[447,99,478,97],[447,100,478,98],[448,6,480,4,"console"],[448,13,480,11],[448,14,480,12,"log"],[448,17,480,15],[448,18,480,16],[448,54,480,52],[448,55,480,53],[449,6,481,4],[449,13,481,11],[450,8,482,6,"message"],[450,15,482,13],[450,17,482,15],[450,36,482,34,"dailyPrizeAmount"],[450,52,482,50],[450,67,482,65,"winner"],[450,73,482,71],[450,74,482,72,"name"],[450,78,482,76],[450,95,482,93,"matchday"],[450,103,482,101],[450,105,482,103],[451,8,483,6,"competition"],[451,19,483,17],[451,21,483,19,"competition"],[452,6,484,4],[452,7,484,5],[453,4,485,2],[453,5,485,3],[454,4,487,2],[455,4,488,2,"getAdminLogsMock"],[455,20,488,18],[455,22,488,20],[455,28,488,20,"getAdminLogsMock"],[455,29,488,20],[455,34,488,32],[456,6,489,4,"console"],[456,13,489,11],[456,14,489,12,"log"],[456,17,489,15],[456,18,489,16],[456,47,489,45],[456,48,489,46],[457,6,491,4],[457,10,491,8],[458,8,492,6],[458,14,492,12,"logs"],[458,18,492,16],[458,21,492,19],[458,28,492,25,"CrossPlatformStorage"],[458,48,492,45],[458,49,492,46,"getItem"],[458,56,492,53],[458,57,492,54],[458,68,492,65],[458,69,492,66],[458,74,492,70],[458,78,492,74],[459,8,493,6],[459,14,493,12,"adminLogs"],[459,23,493,21],[459,26,493,24,"JSON"],[459,30,493,28],[459,31,493,29,"parse"],[459,36,493,34],[459,37,493,35,"logs"],[459,41,493,39],[459,42,493,40],[461,8,495,6],[462,8,496,6,"adminLogs"],[462,17,496,15],[462,18,496,16,"sort"],[462,22,496,20],[462,23,496,21],[462,24,496,22,"a"],[462,25,496,28],[462,27,496,30,"b"],[462,28,496,36],[462,33,496,41],[462,37,496,45,"Date"],[462,41,496,49],[462,42,496,50,"b"],[462,43,496,51],[462,44,496,52,"timestamp"],[462,53,496,61],[462,54,496,62],[462,55,496,63,"getTime"],[462,62,496,70],[462,63,496,71],[462,64,496,72],[462,67,496,75],[462,71,496,79,"Date"],[462,75,496,83],[462,76,496,84,"a"],[462,77,496,85],[462,78,496,86,"timestamp"],[462,87,496,95],[462,88,496,96],[462,89,496,97,"getTime"],[462,96,496,104],[462,97,496,105],[462,98,496,106],[462,99,496,107],[463,8,498,6,"console"],[463,15,498,13],[463,16,498,14,"log"],[463,19,498,17],[463,20,498,18],[463,42,498,40],[463,44,498,42,"adminLogs"],[463,53,498,51],[463,54,498,52,"length"],[463,60,498,58],[463,61,498,59],[464,8,499,6],[464,15,499,13,"adminLogs"],[464,24,499,22],[465,6,500,4],[465,7,500,5],[465,8,500,6],[465,15,500,13,"error"],[465,20,500,18],[465,22,500,20],[466,8,501,6,"console"],[466,15,501,13],[466,16,501,14,"error"],[466,21,501,19],[466,22,501,20],[466,52,501,50],[466,54,501,52,"error"],[466,59,501,57],[466,60,501,58],[467,8,502,6],[467,15,502,13],[467,17,502,15],[468,6,503,4],[469,4,504,2],[470,2,505,0],[470,3,505,1],[472,2,507,0],[473,2,508,7],[473,8,508,13,"walletAPI"],[473,17,508,22],[473,20,508,25],[474,4,509,2,"getBalance"],[474,14,509,12],[474,16,509,14,"getBalance"],[474,17,509,14],[474,22,509,20,"apiClient"],[474,31,509,29],[474,32,509,30,"get"],[474,35,509,33],[474,36,509,34],[474,53,509,51],[474,54,509,52],[475,4,511,2,"topUp"],[475,9,511,7],[475,11,511,10,"amount"],[475,17,511,24],[475,21,512,4,"apiClient"],[475,30,512,13],[475,31,512,14,"post"],[475,35,512,18],[475,36,512,19],[475,51,512,34],[475,53,512,36],[475,57,512,40],[475,59,512,42],[476,6,513,6,"params"],[476,12,513,12],[476,14,513,14],[477,8,513,16,"amount"],[478,6,513,23],[479,4,514,4],[479,5,514,5],[479,6,514,6],[480,4,516,2,"withdraw"],[480,12,516,10],[480,14,516,13,"amount"],[480,20,516,27],[480,24,517,4,"apiClient"],[480,33,517,13],[480,34,517,14,"post"],[480,38,517,18],[480,39,517,19],[480,57,517,37],[480,59,517,39],[480,63,517,43],[480,65,517,45],[481,6,518,6,"params"],[481,12,518,12],[481,14,518,14],[482,8,518,16,"amount"],[483,6,518,23],[484,4,519,4],[484,5,519,5],[484,6,519,6],[485,4,521,2,"getTransactions"],[485,19,521,17],[485,21,521,19,"getTransactions"],[485,22,521,19],[485,27,521,25,"apiClient"],[485,36,521,34],[485,37,521,35,"get"],[485,40,521,38],[485,41,521,39],[485,56,521,54],[486,2,522,0],[486,3,522,1],[487,2,524,0],[487,6,524,0,"_default"],[487,14,524,0],[487,17,524,15,"apiClient"],[487,26,524,24],[488,0,524,25],[488,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBY;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;cgCG;mDCsB,sCD;GhCyD;oBkCG;kCDc,sCC;0BCC,0BD;GlCS;yBoCE;yBCU;KDE;GpCG;YsCE;GtCM;cuCG;kDCM,yCD;uCEW,yCF;GvCQ;Y0CG;oDCM,yCD;G1C0B;uB4CG;oDDM,yCC;iDCkB,6BD;G5C2C;oB8CG;qBCQ,qFD;G9CQ;cgDK,sChD;SiDE;MjDG;YkDE;MlDG;mBmDE,oCnD"},"hasCjsExports":false},"type":"js/module"}]}