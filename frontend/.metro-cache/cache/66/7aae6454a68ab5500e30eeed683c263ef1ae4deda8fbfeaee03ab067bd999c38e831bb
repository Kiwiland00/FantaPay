{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":39,"index":150}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"../utils/CrossPlatformStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":151},"end":{"line":4,"column":65,"index":216}}],"key":"f35s9TWsgQpxKKiCp9CmSar+L+U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _utilsCrossPlatformStorage = require(_dependencyMap[3], \"../utils/CrossPlatformStorage\");\n  var CrossPlatformStorage = _interopDefault(_utilsCrossPlatformStorage);\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantaleague-pay.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.default.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      // Generate truly random unique invite code (not based on name)\n      const generateRandomCode = () => {\n        const chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'; // Exclude confusing chars like O, 0, I, L\n        let result = '';\n        for (let i = 0; i < 8; i++) {\n          result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n      };\n\n      // Ensure invite code is globally unique\n      let inviteCode = generateRandomCode();\n      while (existingCompetitions.some(comp => comp.invite_code === inviteCode)) {\n        inviteCode = generateRandomCode();\n        console.log('🔄 Generated new code due to collision:', inviteCode);\n      }\n      console.log('✅ Generated unique invite code:', inviteCode);\n      const newCompetition = {\n        _id: `comp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: inviteCode,\n        // Random unique code\n        invite_link: `https://fantapay.app/join/${inviteCode}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        competitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n        });\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    },\n    // Critical Missing Method: Get ALL competitions for uniqueness validation\n    getAllCompetitions: async () => {\n      console.log('🌐 Mock: Getting ALL competitions for validation');\n      try {\n        // Get competitions from both storage locations \n        const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n        let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Also check the old storage key for backwards compatibility\n        const oldStoredCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n        const oldCompetitions = oldStoredCompetitions ? JSON.parse(oldStoredCompetitions) : [];\n\n        // Combine both sources and remove duplicates\n        const allCompetitions = [...competitions, ...oldCompetitions];\n        const uniqueCompetitions = allCompetitions.filter((comp, index, self) => index === self.findIndex(c => c._id === comp._id));\n        console.log('📊 Total unique competitions found:', uniqueCompetitions.length);\n        return uniqueCompetitions;\n      } catch (error) {\n        console.error('💥 Error getting all competitions:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  const databaseAPI = {\n    resetDatabase: async () => {\n      console.log('🗑️ Resetting database - clearing all stored data');\n      try {\n        await CrossPlatformStorage.default.removeItem('competitions_mock');\n        await CrossPlatformStorage.default.removeItem('admin_logs_mock');\n        await CrossPlatformStorage.default.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n        await CrossPlatformStorage.default.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n        console.log('✅ Database reset complete - all data cleared');\n        return {\n          success: true,\n          message: 'Database reset complete'\n        };\n      } catch (error) {\n        console.error('❌ Database reset failed:', error);\n        return {\n          success: false,\n          message: 'Reset failed'\n        };\n      }\n    }\n  };\n  var _default = apiClient;\n});","lineCount":610,"map":[[27,2,655,0,"Object"],[27,8,655,0],[27,9,655,0,"defineProperty"],[27,23,655,0],[27,24,655,0,"exports"],[27,31,655,0],[28,4,655,0,"enumerable"],[28,14,655,0],[29,4,655,0,"get"],[29,7,655,0],[29,18,655,0,"get"],[29,19,655,0],[30,6,655,0],[30,13,655,0,"_default"],[30,21,655,0],[31,4,655,0],[32,2,655,0],[33,2,79,0,"Object"],[33,8,79,0],[33,9,79,0,"defineProperty"],[33,23,79,0],[33,24,79,0,"exports"],[33,31,79,0],[34,4,79,0,"enumerable"],[34,14,79,0],[35,4,79,0,"get"],[35,7,79,0],[35,18,79,0,"get"],[35,19,79,0],[36,6,79,0],[36,13,79,0,"authAPI"],[36,20,79,0],[37,4,79,0],[38,2,79,0],[39,2,142,0,"Object"],[39,8,142,0],[39,9,142,0,"defineProperty"],[39,23,142,0],[39,24,142,0,"exports"],[39,31,142,0],[40,4,142,0,"enumerable"],[40,14,142,0],[41,4,142,0,"get"],[41,7,142,0],[41,18,142,0,"get"],[41,19,142,0],[42,6,142,0],[42,13,142,0,"competitionAPI"],[42,27,142,0],[43,4,142,0],[44,2,142,0],[45,2,619,0,"Object"],[45,8,619,0],[45,9,619,0,"defineProperty"],[45,23,619,0],[45,24,619,0,"exports"],[45,31,619,0],[46,4,619,0,"enumerable"],[46,14,619,0],[47,4,619,0,"get"],[47,7,619,0],[47,18,619,0,"get"],[47,19,619,0],[48,6,619,0],[48,13,619,0,"walletAPI"],[48,22,619,0],[49,4,619,0],[50,2,619,0],[51,2,636,0,"Object"],[51,8,636,0],[51,9,636,0,"defineProperty"],[51,23,636,0],[51,24,636,0,"exports"],[51,31,636,0],[52,4,636,0,"enumerable"],[52,14,636,0],[53,4,636,0,"get"],[53,7,636,0],[53,18,636,0,"get"],[53,19,636,0],[54,6,636,0],[54,13,636,0,"databaseAPI"],[54,24,636,0],[55,4,636,0],[56,2,636,0],[57,2,1,0],[57,6,1,0,"_axios"],[57,12,1,0],[57,15,1,0,"require"],[57,22,1,0],[57,23,1,0,"_dependencyMap"],[57,37,1,0],[58,2,1,0],[58,6,1,0,"axios"],[58,11,1,0],[58,14,1,0,"_interopDefault"],[58,29,1,0],[58,30,1,0,"_axios"],[58,36,1,0],[59,2,2,0],[59,6,2,0,"_expoSecureStore"],[59,22,2,0],[59,25,2,0,"require"],[59,32,2,0],[59,33,2,0,"_dependencyMap"],[59,47,2,0],[60,2,2,0],[60,6,2,0,"SecureStore"],[60,17,2,0],[60,20,2,0,"_interopNamespace"],[60,37,2,0],[60,38,2,0,"_expoSecureStore"],[60,54,2,0],[61,2,3,0],[61,6,3,0,"_expoConstants"],[61,20,3,0],[61,23,3,0,"require"],[61,30,3,0],[61,31,3,0,"_dependencyMap"],[61,45,3,0],[62,2,3,0],[62,6,3,0,"Constants"],[62,15,3,0],[62,18,3,0,"_interopDefault"],[62,33,3,0],[62,34,3,0,"_expoConstants"],[62,48,3,0],[63,2,4,0],[63,6,4,0,"_utilsCrossPlatformStorage"],[63,32,4,0],[63,35,4,0,"require"],[63,42,4,0],[63,43,4,0,"_dependencyMap"],[63,57,4,0],[64,2,4,0],[64,6,4,0,"CrossPlatformStorage"],[64,26,4,0],[64,29,4,0,"_interopDefault"],[64,44,4,0],[64,45,4,0,"_utilsCrossPlatformStorage"],[64,71,4,0],[65,2,6,0],[66,2,7,0],[66,8,7,6,"BACKEND_URL"],[66,19,7,17],[66,22,7,20,"Constants"],[66,31,7,29],[66,32,7,29,"default"],[66,39,7,29],[66,40,7,30,"expoConfig"],[66,50,7,40],[66,52,7,42,"extra"],[66,57,7,47],[66,59,7,49,"backendUrl"],[66,69,7,59],[66,73,7,63,"process"],[66,80,7,70],[66,81,7,71,"env"],[66,84,7,74],[66,85,7,75,"EXPO_PUBLIC_BACKEND_URL"],[66,108,7,98],[66,112,7,102],[66,163,7,153],[67,2,9,0],[67,8,9,6,"ApiClient"],[67,17,9,15],[67,18,9,16],[68,4,12,2,"constructor"],[68,15,12,13,"constructor"],[68,16,12,13],[68,18,12,16],[69,6,13,4],[69,10,13,8],[69,11,13,9,"client"],[69,17,13,15],[69,20,13,18,"axios"],[69,25,13,23],[69,26,13,23,"default"],[69,33,13,23],[69,34,13,24,"create"],[69,40,13,30],[69,41,13,31],[70,8,14,6,"baseURL"],[70,15,14,13],[70,17,14,15],[70,20,14,18,"BACKEND_URL"],[70,31,14,29],[70,37,14,35],[71,8,15,6,"timeout"],[71,15,15,13],[71,17,15,15],[71,22,15,20],[72,8,16,6,"headers"],[72,15,16,13],[72,17,16,15],[73,10,17,8],[73,24,17,22],[73,26,17,24],[74,8,18,6],[75,6,19,4],[75,7,19,5],[75,8,19,6],[77,6,21,4],[78,6,22,4],[78,10,22,8],[78,11,22,9,"client"],[78,17,22,15],[78,18,22,16,"interceptors"],[78,30,22,28],[78,31,22,29,"request"],[78,38,22,36],[78,39,22,37,"use"],[78,42,22,40],[78,43,22,41],[78,49,22,48,"config"],[78,55,22,54],[78,59,22,59],[79,8,23,6,"console"],[79,15,23,13],[79,16,23,14,"log"],[79,19,23,17],[79,20,23,18],[79,39,23,37,"config"],[79,45,23,43],[79,46,23,44,"method"],[79,52,23,50],[79,54,23,52,"toUpperCase"],[79,65,23,63],[79,66,23,64],[79,67,23,65],[79,71,23,69,"config"],[79,77,23,75],[79,78,23,76,"url"],[79,81,23,79],[79,83,23,81],[79,85,23,83,"config"],[79,91,23,89],[79,92,23,90,"data"],[79,96,23,94],[79,97,23,95],[80,8,25,6],[80,14,25,12,"token"],[80,19,25,17],[80,22,25,20],[80,28,25,26,"SecureStore"],[80,39,25,37],[80,40,25,38,"getItemAsync"],[80,52,25,50],[80,53,25,51],[80,68,25,66],[80,69,25,67],[81,8,26,6],[81,12,26,10,"token"],[81,17,26,15],[81,19,26,17],[82,10,27,8,"config"],[82,16,27,14],[82,17,27,15,"headers"],[82,24,27,22],[82,25,27,23,"Authorization"],[82,38,27,36],[82,41,27,39],[82,51,27,49,"token"],[82,56,27,54],[82,58,27,56],[83,8,28,6],[84,8,29,6],[84,15,29,13,"config"],[84,21,29,19],[85,6,30,4],[85,7,30,5],[85,8,30,6],[87,6,32,4],[88,6,33,4],[88,10,33,8],[88,11,33,9,"client"],[88,17,33,15],[88,18,33,16,"interceptors"],[88,30,33,28],[88,31,33,29,"response"],[88,39,33,37],[88,40,33,38,"use"],[88,43,33,41],[88,44,34,7,"response"],[88,52,34,15],[88,56,34,20],[89,8,35,8,"console"],[89,15,35,15],[89,16,35,16,"log"],[89,19,35,19],[89,20,35,20],[89,39,35,39,"response"],[89,47,35,47],[89,48,35,48,"status"],[89,54,35,54],[89,56,35,56],[89,58,35,58,"response"],[89,66,35,66],[89,67,35,67,"data"],[89,71,35,71],[89,72,35,72],[90,8,36,8],[90,15,36,15,"response"],[90,23,36,23],[91,6,37,6],[91,7,37,7],[91,9,38,7,"error"],[91,14,38,12],[91,18,38,17],[92,8,39,8,"console"],[92,15,39,15],[92,16,39,16,"log"],[92,19,39,19],[92,20,39,20],[92,36,39,36,"error"],[92,41,39,41],[92,42,39,42,"response"],[92,50,39,50],[92,52,39,52,"status"],[92,58,39,58],[92,62,39,62],[92,71,39,71],[92,73,39,73],[92,75,39,75,"error"],[92,80,39,80],[92,81,39,81,"response"],[92,89,39,89],[92,91,39,91,"data"],[92,95,39,95],[92,99,39,99,"error"],[92,104,39,104],[92,105,39,105,"message"],[92,112,39,112],[92,113,39,113],[93,8,41,8],[93,12,41,12,"error"],[93,17,41,17],[93,18,41,18,"response"],[93,26,41,26],[93,28,41,28,"status"],[93,34,41,34],[93,39,41,39],[93,42,41,42],[93,44,41,44],[94,10,42,10],[95,10,43,10,"SecureStore"],[95,21,43,21],[95,22,43,22,"deleteItemAsync"],[95,37,43,37],[95,38,43,38],[95,53,43,53],[95,54,43,54],[96,8,44,8],[97,8,45,8],[97,15,45,15,"Promise"],[97,22,45,22],[97,23,45,23,"reject"],[97,29,45,29],[97,30,45,30,"error"],[97,35,45,35],[97,36,45,36],[98,6,46,6],[98,7,47,4],[98,8,47,5],[99,4,48,2],[100,4,50,2],[100,10,50,8,"get"],[100,13,50,11,"get"],[100,14,50,21,"url"],[100,17,50,32],[100,19,50,46],[101,6,51,4],[101,12,51,10,"response"],[101,20,51,36],[101,23,51,39],[101,29,51,45],[101,33,51,49],[101,34,51,50,"client"],[101,40,51,56],[101,41,51,57,"get"],[101,44,51,60],[101,45,51,61,"url"],[101,48,51,64],[101,49,51,65],[102,6,52,4],[102,13,52,11,"response"],[102,21,52,19],[102,22,52,20,"data"],[102,26,52,24],[103,4,53,2],[104,4,55,2],[104,10,55,8,"post"],[104,14,55,12,"post"],[104,15,55,22,"url"],[104,18,55,33],[104,20,55,35,"data"],[104,24,55,45],[104,26,55,59],[105,6,56,4],[105,12,56,10,"response"],[105,20,56,36],[105,23,56,39],[105,29,56,45],[105,33,56,49],[105,34,56,50,"client"],[105,40,56,56],[105,41,56,57,"post"],[105,45,56,61],[105,46,56,62,"url"],[105,49,56,65],[105,51,56,67,"data"],[105,55,56,71],[105,56,56,72],[106,6,57,4],[106,13,57,11,"response"],[106,21,57,19],[106,22,57,20,"data"],[106,26,57,24],[107,4,58,2],[108,4,60,2],[108,10,60,8,"patch"],[108,15,60,13,"patch"],[108,16,60,23,"url"],[108,19,60,34],[108,21,60,36,"data"],[108,25,60,46],[108,27,60,60],[109,6,61,4],[109,12,61,10,"response"],[109,20,61,36],[109,23,61,39],[109,29,61,45],[109,33,61,49],[109,34,61,50,"client"],[109,40,61,56],[109,41,61,57,"patch"],[109,46,61,62],[109,47,61,63,"url"],[109,50,61,66],[109,52,61,68,"data"],[109,56,61,72],[109,57,61,73],[110,6,62,4],[110,13,62,11,"response"],[110,21,62,19],[110,22,62,20,"data"],[110,26,62,24],[111,4,63,2],[112,4,65,2],[112,10,65,8,"delete"],[112,16,65,14,"delete"],[112,17,65,24,"url"],[112,20,65,35],[112,22,65,49],[113,6,66,4],[113,12,66,10,"response"],[113,20,66,36],[113,23,66,39],[113,29,66,45],[113,33,66,49],[113,34,66,50,"client"],[113,40,66,56],[113,41,66,57,"delete"],[113,47,66,63],[113,48,66,64,"url"],[113,51,66,67],[113,52,66,68],[114,6,67,4],[114,13,67,11,"response"],[114,21,67,19],[114,22,67,20,"data"],[114,26,67,24],[115,4,68,2],[116,4,70,2],[116,10,70,8,"put"],[116,13,70,11,"put"],[116,14,70,21,"url"],[116,17,70,32],[116,19,70,34,"data"],[116,23,70,44],[116,25,70,58],[117,6,71,4],[117,12,71,10,"response"],[117,20,71,36],[117,23,71,39],[117,29,71,45],[117,33,71,49],[117,34,71,50,"client"],[117,40,71,56],[117,41,71,57,"put"],[117,44,71,60],[117,45,71,61,"url"],[117,48,71,64],[117,50,71,66,"data"],[117,54,71,70],[117,55,71,71],[118,6,72,4],[118,13,72,11,"response"],[118,21,72,19],[118,22,72,20,"data"],[118,26,72,24],[119,4,73,2],[120,2,74,0],[121,2,76,0],[121,8,76,6,"apiClient"],[121,17,76,15],[121,20,76,18],[121,24,76,22,"ApiClient"],[121,33,76,31],[121,34,76,32],[121,35,76,33],[123,2,78,0],[124,2,79,7],[124,8,79,13,"authAPI"],[124,15,79,20],[124,18,79,23],[125,4,80,2,"createSession"],[125,17,80,15],[125,19,80,18,"sessionId"],[125,28,80,35],[125,32,81,4,"apiClient"],[125,41,81,13],[125,42,81,14,"post"],[125,46,81,18],[125,47,81,19],[125,62,81,34],[125,64,81,36],[125,68,81,40],[125,70,81,42],[126,6,82,6,"headers"],[126,13,82,13],[126,15,82,15],[127,8,82,17],[127,22,82,31],[127,24,82,33,"sessionId"],[128,6,82,43],[129,4,83,4],[129,5,83,5],[129,6,83,6],[130,4,85,2,"signup"],[130,10,85,8],[130,12,85,11,"data"],[130,16,91,3],[130,20,91,8,"apiClient"],[130,29,91,17],[130,30,91,18,"post"],[130,34,91,22],[130,35,91,23],[130,49,91,37],[130,51,91,39,"data"],[130,55,91,43],[130,56,91,44],[131,4,93,2,"verifyOTP"],[131,13,93,11],[131,15,93,14,"data"],[131,19,93,55],[131,23,94,4,"apiClient"],[131,32,94,13],[131,33,94,14,"post"],[131,37,94,18],[131,38,94,19],[131,56,94,37],[131,58,94,39,"data"],[131,62,94,43],[131,63,94,44],[132,4,96,2,"login"],[132,9,96,7],[132,11,96,10,"data"],[132,15,96,51],[132,19,97,4,"apiClient"],[132,28,97,13],[132,29,97,14,"post"],[132,33,97,18],[132,34,97,19],[132,47,97,32],[132,49,97,34,"data"],[132,53,97,38],[132,54,97,39],[133,4,99,2,"resendOTP"],[133,13,99,11],[133,15,99,14,"email"],[133,20,99,27],[133,24,100,4,"apiClient"],[133,33,100,13],[133,34,100,14,"post"],[133,38,100,18],[133,39,100,19],[133,57,100,37],[133,59,100,39],[134,6,100,41,"email"],[135,4,100,47],[135,5,100,48],[135,6,100,49],[136,4,102,2,"getCurrentUser"],[136,18,102,16],[136,20,102,18,"getCurrentUser"],[136,21,102,18],[136,26,102,24,"apiClient"],[136,35,102,33],[136,36,102,34,"get"],[136,39,102,37],[136,40,102,38],[136,50,102,48],[136,51,102,49],[137,4,104,2,"logout"],[137,10,104,8],[137,12,104,10,"logout"],[137,13,104,10],[137,18,104,16,"apiClient"],[137,27,104,25],[137,28,104,26,"post"],[137,32,104,30],[137,33,104,31],[137,47,104,45],[137,48,104,46],[138,4,106,2,"updateLanguage"],[138,18,106,16],[138,20,106,19,"language"],[138,28,106,35],[138,32,107,4,"apiClient"],[138,41,107,13],[138,42,107,14,"patch"],[138,47,107,19],[138,48,107,20],[138,64,107,36],[138,66,107,38],[138,70,107,42],[138,72,107,44],[139,6,108,6,"params"],[139,12,108,12],[139,14,108,14],[140,8,108,16,"language"],[141,6,108,25],[142,4,109,4],[142,5,109,5],[142,6,109,6],[143,4,111,2,"toggleBiometric"],[143,19,111,17],[143,21,111,20,"enabled"],[143,28,111,36],[143,32,112,4,"apiClient"],[143,41,112,13],[143,42,112,14,"patch"],[143,47,112,19],[143,48,112,20],[143,65,112,37],[143,67,112,39],[143,71,112,43],[143,73,112,45],[144,6,113,6,"params"],[144,12,113,12],[144,14,113,14],[145,8,113,16,"enabled"],[146,6,113,24],[147,4,114,4],[147,5,114,5],[148,2,115,0],[148,3,115,1],[150,2,117,0],[151,2,118,0],[151,8,118,6,"logAdminAction"],[151,22,118,20],[151,25,118,23],[151,31,118,23,"logAdminAction"],[151,32,118,30,"action"],[151,38,118,44],[151,40,118,46,"competitionName"],[151,55,118,69],[151,57,118,71,"adminName"],[151,66,118,88],[151,68,118,90,"details"],[151,75,118,103],[151,80,118,108],[152,4,119,2],[152,8,119,6],[153,6,120,4],[153,12,120,10,"logs"],[153,16,120,14],[153,19,120,17],[153,26,120,23,"CrossPlatformStorage"],[153,46,120,43],[153,47,120,43,"default"],[153,54,120,43],[153,55,120,44,"getItem"],[153,62,120,51],[153,63,120,52],[153,74,120,63],[153,75,120,64],[153,80,120,68],[153,84,120,72],[154,6,121,4],[154,12,121,10,"adminLogs"],[154,21,121,19],[154,24,121,22,"JSON"],[154,28,121,26],[154,29,121,27,"parse"],[154,34,121,32],[154,35,121,33,"logs"],[154,39,121,37],[154,40,121,38],[155,6,123,4],[155,12,123,10,"logEntry"],[155,20,123,18],[155,23,123,21],[156,8,124,6,"id"],[156,10,124,8],[156,12,124,10],[156,19,124,17,"Date"],[156,23,124,21],[156,24,124,22,"now"],[156,27,124,25],[156,28,124,26],[156,29,124,27],[156,31,124,29],[157,8,125,6,"action"],[157,14,125,12],[158,8,126,6,"competition_name"],[158,24,126,22],[158,26,126,24,"competitionName"],[158,41,126,39],[159,8,127,6,"admin_name"],[159,18,127,16],[159,20,127,18,"adminName"],[159,29,127,27],[160,8,128,6,"details"],[160,15,128,13],[161,8,129,6,"timestamp"],[161,17,129,15],[161,19,129,17],[161,23,129,21,"Date"],[161,27,129,25],[161,28,129,26],[161,29,129,27],[161,30,129,28,"toISOString"],[161,41,129,39],[161,42,129,40],[162,6,130,4],[162,7,130,5],[163,6,132,4,"adminLogs"],[163,15,132,13],[163,16,132,14,"push"],[163,20,132,18],[163,21,132,19,"logEntry"],[163,29,132,27],[163,30,132,28],[164,6,133,4],[164,12,133,10,"CrossPlatformStorage"],[164,32,133,30],[164,33,133,30,"default"],[164,40,133,30],[164,41,133,31,"setItem"],[164,48,133,38],[164,49,133,39],[164,60,133,50],[164,62,133,52,"JSON"],[164,66,133,56],[164,67,133,57,"stringify"],[164,76,133,66],[164,77,133,67,"adminLogs"],[164,86,133,76],[164,87,133,77],[164,88,133,78],[165,6,135,4,"console"],[165,13,135,11],[165,14,135,12,"log"],[165,17,135,15],[165,18,135,16],[165,43,135,41],[165,45,135,43,"action"],[165,51,135,49],[165,53,135,51,"competitionName"],[165,68,135,66],[165,69,135,67],[166,4,136,2],[166,5,136,3],[166,6,136,4],[166,13,136,11,"error"],[166,18,136,16],[166,20,136,18],[167,6,137,4,"console"],[167,13,137,11],[167,14,137,12,"error"],[167,19,137,17],[167,20,137,18],[167,49,137,47],[167,51,137,49,"error"],[167,56,137,54],[167,57,137,55],[168,4,138,2],[169,2,139,0],[169,3,139,1],[171,2,141,0],[172,2,142,7],[172,8,142,13,"competitionAPI"],[172,22,142,27],[172,25,142,30],[173,4,143,2,"create"],[173,10,143,8],[173,12,143,11,"data"],[173,16,158,3],[173,20,158,8,"apiClient"],[173,29,158,17],[173,30,158,18,"post"],[173,34,158,22],[173,35,158,23],[173,50,158,38],[173,52,158,40,"data"],[173,56,158,44],[173,57,158,45],[174,4,160,2,"join"],[174,8,160,6],[174,10,160,9,"inviteCode"],[174,20,160,27],[174,24,161,4,"apiClient"],[174,33,161,13],[174,34,161,14,"post"],[174,38,161,18],[174,39,161,19],[174,59,161,39],[174,61,161,41],[175,6,161,43,"invite_code"],[175,17,161,54],[175,19,161,56,"inviteCode"],[176,4,161,67],[176,5,161,68],[176,6,161,69],[177,4,163,2,"getMyCompetitions"],[177,21,163,19],[177,23,163,21,"getMyCompetitions"],[177,24,163,21],[177,29,163,27,"apiClient"],[177,38,163,36],[177,39,163,37,"get"],[177,42,163,40],[177,43,163,41],[177,61,163,59],[177,62,163,60],[178,4,165,2,"getCompetition"],[178,18,165,16],[178,20,165,19,"id"],[178,22,165,29],[178,26,165,34,"apiClient"],[178,35,165,43],[178,36,165,44,"get"],[178,39,165,47],[178,40,165,48],[178,57,165,65,"id"],[178,59,165,67],[178,61,165,69],[178,62,165,70],[179,4,167,2,"updateStandings"],[179,19,167,17],[179,21,167,19,"updateStandings"],[179,22,168,4,"id"],[179,24,168,14],[179,26,169,4,"standings"],[179,35,169,18],[179,37,170,4,"matchday"],[179,45,170,21],[179,50,172,4,"apiClient"],[179,59,172,13],[179,60,172,14,"patch"],[179,65,172,19],[179,66,172,20],[179,83,172,37,"id"],[179,85,172,39],[179,97,172,51],[179,99,172,53],[180,6,173,6,"standings"],[180,15,173,15],[181,6,174,6,"matchday"],[182,4,175,4],[182,5,175,5],[182,6,175,6],[183,4,177,2,"payFee"],[183,10,177,8],[183,12,177,10,"payFee"],[183,13,177,11,"id"],[183,15,177,21],[183,17,177,23,"amount"],[183,23,177,37],[183,28,178,4,"apiClient"],[183,37,178,13],[183,38,178,14,"post"],[183,42,178,18],[183,43,178,19],[183,60,178,36,"id"],[183,62,178,38],[183,68,178,44],[183,70,178,46],[183,74,178,50],[183,76,178,52],[184,6,179,6,"params"],[184,12,179,12],[184,14,179,14],[185,8,179,16,"amount"],[186,6,179,23],[187,4,180,4],[187,5,180,5],[187,6,180,6],[188,4,182,2,"getTransactions"],[188,19,182,17],[188,21,182,20,"id"],[188,23,182,30],[188,27,183,4,"apiClient"],[188,36,183,13],[188,37,183,14,"get"],[188,40,183,17],[188,41,183,18],[188,58,183,35,"id"],[188,60,183,37],[188,75,183,52],[188,76,183,53],[189,4,185,2],[190,4,186,2,"payMatchdays"],[190,16,186,14],[190,18,186,16,"payMatchdays"],[190,19,186,17,"competitionId"],[190,32,186,38],[190,34,186,40,"matchdays"],[190,43,186,59],[190,48,187,4,"apiClient"],[190,57,187,13],[190,58,187,14,"post"],[190,62,187,18],[190,63,187,19],[190,80,187,36,"competitionId"],[190,93,187,49],[190,113,187,69],[190,115,187,71],[191,6,188,6,"competition_id"],[191,20,188,20],[191,22,188,22,"competitionId"],[191,35,188,35],[192,6,189,6,"matchdays"],[193,4,190,4],[193,5,190,5],[193,6,190,6],[194,4,192,2,"getMatchdayPayments"],[194,23,192,21],[194,25,192,24,"competitionId"],[194,38,192,45],[194,42,193,4,"apiClient"],[194,51,193,13],[194,52,193,14,"get"],[194,55,193,17],[194,56,193,18],[194,73,193,35,"competitionId"],[194,86,193,48],[194,106,193,68],[194,107,193,69],[195,4,195,2,"getPaymentStatusTable"],[195,25,195,23],[195,27,195,26,"competitionId"],[195,40,195,47],[195,44,196,4,"apiClient"],[195,53,196,13],[195,54,196,14,"get"],[195,57,196,17],[195,58,196,18],[195,75,196,35,"competitionId"],[195,88,196,48],[195,111,196,71],[195,112,196,72],[196,4,198,2],[197,4,199,2,"createMock"],[197,14,199,12],[197,16,199,14],[197,22,199,21,"data"],[197,26,212,3],[197,30,212,8],[198,6,213,4,"console"],[198,13,213,11],[198,14,213,12,"log"],[198,17,213,15],[198,18,213,16],[198,50,213,48],[198,52,213,50,"data"],[198,56,213,54],[198,57,213,55,"name"],[198,61,213,59],[198,62,213,60],[199,6,214,4,"console"],[199,13,214,11],[199,14,214,12,"log"],[199,17,214,15],[199,18,214,16],[199,39,214,37],[199,41,214,39,"data"],[199,45,214,43],[199,46,214,44,"total_matchdays"],[199,61,214,59],[199,65,214,63],[199,67,214,65],[199,68,214,66],[201,6,216,4],[202,6,217,4],[202,12,217,10,"storedCompetitions"],[202,30,217,28],[202,33,217,31],[202,39,217,37,"CrossPlatformStorage"],[202,59,217,57],[202,60,217,57,"default"],[202,67,217,57],[202,68,217,58,"getItem"],[202,75,217,65],[202,76,217,66],[202,95,217,85],[202,96,217,86],[203,6,218,4],[203,10,218,8,"existingCompetitions"],[203,30,218,28],[203,33,218,31,"storedCompetitions"],[203,51,218,49],[203,54,218,52,"JSON"],[203,58,218,56],[203,59,218,57,"parse"],[203,64,218,62],[203,65,218,63,"storedCompetitions"],[203,83,218,81],[203,84,218,82],[203,87,218,85],[203,89,218,87],[204,6,220,4,"console"],[204,13,220,11],[204,14,220,12,"log"],[204,17,220,15],[204,18,220,16],[204,60,220,58],[204,62,220,60,"existingCompetitions"],[204,82,220,80],[204,83,220,81,"length"],[204,89,220,87],[204,90,220,88],[206,6,222,4],[207,6,223,4],[207,12,223,10,"existingNames"],[207,25,223,23],[207,28,223,26,"existingCompetitions"],[207,48,223,46],[207,49,223,47,"map"],[207,52,223,50],[207,53,223,52,"comp"],[207,57,223,61],[207,61,223,66,"comp"],[207,65,223,70],[207,66,223,71,"name"],[207,70,223,75],[207,71,223,76,"toLowerCase"],[207,82,223,87],[207,83,223,88],[207,84,223,89],[207,85,223,90],[208,6,224,4],[208,10,224,8,"existingNames"],[208,23,224,21],[208,24,224,22,"includes"],[208,32,224,30],[208,33,224,31,"data"],[208,37,224,35],[208,38,224,36,"name"],[208,42,224,40],[208,43,224,41,"toLowerCase"],[208,54,224,52],[208,55,224,53],[208,56,224,54],[208,57,224,55],[208,59,224,57],[209,8,225,6],[209,14,225,12],[209,18,225,16,"Error"],[209,23,225,21],[209,24,225,22],[209,86,225,84],[209,87,225,85],[210,6,226,4],[212,6,228,4],[213,6,229,4],[214,6,230,4],[214,12,230,10,"generateRandomCode"],[214,30,230,28],[214,33,230,31,"generateRandomCode"],[214,34,230,31],[214,39,230,37],[215,8,231,6],[215,14,231,12,"chars"],[215,19,231,17],[215,22,231,20],[215,58,231,56],[215,59,231,57],[215,60,231,58],[216,8,232,6],[216,12,232,10,"result"],[216,18,232,16],[216,21,232,19],[216,23,232,21],[217,8,233,6],[217,13,233,11],[217,17,233,15,"i"],[217,18,233,16],[217,21,233,19],[217,22,233,20],[217,24,233,22,"i"],[217,25,233,23],[217,28,233,26],[217,29,233,27],[217,31,233,29,"i"],[217,32,233,30],[217,34,233,32],[217,36,233,34],[218,10,234,8,"result"],[218,16,234,14],[218,20,234,18,"chars"],[218,25,234,23],[218,26,234,24,"charAt"],[218,32,234,30],[218,33,234,31,"Math"],[218,37,234,35],[218,38,234,36,"floor"],[218,43,234,41],[218,44,234,42,"Math"],[218,48,234,46],[218,49,234,47,"random"],[218,55,234,53],[218,56,234,54],[218,57,234,55],[218,60,234,58,"chars"],[218,65,234,63],[218,66,234,64,"length"],[218,72,234,70],[218,73,234,71],[218,74,234,72],[219,8,235,6],[220,8,236,6],[220,15,236,13,"result"],[220,21,236,19],[221,6,237,4],[221,7,237,5],[223,6,239,4],[224,6,240,4],[224,10,240,8,"inviteCode"],[224,20,240,18],[224,23,240,21,"generateRandomCode"],[224,41,240,39],[224,42,240,40],[224,43,240,41],[225,6,241,4],[225,13,241,11,"existingCompetitions"],[225,33,241,31],[225,34,241,32,"some"],[225,38,241,36],[225,39,241,38,"comp"],[225,43,241,47],[225,47,241,52,"comp"],[225,51,241,56],[225,52,241,57,"invite_code"],[225,63,241,68],[225,68,241,73,"inviteCode"],[225,78,241,83],[225,79,241,84],[225,81,241,86],[226,8,242,6,"inviteCode"],[226,18,242,16],[226,21,242,19,"generateRandomCode"],[226,39,242,37],[226,40,242,38],[226,41,242,39],[227,8,243,6,"console"],[227,15,243,13],[227,16,243,14,"log"],[227,19,243,17],[227,20,243,18],[227,61,243,59],[227,63,243,61,"inviteCode"],[227,73,243,71],[227,74,243,72],[228,6,244,4],[229,6,246,4,"console"],[229,13,246,11],[229,14,246,12,"log"],[229,17,246,15],[229,18,246,16],[229,51,246,49],[229,53,246,51,"inviteCode"],[229,63,246,61],[229,64,246,62],[230,6,248,4],[230,12,248,10,"newCompetition"],[230,26,248,24],[230,29,248,27],[231,8,249,6,"_id"],[231,11,249,9],[231,13,249,11],[231,21,249,19,"Date"],[231,25,249,23],[231,26,249,24,"now"],[231,29,249,27],[231,30,249,28],[231,31,249,29],[231,35,249,33,"Math"],[231,39,249,37],[231,40,249,38,"random"],[231,46,249,44],[231,47,249,45],[231,48,249,46],[231,49,249,47,"toString"],[231,57,249,55],[231,58,249,56],[231,60,249,58],[231,61,249,59],[231,62,249,60,"substr"],[231,68,249,66],[231,69,249,67],[231,70,249,68],[231,72,249,70],[231,73,249,71],[231,74,249,72],[231,76,249,74],[232,8,250,6,"name"],[232,12,250,10],[232,14,250,12,"data"],[232,18,250,16],[232,19,250,17,"name"],[232,23,250,21],[233,8,251,6,"total_matchdays"],[233,23,251,21],[233,25,251,23,"data"],[233,29,251,27],[233,30,251,28,"total_matchdays"],[233,45,251,43],[233,49,251,47],[233,51,251,49],[234,8,252,6,"participation_cost_per_team"],[234,35,252,33],[234,37,252,35,"data"],[234,41,252,39],[234,42,252,40,"participation_cost_per_team"],[234,69,252,67],[234,73,252,71],[234,78,252,76],[235,8,253,6,"expected_teams"],[235,22,253,20],[235,24,253,22,"data"],[235,28,253,26],[235,29,253,27,"expected_teams"],[235,43,253,41],[235,47,253,45],[235,48,253,46],[236,8,254,6,"total_prize_pool"],[236,24,254,22],[236,26,254,24,"data"],[236,30,254,28],[236,31,254,29,"total_prize_pool"],[236,47,254,45],[236,51,254,49],[236,57,254,55],[237,8,255,6,"daily_payment_enabled"],[237,29,255,27],[237,31,255,29,"data"],[237,35,255,33],[237,36,255,34,"daily_payment_enabled"],[237,57,255,55],[237,61,255,59],[237,66,255,64],[238,8,256,6,"daily_payment_amount"],[238,28,256,26],[238,30,256,28,"data"],[238,34,256,32],[238,35,256,33,"daily_payment_amount"],[238,55,256,53],[238,59,256,57],[238,62,256,60],[239,8,257,6,"rules"],[239,13,257,11],[239,15,257,13,"data"],[239,19,257,17],[239,20,257,18,"rules"],[239,25,257,23],[240,8,258,6,"invite_code"],[240,19,258,17],[240,21,258,19,"inviteCode"],[240,31,258,29],[241,8,258,31],[242,8,259,6,"invite_link"],[242,19,259,17],[242,21,259,19],[242,50,259,48,"inviteCode"],[242,60,259,58],[242,62,259,60],[243,8,260,6,"admin_id"],[243,16,260,14],[243,18,260,16],[243,44,260,42],[244,8,260,44],[245,8,261,6,"participants"],[245,20,261,18],[245,22,261,20],[245,23,262,8],[246,10,263,10,"id"],[246,12,263,12],[246,14,263,14],[246,40,263,40],[247,10,264,10,"name"],[247,14,264,14],[247,16,264,16],[247,33,264,33],[248,10,265,10,"email"],[248,15,265,15],[248,17,265,17],[248,36,265,36],[249,10,266,10,"is_admin"],[249,18,266,18],[249,20,266,20],[249,24,266,24],[250,10,267,10,"paid_matchdays"],[250,24,267,24],[250,26,267,26],[250,27,267,27],[250,28,267,28],[250,30,267,30],[250,31,267,31],[250,32,267,32],[251,10,267,34],[252,10,268,10,"points"],[252,16,268,16],[252,18,268,18],[253,8,269,8],[253,9,269,9],[253,10,270,7],[254,8,271,6,"wallet_balance"],[254,22,271,20],[254,24,271,22],[254,25,271,23],[255,8,272,6,"is_active"],[255,17,272,15],[255,19,272,17],[255,23,272,21],[256,8,273,6,"current_matchday"],[256,24,273,22],[256,26,273,24],[256,27,273,25],[257,8,273,27],[258,8,274,6,"standings"],[258,17,274,15],[258,19,274,17],[258,20,275,8],[259,10,275,10,"position"],[259,18,275,18],[259,20,275,20],[259,21,275,21],[260,10,275,23,"player_id"],[260,19,275,32],[260,21,275,34],[260,47,275,60],[261,10,275,62,"name"],[261,14,275,66],[261,16,275,68],[261,33,275,85],[262,10,275,87,"points"],[262,16,275,93],[262,18,275,95],[263,8,275,97],[263,9,275,98],[263,10,276,7],[264,8,277,6,"created_at"],[264,18,277,16],[264,20,277,18],[264,24,277,22,"Date"],[264,28,277,26],[264,29,277,27],[264,30,277,28],[264,31,277,29,"toISOString"],[264,42,277,40],[264,43,277,41],[264,44,277,42],[265,8,278,6,"updated_at"],[265,18,278,16],[265,20,278,18],[265,24,278,22,"Date"],[265,28,278,26],[265,29,278,27],[265,30,278,28],[265,31,278,29,"toISOString"],[265,42,278,40],[265,43,278,41],[266,6,279,4],[266,7,279,5],[268,6,281,4],[269,6,282,4,"existingCompetitions"],[269,26,282,24],[269,27,282,25,"push"],[269,31,282,29],[269,32,282,30,"newCompetition"],[269,46,282,44],[269,47,282,45],[270,6,283,4],[270,12,283,10,"CrossPlatformStorage"],[270,32,283,30],[270,33,283,30,"default"],[270,40,283,30],[270,41,283,31,"setItem"],[270,48,283,38],[270,49,283,39],[270,68,283,58],[270,70,283,60,"JSON"],[270,74,283,64],[270,75,283,65,"stringify"],[270,84,283,74],[270,85,283,75,"existingCompetitions"],[270,105,283,95],[270,106,283,96],[270,107,283,97],[271,6,285,4,"console"],[271,13,285,11],[271,14,285,12,"log"],[271,17,285,15],[271,18,285,16],[271,71,285,69],[271,73,285,71,"existingCompetitions"],[271,93,285,91],[271,94,285,92,"length"],[271,100,285,98],[271,101,285,99],[273,6,287,4],[274,6,288,4],[274,12,288,10,"logAdminAction"],[274,26,288,24],[274,27,288,25],[274,35,288,33],[274,37,288,35,"newCompetition"],[274,51,288,49],[274,52,288,50,"name"],[274,56,288,54],[274,58,288,56],[274,75,288,73],[274,77,288,75],[275,8,289,6,"competition_id"],[275,22,289,20],[275,24,289,22,"newCompetition"],[275,38,289,36],[275,39,289,37,"_id"],[275,42,289,40],[276,8,290,6,"rules"],[276,13,290,11],[276,15,290,13,"newCompetition"],[276,29,290,27],[276,30,290,28,"rules"],[276,35,290,33],[277,8,291,6,"total_matchdays"],[277,23,291,21],[277,25,291,23,"newCompetition"],[277,39,291,37],[277,40,291,38,"total_matchdays"],[277,55,291,53],[278,8,292,6,"participation_cost_per_team"],[278,35,292,33],[278,37,292,35,"newCompetition"],[278,51,292,49],[278,52,292,50,"participation_cost_per_team"],[278,79,292,77],[279,8,293,6,"expected_teams"],[279,22,293,20],[279,24,293,22,"newCompetition"],[279,38,293,36],[279,39,293,37,"expected_teams"],[279,53,293,51],[280,8,294,6,"total_prize_pool"],[280,24,294,22],[280,26,294,24,"newCompetition"],[280,40,294,38],[280,41,294,39,"total_prize_pool"],[280,57,294,55],[281,8,295,6,"daily_payment_enabled"],[281,29,295,27],[281,31,295,29,"newCompetition"],[281,45,295,43],[281,46,295,44,"daily_payment_enabled"],[281,67,295,65],[282,8,296,6,"daily_payment_amount"],[282,28,296,26],[282,30,296,28,"newCompetition"],[282,44,296,42],[282,45,296,43,"daily_payment_amount"],[283,6,297,4],[283,7,297,5],[283,8,297,6],[284,6,299,4,"console"],[284,13,299,11],[284,14,299,12,"log"],[284,17,299,15],[284,18,299,16],[284,47,299,45],[284,49,299,47,"newCompetition"],[284,63,299,61],[284,64,299,62,"name"],[284,68,299,66],[284,69,299,67],[285,6,300,4,"console"],[285,13,300,11],[285,14,300,12,"log"],[285,17,300,15],[285,18,300,16],[285,40,300,38],[285,42,300,40,"newCompetition"],[285,56,300,54],[285,57,300,55,"name"],[285,61,300,59],[285,62,300,60],[286,6,301,4,"console"],[286,13,301,11],[286,14,301,12,"log"],[286,17,301,15],[286,18,301,16],[286,37,301,35],[286,39,301,37,"newCompetition"],[286,53,301,51],[286,54,301,52,"daily_payment_enabled"],[286,75,301,73],[286,78,301,76],[286,82,301,80,"newCompetition"],[286,96,301,94],[286,97,301,95,"daily_payment_amount"],[286,117,301,115],[286,132,301,130],[286,135,301,133],[286,145,301,143],[286,146,301,144],[287,6,302,4,"console"],[287,13,302,11],[287,14,302,12,"log"],[287,17,302,15],[287,18,302,16],[287,40,302,38],[287,42,302,40],[287,46,302,44,"newCompetition"],[287,60,302,58],[287,61,302,59,"total_prize_pool"],[287,77,302,75],[287,79,302,77],[287,80,302,78],[288,6,303,4,"console"],[288,13,303,11],[288,14,303,12,"log"],[288,17,303,15],[288,18,303,16],[288,35,303,33],[288,37,303,35,"newCompetition"],[288,51,303,49],[288,52,303,50,"invite_code"],[288,63,303,61],[288,64,303,62],[289,6,305,4],[289,13,305,11],[290,8,305,13,"data"],[290,12,305,17],[290,14,305,19,"newCompetition"],[291,6,305,34],[291,7,305,35],[292,4,306,2],[292,5,306,3],[293,4,308,2],[294,4,309,2,"payMatchdaysMock"],[294,20,309,18],[294,22,309,20],[294,28,309,20,"payMatchdaysMock"],[294,29,309,27,"competitionId"],[294,42,309,48],[294,44,309,50,"matchdays"],[294,53,309,69],[294,58,309,74],[295,6,310,4,"console"],[295,13,310,11],[295,14,310,12,"log"],[295,17,310,15],[295,18,310,16],[295,49,310,47],[295,51,310,49,"matchdays"],[295,60,310,58],[295,62,310,60],[295,78,310,76],[295,80,310,78,"competitionId"],[295,93,310,91],[295,94,310,92],[297,6,312,4],[298,6,313,4],[298,12,313,10,"totalCost"],[298,21,313,19],[298,24,313,22,"matchdays"],[298,33,313,31],[298,34,313,32,"length"],[298,40,313,38],[298,43,313,41],[298,44,313,42],[298,45,313,43],[298,46,313,44],[300,6,315,4],[301,6,316,4],[301,13,316,11],[302,8,317,6,"data"],[302,12,317,10],[302,14,317,12],[303,10,318,8,"message"],[303,17,318,15],[303,19,318,17],[303,44,318,42,"matchdays"],[303,53,318,51],[303,54,318,52,"length"],[303,60,318,58],[303,72,318,70],[304,10,319,8,"paid_matchdays"],[304,24,319,22],[304,26,319,24,"matchdays"],[304,35,319,33],[305,10,320,8,"total_cost"],[305,20,320,18],[305,22,320,20,"totalCost"],[305,31,320,29],[306,10,321,8,"new_user_balance"],[306,26,321,24],[306,28,321,26],[306,31,321,29],[306,34,321,32,"totalCost"],[306,43,321,41],[306,44,321,42],[307,8,322,6],[308,6,323,4],[308,7,323,5],[309,4,324,2],[309,5,324,3],[310,4,326,2,"getMatchdayPaymentsMock"],[310,27,326,25],[310,29,326,27],[310,35,326,34,"competitionId"],[310,48,326,55],[310,52,326,60],[311,6,327,4,"console"],[311,13,327,11],[311,14,327,12,"log"],[311,17,327,15],[311,18,327,16],[311,70,327,68],[311,72,327,70,"competitionId"],[311,85,327,83],[311,86,327,84],[313,6,329,4],[314,6,330,4],[314,12,330,10,"mockPayments"],[314,24,330,22],[314,27,330,25],[314,29,330,27],[315,6,331,4],[315,11,331,9],[315,15,331,13,"i"],[315,16,331,14],[315,19,331,17],[315,20,331,18],[315,22,331,20,"i"],[315,23,331,21],[315,27,331,25],[315,29,331,27],[315,31,331,29,"i"],[315,32,331,30],[315,34,331,32],[315,36,331,34],[316,8,332,6,"mockPayments"],[316,20,332,18],[316,21,332,19,"push"],[316,25,332,23],[316,26,332,24],[317,10,333,8,"_id"],[317,13,333,11],[317,15,333,13],[317,26,333,24,"i"],[317,27,333,25],[317,29,333,27],[318,10,334,8,"user_id"],[318,17,334,15],[318,19,334,17],[318,45,334,43],[319,10,335,8,"competition_id"],[319,24,335,22],[319,26,335,24,"competitionId"],[319,39,335,37],[320,10,336,8,"matchday"],[320,18,336,16],[320,20,336,18,"i"],[320,21,336,19],[321,10,337,8,"amount"],[321,16,337,14],[321,18,337,16],[321,19,337,17],[322,10,338,8,"status"],[322,16,338,14],[322,18,338,16,"i"],[322,19,338,17],[322,23,338,21],[322,24,338,22],[322,27,338,25],[322,33,338,31],[322,36,338,34],[322,45,338,43],[323,10,339,8,"paid_at"],[323,17,339,15],[323,19,339,17,"i"],[323,20,339,18],[323,24,339,22],[323,25,339,23],[323,28,339,26],[323,32,339,30,"Date"],[323,36,339,34],[323,37,339,35],[323,38,339,36],[323,39,339,37,"toISOString"],[323,50,339,48],[323,51,339,49],[323,52,339,50],[323,55,339,53],[323,59,339,57],[324,10,340,8,"created_at"],[324,20,340,18],[324,22,340,20],[324,26,340,24,"Date"],[324,30,340,28],[324,31,340,29],[324,32,340,30],[324,33,340,31,"toISOString"],[324,44,340,42],[324,45,340,43],[325,8,341,6],[325,9,341,7],[325,10,341,8],[326,6,342,4],[327,6,344,4],[327,13,344,11],[328,8,345,6,"data"],[328,12,345,10],[328,14,345,12],[329,10,346,8,"competition_id"],[329,24,346,22],[329,26,346,24,"competitionId"],[329,39,346,37],[330,10,347,8,"daily_payment_enabled"],[330,31,347,29],[330,33,347,31],[330,37,347,35],[331,10,348,8,"daily_payment_amount"],[331,30,348,28],[331,32,348,30],[331,33,348,31],[332,10,349,8,"total_matchdays"],[332,25,349,23],[332,27,349,25],[332,29,349,27],[333,10,350,8,"payments"],[333,18,350,16],[333,20,350,18,"mockPayments"],[334,8,351,6],[335,6,352,4],[335,7,352,5],[336,4,353,2],[336,5,353,3],[337,4,355,2,"getPaymentStatusTableMock"],[337,29,355,27],[337,31,355,29],[337,37,355,36,"competitionId"],[337,50,355,57],[337,54,355,62],[338,6,356,4,"console"],[338,13,356,11],[338,14,356,12,"log"],[338,17,356,15],[338,18,356,16],[338,73,356,71],[338,75,356,73,"competitionId"],[338,88,356,86],[338,89,356,87],[340,6,358,4],[341,6,359,4],[341,12,359,10,"mockTable"],[341,21,359,19],[341,24,359,22],[341,25,359,23],[342,8,360,6,"user_id"],[342,15,360,13],[342,17,360,15],[342,43,360,41],[343,8,361,6,"username"],[343,16,361,14],[343,18,361,16],[343,35,361,33],[344,8,362,6,"name"],[344,12,362,10],[344,14,362,12],[344,31,362,29],[345,8,363,6,"email"],[345,13,363,11],[345,15,363,13],[345,34,363,32],[346,8,364,6,"matchday_payments"],[346,25,364,23],[346,27,364,25,"Array"],[346,32,364,30],[346,33,364,31,"from"],[346,37,364,35],[346,38,364,36],[347,10,364,37,"length"],[347,16,364,43],[347,18,364,45],[348,8,364,47],[348,9,364,48],[348,11,364,50],[348,12,364,51,"_"],[348,13,364,52],[348,15,364,54,"i"],[348,16,364,55],[348,22,364,61],[349,10,365,8,"matchday"],[349,18,365,16],[349,20,365,18,"i"],[349,21,365,19],[349,24,365,22],[349,25,365,23],[350,10,366,8,"status"],[350,16,366,14],[350,18,366,17,"i"],[350,19,366,18],[350,22,366,21],[350,23,366,22],[350,26,366,25],[350,32,366,31],[350,35,366,34],[350,44,366,44],[351,10,367,8,"amount"],[351,16,367,14],[351,18,367,16],[351,19,367,17],[352,10,368,8,"paid_at"],[352,17,368,15],[352,19,368,17,"i"],[352,20,368,18],[352,23,368,21],[352,24,368,22],[352,27,368,25],[352,31,368,29,"Date"],[352,35,368,33],[352,36,368,34],[352,37,368,35],[352,38,368,36,"toISOString"],[352,49,368,47],[352,50,368,48],[352,51,368,49],[352,54,368,52],[353,8,369,6],[353,9,369,7],[353,10,369,8],[354,6,370,4],[354,7,370,5],[354,8,370,6],[355,6,372,4],[355,13,372,11],[356,8,373,6,"data"],[356,12,373,10],[356,14,373,12],[357,10,374,8,"competition_name"],[357,26,374,24],[357,28,374,26],[357,49,374,47],[358,10,375,8,"total_matchdays"],[358,25,375,23],[358,27,375,25],[358,29,375,27],[359,10,376,8,"daily_payment_amount"],[359,30,376,28],[359,32,376,30],[359,33,376,31],[360,10,377,8,"participants"],[360,22,377,20],[360,24,377,22,"mockTable"],[361,8,378,6],[362,6,379,4],[362,7,379,5],[363,4,380,2],[363,5,380,3],[364,4,382,2],[365,4,383,2,"validateNameMock"],[365,20,383,18],[365,22,383,20],[365,28,383,27,"name"],[365,32,383,39],[365,36,383,44],[366,6,384,4,"console"],[366,13,384,11],[366,14,384,12,"log"],[366,17,384,15],[366,18,384,16],[366,57,384,55],[366,59,384,57,"name"],[366,63,384,61],[366,64,384,62],[367,6,386,4],[367,10,386,8],[367,11,386,9,"name"],[367,15,386,13],[367,16,386,14,"trim"],[367,20,386,18],[367,21,386,19],[367,22,386,20],[367,24,386,22],[368,8,387,6],[368,15,387,13],[369,10,387,15,"available"],[369,19,387,24],[369,21,387,26],[369,25,387,30],[370,10,387,32,"message"],[370,17,387,39],[370,19,387,41],[371,8,387,44],[371,9,387,45],[372,6,388,4],[374,6,390,4],[375,6,391,4],[375,12,391,10,"storedCompetitions"],[375,30,391,28],[375,33,391,31],[375,39,391,37,"CrossPlatformStorage"],[375,59,391,57],[375,60,391,57,"default"],[375,67,391,57],[375,68,391,58,"getItem"],[375,75,391,65],[375,76,391,66],[375,94,391,84],[375,95,391,85],[376,6,392,4],[376,10,392,8,"existingCompetitions"],[376,30,392,28],[376,33,392,31,"storedCompetitions"],[376,51,392,49],[376,54,392,52,"JSON"],[376,58,392,56],[376,59,392,57,"parse"],[376,64,392,62],[376,65,392,63,"storedCompetitions"],[376,83,392,81],[376,84,392,82],[376,87,392,85],[376,89,392,87],[378,6,394,4],[379,6,395,4],[379,12,395,10,"defaultNames"],[379,24,395,22],[379,27,395,25],[379,28,395,26],[379,50,395,48],[379,52,395,50],[379,78,395,76],[379,80,395,78],[379,96,395,94],[379,97,395,95],[380,6,396,4],[380,12,396,10,"allNames"],[380,20,396,18],[380,23,396,21],[380,24,397,6],[380,27,397,9,"existingCompetitions"],[380,47,397,29],[380,48,397,30,"map"],[380,51,397,33],[380,52,397,35,"comp"],[380,56,397,44],[380,60,397,49,"comp"],[380,64,397,53],[380,65,397,54,"name"],[380,69,397,58],[380,70,397,59,"toLowerCase"],[380,81,397,70],[380,82,397,71],[380,83,397,72],[380,84,397,73],[380,86,398,6],[380,89,398,9,"defaultNames"],[380,101,398,21],[380,102,398,22,"map"],[380,105,398,25],[380,106,398,26,"name"],[380,110,398,30],[380,114,398,34,"name"],[380,118,398,38],[380,119,398,39,"toLowerCase"],[380,130,398,50],[380,131,398,51],[380,132,398,52],[380,133,398,53],[380,134,399,5],[381,6,401,4],[381,12,401,10,"isAvailable"],[381,23,401,21],[381,26,401,24],[381,27,401,25,"allNames"],[381,35,401,33],[381,36,401,34,"includes"],[381,44,401,42],[381,45,401,43,"name"],[381,49,401,47],[381,50,401,48,"toLowerCase"],[381,61,401,59],[381,62,401,60],[381,63,401,61],[381,64,401,62],[382,6,403,4],[382,13,403,11],[383,8,404,6,"available"],[383,17,404,15],[383,19,404,17,"isAvailable"],[383,30,404,28],[384,8,405,6,"message"],[384,15,405,13],[384,17,405,15,"isAvailable"],[384,28,405,26],[384,31,405,29],[384,47,405,45],[384,50,405,48],[385,6,406,4],[385,7,406,5],[386,4,407,2],[386,5,407,3],[387,4,409,2],[388,4,410,2,"getMyCompetitionsMock"],[388,25,410,23],[388,27,410,25],[388,33,410,25,"getMyCompetitionsMock"],[388,34,410,25],[388,39,410,37],[389,6,411,4,"console"],[389,13,411,11],[389,14,411,12,"log"],[389,17,411,15],[389,18,411,16],[389,52,411,50],[389,53,411,51],[390,6,412,4],[390,12,412,10,"storedCompetitions"],[390,30,412,28],[390,33,412,31],[390,39,412,37,"CrossPlatformStorage"],[390,59,412,57],[390,60,412,57,"default"],[390,67,412,57],[390,68,412,58,"getItem"],[390,75,412,65],[390,76,412,66],[390,95,412,85],[390,96,412,86],[391,6,414,4],[391,10,414,8,"storedCompetitions"],[391,28,414,26],[391,30,414,28],[392,8,415,6],[392,14,415,12,"competitions"],[392,26,415,24],[392,29,415,27,"JSON"],[392,33,415,31],[392,34,415,32,"parse"],[392,39,415,37],[392,40,415,38,"storedCompetitions"],[392,58,415,56],[392,59,415,57],[393,8,416,6,"console"],[393,15,416,13],[393,16,416,14,"log"],[393,19,416,17],[393,20,416,18],[393,55,416,53],[393,57,416,55,"competitions"],[393,69,416,67],[393,70,416,68,"length"],[393,76,416,74],[393,77,416,75],[394,8,418,6,"competitions"],[394,20,418,18],[394,21,418,19,"forEach"],[394,28,418,26],[394,29,418,27],[394,30,418,28,"comp"],[394,34,418,37],[394,36,418,39,"index"],[394,41,418,52],[394,46,418,57],[395,10,419,8,"console"],[395,17,419,15],[395,18,419,16,"log"],[395,21,419,19],[395,22,419,20],[395,25,419,23,"index"],[395,30,419,28],[395,33,419,31],[395,34,419,32],[395,39,419,37,"comp"],[395,43,419,41],[395,44,419,42,"name"],[395,48,419,46],[395,57,419,55,"comp"],[395,61,419,59],[395,62,419,60,"_id"],[395,65,419,63],[395,68,419,66],[395,69,419,67],[396,8,420,6],[396,9,420,7],[396,10,420,8],[397,8,422,6],[397,15,422,13,"competitions"],[397,27,422,25],[398,6,423,4],[398,7,423,5],[398,13,423,11],[399,8,424,6,"console"],[399,15,424,13],[399,16,424,14,"log"],[399,19,424,17],[399,20,424,18],[399,80,424,78],[399,81,424,79],[400,8,425,6],[400,15,425,13],[400,17,425,15],[401,6,426,4],[402,4,427,2],[402,5,427,3],[403,4,429,2,"joinMock"],[403,12,429,10],[403,14,429,12],[403,20,429,19,"inviteCode"],[403,30,429,37],[403,34,429,42],[404,6,430,4,"console"],[404,13,430,11],[404,14,430,12,"log"],[404,17,430,15],[404,18,430,16],[404,59,430,57],[404,61,430,59,"inviteCode"],[404,71,430,69],[404,72,430,70],[405,6,431,4],[405,10,431,8,"inviteCode"],[405,20,431,18],[405,21,431,19,"length"],[405,27,431,25],[405,30,431,28],[405,31,431,29],[405,33,431,31],[406,8,432,6],[406,14,432,12],[406,18,432,16,"Error"],[406,23,432,21],[406,24,432,22],[406,45,432,43],[406,46,432,44],[407,6,433,4],[408,6,434,4],[408,13,434,11],[409,8,434,13,"message"],[409,15,434,20],[409,17,434,22],[410,6,434,57],[410,7,434,58],[411,4,435,2],[411,5,435,3],[412,4,437,2],[413,4,438,2,"deleteMock"],[413,14,438,12],[413,16,438,14],[413,22,438,21,"competitionId"],[413,35,438,42],[413,39,438,47],[414,6,439,4,"console"],[414,13,439,11],[414,14,439,12,"log"],[414,17,439,15],[414,18,439,16],[414,51,439,49],[414,53,439,51,"competitionId"],[414,66,439,64],[414,67,439,65],[415,6,441,4],[415,12,441,10,"storedCompetitions"],[415,30,441,28],[415,33,441,31],[415,39,441,37,"CrossPlatformStorage"],[415,59,441,57],[415,60,441,57,"default"],[415,67,441,57],[415,68,441,58,"getItem"],[415,75,441,65],[415,76,441,66],[415,94,441,84],[415,95,441,85],[416,6,442,4],[416,10,442,8,"competitions"],[416,22,442,20],[416,25,442,23,"storedCompetitions"],[416,43,442,41],[416,46,442,44,"JSON"],[416,50,442,48],[416,51,442,49,"parse"],[416,56,442,54],[416,57,442,55,"storedCompetitions"],[416,75,442,73],[416,76,442,74],[416,79,442,77],[416,81,442,79],[417,6,444,4],[417,12,444,10,"competitionToDelete"],[417,31,444,29],[417,34,444,32,"competitions"],[417,46,444,44],[417,47,444,45,"find"],[417,51,444,49],[417,52,444,51,"comp"],[417,56,444,60],[417,60,444,65,"comp"],[417,64,444,69],[417,65,444,70,"_id"],[417,68,444,73],[417,73,444,78,"competitionId"],[417,86,444,91],[417,87,444,92],[418,6,445,4],[418,10,445,8],[418,11,445,9,"competitionToDelete"],[418,30,445,28],[418,32,445,30],[419,8,446,6],[419,14,446,12],[419,18,446,16,"Error"],[419,23,446,21],[419,24,446,22],[419,47,446,45],[419,48,446,46],[420,6,447,4],[422,6,449,4],[423,6,450,4],[423,10,450,8,"competitionToDelete"],[423,29,450,27],[423,30,450,28,"admin_id"],[423,38,450,36],[423,43,450,41],[423,69,450,67],[423,71,450,69],[424,8,451,6],[424,14,451,12],[424,18,451,16,"Error"],[424,23,451,21],[424,24,451,22],[424,64,451,62],[424,65,451,63],[425,6,452,4],[427,6,454,4],[428,6,455,4,"competitions"],[428,18,455,16],[428,21,455,19,"competitions"],[428,33,455,31],[428,34,455,32,"filter"],[428,40,455,38],[428,41,455,40,"comp"],[428,45,455,49],[428,49,455,54,"comp"],[428,53,455,58],[428,54,455,59,"_id"],[428,57,455,62],[428,62,455,67,"competitionId"],[428,75,455,80],[428,76,455,81],[429,6,456,4],[429,12,456,10,"CrossPlatformStorage"],[429,32,456,30],[429,33,456,30,"default"],[429,40,456,30],[429,41,456,31,"setItem"],[429,48,456,38],[429,49,456,39],[429,67,456,57],[429,69,456,59,"JSON"],[429,73,456,63],[429,74,456,64,"stringify"],[429,83,456,73],[429,84,456,74,"competitions"],[429,96,456,86],[429,97,456,87],[429,98,456,88],[431,6,458,4],[432,6,459,4],[432,12,459,10,"logAdminAction"],[432,26,459,24],[432,27,459,25],[432,35,459,33],[432,37,459,35,"competitionToDelete"],[432,56,459,54],[432,57,459,55,"name"],[432,61,459,59],[432,63,459,61],[432,80,459,78],[432,81,459,79],[433,6,461,4,"console"],[433,13,461,11],[433,14,461,12,"log"],[433,17,461,15],[433,18,461,16],[433,54,461,52],[433,55,461,53],[434,6,462,4],[434,13,462,11],[435,8,462,13,"message"],[435,15,462,20],[435,17,462,22],[436,6,462,57],[436,7,462,58],[437,4,463,2],[437,5,463,3],[438,4,465,2],[439,4,466,2,"editMock"],[439,12,466,10],[439,14,466,12],[439,20,466,12,"editMock"],[439,21,466,19,"competitionId"],[439,34,466,40],[439,36,466,42,"updates"],[439,43,466,54],[439,48,466,59],[440,6,467,4,"console"],[440,13,467,11],[440,14,467,12,"log"],[440,17,467,15],[440,18,467,16],[440,49,467,47],[440,51,467,49,"competitionId"],[440,64,467,62],[440,66,467,64,"updates"],[440,73,467,71],[440,74,467,72],[441,6,469,4],[441,12,469,10,"storedCompetitions"],[441,30,469,28],[441,33,469,31],[441,39,469,37,"CrossPlatformStorage"],[441,59,469,57],[441,60,469,57,"default"],[441,67,469,57],[441,68,469,58,"getItem"],[441,75,469,65],[441,76,469,66],[441,94,469,84],[441,95,469,85],[442,6,470,4],[442,10,470,8,"competitions"],[442,22,470,20],[442,25,470,23,"storedCompetitions"],[442,43,470,41],[442,46,470,44,"JSON"],[442,50,470,48],[442,51,470,49,"parse"],[442,56,470,54],[442,57,470,55,"storedCompetitions"],[442,75,470,73],[442,76,470,74],[442,79,470,77],[442,81,470,79],[443,6,472,4],[443,12,472,10,"competitionIndex"],[443,28,472,26],[443,31,472,29,"competitions"],[443,43,472,41],[443,44,472,42,"findIndex"],[443,53,472,51],[443,54,472,53,"comp"],[443,58,472,62],[443,62,472,67,"comp"],[443,66,472,71],[443,67,472,72,"_id"],[443,70,472,75],[443,75,472,80,"competitionId"],[443,88,472,93],[443,89,472,94],[444,6,473,4],[444,10,473,8,"competitionIndex"],[444,26,473,24],[444,31,473,29],[444,32,473,30],[444,33,473,31],[444,35,473,33],[445,8,474,6],[445,14,474,12],[445,18,474,16,"Error"],[445,23,474,21],[445,24,474,22],[445,47,474,45],[445,48,474,46],[446,6,475,4],[447,6,477,4],[447,12,477,10,"competition"],[447,23,477,21],[447,26,477,24,"competitions"],[447,38,477,36],[447,39,477,37,"competitionIndex"],[447,55,477,53],[447,56,477,54],[449,6,479,4],[450,6,480,4],[450,10,480,8,"competition"],[450,21,480,19],[450,22,480,20,"admin_id"],[450,30,480,28],[450,35,480,33],[450,61,480,59],[450,63,480,61],[451,8,481,6],[451,14,481,12],[451,18,481,16,"Error"],[451,23,481,21],[451,24,481,22],[451,62,481,60],[451,63,481,61],[452,6,482,4],[454,6,484,4],[455,6,485,4,"competitions"],[455,18,485,16],[455,19,485,17,"competitionIndex"],[455,35,485,33],[455,36,485,34],[455,39,485,37],[456,8,486,6],[456,11,486,9,"competition"],[456,22,486,20],[457,8,487,6],[457,11,487,9,"updates"],[457,18,487,16],[458,8,488,6,"updated_at"],[458,18,488,16],[458,20,488,18],[458,24,488,22,"Date"],[458,28,488,26],[458,29,488,27],[458,30,488,28],[458,31,488,29,"toISOString"],[458,42,488,40],[458,43,488,41],[459,6,489,4],[459,7,489,5],[460,6,491,4],[460,12,491,10,"CrossPlatformStorage"],[460,32,491,30],[460,33,491,30,"default"],[460,40,491,30],[460,41,491,31,"setItem"],[460,48,491,38],[460,49,491,39],[460,67,491,57],[460,69,491,59,"JSON"],[460,73,491,63],[460,74,491,64,"stringify"],[460,83,491,73],[460,84,491,74,"competitions"],[460,96,491,86],[460,97,491,87],[460,98,491,88],[462,6,493,4],[463,6,494,4],[463,12,494,10,"logAdminAction"],[463,26,494,24],[463,27,494,25],[463,33,494,31],[463,35,494,33,"competition"],[463,46,494,44],[463,47,494,45,"name"],[463,51,494,49],[463,53,494,51],[463,70,494,68],[463,72,494,70,"updates"],[463,79,494,77],[463,80,494,78],[464,6,496,4,"console"],[464,13,496,11],[464,14,496,12,"log"],[464,17,496,15],[464,18,496,16],[464,54,496,52],[464,55,496,53],[465,6,497,4],[465,13,497,11,"competitions"],[465,25,497,23],[465,26,497,24,"competitionIndex"],[465,42,497,40],[465,43,497,41],[466,4,498,2],[466,5,498,3],[467,4,500,2],[468,4,501,2,"awardDailyPrizeMock"],[468,23,501,21],[468,25,501,23],[468,31,501,23,"awardDailyPrizeMock"],[468,32,501,30,"competitionId"],[468,45,501,51],[468,47,501,53,"matchday"],[468,55,501,69],[468,57,501,71,"winnerId"],[468,65,501,87],[468,70,501,92],[469,6,502,4,"console"],[469,13,502,11],[469,14,502,12,"log"],[469,17,502,15],[469,18,502,16],[469,62,502,60],[469,64,502,62,"matchday"],[469,72,502,70],[469,74,502,72],[469,83,502,81],[469,85,502,83,"winnerId"],[469,93,502,91],[469,94,502,92],[470,6,504,4],[470,12,504,10,"storedCompetitions"],[470,30,504,28],[470,33,504,31],[470,39,504,37,"CrossPlatformStorage"],[470,59,504,57],[470,60,504,57,"default"],[470,67,504,57],[470,68,504,58,"getItem"],[470,75,504,65],[470,76,504,66],[470,94,504,84],[470,95,504,85],[471,6,505,4],[471,10,505,8,"competitions"],[471,22,505,20],[471,25,505,23,"storedCompetitions"],[471,43,505,41],[471,46,505,44,"JSON"],[471,50,505,48],[471,51,505,49,"parse"],[471,56,505,54],[471,57,505,55,"storedCompetitions"],[471,75,505,73],[471,76,505,74],[471,79,505,77],[471,81,505,79],[472,6,507,4],[472,12,507,10,"competitionIndex"],[472,28,507,26],[472,31,507,29,"competitions"],[472,43,507,41],[472,44,507,42,"findIndex"],[472,53,507,51],[472,54,507,53,"comp"],[472,58,507,62],[472,62,507,67,"comp"],[472,66,507,71],[472,67,507,72,"_id"],[472,70,507,75],[472,75,507,80,"competitionId"],[472,88,507,93],[472,89,507,94],[473,6,508,4],[473,10,508,8,"competitionIndex"],[473,26,508,24],[473,31,508,29],[473,32,508,30],[473,33,508,31],[473,35,508,33],[474,8,509,6],[474,14,509,12],[474,18,509,16,"Error"],[474,23,509,21],[474,24,509,22],[474,47,509,45],[474,48,509,46],[475,6,510,4],[476,6,512,4],[476,12,512,10,"competition"],[476,23,512,21],[476,26,512,24,"competitions"],[476,38,512,36],[476,39,512,37,"competitionIndex"],[476,55,512,53],[476,56,512,54],[478,6,514,4],[479,6,515,4],[479,10,515,8,"competition"],[479,21,515,19],[479,22,515,20,"admin_id"],[479,30,515,28],[479,35,515,33],[479,61,515,59],[479,63,515,61],[480,8,516,6],[480,14,516,12],[480,18,516,16,"Error"],[480,23,516,21],[480,24,516,22],[480,59,516,57],[480,60,516,58],[481,6,517,4],[483,6,519,4],[484,6,520,4],[484,10,520,8],[484,11,520,9,"competition"],[484,22,520,20],[484,23,520,21,"rules"],[484,28,520,26],[484,32,520,30],[484,33,520,31],[484,34,520,32],[484,41,520,39],[484,43,520,41],[484,50,520,48],[484,51,520,49],[484,52,520,50,"includes"],[484,60,520,58],[484,61,520,59,"competition"],[484,72,520,70],[484,73,520,71,"rules"],[484,78,520,76],[484,79,520,77,"type"],[484,83,520,81],[484,84,520,82],[484,86,520,84],[485,8,521,6],[485,14,521,12],[485,18,521,16,"Error"],[485,23,521,21],[485,24,521,22],[485,69,521,67],[485,70,521,68],[486,6,522,4],[487,6,524,4],[487,12,524,10,"dailyPrizeAmount"],[487,28,524,26],[487,31,524,29,"competition"],[487,42,524,40],[487,43,524,41,"rules"],[487,48,524,46],[487,49,524,47,"daily_prize"],[487,60,524,58],[487,64,524,62],[487,65,524,63],[488,6,525,4],[488,12,525,10,"winner"],[488,18,525,16],[488,21,525,19,"competition"],[488,32,525,30],[488,33,525,31,"participants"],[488,45,525,43],[488,46,525,44,"find"],[488,50,525,48],[488,51,525,50,"p"],[488,52,525,56],[488,56,525,61,"p"],[488,57,525,62],[488,58,525,63,"id"],[488,60,525,65],[488,65,525,70,"winnerId"],[488,73,525,78],[488,74,525,79],[489,6,527,4],[489,10,527,8],[489,11,527,9,"winner"],[489,17,527,15],[489,19,527,17],[490,8,528,6],[490,14,528,12],[490,18,528,16,"Error"],[490,23,528,21],[490,24,528,22],[490,57,528,55],[490,58,528,56],[491,6,529,4],[493,6,531,4],[494,6,532,4],[494,10,532,8],[494,11,532,9,"competition"],[494,22,532,20],[494,23,532,21,"daily_winners"],[494,36,532,34],[494,38,532,36],[495,8,533,6,"competition"],[495,19,533,17],[495,20,533,18,"daily_winners"],[495,33,533,31],[495,36,533,34],[495,37,533,35],[495,38,533,36],[496,6,534,4],[498,6,536,4],[499,6,537,4],[499,10,537,8,"competition"],[499,21,537,19],[499,22,537,20,"daily_winners"],[499,35,537,33],[499,36,537,34,"matchday"],[499,44,537,42],[499,45,537,43],[499,47,537,45],[500,8,538,6],[500,14,538,12],[500,18,538,16,"Error"],[500,23,538,21],[500,24,538,22],[500,52,538,50,"matchday"],[500,60,538,58],[500,83,538,81,"competition"],[500,94,538,92],[500,95,538,93,"daily_winners"],[500,108,538,106],[500,109,538,107,"matchday"],[500,117,538,115],[500,118,538,116],[500,119,538,117,"name"],[500,123,538,121],[500,125,538,123],[500,126,538,124],[501,6,539,4],[503,6,541,4],[504,6,542,4,"competition"],[504,17,542,15],[504,18,542,16,"daily_winners"],[504,31,542,29],[504,32,542,30,"matchday"],[504,40,542,38],[504,41,542,39],[504,44,542,42],[505,8,543,6,"user_id"],[505,15,543,13],[505,17,543,15,"winnerId"],[505,25,543,23],[506,8,544,6,"name"],[506,12,544,10],[506,14,544,12,"winner"],[506,20,544,18],[506,21,544,19,"name"],[506,25,544,23],[507,8,545,6,"amount"],[507,14,545,12],[507,16,545,14,"dailyPrizeAmount"],[507,32,545,30],[508,8,546,6,"awarded_at"],[508,18,546,16],[508,20,546,18],[508,24,546,22,"Date"],[508,28,546,26],[508,29,546,27],[508,30,546,28],[508,31,546,29,"toISOString"],[508,42,546,40],[508,43,546,41],[509,6,547,4],[509,7,547,5],[511,6,549,4],[512,6,550,4,"competitions"],[512,18,550,16],[512,19,550,17,"competitionIndex"],[512,35,550,33],[512,36,550,34],[512,39,550,37,"competition"],[512,50,550,48],[513,6,551,4],[513,12,551,10,"CrossPlatformStorage"],[513,32,551,30],[513,33,551,30,"default"],[513,40,551,30],[513,41,551,31,"setItem"],[513,48,551,38],[513,49,551,39],[513,67,551,57],[513,69,551,59,"JSON"],[513,73,551,63],[513,74,551,64,"stringify"],[513,83,551,73],[513,84,551,74,"competitions"],[513,96,551,86],[513,97,551,87],[513,98,551,88],[515,6,553,4],[516,6,554,4],[516,12,554,10,"logAdminAction"],[516,26,554,24],[516,27,554,25],[516,46,554,44],[516,48,554,46,"competition"],[516,59,554,57],[516,60,554,58,"name"],[516,64,554,62],[516,66,554,64],[516,83,554,81],[516,85,554,83],[517,8,555,6,"matchday"],[517,16,555,14],[518,8,556,6,"winner"],[518,14,556,12],[518,16,556,14,"winner"],[518,22,556,20],[518,23,556,21,"name"],[518,27,556,25],[519,8,557,6,"amount"],[519,14,557,12],[519,16,557,14,"dailyPrizeAmount"],[520,6,558,4],[520,7,558,5],[520,8,558,6],[522,6,560,4],[523,6,561,4,"console"],[523,13,561,11],[523,14,561,12,"log"],[523,17,561,15],[523,18,561,16],[523,24,561,22,"winner"],[523,30,561,28],[523,31,561,29,"name"],[523,35,561,33],[523,48,561,46,"dailyPrizeAmount"],[523,64,561,62],[523,89,561,87,"matchday"],[523,97,561,95],[523,99,561,97],[523,100,561,98],[524,6,563,4,"console"],[524,13,563,11],[524,14,563,12,"log"],[524,17,563,15],[524,18,563,16],[524,54,563,52],[524,55,563,53],[525,6,564,4],[525,13,564,11],[526,8,565,6,"message"],[526,15,565,13],[526,17,565,15],[526,36,565,34,"dailyPrizeAmount"],[526,52,565,50],[526,67,565,65,"winner"],[526,73,565,71],[526,74,565,72,"name"],[526,78,565,76],[526,95,565,93,"matchday"],[526,103,565,101],[526,105,565,103],[527,8,566,6,"competition"],[527,19,566,17],[527,21,566,19,"competition"],[528,6,567,4],[528,7,567,5],[529,4,568,2],[529,5,568,3],[530,4,570,2],[531,4,571,2,"getAdminLogsMock"],[531,20,571,18],[531,22,571,20],[531,28,571,20,"getAdminLogsMock"],[531,29,571,20],[531,34,571,32],[532,6,572,4,"console"],[532,13,572,11],[532,14,572,12,"log"],[532,17,572,15],[532,18,572,16],[532,47,572,45],[532,48,572,46],[533,6,574,4],[533,10,574,8],[534,8,575,6],[534,14,575,12,"logs"],[534,18,575,16],[534,21,575,19],[534,28,575,25,"CrossPlatformStorage"],[534,48,575,45],[534,49,575,45,"default"],[534,56,575,45],[534,57,575,46,"getItem"],[534,64,575,53],[534,65,575,54],[534,76,575,65],[534,77,575,66],[534,82,575,70],[534,86,575,74],[535,8,576,6],[535,14,576,12,"adminLogs"],[535,23,576,21],[535,26,576,24,"JSON"],[535,30,576,28],[535,31,576,29,"parse"],[535,36,576,34],[535,37,576,35,"logs"],[535,41,576,39],[535,42,576,40],[537,8,578,6],[538,8,579,6,"adminLogs"],[538,17,579,15],[538,18,579,16,"sort"],[538,22,579,20],[538,23,579,21],[538,24,579,22,"a"],[538,25,579,28],[538,27,579,30,"b"],[538,28,579,36],[538,33,579,41],[538,37,579,45,"Date"],[538,41,579,49],[538,42,579,50,"b"],[538,43,579,51],[538,44,579,52,"timestamp"],[538,53,579,61],[538,54,579,62],[538,55,579,63,"getTime"],[538,62,579,70],[538,63,579,71],[538,64,579,72],[538,67,579,75],[538,71,579,79,"Date"],[538,75,579,83],[538,76,579,84,"a"],[538,77,579,85],[538,78,579,86,"timestamp"],[538,87,579,95],[538,88,579,96],[538,89,579,97,"getTime"],[538,96,579,104],[538,97,579,105],[538,98,579,106],[538,99,579,107],[539,8,581,6,"console"],[539,15,581,13],[539,16,581,14,"log"],[539,19,581,17],[539,20,581,18],[539,42,581,40],[539,44,581,42,"adminLogs"],[539,53,581,51],[539,54,581,52,"length"],[539,60,581,58],[539,61,581,59],[540,8,582,6],[540,15,582,13,"adminLogs"],[540,24,582,22],[541,6,583,4],[541,7,583,5],[541,8,583,6],[541,15,583,13,"error"],[541,20,583,18],[541,22,583,20],[542,8,584,6,"console"],[542,15,584,13],[542,16,584,14,"error"],[542,21,584,19],[542,22,584,20],[542,52,584,50],[542,54,584,52,"error"],[542,59,584,57],[542,60,584,58],[543,8,585,6],[543,15,585,13],[543,17,585,15],[544,6,586,4],[545,4,587,2],[545,5,587,3],[546,4,589,2],[547,4,590,2,"getAllCompetitions"],[547,22,590,20],[547,24,590,22],[547,30,590,22,"getAllCompetitions"],[547,31,590,22],[547,36,590,34],[548,6,591,4,"console"],[548,13,591,11],[548,14,591,12,"log"],[548,17,591,15],[548,18,591,16],[548,68,591,66],[548,69,591,67],[549,6,593,4],[549,10,593,8],[550,8,594,6],[551,8,595,6],[551,14,595,12,"storedCompetitions"],[551,32,595,30],[551,35,595,33],[551,41,595,39,"CrossPlatformStorage"],[551,61,595,59],[551,62,595,59,"default"],[551,69,595,59],[551,70,595,60,"getItem"],[551,77,595,67],[551,78,595,68],[551,97,595,87],[551,98,595,88],[552,8,596,6],[552,12,596,10,"competitions"],[552,24,596,22],[552,27,596,25,"storedCompetitions"],[552,45,596,43],[552,48,596,46,"JSON"],[552,52,596,50],[552,53,596,51,"parse"],[552,58,596,56],[552,59,596,57,"storedCompetitions"],[552,77,596,75],[552,78,596,76],[552,81,596,79],[552,83,596,81],[554,8,598,6],[555,8,599,6],[555,14,599,12,"oldStoredCompetitions"],[555,35,599,33],[555,38,599,36],[555,44,599,42,"CrossPlatformStorage"],[555,64,599,62],[555,65,599,62,"default"],[555,72,599,62],[555,73,599,63,"getItem"],[555,80,599,70],[555,81,599,71],[555,99,599,89],[555,100,599,90],[556,8,600,6],[556,14,600,12,"oldCompetitions"],[556,29,600,27],[556,32,600,30,"oldStoredCompetitions"],[556,53,600,51],[556,56,600,54,"JSON"],[556,60,600,58],[556,61,600,59,"parse"],[556,66,600,64],[556,67,600,65,"oldStoredCompetitions"],[556,88,600,86],[556,89,600,87],[556,92,600,90],[556,94,600,92],[558,8,602,6],[559,8,603,6],[559,14,603,12,"allCompetitions"],[559,29,603,27],[559,32,603,30],[559,33,603,31],[559,36,603,34,"competitions"],[559,48,603,46],[559,50,603,48],[559,53,603,51,"oldCompetitions"],[559,68,603,66],[559,69,603,67],[560,8,604,6],[560,14,604,12,"uniqueCompetitions"],[560,32,604,30],[560,35,604,33,"allCompetitions"],[560,50,604,48],[560,51,604,49,"filter"],[560,57,604,55],[560,58,604,56],[560,59,604,57,"comp"],[560,63,604,61],[560,65,604,63,"index"],[560,70,604,68],[560,72,604,70,"self"],[560,76,604,74],[560,81,605,8,"index"],[560,86,605,13],[560,91,605,18,"self"],[560,95,605,22],[560,96,605,23,"findIndex"],[560,105,605,32],[560,106,605,33,"c"],[560,107,605,34],[560,111,605,38,"c"],[560,112,605,39],[560,113,605,40,"_id"],[560,116,605,43],[560,121,605,48,"comp"],[560,125,605,52],[560,126,605,53,"_id"],[560,129,605,56],[560,130,606,6],[560,131,606,7],[561,8,608,6,"console"],[561,15,608,13],[561,16,608,14,"log"],[561,19,608,17],[561,20,608,18],[561,57,608,55],[561,59,608,57,"uniqueCompetitions"],[561,77,608,75],[561,78,608,76,"length"],[561,84,608,82],[561,85,608,83],[562,8,609,6],[562,15,609,13,"uniqueCompetitions"],[562,33,609,31],[563,6,611,4],[563,7,611,5],[563,8,611,6],[563,15,611,13,"error"],[563,20,611,18],[563,22,611,20],[564,8,612,6,"console"],[564,15,612,13],[564,16,612,14,"error"],[564,21,612,19],[564,22,612,20],[564,58,612,56],[564,60,612,58,"error"],[564,65,612,63],[564,66,612,64],[565,8,613,6],[565,15,613,13],[565,17,613,15],[566,6,614,4],[567,4,615,2],[568,2,616,0],[568,3,616,1],[570,2,618,0],[571,2,619,7],[571,8,619,13,"walletAPI"],[571,17,619,22],[571,20,619,25],[572,4,620,2,"getBalance"],[572,14,620,12],[572,16,620,14,"getBalance"],[572,17,620,14],[572,22,620,20,"apiClient"],[572,31,620,29],[572,32,620,30,"get"],[572,35,620,33],[572,36,620,34],[572,53,620,51],[572,54,620,52],[573,4,622,2,"topUp"],[573,9,622,7],[573,11,622,10,"amount"],[573,17,622,24],[573,21,623,4,"apiClient"],[573,30,623,13],[573,31,623,14,"post"],[573,35,623,18],[573,36,623,19],[573,51,623,34],[573,53,623,36],[573,57,623,40],[573,59,623,42],[574,6,624,6,"params"],[574,12,624,12],[574,14,624,14],[575,8,624,16,"amount"],[576,6,624,23],[577,4,625,4],[577,5,625,5],[577,6,625,6],[578,4,627,2,"withdraw"],[578,12,627,10],[578,14,627,13,"amount"],[578,20,627,27],[578,24,628,4,"apiClient"],[578,33,628,13],[578,34,628,14,"post"],[578,38,628,18],[578,39,628,19],[578,57,628,37],[578,59,628,39],[578,63,628,43],[578,65,628,45],[579,6,629,6,"params"],[579,12,629,12],[579,14,629,14],[580,8,629,16,"amount"],[581,6,629,23],[582,4,630,4],[582,5,630,5],[582,6,630,6],[583,4,632,2,"getTransactions"],[583,19,632,17],[583,21,632,19,"getTransactions"],[583,22,632,19],[583,27,632,25,"apiClient"],[583,36,632,34],[583,37,632,35,"get"],[583,40,632,38],[583,41,632,39],[583,56,632,54],[584,2,633,0],[584,3,633,1],[586,2,635,0],[587,2,636,7],[587,8,636,13,"databaseAPI"],[587,19,636,24],[587,22,636,27],[588,4,637,2,"resetDatabase"],[588,17,637,15],[588,19,637,17],[588,25,637,17,"resetDatabase"],[588,26,637,17],[588,31,637,29],[589,6,638,4,"console"],[589,13,638,11],[589,14,638,12,"log"],[589,17,638,15],[589,18,638,16],[589,69,638,67],[589,70,638,68],[590,6,640,4],[590,10,640,8],[591,8,641,6],[591,14,641,12,"CrossPlatformStorage"],[591,34,641,32],[591,35,641,32,"default"],[591,42,641,32],[591,43,641,33,"removeItem"],[591,53,641,43],[591,54,641,44],[591,73,641,63],[591,74,641,64],[592,8,642,6],[592,14,642,12,"CrossPlatformStorage"],[592,34,642,32],[592,35,642,32,"default"],[592,42,642,32],[592,43,642,33,"removeItem"],[592,53,642,43],[592,54,642,44],[592,71,642,61],[592,72,642,62],[593,8,643,6],[593,14,643,12,"CrossPlatformStorage"],[593,34,643,32],[593,35,643,32,"default"],[593,42,643,32],[593,43,643,33,"removeItem"],[593,53,643,43],[593,54,643,44],[593,95,643,85],[593,96,643,86],[594,8,644,6],[594,14,644,12,"CrossPlatformStorage"],[594,34,644,32],[594,35,644,32,"default"],[594,42,644,32],[594,43,644,33,"removeItem"],[594,53,644,43],[594,54,644,44],[594,93,644,83],[594,94,644,84],[595,8,646,6,"console"],[595,15,646,13],[595,16,646,14,"log"],[595,19,646,17],[595,20,646,18],[595,66,646,64],[595,67,646,65],[596,8,647,6],[596,15,647,13],[597,10,647,15,"success"],[597,17,647,22],[597,19,647,24],[597,23,647,28],[598,10,647,30,"message"],[598,17,647,37],[598,19,647,39],[599,8,647,65],[599,9,647,66],[600,6,648,4],[600,7,648,5],[600,8,648,6],[600,15,648,13,"error"],[600,20,648,18],[600,22,648,20],[601,8,649,6,"console"],[601,15,649,13],[601,16,649,14,"error"],[601,21,649,19],[601,22,649,20],[601,48,649,46],[601,50,649,48,"error"],[601,55,649,53],[601,56,649,54],[602,8,650,6],[602,15,650,13],[603,10,650,15,"success"],[603,17,650,22],[603,19,650,24],[603,24,650,29],[604,10,650,31,"message"],[604,17,650,38],[604,19,650,40],[605,8,650,55],[605,9,650,56],[606,6,651,4],[607,4,652,2],[608,2,653,0],[608,3,653,1],[609,2,655,0],[609,6,655,0,"_default"],[609,14,655,0],[609,17,655,15,"apiClient"],[609,26,655,24],[610,0,655,25],[610,3]],"functionMap":{"names":["<global>","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","generateRandomCode","existingCompetitions.some$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","competitionAPI.getAllCompetitions","allCompetitions.filter$argument_0","self.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACQ;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CDC;iBWM;MXG;UYE;4CZM;aaE;4CbC;ScE;uCdC;aeE;iDfC;kBgBE,+BhB;UiBE,oCjB;kBkBE;MlBG;mBmBE;MnBG;uBoBI;CpBqB;UqBI;6CrBe;QsBE;qEtBC;qBuBE,uCvB;kBwBE,oDxB;mByBE;MzBQ;U0BE;M1BG;mB2BE;qD3BC;gB4BG;M5BI;uB6BE;qE7BC;yB8BE;wE9BC;c+BG;mDCwB,sCD;+BEO;KFO;qCGI,8CH;G/BiE;oBmCG;GnCe;2BoCE;GpC2B;6BqCE;kDCS;QDK;GrCW;oBuCG;kCPc,sCO;0BCC,0BD;GvCS;yByCG;2BCQ;ODE;GzCO;Y2CE;G3CM;c4CG;kDCM,yCD;uCEW,yCF;G5CQ;Y+CG;oDCM,yCD;G/C0B;uBiDG;oDDM,yCC;iDCkB,6BD;GjD2C;oBmDG;qBCQ,qFD;GnDQ;sBqDG;wDCc;iCCC,uBD,CD;GrDU;cwDK,sCxD;SyDE;MzDG;Y0DE;M1DG;mB2DE,oC3D;iB4DK;G5De"},"hasCjsExports":false},"type":"js/module"}]}