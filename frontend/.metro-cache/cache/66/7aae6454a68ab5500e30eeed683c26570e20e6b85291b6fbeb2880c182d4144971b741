{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition created and saved! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":396,"map":[[27,2,414,0,"Object"],[27,8,414,0],[27,9,414,0,"defineProperty"],[27,23,414,0],[27,24,414,0,"exports"],[27,31,414,0],[28,4,414,0,"enumerable"],[28,14,414,0],[29,4,414,0,"get"],[29,7,414,0],[29,18,414,0,"get"],[29,19,414,0],[30,6,414,0],[30,13,414,0,"_default"],[30,21,414,0],[31,4,414,0],[32,2,414,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,398,0,"Object"],[45,8,398,0],[45,9,398,0,"defineProperty"],[45,23,398,0],[45,24,398,0,"exports"],[45,31,398,0],[46,4,398,0,"enumerable"],[46,14,398,0],[47,4,398,0,"get"],[47,7,398,0],[47,18,398,0,"get"],[47,19,398,0],[48,6,398,0],[48,13,398,0,"walletAPI"],[48,22,398,0],[49,4,398,0],[50,2,398,0],[51,2,1,0],[51,6,1,0,"_axios"],[51,12,1,0],[51,15,1,0,"require"],[51,22,1,0],[51,23,1,0,"_dependencyMap"],[51,37,1,0],[52,2,1,0],[52,6,1,0,"axios"],[52,11,1,0],[52,14,1,0,"_interopDefault"],[52,29,1,0],[52,30,1,0,"_axios"],[52,36,1,0],[53,2,2,0],[53,6,2,0,"_expoSecureStore"],[53,22,2,0],[53,25,2,0,"require"],[53,32,2,0],[53,33,2,0,"_dependencyMap"],[53,47,2,0],[54,2,2,0],[54,6,2,0,"SecureStore"],[54,17,2,0],[54,20,2,0,"_interopNamespace"],[54,37,2,0],[54,38,2,0,"_expoSecureStore"],[54,54,2,0],[55,2,3,0],[55,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[55,42,3,0],[55,45,3,0,"require"],[55,52,3,0],[55,53,3,0,"_dependencyMap"],[55,67,3,0],[56,2,3,0],[56,6,3,0,"AsyncStorage"],[56,18,3,0],[56,21,3,0,"_interopDefault"],[56,36,3,0],[56,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,73,3,0],[57,2,4,0],[57,6,4,0,"_expoConstants"],[57,20,4,0],[57,23,4,0,"require"],[57,30,4,0],[57,31,4,0,"_dependencyMap"],[57,45,4,0],[58,2,4,0],[58,6,4,0,"Constants"],[58,15,4,0],[58,18,4,0,"_interopDefault"],[58,33,4,0],[58,34,4,0,"_expoConstants"],[58,48,4,0],[59,2,6,0],[60,2,7,0],[60,8,7,6,"CrossPlatformStorage"],[60,28,7,26],[60,29,7,27],[61,4,8,2],[61,17,8,15,"getItem"],[61,24,8,22,"getItem"],[61,25,8,23,"key"],[61,28,8,34],[61,30,8,60],[62,6,9,4],[62,10,9,8],[63,8,10,6],[64,8,11,6],[64,15,11,13],[64,21,11,19,"AsyncStorage"],[64,33,11,31],[64,34,11,31,"default"],[64,41,11,31],[64,42,11,32,"getItem"],[64,49,11,39],[64,50,11,40,"key"],[64,53,11,43],[64,54,11,44],[65,6,12,4],[65,7,12,5],[65,8,12,6],[65,15,12,13,"error"],[65,20,12,18],[65,22,12,20],[66,8,13,6],[67,8,14,6],[67,12,14,10],[67,21,14,43,"window"],[67,27,14,49],[67,28,14,50,"localStorage"],[67,40,14,62],[67,42,14,64],[68,10,15,8],[68,17,15,15,"window"],[68,23,15,21],[68,24,15,22,"localStorage"],[68,36,15,34],[68,37,15,35,"getItem"],[68,44,15,42],[68,45,15,43,"key"],[68,48,15,46],[68,49,15,47],[69,8,16,6],[70,8,17,6],[70,15,17,13],[70,19,17,17],[71,6,18,4],[72,4,19,2],[73,4,21,2],[73,17,21,15,"setItem"],[73,24,21,22,"setItem"],[73,25,21,23,"key"],[73,28,21,34],[73,30,21,36,"value"],[73,35,21,49],[73,37,21,66],[74,6,22,4],[74,10,22,8],[75,8,23,6],[76,8,24,6],[76,14,24,12,"AsyncStorage"],[76,26,24,24],[76,27,24,24,"default"],[76,34,24,24],[76,35,24,25,"setItem"],[76,42,24,32],[76,43,24,33,"key"],[76,46,24,36],[76,48,24,38,"value"],[76,53,24,43],[76,54,24,44],[77,6,25,4],[77,7,25,5],[77,8,25,6],[77,15,25,13,"error"],[77,20,25,18],[77,22,25,20],[78,8,26,6],[79,8,27,6],[79,12,27,10],[79,21,27,43,"window"],[79,27,27,49],[79,28,27,50,"localStorage"],[79,40,27,62],[79,42,27,64],[80,10,28,8,"window"],[80,16,28,14],[80,17,28,15,"localStorage"],[80,29,28,27],[80,30,28,28,"setItem"],[80,37,28,35],[80,38,28,36,"key"],[80,41,28,39],[80,43,28,41,"value"],[80,48,28,46],[80,49,28,47],[81,8,29,6],[82,6,30,4],[83,4,31,2],[84,4,33,2],[84,17,33,15,"removeItem"],[84,27,33,25,"removeItem"],[84,28,33,26,"key"],[84,31,33,37],[84,33,33,54],[85,6,34,4],[85,10,34,8],[86,8,35,6],[86,14,35,12,"AsyncStorage"],[86,26,35,24],[86,27,35,24,"default"],[86,34,35,24],[86,35,35,25,"removeItem"],[86,45,35,35],[86,46,35,36,"key"],[86,49,35,39],[86,50,35,40],[87,6,36,4],[87,7,36,5],[87,8,36,6],[87,15,36,13,"error"],[87,20,36,18],[87,22,36,20],[88,8,37,6],[88,12,37,10],[88,21,37,43,"window"],[88,27,37,49],[88,28,37,50,"localStorage"],[88,40,37,62],[88,42,37,64],[89,10,38,8,"window"],[89,16,38,14],[89,17,38,15,"localStorage"],[89,29,38,27],[89,30,38,28,"removeItem"],[89,40,38,38],[89,41,38,39,"key"],[89,44,38,42],[89,45,38,43],[90,8,39,6],[91,6,40,4],[92,4,41,2],[93,2,42,0],[95,2,44,0],[96,2,45,0],[96,8,45,6,"BACKEND_URL"],[96,19,45,17],[96,22,45,20,"Constants"],[96,31,45,29],[96,32,45,29,"default"],[96,39,45,29],[96,40,45,30,"expoConfig"],[96,50,45,40],[96,52,45,42,"extra"],[96,57,45,47],[96,59,45,49,"backendUrl"],[96,69,45,59],[96,73,45,63,"process"],[96,80,45,70],[96,81,45,71,"env"],[96,84,45,74],[96,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[96,108,45,98],[96,112,45,102],[96,164,45,154],[97,2,47,0],[97,8,47,6,"ApiClient"],[97,17,47,15],[97,18,47,16],[98,4,50,2,"constructor"],[98,15,50,13,"constructor"],[98,16,50,13],[98,18,50,16],[99,6,51,4],[99,10,51,8],[99,11,51,9,"client"],[99,17,51,15],[99,20,51,18,"axios"],[99,25,51,23],[99,26,51,23,"default"],[99,33,51,23],[99,34,51,24,"create"],[99,40,51,30],[99,41,51,31],[100,8,52,6,"baseURL"],[100,15,52,13],[100,17,52,15],[100,20,52,18,"BACKEND_URL"],[100,31,52,29],[100,37,52,35],[101,8,53,6,"timeout"],[101,15,53,13],[101,17,53,15],[101,22,53,20],[102,8,54,6,"headers"],[102,15,54,13],[102,17,54,15],[103,10,55,8],[103,24,55,22],[103,26,55,24],[104,8,56,6],[105,6,57,4],[105,7,57,5],[105,8,57,6],[107,6,59,4],[108,6,60,4],[108,10,60,8],[108,11,60,9,"client"],[108,17,60,15],[108,18,60,16,"interceptors"],[108,30,60,28],[108,31,60,29,"request"],[108,38,60,36],[108,39,60,37,"use"],[108,42,60,40],[108,43,60,41],[108,49,60,48,"config"],[108,55,60,54],[108,59,60,59],[109,8,61,6,"console"],[109,15,61,13],[109,16,61,14,"log"],[109,19,61,17],[109,20,61,18],[109,39,61,37,"config"],[109,45,61,43],[109,46,61,44,"method"],[109,52,61,50],[109,54,61,52,"toUpperCase"],[109,65,61,63],[109,66,61,64],[109,67,61,65],[109,71,61,69,"config"],[109,77,61,75],[109,78,61,76,"url"],[109,81,61,79],[109,83,61,81],[109,85,61,83,"config"],[109,91,61,89],[109,92,61,90,"data"],[109,96,61,94],[109,97,61,95],[110,8,63,6],[110,14,63,12,"token"],[110,19,63,17],[110,22,63,20],[110,28,63,26,"SecureStore"],[110,39,63,37],[110,40,63,38,"getItemAsync"],[110,52,63,50],[110,53,63,51],[110,68,63,66],[110,69,63,67],[111,8,64,6],[111,12,64,10,"token"],[111,17,64,15],[111,19,64,17],[112,10,65,8,"config"],[112,16,65,14],[112,17,65,15,"headers"],[112,24,65,22],[112,25,65,23,"Authorization"],[112,38,65,36],[112,41,65,39],[112,51,65,49,"token"],[112,56,65,54],[112,58,65,56],[113,8,66,6],[114,8,67,6],[114,15,67,13,"config"],[114,21,67,19],[115,6,68,4],[115,7,68,5],[115,8,68,6],[117,6,70,4],[118,6,71,4],[118,10,71,8],[118,11,71,9,"client"],[118,17,71,15],[118,18,71,16,"interceptors"],[118,30,71,28],[118,31,71,29,"response"],[118,39,71,37],[118,40,71,38,"use"],[118,43,71,41],[118,44,72,7,"response"],[118,52,72,15],[118,56,72,20],[119,8,73,8,"console"],[119,15,73,15],[119,16,73,16,"log"],[119,19,73,19],[119,20,73,20],[119,39,73,39,"response"],[119,47,73,47],[119,48,73,48,"status"],[119,54,73,54],[119,56,73,56],[119,58,73,58,"response"],[119,66,73,66],[119,67,73,67,"data"],[119,71,73,71],[119,72,73,72],[120,8,74,8],[120,15,74,15,"response"],[120,23,74,23],[121,6,75,6],[121,7,75,7],[121,9,76,7,"error"],[121,14,76,12],[121,18,76,17],[122,8,77,8,"console"],[122,15,77,15],[122,16,77,16,"log"],[122,19,77,19],[122,20,77,20],[122,36,77,36,"error"],[122,41,77,41],[122,42,77,42,"response"],[122,50,77,50],[122,52,77,52,"status"],[122,58,77,58],[122,62,77,62],[122,71,77,71],[122,73,77,73],[122,75,77,75,"error"],[122,80,77,80],[122,81,77,81,"response"],[122,89,77,89],[122,91,77,91,"data"],[122,95,77,95],[122,99,77,99,"error"],[122,104,77,104],[122,105,77,105,"message"],[122,112,77,112],[122,113,77,113],[123,8,79,8],[123,12,79,12,"error"],[123,17,79,17],[123,18,79,18,"response"],[123,26,79,26],[123,28,79,28,"status"],[123,34,79,34],[123,39,79,39],[123,42,79,42],[123,44,79,44],[124,10,80,10],[125,10,81,10,"SecureStore"],[125,21,81,21],[125,22,81,22,"deleteItemAsync"],[125,37,81,37],[125,38,81,38],[125,53,81,53],[125,54,81,54],[126,8,82,8],[127,8,83,8],[127,15,83,15,"Promise"],[127,22,83,22],[127,23,83,23,"reject"],[127,29,83,29],[127,30,83,30,"error"],[127,35,83,35],[127,36,83,36],[128,6,84,6],[128,7,85,4],[128,8,85,5],[129,4,86,2],[130,4,88,2],[130,10,88,8,"get"],[130,13,88,11,"get"],[130,14,88,21,"url"],[130,17,88,32],[130,19,88,46],[131,6,89,4],[131,12,89,10,"response"],[131,20,89,36],[131,23,89,39],[131,29,89,45],[131,33,89,49],[131,34,89,50,"client"],[131,40,89,56],[131,41,89,57,"get"],[131,44,89,60],[131,45,89,61,"url"],[131,48,89,64],[131,49,89,65],[132,6,90,4],[132,13,90,11,"response"],[132,21,90,19],[132,22,90,20,"data"],[132,26,90,24],[133,4,91,2],[134,4,93,2],[134,10,93,8,"post"],[134,14,93,12,"post"],[134,15,93,22,"url"],[134,18,93,33],[134,20,93,35,"data"],[134,24,93,45],[134,26,93,59],[135,6,94,4],[135,12,94,10,"response"],[135,20,94,36],[135,23,94,39],[135,29,94,45],[135,33,94,49],[135,34,94,50,"client"],[135,40,94,56],[135,41,94,57,"post"],[135,45,94,61],[135,46,94,62,"url"],[135,49,94,65],[135,51,94,67,"data"],[135,55,94,71],[135,56,94,72],[136,6,95,4],[136,13,95,11,"response"],[136,21,95,19],[136,22,95,20,"data"],[136,26,95,24],[137,4,96,2],[138,4,98,2],[138,10,98,8,"patch"],[138,15,98,13,"patch"],[138,16,98,23,"url"],[138,19,98,34],[138,21,98,36,"data"],[138,25,98,46],[138,27,98,60],[139,6,99,4],[139,12,99,10,"response"],[139,20,99,36],[139,23,99,39],[139,29,99,45],[139,33,99,49],[139,34,99,50,"client"],[139,40,99,56],[139,41,99,57,"patch"],[139,46,99,62],[139,47,99,63,"url"],[139,50,99,66],[139,52,99,68,"data"],[139,56,99,72],[139,57,99,73],[140,6,100,4],[140,13,100,11,"response"],[140,21,100,19],[140,22,100,20,"data"],[140,26,100,24],[141,4,101,2],[142,4,103,2],[142,10,103,8,"delete"],[142,16,103,14,"delete"],[142,17,103,24,"url"],[142,20,103,35],[142,22,103,49],[143,6,104,4],[143,12,104,10,"response"],[143,20,104,36],[143,23,104,39],[143,29,104,45],[143,33,104,49],[143,34,104,50,"client"],[143,40,104,56],[143,41,104,57,"delete"],[143,47,104,63],[143,48,104,64,"url"],[143,51,104,67],[143,52,104,68],[144,6,105,4],[144,13,105,11,"response"],[144,21,105,19],[144,22,105,20,"data"],[144,26,105,24],[145,4,106,2],[146,4,108,2],[146,10,108,8,"put"],[146,13,108,11,"put"],[146,14,108,21,"url"],[146,17,108,32],[146,19,108,34,"data"],[146,23,108,44],[146,25,108,58],[147,6,109,4],[147,12,109,10,"response"],[147,20,109,36],[147,23,109,39],[147,29,109,45],[147,33,109,49],[147,34,109,50,"client"],[147,40,109,56],[147,41,109,57,"put"],[147,44,109,60],[147,45,109,61,"url"],[147,48,109,64],[147,50,109,66,"data"],[147,54,109,70],[147,55,109,71],[148,6,110,4],[148,13,110,11,"response"],[148,21,110,19],[148,22,110,20,"data"],[148,26,110,24],[149,4,111,2],[150,2,112,0],[151,2,114,0],[151,8,114,6,"apiClient"],[151,17,114,15],[151,20,114,18],[151,24,114,22,"ApiClient"],[151,33,114,31],[151,34,114,32],[151,35,114,33],[153,2,116,0],[154,2,117,7],[154,8,117,13,"authAPI"],[154,15,117,20],[154,18,117,23],[155,4,118,2,"createSession"],[155,17,118,15],[155,19,118,18,"sessionId"],[155,28,118,35],[155,32,119,4,"apiClient"],[155,41,119,13],[155,42,119,14,"post"],[155,46,119,18],[155,47,119,19],[155,62,119,34],[155,64,119,36],[155,68,119,40],[155,70,119,42],[156,6,120,6,"headers"],[156,13,120,13],[156,15,120,15],[157,8,120,17],[157,22,120,31],[157,24,120,33,"sessionId"],[158,6,120,43],[159,4,121,4],[159,5,121,5],[159,6,121,6],[160,4,123,2,"signup"],[160,10,123,8],[160,12,123,11,"data"],[160,16,129,3],[160,20,129,8,"apiClient"],[160,29,129,17],[160,30,129,18,"post"],[160,34,129,22],[160,35,129,23],[160,49,129,37],[160,51,129,39,"data"],[160,55,129,43],[160,56,129,44],[161,4,131,2,"verifyOTP"],[161,13,131,11],[161,15,131,14,"data"],[161,19,131,55],[161,23,132,4,"apiClient"],[161,32,132,13],[161,33,132,14,"post"],[161,37,132,18],[161,38,132,19],[161,56,132,37],[161,58,132,39,"data"],[161,62,132,43],[161,63,132,44],[162,4,134,2,"login"],[162,9,134,7],[162,11,134,10,"data"],[162,15,134,51],[162,19,135,4,"apiClient"],[162,28,135,13],[162,29,135,14,"post"],[162,33,135,18],[162,34,135,19],[162,47,135,32],[162,49,135,34,"data"],[162,53,135,38],[162,54,135,39],[163,4,137,2,"resendOTP"],[163,13,137,11],[163,15,137,14,"email"],[163,20,137,27],[163,24,138,4,"apiClient"],[163,33,138,13],[163,34,138,14,"post"],[163,38,138,18],[163,39,138,19],[163,57,138,37],[163,59,138,39],[164,6,138,41,"email"],[165,4,138,47],[165,5,138,48],[165,6,138,49],[166,4,140,2,"getCurrentUser"],[166,18,140,16],[166,20,140,18,"getCurrentUser"],[166,21,140,18],[166,26,140,24,"apiClient"],[166,35,140,33],[166,36,140,34,"get"],[166,39,140,37],[166,40,140,38],[166,50,140,48],[166,51,140,49],[167,4,142,2,"logout"],[167,10,142,8],[167,12,142,10,"logout"],[167,13,142,10],[167,18,142,16,"apiClient"],[167,27,142,25],[167,28,142,26,"post"],[167,32,142,30],[167,33,142,31],[167,47,142,45],[167,48,142,46],[168,4,144,2,"updateLanguage"],[168,18,144,16],[168,20,144,19,"language"],[168,28,144,35],[168,32,145,4,"apiClient"],[168,41,145,13],[168,42,145,14,"patch"],[168,47,145,19],[168,48,145,20],[168,64,145,36],[168,66,145,38],[168,70,145,42],[168,72,145,44],[169,6,146,6,"params"],[169,12,146,12],[169,14,146,14],[170,8,146,16,"language"],[171,6,146,25],[172,4,147,4],[172,5,147,5],[172,6,147,6],[173,4,149,2,"toggleBiometric"],[173,19,149,17],[173,21,149,20,"enabled"],[173,28,149,36],[173,32,150,4,"apiClient"],[173,41,150,13],[173,42,150,14,"patch"],[173,47,150,19],[173,48,150,20],[173,65,150,37],[173,67,150,39],[173,71,150,43],[173,73,150,45],[174,6,151,6,"params"],[174,12,151,12],[174,14,151,14],[175,8,151,16,"enabled"],[176,6,151,24],[177,4,152,4],[177,5,152,5],[178,2,153,0],[178,3,153,1],[180,2,155,0],[181,2,156,0],[181,8,156,6,"logAdminAction"],[181,22,156,20],[181,25,156,23],[181,31,156,23,"logAdminAction"],[181,32,156,30,"action"],[181,38,156,44],[181,40,156,46,"competitionName"],[181,55,156,69],[181,57,156,71,"adminName"],[181,66,156,88],[181,68,156,90,"details"],[181,75,156,103],[181,80,156,108],[182,4,157,2],[182,8,157,6],[183,6,158,4],[183,12,158,10,"logs"],[183,16,158,14],[183,19,158,17],[183,26,158,23,"CrossPlatformStorage"],[183,46,158,43],[183,47,158,44,"getItem"],[183,54,158,51],[183,55,158,52],[183,66,158,63],[183,67,158,64],[183,72,158,68],[183,76,158,72],[184,6,159,4],[184,12,159,10,"adminLogs"],[184,21,159,19],[184,24,159,22,"JSON"],[184,28,159,26],[184,29,159,27,"parse"],[184,34,159,32],[184,35,159,33,"logs"],[184,39,159,37],[184,40,159,38],[185,6,161,4],[185,12,161,10,"logEntry"],[185,20,161,18],[185,23,161,21],[186,8,162,6,"id"],[186,10,162,8],[186,12,162,10],[186,19,162,17,"Date"],[186,23,162,21],[186,24,162,22,"now"],[186,27,162,25],[186,28,162,26],[186,29,162,27],[186,31,162,29],[187,8,163,6,"action"],[187,14,163,12],[188,8,164,6,"competition_name"],[188,24,164,22],[188,26,164,24,"competitionName"],[188,41,164,39],[189,8,165,6,"admin_name"],[189,18,165,16],[189,20,165,18,"adminName"],[189,29,165,27],[190,8,166,6,"details"],[190,15,166,13],[191,8,167,6,"timestamp"],[191,17,167,15],[191,19,167,17],[191,23,167,21,"Date"],[191,27,167,25],[191,28,167,26],[191,29,167,27],[191,30,167,28,"toISOString"],[191,41,167,39],[191,42,167,40],[192,6,168,4],[192,7,168,5],[193,6,170,4,"adminLogs"],[193,15,170,13],[193,16,170,14,"push"],[193,20,170,18],[193,21,170,19,"logEntry"],[193,29,170,27],[193,30,170,28],[194,6,171,4],[194,12,171,10,"CrossPlatformStorage"],[194,32,171,30],[194,33,171,31,"setItem"],[194,40,171,38],[194,41,171,39],[194,52,171,50],[194,54,171,52,"JSON"],[194,58,171,56],[194,59,171,57,"stringify"],[194,68,171,66],[194,69,171,67,"adminLogs"],[194,78,171,76],[194,79,171,77],[194,80,171,78],[195,6,173,4,"console"],[195,13,173,11],[195,14,173,12,"log"],[195,17,173,15],[195,18,173,16],[195,43,173,41],[195,45,173,43,"action"],[195,51,173,49],[195,53,173,51,"competitionName"],[195,68,173,66],[195,69,173,67],[196,4,174,2],[196,5,174,3],[196,6,174,4],[196,13,174,11,"error"],[196,18,174,16],[196,20,174,18],[197,6,175,4,"console"],[197,13,175,11],[197,14,175,12,"error"],[197,19,175,17],[197,20,175,18],[197,49,175,47],[197,51,175,49,"error"],[197,56,175,54],[197,57,175,55],[198,4,176,2],[199,2,177,0],[199,3,177,1],[201,2,179,0],[202,2,180,7],[202,8,180,13,"competitionAPI"],[202,22,180,27],[202,25,180,30],[203,4,181,2,"create"],[203,10,181,8],[203,12,181,11,"data"],[203,16,188,3],[203,20,188,8,"apiClient"],[203,29,188,17],[203,30,188,18,"post"],[203,34,188,22],[203,35,188,23],[203,50,188,38],[203,52,188,40,"data"],[203,56,188,44],[203,57,188,45],[204,4,190,2,"join"],[204,8,190,6],[204,10,190,9,"inviteCode"],[204,20,190,27],[204,24,191,4,"apiClient"],[204,33,191,13],[204,34,191,14,"post"],[204,38,191,18],[204,39,191,19],[204,59,191,39],[204,61,191,41],[205,6,191,43,"invite_code"],[205,17,191,54],[205,19,191,56,"inviteCode"],[206,4,191,67],[206,5,191,68],[206,6,191,69],[207,4,193,2,"getMyCompetitions"],[207,21,193,19],[207,23,193,21,"getMyCompetitions"],[207,24,193,21],[207,29,193,27,"apiClient"],[207,38,193,36],[207,39,193,37,"get"],[207,42,193,40],[207,43,193,41],[207,61,193,59],[207,62,193,60],[208,4,195,2,"getCompetition"],[208,18,195,16],[208,20,195,19,"id"],[208,22,195,29],[208,26,195,34,"apiClient"],[208,35,195,43],[208,36,195,44,"get"],[208,39,195,47],[208,40,195,48],[208,57,195,65,"id"],[208,59,195,67],[208,61,195,69],[208,62,195,70],[209,4,197,2,"updateStandings"],[209,19,197,17],[209,21,197,19,"updateStandings"],[209,22,198,4,"id"],[209,24,198,14],[209,26,199,4,"standings"],[209,35,199,18],[209,37,200,4,"matchday"],[209,45,200,21],[209,50,202,4,"apiClient"],[209,59,202,13],[209,60,202,14,"patch"],[209,65,202,19],[209,66,202,20],[209,83,202,37,"id"],[209,85,202,39],[209,97,202,51],[209,99,202,53],[210,6,203,6,"standings"],[210,15,203,15],[211,6,204,6,"matchday"],[212,4,205,4],[212,5,205,5],[212,6,205,6],[213,4,207,2,"payFee"],[213,10,207,8],[213,12,207,10,"payFee"],[213,13,207,11,"id"],[213,15,207,21],[213,17,207,23,"amount"],[213,23,207,37],[213,28,208,4,"apiClient"],[213,37,208,13],[213,38,208,14,"post"],[213,42,208,18],[213,43,208,19],[213,60,208,36,"id"],[213,62,208,38],[213,68,208,44],[213,70,208,46],[213,74,208,50],[213,76,208,52],[214,6,209,6,"params"],[214,12,209,12],[214,14,209,14],[215,8,209,16,"amount"],[216,6,209,23],[217,4,210,4],[217,5,210,5],[217,6,210,6],[218,4,212,2,"getTransactions"],[218,19,212,17],[218,21,212,20,"id"],[218,23,212,30],[218,27,213,4,"apiClient"],[218,36,213,13],[218,37,213,14,"get"],[218,40,213,17],[218,41,213,18],[218,58,213,35,"id"],[218,60,213,37],[218,75,213,52],[218,76,213,53],[219,4,215,2],[220,4,216,2,"createMock"],[220,14,216,12],[220,16,216,14],[220,22,216,21,"data"],[220,26,224,3],[220,30,224,8],[221,6,225,4,"console"],[221,13,225,11],[221,14,225,12,"log"],[221,17,225,15],[221,18,225,16],[221,50,225,48],[221,52,225,50,"data"],[221,56,225,54],[221,57,225,55,"name"],[221,61,225,59],[221,62,225,60],[222,6,226,4,"console"],[222,13,226,11],[222,14,226,12,"log"],[222,17,226,15],[222,18,226,16],[222,39,226,37],[222,41,226,39,"data"],[222,45,226,43],[222,46,226,44,"total_matchdays"],[222,61,226,59],[222,65,226,63],[222,67,226,65],[222,68,226,66],[224,6,228,4],[225,6,229,4],[225,12,229,10,"storedCompetitions"],[225,30,229,28],[225,33,229,31],[225,39,229,37,"CrossPlatformStorage"],[225,59,229,57],[225,60,229,58,"getItem"],[225,67,229,65],[225,68,229,66],[225,86,229,84],[225,87,229,85],[226,6,230,4],[226,10,230,8,"existingCompetitions"],[226,30,230,28],[226,33,230,31,"storedCompetitions"],[226,51,230,49],[226,54,230,52,"JSON"],[226,58,230,56],[226,59,230,57,"parse"],[226,64,230,62],[226,65,230,63,"storedCompetitions"],[226,83,230,81],[226,84,230,82],[226,87,230,85],[226,89,230,87],[227,6,232,4,"console"],[227,13,232,11],[227,14,232,12,"log"],[227,17,232,15],[227,18,232,16],[227,60,232,58],[227,62,232,60,"existingCompetitions"],[227,82,232,80],[227,83,232,81,"length"],[227,89,232,87],[227,90,232,88],[229,6,234,4],[230,6,235,4],[230,12,235,10,"existingNames"],[230,25,235,23],[230,28,235,26,"existingCompetitions"],[230,48,235,46],[230,49,235,47,"map"],[230,52,235,50],[230,53,235,52,"comp"],[230,57,235,61],[230,61,235,66,"comp"],[230,65,235,70],[230,66,235,71,"name"],[230,70,235,75],[230,71,235,76,"toLowerCase"],[230,82,235,87],[230,83,235,88],[230,84,235,89],[230,85,235,90],[231,6,236,4],[231,10,236,8,"existingNames"],[231,23,236,21],[231,24,236,22,"includes"],[231,32,236,30],[231,33,236,31,"data"],[231,37,236,35],[231,38,236,36,"name"],[231,42,236,40],[231,43,236,41,"toLowerCase"],[231,54,236,52],[231,55,236,53],[231,56,236,54],[231,57,236,55],[231,59,236,57],[232,8,237,6],[232,14,237,12],[232,18,237,16,"Error"],[232,23,237,21],[232,24,237,22],[232,86,237,84],[232,87,237,85],[233,6,238,4],[235,6,240,4],[236,6,241,4],[236,12,241,10,"newCompetition"],[236,26,241,24],[236,29,241,27],[237,8,242,6,"_id"],[237,11,242,9],[237,13,242,11],[237,21,242,19,"Date"],[237,25,242,23],[237,26,242,24,"now"],[237,29,242,27],[237,30,242,28],[237,31,242,29],[237,33,242,31],[238,8,243,6,"name"],[238,12,243,10],[238,14,243,12,"data"],[238,18,243,16],[238,19,243,17,"name"],[238,23,243,21],[239,8,244,6,"total_matchdays"],[239,23,244,21],[239,25,244,23,"data"],[239,29,244,27],[239,30,244,28,"total_matchdays"],[239,45,244,43],[239,49,244,47],[239,51,244,49],[240,8,245,6,"rules"],[240,13,245,11],[240,15,245,13,"data"],[240,19,245,17],[240,20,245,18,"rules"],[240,25,245,23],[241,8,246,6,"invite_code"],[241,19,246,17],[241,21,246,19,"Math"],[241,25,246,23],[241,26,246,24,"random"],[241,32,246,30],[241,33,246,31],[241,34,246,32],[241,35,246,33,"toString"],[241,43,246,41],[241,44,246,42],[241,46,246,44],[241,47,246,45],[241,48,246,46,"substr"],[241,54,246,52],[241,55,246,53],[241,56,246,54],[241,58,246,56],[241,59,246,57],[241,60,246,58],[241,61,246,59,"toUpperCase"],[241,72,246,70],[241,73,246,71],[241,74,246,72],[242,8,247,6,"invite_link"],[242,19,247,17],[242,21,247,19],[242,50,247,48,"Math"],[242,54,247,52],[242,55,247,53,"random"],[242,61,247,59],[242,62,247,60],[242,63,247,61],[242,64,247,62,"toString"],[242,72,247,70],[242,73,247,71],[242,75,247,73],[242,76,247,74],[242,77,247,75,"substr"],[242,83,247,81],[242,84,247,82],[242,85,247,83],[242,87,247,85],[242,88,247,86],[242,89,247,87],[242,90,247,88,"toUpperCase"],[242,101,247,99],[242,102,247,100],[242,103,247,101],[242,105,247,103],[243,8,248,6,"admin_id"],[243,16,248,14],[243,18,248,16],[243,44,248,42],[244,8,248,44],[245,8,249,6,"participants"],[245,20,249,18],[245,22,249,20],[245,23,250,8],[246,10,251,10,"id"],[246,12,251,12],[246,14,251,14],[246,40,251,40],[247,10,252,10,"name"],[247,14,252,14],[247,16,252,16],[247,33,252,33],[248,10,253,10,"email"],[248,15,253,15],[248,17,253,17],[248,36,253,36],[249,10,254,10,"is_admin"],[249,18,254,18],[249,20,254,20],[249,24,254,24],[250,10,255,10,"paid_matchdays"],[250,24,255,24],[250,26,255,26],[250,27,255,27],[250,28,255,28],[250,30,255,30],[250,31,255,31],[250,32,255,32],[251,10,255,34],[252,10,256,10,"points"],[252,16,256,16],[252,18,256,18],[253,8,257,8],[253,9,257,9],[253,10,258,7],[254,8,259,6,"wallet_balance"],[254,22,259,20],[254,24,259,22],[254,25,259,23],[255,8,260,6,"is_active"],[255,17,260,15],[255,19,260,17],[255,23,260,21],[256,8,261,6,"current_matchday"],[256,24,261,22],[256,26,261,24],[256,27,261,25],[257,8,261,27],[258,8,262,6,"standings"],[258,17,262,15],[258,19,262,17],[258,20,263,8],[259,10,263,10,"position"],[259,18,263,18],[259,20,263,20],[259,21,263,21],[260,10,263,23,"player_id"],[260,19,263,32],[260,21,263,34],[260,47,263,60],[261,10,263,62,"name"],[261,14,263,66],[261,16,263,68],[261,33,263,85],[262,10,263,87,"points"],[262,16,263,93],[262,18,263,95],[263,8,263,97],[263,9,263,98],[263,10,264,7],[264,8,265,6,"created_at"],[264,18,265,16],[264,20,265,18],[264,24,265,22,"Date"],[264,28,265,26],[264,29,265,27],[264,30,265,28],[264,31,265,29,"toISOString"],[264,42,265,40],[264,43,265,41],[264,44,265,42],[265,8,266,6,"updated_at"],[265,18,266,16],[265,20,266,18],[265,24,266,22,"Date"],[265,28,266,26],[265,29,266,27],[265,30,266,28],[265,31,266,29,"toISOString"],[265,42,266,40],[265,43,266,41],[266,6,267,4],[266,7,267,5],[268,6,269,4],[269,6,270,4,"existingCompetitions"],[269,26,270,24],[269,27,270,25,"push"],[269,31,270,29],[269,32,270,30,"newCompetition"],[269,46,270,44],[269,47,270,45],[270,6,271,4],[270,12,271,10,"CrossPlatformStorage"],[270,32,271,30],[270,33,271,31,"setItem"],[270,40,271,38],[270,41,271,39],[270,59,271,57],[270,61,271,59,"JSON"],[270,65,271,63],[270,66,271,64,"stringify"],[270,75,271,73],[270,76,271,74,"existingCompetitions"],[270,96,271,94],[270,97,271,95],[270,98,271,96],[271,6,273,4,"console"],[271,13,273,11],[271,14,273,12,"log"],[271,17,273,15],[271,18,273,16],[271,63,273,61],[271,65,273,63,"existingCompetitions"],[271,85,273,83],[271,86,273,84,"length"],[271,92,273,90],[271,93,273,91],[272,6,274,4,"console"],[272,13,274,11],[272,14,274,12,"log"],[272,17,274,15],[272,18,274,16],[272,38,274,36],[272,40,274,38,"newCompetition"],[272,54,274,52],[272,55,274,53,"_id"],[272,58,274,56],[272,59,274,57],[273,6,275,4,"console"],[273,13,275,11],[273,14,275,12,"log"],[273,17,275,15],[273,18,275,16],[273,40,275,38],[273,42,275,40,"newCompetition"],[273,56,275,54],[273,57,275,55,"name"],[273,61,275,59],[273,62,275,60],[274,6,276,4,"console"],[274,13,276,11],[274,14,276,12,"log"],[274,17,276,15],[274,18,276,16],[274,44,276,42],[274,46,276,44,"newCompetition"],[274,60,276,58],[274,61,276,59,"total_matchdays"],[274,76,276,74],[274,77,276,75],[275,6,278,4],[275,13,278,11,"newCompetition"],[275,27,278,25],[276,4,279,2],[276,5,279,3],[277,4,281,2],[278,4,282,2,"validateNameMock"],[278,20,282,18],[278,22,282,20],[278,28,282,27,"name"],[278,32,282,39],[278,36,282,44],[279,6,283,4,"console"],[279,13,283,11],[279,14,283,12,"log"],[279,17,283,15],[279,18,283,16],[279,57,283,55],[279,59,283,57,"name"],[279,63,283,61],[279,64,283,62],[280,6,285,4],[280,10,285,8],[280,11,285,9,"name"],[280,15,285,13],[280,16,285,14,"trim"],[280,20,285,18],[280,21,285,19],[280,22,285,20],[280,24,285,22],[281,8,286,6],[281,15,286,13],[282,10,286,15,"available"],[282,19,286,24],[282,21,286,26],[282,25,286,30],[283,10,286,32,"message"],[283,17,286,39],[283,19,286,41],[284,8,286,44],[284,9,286,45],[285,6,287,4],[287,6,289,4],[288,6,290,4],[288,12,290,10,"storedCompetitions"],[288,30,290,28],[288,33,290,31],[288,39,290,37,"CrossPlatformStorage"],[288,59,290,57],[288,60,290,58,"getItem"],[288,67,290,65],[288,68,290,66],[288,86,290,84],[288,87,290,85],[289,6,291,4],[289,10,291,8,"existingCompetitions"],[289,30,291,28],[289,33,291,31,"storedCompetitions"],[289,51,291,49],[289,54,291,52,"JSON"],[289,58,291,56],[289,59,291,57,"parse"],[289,64,291,62],[289,65,291,63,"storedCompetitions"],[289,83,291,81],[289,84,291,82],[289,87,291,85],[289,89,291,87],[291,6,293,4],[292,6,294,4],[292,12,294,10,"defaultNames"],[292,24,294,22],[292,27,294,25],[292,28,294,26],[292,50,294,48],[292,52,294,50],[292,78,294,76],[292,80,294,78],[292,96,294,94],[292,97,294,95],[293,6,295,4],[293,12,295,10,"allNames"],[293,20,295,18],[293,23,295,21],[293,24,296,6],[293,27,296,9,"existingCompetitions"],[293,47,296,29],[293,48,296,30,"map"],[293,51,296,33],[293,52,296,35,"comp"],[293,56,296,44],[293,60,296,49,"comp"],[293,64,296,53],[293,65,296,54,"name"],[293,69,296,58],[293,70,296,59,"toLowerCase"],[293,81,296,70],[293,82,296,71],[293,83,296,72],[293,84,296,73],[293,86,297,6],[293,89,297,9,"defaultNames"],[293,101,297,21],[293,102,297,22,"map"],[293,105,297,25],[293,106,297,26,"name"],[293,110,297,30],[293,114,297,34,"name"],[293,118,297,38],[293,119,297,39,"toLowerCase"],[293,130,297,50],[293,131,297,51],[293,132,297,52],[293,133,297,53],[293,134,298,5],[294,6,300,4],[294,12,300,10,"isAvailable"],[294,23,300,21],[294,26,300,24],[294,27,300,25,"allNames"],[294,35,300,33],[294,36,300,34,"includes"],[294,44,300,42],[294,45,300,43,"name"],[294,49,300,47],[294,50,300,48,"toLowerCase"],[294,61,300,59],[294,62,300,60],[294,63,300,61],[294,64,300,62],[295,6,302,4],[295,13,302,11],[296,8,303,6,"available"],[296,17,303,15],[296,19,303,17,"isAvailable"],[296,30,303,28],[297,8,304,6,"message"],[297,15,304,13],[297,17,304,15,"isAvailable"],[297,28,304,26],[297,31,304,29],[297,47,304,45],[297,50,304,48],[298,6,305,4],[298,7,305,5],[299,4,306,2],[299,5,306,3],[300,4,308,2,"getMyCompetitionsMock"],[300,25,308,23],[300,27,308,25],[300,33,308,25,"getMyCompetitionsMock"],[300,34,308,25],[300,39,308,37],[301,6,309,4,"console"],[301,13,309,11],[301,14,309,12,"log"],[301,17,309,15],[301,18,309,16],[301,52,309,50],[301,53,309,51],[303,6,311,4],[304,6,312,4],[304,12,312,10,"storedCompetitions"],[304,30,312,28],[304,33,312,31],[304,39,312,37,"CrossPlatformStorage"],[304,59,312,57],[304,60,312,58,"getItem"],[304,67,312,65],[304,68,312,66],[304,86,312,84],[304,87,312,85],[305,6,313,4],[305,10,313,8,"competitions"],[305,22,313,20],[305,25,313,23,"storedCompetitions"],[305,43,313,41],[305,46,313,44,"JSON"],[305,50,313,48],[305,51,313,49,"parse"],[305,56,313,54],[305,57,313,55,"storedCompetitions"],[305,75,313,73],[305,76,313,74],[305,79,313,77],[305,81,313,79],[306,6,315,4,"console"],[306,13,315,11],[306,14,315,12,"log"],[306,17,315,15],[306,18,315,16],[306,53,315,51],[306,55,315,53,"competitions"],[306,67,315,65],[306,68,315,66,"length"],[306,74,315,72],[306,75,315,73],[308,6,317,4],[309,6,318,4,"competitions"],[309,18,318,16],[309,19,318,17,"forEach"],[309,26,318,24],[309,27,318,25],[309,28,318,26,"comp"],[309,32,318,35],[309,34,318,37,"index"],[309,39,318,50],[309,44,318,55],[310,8,319,6,"console"],[310,15,319,13],[310,16,319,14,"log"],[310,19,319,17],[310,20,319,18],[310,23,319,21,"index"],[310,28,319,26],[310,31,319,29],[310,32,319,30],[310,37,319,35,"comp"],[310,41,319,39],[310,42,319,40,"name"],[310,46,319,44],[310,55,319,53,"comp"],[310,59,319,57],[310,60,319,58,"_id"],[310,63,319,61],[310,66,319,64],[310,67,319,65],[311,6,320,4],[311,7,320,5],[311,8,320,6],[312,6,322,4],[312,13,322,11,"competitions"],[312,25,322,23],[313,4,323,2],[313,5,323,3],[314,4,325,2,"joinMock"],[314,12,325,10],[314,14,325,12],[314,20,325,19,"inviteCode"],[314,30,325,37],[314,34,325,42],[315,6,326,4,"console"],[315,13,326,11],[315,14,326,12,"log"],[315,17,326,15],[315,18,326,16],[315,59,326,57],[315,61,326,59,"inviteCode"],[315,71,326,69],[315,72,326,70],[316,6,327,4],[316,10,327,8,"inviteCode"],[316,20,327,18],[316,21,327,19,"length"],[316,27,327,25],[316,30,327,28],[316,31,327,29],[316,33,327,31],[317,8,328,6],[317,14,328,12],[317,18,328,16,"Error"],[317,23,328,21],[317,24,328,22],[317,45,328,43],[317,46,328,44],[318,6,329,4],[319,6,330,4],[319,13,330,11],[320,8,330,13,"message"],[320,15,330,20],[320,17,330,22],[321,6,330,57],[321,7,330,58],[322,4,331,2],[322,5,331,3],[323,4,333,2],[324,4,334,2,"deleteMock"],[324,14,334,12],[324,16,334,14],[324,22,334,21,"competitionId"],[324,35,334,42],[324,39,334,47],[325,6,335,4,"console"],[325,13,335,11],[325,14,335,12,"log"],[325,17,335,15],[325,18,335,16],[325,51,335,49],[325,53,335,51,"competitionId"],[325,66,335,64],[325,67,335,65],[326,6,337,4],[326,12,337,10,"storedCompetitions"],[326,30,337,28],[326,33,337,31],[326,39,337,37,"CrossPlatformStorage"],[326,59,337,57],[326,60,337,58,"getItem"],[326,67,337,65],[326,68,337,66],[326,86,337,84],[326,87,337,85],[327,6,338,4],[327,10,338,8,"competitions"],[327,22,338,20],[327,25,338,23,"storedCompetitions"],[327,43,338,41],[327,46,338,44,"JSON"],[327,50,338,48],[327,51,338,49,"parse"],[327,56,338,54],[327,57,338,55,"storedCompetitions"],[327,75,338,73],[327,76,338,74],[327,79,338,77],[327,81,338,79],[328,6,340,4],[328,12,340,10,"competitionToDelete"],[328,31,340,29],[328,34,340,32,"competitions"],[328,46,340,44],[328,47,340,45,"find"],[328,51,340,49],[328,52,340,51,"comp"],[328,56,340,60],[328,60,340,65,"comp"],[328,64,340,69],[328,65,340,70,"_id"],[328,68,340,73],[328,73,340,78,"competitionId"],[328,86,340,91],[328,87,340,92],[329,6,341,4],[329,10,341,8],[329,11,341,9,"competitionToDelete"],[329,30,341,28],[329,32,341,30],[330,8,342,6],[330,14,342,12],[330,18,342,16,"Error"],[330,23,342,21],[330,24,342,22],[330,47,342,45],[330,48,342,46],[331,6,343,4],[333,6,345,4],[334,6,346,4],[334,10,346,8,"competitionToDelete"],[334,29,346,27],[334,30,346,28,"admin_id"],[334,38,346,36],[334,43,346,41],[334,69,346,67],[334,71,346,69],[335,8,347,6],[335,14,347,12],[335,18,347,16,"Error"],[335,23,347,21],[335,24,347,22],[335,64,347,62],[335,65,347,63],[336,6,348,4],[338,6,350,4],[339,6,351,4,"competitions"],[339,18,351,16],[339,21,351,19,"competitions"],[339,33,351,31],[339,34,351,32,"filter"],[339,40,351,38],[339,41,351,40,"comp"],[339,45,351,49],[339,49,351,54,"comp"],[339,53,351,58],[339,54,351,59,"_id"],[339,57,351,62],[339,62,351,67,"competitionId"],[339,75,351,80],[339,76,351,81],[340,6,352,4],[340,12,352,10,"CrossPlatformStorage"],[340,32,352,30],[340,33,352,31,"setItem"],[340,40,352,38],[340,41,352,39],[340,59,352,57],[340,61,352,59,"JSON"],[340,65,352,63],[340,66,352,64,"stringify"],[340,75,352,73],[340,76,352,74,"competitions"],[340,88,352,86],[340,89,352,87],[340,90,352,88],[342,6,354,4],[343,6,355,4],[343,12,355,10,"logAdminAction"],[343,26,355,24],[343,27,355,25],[343,35,355,33],[343,37,355,35,"competitionToDelete"],[343,56,355,54],[343,57,355,55,"name"],[343,61,355,59],[343,63,355,61],[343,80,355,78],[343,81,355,79],[344,6,357,4,"console"],[344,13,357,11],[344,14,357,12,"log"],[344,17,357,15],[344,18,357,16],[344,54,357,52],[344,55,357,53],[345,6,358,4],[345,13,358,11],[346,8,358,13,"message"],[346,15,358,20],[346,17,358,22],[347,6,358,57],[347,7,358,58],[348,4,359,2],[348,5,359,3],[349,4,361,2],[350,4,362,2,"editMock"],[350,12,362,10],[350,14,362,12],[350,20,362,12,"editMock"],[350,21,362,19,"competitionId"],[350,34,362,40],[350,36,362,42,"updates"],[350,43,362,54],[350,48,362,59],[351,6,363,4,"console"],[351,13,363,11],[351,14,363,12,"log"],[351,17,363,15],[351,18,363,16],[351,49,363,47],[351,51,363,49,"competitionId"],[351,64,363,62],[351,66,363,64,"updates"],[351,73,363,71],[351,74,363,72],[352,6,365,4],[352,12,365,10,"storedCompetitions"],[352,30,365,28],[352,33,365,31],[352,39,365,37,"CrossPlatformStorage"],[352,59,365,57],[352,60,365,58,"getItem"],[352,67,365,65],[352,68,365,66],[352,86,365,84],[352,87,365,85],[353,6,366,4],[353,10,366,8,"competitions"],[353,22,366,20],[353,25,366,23,"storedCompetitions"],[353,43,366,41],[353,46,366,44,"JSON"],[353,50,366,48],[353,51,366,49,"parse"],[353,56,366,54],[353,57,366,55,"storedCompetitions"],[353,75,366,73],[353,76,366,74],[353,79,366,77],[353,81,366,79],[354,6,368,4],[354,12,368,10,"competitionIndex"],[354,28,368,26],[354,31,368,29,"competitions"],[354,43,368,41],[354,44,368,42,"findIndex"],[354,53,368,51],[354,54,368,53,"comp"],[354,58,368,62],[354,62,368,67,"comp"],[354,66,368,71],[354,67,368,72,"_id"],[354,70,368,75],[354,75,368,80,"competitionId"],[354,88,368,93],[354,89,368,94],[355,6,369,4],[355,10,369,8,"competitionIndex"],[355,26,369,24],[355,31,369,29],[355,32,369,30],[355,33,369,31],[355,35,369,33],[356,8,370,6],[356,14,370,12],[356,18,370,16,"Error"],[356,23,370,21],[356,24,370,22],[356,47,370,45],[356,48,370,46],[357,6,371,4],[358,6,373,4],[358,12,373,10,"competition"],[358,23,373,21],[358,26,373,24,"competitions"],[358,38,373,36],[358,39,373,37,"competitionIndex"],[358,55,373,53],[358,56,373,54],[360,6,375,4],[361,6,376,4],[361,10,376,8,"competition"],[361,21,376,19],[361,22,376,20,"admin_id"],[361,30,376,28],[361,35,376,33],[361,61,376,59],[361,63,376,61],[362,8,377,6],[362,14,377,12],[362,18,377,16,"Error"],[362,23,377,21],[362,24,377,22],[362,62,377,60],[362,63,377,61],[363,6,378,4],[365,6,380,4],[366,6,381,4,"competitions"],[366,18,381,16],[366,19,381,17,"competitionIndex"],[366,35,381,33],[366,36,381,34],[366,39,381,37],[367,8,382,6],[367,11,382,9,"competition"],[367,22,382,20],[368,8,383,6],[368,11,383,9,"updates"],[368,18,383,16],[369,8,384,6,"updated_at"],[369,18,384,16],[369,20,384,18],[369,24,384,22,"Date"],[369,28,384,26],[369,29,384,27],[369,30,384,28],[369,31,384,29,"toISOString"],[369,42,384,40],[369,43,384,41],[370,6,385,4],[370,7,385,5],[371,6,387,4],[371,12,387,10,"CrossPlatformStorage"],[371,32,387,30],[371,33,387,31,"setItem"],[371,40,387,38],[371,41,387,39],[371,59,387,57],[371,61,387,59,"JSON"],[371,65,387,63],[371,66,387,64,"stringify"],[371,75,387,73],[371,76,387,74,"competitions"],[371,88,387,86],[371,89,387,87],[371,90,387,88],[373,6,389,4],[374,6,390,4],[374,12,390,10,"logAdminAction"],[374,26,390,24],[374,27,390,25],[374,33,390,31],[374,35,390,33,"competition"],[374,46,390,44],[374,47,390,45,"name"],[374,51,390,49],[374,53,390,51],[374,70,390,68],[374,72,390,70,"updates"],[374,79,390,77],[374,80,390,78],[375,6,392,4,"console"],[375,13,392,11],[375,14,392,12,"log"],[375,17,392,15],[375,18,392,16],[375,54,392,52],[375,55,392,53],[376,6,393,4],[376,13,393,11,"competitions"],[376,25,393,23],[376,26,393,24,"competitionIndex"],[376,42,393,40],[376,43,393,41],[377,4,394,2],[378,2,395,0],[378,3,395,1],[380,2,397,0],[381,2,398,7],[381,8,398,13,"walletAPI"],[381,17,398,22],[381,20,398,25],[382,4,399,2,"getBalance"],[382,14,399,12],[382,16,399,14,"getBalance"],[382,17,399,14],[382,22,399,20,"apiClient"],[382,31,399,29],[382,32,399,30,"get"],[382,35,399,33],[382,36,399,34],[382,53,399,51],[382,54,399,52],[383,4,401,2,"topUp"],[383,9,401,7],[383,11,401,10,"amount"],[383,17,401,24],[383,21,402,4,"apiClient"],[383,30,402,13],[383,31,402,14,"post"],[383,35,402,18],[383,36,402,19],[383,51,402,34],[383,53,402,36],[383,57,402,40],[383,59,402,42],[384,6,403,6,"params"],[384,12,403,12],[384,14,403,14],[385,8,403,16,"amount"],[386,6,403,23],[387,4,404,4],[387,5,404,5],[387,6,404,6],[388,4,406,2,"withdraw"],[388,12,406,10],[388,14,406,13,"amount"],[388,20,406,27],[388,24,407,4,"apiClient"],[388,33,407,13],[388,34,407,14,"post"],[388,38,407,18],[388,39,407,19],[388,57,407,37],[388,59,407,39],[388,63,407,43],[388,65,407,45],[389,6,408,6,"params"],[389,12,408,12],[389,14,408,14],[390,8,408,16,"amount"],[391,6,408,23],[392,4,409,4],[392,5,409,5],[392,6,409,6],[393,4,411,2,"getTransactions"],[393,19,411,17],[393,21,411,19,"getTransactions"],[393,22,411,19],[393,27,411,25,"apiClient"],[393,36,411,34],[393,37,411,35,"get"],[393,40,411,38],[393,41,411,39],[393,56,411,54],[394,2,412,0],[394,3,412,1],[395,2,414,0],[395,6,414,0,"_default"],[395,14,414,0],[395,17,414,15,"apiClient"],[395,26,414,24],[396,0,414,25],[396,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBO;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;cgCG;mDCmB,sCD;GhC4C;oBkCG;kCDc,sCC;0BCC,0BD;GlCS;yBoCE;yBCU;KDE;GpCG;YsCE;GtCM;cuCG;kDCM,yCD;uCEW,yCF;GvCQ;Y0CG;oDCM,yCD;G1C0B;c4CK,sC5C;S6CE;M7CG;Y8CE;M9CG;mB+CE,oC/C"},"hasCjsExports":false},"type":"js/module"}]}