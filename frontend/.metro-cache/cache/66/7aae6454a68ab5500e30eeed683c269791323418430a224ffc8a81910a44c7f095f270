{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays\n      });\n      console.log('✅ Competition created and logged! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":482,"map":[[27,2,510,0,"Object"],[27,8,510,0],[27,9,510,0,"defineProperty"],[27,23,510,0],[27,24,510,0,"exports"],[27,31,510,0],[28,4,510,0,"enumerable"],[28,14,510,0],[29,4,510,0,"get"],[29,7,510,0],[29,18,510,0,"get"],[29,19,510,0],[30,6,510,0],[30,13,510,0,"_default"],[30,21,510,0],[31,4,510,0],[32,2,510,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,494,0,"Object"],[45,8,494,0],[45,9,494,0,"defineProperty"],[45,23,494,0],[45,24,494,0,"exports"],[45,31,494,0],[46,4,494,0,"enumerable"],[46,14,494,0],[47,4,494,0,"get"],[47,7,494,0],[47,18,494,0,"get"],[47,19,494,0],[48,6,494,0],[48,13,494,0,"walletAPI"],[48,22,494,0],[49,4,494,0],[50,2,494,0],[51,2,1,0],[51,6,1,0,"_axios"],[51,12,1,0],[51,15,1,0,"require"],[51,22,1,0],[51,23,1,0,"_dependencyMap"],[51,37,1,0],[52,2,1,0],[52,6,1,0,"axios"],[52,11,1,0],[52,14,1,0,"_interopDefault"],[52,29,1,0],[52,30,1,0,"_axios"],[52,36,1,0],[53,2,2,0],[53,6,2,0,"_expoSecureStore"],[53,22,2,0],[53,25,2,0,"require"],[53,32,2,0],[53,33,2,0,"_dependencyMap"],[53,47,2,0],[54,2,2,0],[54,6,2,0,"SecureStore"],[54,17,2,0],[54,20,2,0,"_interopNamespace"],[54,37,2,0],[54,38,2,0,"_expoSecureStore"],[54,54,2,0],[55,2,3,0],[55,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[55,42,3,0],[55,45,3,0,"require"],[55,52,3,0],[55,53,3,0,"_dependencyMap"],[55,67,3,0],[56,2,3,0],[56,6,3,0,"AsyncStorage"],[56,18,3,0],[56,21,3,0,"_interopDefault"],[56,36,3,0],[56,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,73,3,0],[57,2,4,0],[57,6,4,0,"_expoConstants"],[57,20,4,0],[57,23,4,0,"require"],[57,30,4,0],[57,31,4,0,"_dependencyMap"],[57,45,4,0],[58,2,4,0],[58,6,4,0,"Constants"],[58,15,4,0],[58,18,4,0,"_interopDefault"],[58,33,4,0],[58,34,4,0,"_expoConstants"],[58,48,4,0],[59,2,6,0],[60,2,7,0],[60,8,7,6,"CrossPlatformStorage"],[60,28,7,26],[60,29,7,27],[61,4,8,2],[61,17,8,15,"getItem"],[61,24,8,22,"getItem"],[61,25,8,23,"key"],[61,28,8,34],[61,30,8,60],[62,6,9,4],[62,10,9,8],[63,8,10,6],[64,8,11,6],[64,15,11,13],[64,21,11,19,"AsyncStorage"],[64,33,11,31],[64,34,11,31,"default"],[64,41,11,31],[64,42,11,32,"getItem"],[64,49,11,39],[64,50,11,40,"key"],[64,53,11,43],[64,54,11,44],[65,6,12,4],[65,7,12,5],[65,8,12,6],[65,15,12,13,"error"],[65,20,12,18],[65,22,12,20],[66,8,13,6],[67,8,14,6],[67,12,14,10],[67,21,14,43,"window"],[67,27,14,49],[67,28,14,50,"localStorage"],[67,40,14,62],[67,42,14,64],[68,10,15,8],[68,17,15,15,"window"],[68,23,15,21],[68,24,15,22,"localStorage"],[68,36,15,34],[68,37,15,35,"getItem"],[68,44,15,42],[68,45,15,43,"key"],[68,48,15,46],[68,49,15,47],[69,8,16,6],[70,8,17,6],[70,15,17,13],[70,19,17,17],[71,6,18,4],[72,4,19,2],[73,4,21,2],[73,17,21,15,"setItem"],[73,24,21,22,"setItem"],[73,25,21,23,"key"],[73,28,21,34],[73,30,21,36,"value"],[73,35,21,49],[73,37,21,66],[74,6,22,4],[74,10,22,8],[75,8,23,6],[76,8,24,6],[76,14,24,12,"AsyncStorage"],[76,26,24,24],[76,27,24,24,"default"],[76,34,24,24],[76,35,24,25,"setItem"],[76,42,24,32],[76,43,24,33,"key"],[76,46,24,36],[76,48,24,38,"value"],[76,53,24,43],[76,54,24,44],[77,6,25,4],[77,7,25,5],[77,8,25,6],[77,15,25,13,"error"],[77,20,25,18],[77,22,25,20],[78,8,26,6],[79,8,27,6],[79,12,27,10],[79,21,27,43,"window"],[79,27,27,49],[79,28,27,50,"localStorage"],[79,40,27,62],[79,42,27,64],[80,10,28,8,"window"],[80,16,28,14],[80,17,28,15,"localStorage"],[80,29,28,27],[80,30,28,28,"setItem"],[80,37,28,35],[80,38,28,36,"key"],[80,41,28,39],[80,43,28,41,"value"],[80,48,28,46],[80,49,28,47],[81,8,29,6],[82,6,30,4],[83,4,31,2],[84,4,33,2],[84,17,33,15,"removeItem"],[84,27,33,25,"removeItem"],[84,28,33,26,"key"],[84,31,33,37],[84,33,33,54],[85,6,34,4],[85,10,34,8],[86,8,35,6],[86,14,35,12,"AsyncStorage"],[86,26,35,24],[86,27,35,24,"default"],[86,34,35,24],[86,35,35,25,"removeItem"],[86,45,35,35],[86,46,35,36,"key"],[86,49,35,39],[86,50,35,40],[87,6,36,4],[87,7,36,5],[87,8,36,6],[87,15,36,13,"error"],[87,20,36,18],[87,22,36,20],[88,8,37,6],[88,12,37,10],[88,21,37,43,"window"],[88,27,37,49],[88,28,37,50,"localStorage"],[88,40,37,62],[88,42,37,64],[89,10,38,8,"window"],[89,16,38,14],[89,17,38,15,"localStorage"],[89,29,38,27],[89,30,38,28,"removeItem"],[89,40,38,38],[89,41,38,39,"key"],[89,44,38,42],[89,45,38,43],[90,8,39,6],[91,6,40,4],[92,4,41,2],[93,2,42,0],[95,2,44,0],[96,2,45,0],[96,8,45,6,"BACKEND_URL"],[96,19,45,17],[96,22,45,20,"Constants"],[96,31,45,29],[96,32,45,29,"default"],[96,39,45,29],[96,40,45,30,"expoConfig"],[96,50,45,40],[96,52,45,42,"extra"],[96,57,45,47],[96,59,45,49,"backendUrl"],[96,69,45,59],[96,73,45,63,"process"],[96,80,45,70],[96,81,45,71,"env"],[96,84,45,74],[96,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[96,108,45,98],[96,112,45,102],[96,164,45,154],[97,2,47,0],[97,8,47,6,"ApiClient"],[97,17,47,15],[97,18,47,16],[98,4,50,2,"constructor"],[98,15,50,13,"constructor"],[98,16,50,13],[98,18,50,16],[99,6,51,4],[99,10,51,8],[99,11,51,9,"client"],[99,17,51,15],[99,20,51,18,"axios"],[99,25,51,23],[99,26,51,23,"default"],[99,33,51,23],[99,34,51,24,"create"],[99,40,51,30],[99,41,51,31],[100,8,52,6,"baseURL"],[100,15,52,13],[100,17,52,15],[100,20,52,18,"BACKEND_URL"],[100,31,52,29],[100,37,52,35],[101,8,53,6,"timeout"],[101,15,53,13],[101,17,53,15],[101,22,53,20],[102,8,54,6,"headers"],[102,15,54,13],[102,17,54,15],[103,10,55,8],[103,24,55,22],[103,26,55,24],[104,8,56,6],[105,6,57,4],[105,7,57,5],[105,8,57,6],[107,6,59,4],[108,6,60,4],[108,10,60,8],[108,11,60,9,"client"],[108,17,60,15],[108,18,60,16,"interceptors"],[108,30,60,28],[108,31,60,29,"request"],[108,38,60,36],[108,39,60,37,"use"],[108,42,60,40],[108,43,60,41],[108,49,60,48,"config"],[108,55,60,54],[108,59,60,59],[109,8,61,6,"console"],[109,15,61,13],[109,16,61,14,"log"],[109,19,61,17],[109,20,61,18],[109,39,61,37,"config"],[109,45,61,43],[109,46,61,44,"method"],[109,52,61,50],[109,54,61,52,"toUpperCase"],[109,65,61,63],[109,66,61,64],[109,67,61,65],[109,71,61,69,"config"],[109,77,61,75],[109,78,61,76,"url"],[109,81,61,79],[109,83,61,81],[109,85,61,83,"config"],[109,91,61,89],[109,92,61,90,"data"],[109,96,61,94],[109,97,61,95],[110,8,63,6],[110,14,63,12,"token"],[110,19,63,17],[110,22,63,20],[110,28,63,26,"SecureStore"],[110,39,63,37],[110,40,63,38,"getItemAsync"],[110,52,63,50],[110,53,63,51],[110,68,63,66],[110,69,63,67],[111,8,64,6],[111,12,64,10,"token"],[111,17,64,15],[111,19,64,17],[112,10,65,8,"config"],[112,16,65,14],[112,17,65,15,"headers"],[112,24,65,22],[112,25,65,23,"Authorization"],[112,38,65,36],[112,41,65,39],[112,51,65,49,"token"],[112,56,65,54],[112,58,65,56],[113,8,66,6],[114,8,67,6],[114,15,67,13,"config"],[114,21,67,19],[115,6,68,4],[115,7,68,5],[115,8,68,6],[117,6,70,4],[118,6,71,4],[118,10,71,8],[118,11,71,9,"client"],[118,17,71,15],[118,18,71,16,"interceptors"],[118,30,71,28],[118,31,71,29,"response"],[118,39,71,37],[118,40,71,38,"use"],[118,43,71,41],[118,44,72,7,"response"],[118,52,72,15],[118,56,72,20],[119,8,73,8,"console"],[119,15,73,15],[119,16,73,16,"log"],[119,19,73,19],[119,20,73,20],[119,39,73,39,"response"],[119,47,73,47],[119,48,73,48,"status"],[119,54,73,54],[119,56,73,56],[119,58,73,58,"response"],[119,66,73,66],[119,67,73,67,"data"],[119,71,73,71],[119,72,73,72],[120,8,74,8],[120,15,74,15,"response"],[120,23,74,23],[121,6,75,6],[121,7,75,7],[121,9,76,7,"error"],[121,14,76,12],[121,18,76,17],[122,8,77,8,"console"],[122,15,77,15],[122,16,77,16,"log"],[122,19,77,19],[122,20,77,20],[122,36,77,36,"error"],[122,41,77,41],[122,42,77,42,"response"],[122,50,77,50],[122,52,77,52,"status"],[122,58,77,58],[122,62,77,62],[122,71,77,71],[122,73,77,73],[122,75,77,75,"error"],[122,80,77,80],[122,81,77,81,"response"],[122,89,77,89],[122,91,77,91,"data"],[122,95,77,95],[122,99,77,99,"error"],[122,104,77,104],[122,105,77,105,"message"],[122,112,77,112],[122,113,77,113],[123,8,79,8],[123,12,79,12,"error"],[123,17,79,17],[123,18,79,18,"response"],[123,26,79,26],[123,28,79,28,"status"],[123,34,79,34],[123,39,79,39],[123,42,79,42],[123,44,79,44],[124,10,80,10],[125,10,81,10,"SecureStore"],[125,21,81,21],[125,22,81,22,"deleteItemAsync"],[125,37,81,37],[125,38,81,38],[125,53,81,53],[125,54,81,54],[126,8,82,8],[127,8,83,8],[127,15,83,15,"Promise"],[127,22,83,22],[127,23,83,23,"reject"],[127,29,83,29],[127,30,83,30,"error"],[127,35,83,35],[127,36,83,36],[128,6,84,6],[128,7,85,4],[128,8,85,5],[129,4,86,2],[130,4,88,2],[130,10,88,8,"get"],[130,13,88,11,"get"],[130,14,88,21,"url"],[130,17,88,32],[130,19,88,46],[131,6,89,4],[131,12,89,10,"response"],[131,20,89,36],[131,23,89,39],[131,29,89,45],[131,33,89,49],[131,34,89,50,"client"],[131,40,89,56],[131,41,89,57,"get"],[131,44,89,60],[131,45,89,61,"url"],[131,48,89,64],[131,49,89,65],[132,6,90,4],[132,13,90,11,"response"],[132,21,90,19],[132,22,90,20,"data"],[132,26,90,24],[133,4,91,2],[134,4,93,2],[134,10,93,8,"post"],[134,14,93,12,"post"],[134,15,93,22,"url"],[134,18,93,33],[134,20,93,35,"data"],[134,24,93,45],[134,26,93,59],[135,6,94,4],[135,12,94,10,"response"],[135,20,94,36],[135,23,94,39],[135,29,94,45],[135,33,94,49],[135,34,94,50,"client"],[135,40,94,56],[135,41,94,57,"post"],[135,45,94,61],[135,46,94,62,"url"],[135,49,94,65],[135,51,94,67,"data"],[135,55,94,71],[135,56,94,72],[136,6,95,4],[136,13,95,11,"response"],[136,21,95,19],[136,22,95,20,"data"],[136,26,95,24],[137,4,96,2],[138,4,98,2],[138,10,98,8,"patch"],[138,15,98,13,"patch"],[138,16,98,23,"url"],[138,19,98,34],[138,21,98,36,"data"],[138,25,98,46],[138,27,98,60],[139,6,99,4],[139,12,99,10,"response"],[139,20,99,36],[139,23,99,39],[139,29,99,45],[139,33,99,49],[139,34,99,50,"client"],[139,40,99,56],[139,41,99,57,"patch"],[139,46,99,62],[139,47,99,63,"url"],[139,50,99,66],[139,52,99,68,"data"],[139,56,99,72],[139,57,99,73],[140,6,100,4],[140,13,100,11,"response"],[140,21,100,19],[140,22,100,20,"data"],[140,26,100,24],[141,4,101,2],[142,4,103,2],[142,10,103,8,"delete"],[142,16,103,14,"delete"],[142,17,103,24,"url"],[142,20,103,35],[142,22,103,49],[143,6,104,4],[143,12,104,10,"response"],[143,20,104,36],[143,23,104,39],[143,29,104,45],[143,33,104,49],[143,34,104,50,"client"],[143,40,104,56],[143,41,104,57,"delete"],[143,47,104,63],[143,48,104,64,"url"],[143,51,104,67],[143,52,104,68],[144,6,105,4],[144,13,105,11,"response"],[144,21,105,19],[144,22,105,20,"data"],[144,26,105,24],[145,4,106,2],[146,4,108,2],[146,10,108,8,"put"],[146,13,108,11,"put"],[146,14,108,21,"url"],[146,17,108,32],[146,19,108,34,"data"],[146,23,108,44],[146,25,108,58],[147,6,109,4],[147,12,109,10,"response"],[147,20,109,36],[147,23,109,39],[147,29,109,45],[147,33,109,49],[147,34,109,50,"client"],[147,40,109,56],[147,41,109,57,"put"],[147,44,109,60],[147,45,109,61,"url"],[147,48,109,64],[147,50,109,66,"data"],[147,54,109,70],[147,55,109,71],[148,6,110,4],[148,13,110,11,"response"],[148,21,110,19],[148,22,110,20,"data"],[148,26,110,24],[149,4,111,2],[150,2,112,0],[151,2,114,0],[151,8,114,6,"apiClient"],[151,17,114,15],[151,20,114,18],[151,24,114,22,"ApiClient"],[151,33,114,31],[151,34,114,32],[151,35,114,33],[153,2,116,0],[154,2,117,7],[154,8,117,13,"authAPI"],[154,15,117,20],[154,18,117,23],[155,4,118,2,"createSession"],[155,17,118,15],[155,19,118,18,"sessionId"],[155,28,118,35],[155,32,119,4,"apiClient"],[155,41,119,13],[155,42,119,14,"post"],[155,46,119,18],[155,47,119,19],[155,62,119,34],[155,64,119,36],[155,68,119,40],[155,70,119,42],[156,6,120,6,"headers"],[156,13,120,13],[156,15,120,15],[157,8,120,17],[157,22,120,31],[157,24,120,33,"sessionId"],[158,6,120,43],[159,4,121,4],[159,5,121,5],[159,6,121,6],[160,4,123,2,"signup"],[160,10,123,8],[160,12,123,11,"data"],[160,16,129,3],[160,20,129,8,"apiClient"],[160,29,129,17],[160,30,129,18,"post"],[160,34,129,22],[160,35,129,23],[160,49,129,37],[160,51,129,39,"data"],[160,55,129,43],[160,56,129,44],[161,4,131,2,"verifyOTP"],[161,13,131,11],[161,15,131,14,"data"],[161,19,131,55],[161,23,132,4,"apiClient"],[161,32,132,13],[161,33,132,14,"post"],[161,37,132,18],[161,38,132,19],[161,56,132,37],[161,58,132,39,"data"],[161,62,132,43],[161,63,132,44],[162,4,134,2,"login"],[162,9,134,7],[162,11,134,10,"data"],[162,15,134,51],[162,19,135,4,"apiClient"],[162,28,135,13],[162,29,135,14,"post"],[162,33,135,18],[162,34,135,19],[162,47,135,32],[162,49,135,34,"data"],[162,53,135,38],[162,54,135,39],[163,4,137,2,"resendOTP"],[163,13,137,11],[163,15,137,14,"email"],[163,20,137,27],[163,24,138,4,"apiClient"],[163,33,138,13],[163,34,138,14,"post"],[163,38,138,18],[163,39,138,19],[163,57,138,37],[163,59,138,39],[164,6,138,41,"email"],[165,4,138,47],[165,5,138,48],[165,6,138,49],[166,4,140,2,"getCurrentUser"],[166,18,140,16],[166,20,140,18,"getCurrentUser"],[166,21,140,18],[166,26,140,24,"apiClient"],[166,35,140,33],[166,36,140,34,"get"],[166,39,140,37],[166,40,140,38],[166,50,140,48],[166,51,140,49],[167,4,142,2,"logout"],[167,10,142,8],[167,12,142,10,"logout"],[167,13,142,10],[167,18,142,16,"apiClient"],[167,27,142,25],[167,28,142,26,"post"],[167,32,142,30],[167,33,142,31],[167,47,142,45],[167,48,142,46],[168,4,144,2,"updateLanguage"],[168,18,144,16],[168,20,144,19,"language"],[168,28,144,35],[168,32,145,4,"apiClient"],[168,41,145,13],[168,42,145,14,"patch"],[168,47,145,19],[168,48,145,20],[168,64,145,36],[168,66,145,38],[168,70,145,42],[168,72,145,44],[169,6,146,6,"params"],[169,12,146,12],[169,14,146,14],[170,8,146,16,"language"],[171,6,146,25],[172,4,147,4],[172,5,147,5],[172,6,147,6],[173,4,149,2,"toggleBiometric"],[173,19,149,17],[173,21,149,20,"enabled"],[173,28,149,36],[173,32,150,4,"apiClient"],[173,41,150,13],[173,42,150,14,"patch"],[173,47,150,19],[173,48,150,20],[173,65,150,37],[173,67,150,39],[173,71,150,43],[173,73,150,45],[174,6,151,6,"params"],[174,12,151,12],[174,14,151,14],[175,8,151,16,"enabled"],[176,6,151,24],[177,4,152,4],[177,5,152,5],[178,2,153,0],[178,3,153,1],[180,2,155,0],[181,2,156,0],[181,8,156,6,"logAdminAction"],[181,22,156,20],[181,25,156,23],[181,31,156,23,"logAdminAction"],[181,32,156,30,"action"],[181,38,156,44],[181,40,156,46,"competitionName"],[181,55,156,69],[181,57,156,71,"adminName"],[181,66,156,88],[181,68,156,90,"details"],[181,75,156,103],[181,80,156,108],[182,4,157,2],[182,8,157,6],[183,6,158,4],[183,12,158,10,"logs"],[183,16,158,14],[183,19,158,17],[183,26,158,23,"CrossPlatformStorage"],[183,46,158,43],[183,47,158,44,"getItem"],[183,54,158,51],[183,55,158,52],[183,66,158,63],[183,67,158,64],[183,72,158,68],[183,76,158,72],[184,6,159,4],[184,12,159,10,"adminLogs"],[184,21,159,19],[184,24,159,22,"JSON"],[184,28,159,26],[184,29,159,27,"parse"],[184,34,159,32],[184,35,159,33,"logs"],[184,39,159,37],[184,40,159,38],[185,6,161,4],[185,12,161,10,"logEntry"],[185,20,161,18],[185,23,161,21],[186,8,162,6,"id"],[186,10,162,8],[186,12,162,10],[186,19,162,17,"Date"],[186,23,162,21],[186,24,162,22,"now"],[186,27,162,25],[186,28,162,26],[186,29,162,27],[186,31,162,29],[187,8,163,6,"action"],[187,14,163,12],[188,8,164,6,"competition_name"],[188,24,164,22],[188,26,164,24,"competitionName"],[188,41,164,39],[189,8,165,6,"admin_name"],[189,18,165,16],[189,20,165,18,"adminName"],[189,29,165,27],[190,8,166,6,"details"],[190,15,166,13],[191,8,167,6,"timestamp"],[191,17,167,15],[191,19,167,17],[191,23,167,21,"Date"],[191,27,167,25],[191,28,167,26],[191,29,167,27],[191,30,167,28,"toISOString"],[191,41,167,39],[191,42,167,40],[192,6,168,4],[192,7,168,5],[193,6,170,4,"adminLogs"],[193,15,170,13],[193,16,170,14,"push"],[193,20,170,18],[193,21,170,19,"logEntry"],[193,29,170,27],[193,30,170,28],[194,6,171,4],[194,12,171,10,"CrossPlatformStorage"],[194,32,171,30],[194,33,171,31,"setItem"],[194,40,171,38],[194,41,171,39],[194,52,171,50],[194,54,171,52,"JSON"],[194,58,171,56],[194,59,171,57,"stringify"],[194,68,171,66],[194,69,171,67,"adminLogs"],[194,78,171,76],[194,79,171,77],[194,80,171,78],[195,6,173,4,"console"],[195,13,173,11],[195,14,173,12,"log"],[195,17,173,15],[195,18,173,16],[195,43,173,41],[195,45,173,43,"action"],[195,51,173,49],[195,53,173,51,"competitionName"],[195,68,173,66],[195,69,173,67],[196,4,174,2],[196,5,174,3],[196,6,174,4],[196,13,174,11,"error"],[196,18,174,16],[196,20,174,18],[197,6,175,4,"console"],[197,13,175,11],[197,14,175,12,"error"],[197,19,175,17],[197,20,175,18],[197,49,175,47],[197,51,175,49,"error"],[197,56,175,54],[197,57,175,55],[198,4,176,2],[199,2,177,0],[199,3,177,1],[201,2,179,0],[202,2,180,7],[202,8,180,13,"competitionAPI"],[202,22,180,27],[202,25,180,30],[203,4,181,2,"create"],[203,10,181,8],[203,12,181,11,"data"],[203,16,188,3],[203,20,188,8,"apiClient"],[203,29,188,17],[203,30,188,18,"post"],[203,34,188,22],[203,35,188,23],[203,50,188,38],[203,52,188,40,"data"],[203,56,188,44],[203,57,188,45],[204,4,190,2,"join"],[204,8,190,6],[204,10,190,9,"inviteCode"],[204,20,190,27],[204,24,191,4,"apiClient"],[204,33,191,13],[204,34,191,14,"post"],[204,38,191,18],[204,39,191,19],[204,59,191,39],[204,61,191,41],[205,6,191,43,"invite_code"],[205,17,191,54],[205,19,191,56,"inviteCode"],[206,4,191,67],[206,5,191,68],[206,6,191,69],[207,4,193,2,"getMyCompetitions"],[207,21,193,19],[207,23,193,21,"getMyCompetitions"],[207,24,193,21],[207,29,193,27,"apiClient"],[207,38,193,36],[207,39,193,37,"get"],[207,42,193,40],[207,43,193,41],[207,61,193,59],[207,62,193,60],[208,4,195,2,"getCompetition"],[208,18,195,16],[208,20,195,19,"id"],[208,22,195,29],[208,26,195,34,"apiClient"],[208,35,195,43],[208,36,195,44,"get"],[208,39,195,47],[208,40,195,48],[208,57,195,65,"id"],[208,59,195,67],[208,61,195,69],[208,62,195,70],[209,4,197,2,"updateStandings"],[209,19,197,17],[209,21,197,19,"updateStandings"],[209,22,198,4,"id"],[209,24,198,14],[209,26,199,4,"standings"],[209,35,199,18],[209,37,200,4,"matchday"],[209,45,200,21],[209,50,202,4,"apiClient"],[209,59,202,13],[209,60,202,14,"patch"],[209,65,202,19],[209,66,202,20],[209,83,202,37,"id"],[209,85,202,39],[209,97,202,51],[209,99,202,53],[210,6,203,6,"standings"],[210,15,203,15],[211,6,204,6,"matchday"],[212,4,205,4],[212,5,205,5],[212,6,205,6],[213,4,207,2,"payFee"],[213,10,207,8],[213,12,207,10,"payFee"],[213,13,207,11,"id"],[213,15,207,21],[213,17,207,23,"amount"],[213,23,207,37],[213,28,208,4,"apiClient"],[213,37,208,13],[213,38,208,14,"post"],[213,42,208,18],[213,43,208,19],[213,60,208,36,"id"],[213,62,208,38],[213,68,208,44],[213,70,208,46],[213,74,208,50],[213,76,208,52],[214,6,209,6,"params"],[214,12,209,12],[214,14,209,14],[215,8,209,16,"amount"],[216,6,209,23],[217,4,210,4],[217,5,210,5],[217,6,210,6],[218,4,212,2,"getTransactions"],[218,19,212,17],[218,21,212,20,"id"],[218,23,212,30],[218,27,213,4,"apiClient"],[218,36,213,13],[218,37,213,14,"get"],[218,40,213,17],[218,41,213,18],[218,58,213,35,"id"],[218,60,213,37],[218,75,213,52],[218,76,213,53],[219,4,215,2],[220,4,216,2,"createMock"],[220,14,216,12],[220,16,216,14],[220,22,216,21,"data"],[220,26,224,3],[220,30,224,8],[221,6,225,4,"console"],[221,13,225,11],[221,14,225,12,"log"],[221,17,225,15],[221,18,225,16],[221,50,225,48],[221,52,225,50,"data"],[221,56,225,54],[221,57,225,55,"name"],[221,61,225,59],[221,62,225,60],[222,6,226,4,"console"],[222,13,226,11],[222,14,226,12,"log"],[222,17,226,15],[222,18,226,16],[222,39,226,37],[222,41,226,39,"data"],[222,45,226,43],[222,46,226,44,"total_matchdays"],[222,61,226,59],[222,65,226,63],[222,67,226,65],[222,68,226,66],[224,6,228,4],[225,6,229,4],[225,12,229,10,"storedCompetitions"],[225,30,229,28],[225,33,229,31],[225,39,229,37,"CrossPlatformStorage"],[225,59,229,57],[225,60,229,58,"getItem"],[225,67,229,65],[225,68,229,66],[225,86,229,84],[225,87,229,85],[226,6,230,4],[226,10,230,8,"existingCompetitions"],[226,30,230,28],[226,33,230,31,"storedCompetitions"],[226,51,230,49],[226,54,230,52,"JSON"],[226,58,230,56],[226,59,230,57,"parse"],[226,64,230,62],[226,65,230,63,"storedCompetitions"],[226,83,230,81],[226,84,230,82],[226,87,230,85],[226,89,230,87],[227,6,232,4,"console"],[227,13,232,11],[227,14,232,12,"log"],[227,17,232,15],[227,18,232,16],[227,60,232,58],[227,62,232,60,"existingCompetitions"],[227,82,232,80],[227,83,232,81,"length"],[227,89,232,87],[227,90,232,88],[229,6,234,4],[230,6,235,4],[230,12,235,10,"existingNames"],[230,25,235,23],[230,28,235,26,"existingCompetitions"],[230,48,235,46],[230,49,235,47,"map"],[230,52,235,50],[230,53,235,52,"comp"],[230,57,235,61],[230,61,235,66,"comp"],[230,65,235,70],[230,66,235,71,"name"],[230,70,235,75],[230,71,235,76,"toLowerCase"],[230,82,235,87],[230,83,235,88],[230,84,235,89],[230,85,235,90],[231,6,236,4],[231,10,236,8,"existingNames"],[231,23,236,21],[231,24,236,22,"includes"],[231,32,236,30],[231,33,236,31,"data"],[231,37,236,35],[231,38,236,36,"name"],[231,42,236,40],[231,43,236,41,"toLowerCase"],[231,54,236,52],[231,55,236,53],[231,56,236,54],[231,57,236,55],[231,59,236,57],[232,8,237,6],[232,14,237,12],[232,18,237,16,"Error"],[232,23,237,21],[232,24,237,22],[232,86,237,84],[232,87,237,85],[233,6,238,4],[235,6,240,4],[236,6,241,4],[236,12,241,10,"newCompetition"],[236,26,241,24],[236,29,241,27],[237,8,242,6,"_id"],[237,11,242,9],[237,13,242,11],[237,21,242,19,"Date"],[237,25,242,23],[237,26,242,24,"now"],[237,29,242,27],[237,30,242,28],[237,31,242,29],[237,33,242,31],[238,8,243,6,"name"],[238,12,243,10],[238,14,243,12,"data"],[238,18,243,16],[238,19,243,17,"name"],[238,23,243,21],[239,8,244,6,"total_matchdays"],[239,23,244,21],[239,25,244,23,"data"],[239,29,244,27],[239,30,244,28,"total_matchdays"],[239,45,244,43],[239,49,244,47],[239,51,244,49],[240,8,245,6,"rules"],[240,13,245,11],[240,15,245,13,"data"],[240,19,245,17],[240,20,245,18,"rules"],[240,25,245,23],[241,8,246,6,"invite_code"],[241,19,246,17],[241,21,246,19,"Math"],[241,25,246,23],[241,26,246,24,"random"],[241,32,246,30],[241,33,246,31],[241,34,246,32],[241,35,246,33,"toString"],[241,43,246,41],[241,44,246,42],[241,46,246,44],[241,47,246,45],[241,48,246,46,"substr"],[241,54,246,52],[241,55,246,53],[241,56,246,54],[241,58,246,56],[241,59,246,57],[241,60,246,58],[241,61,246,59,"toUpperCase"],[241,72,246,70],[241,73,246,71],[241,74,246,72],[242,8,247,6,"invite_link"],[242,19,247,17],[242,21,247,19],[242,50,247,48,"Math"],[242,54,247,52],[242,55,247,53,"random"],[242,61,247,59],[242,62,247,60],[242,63,247,61],[242,64,247,62,"toString"],[242,72,247,70],[242,73,247,71],[242,75,247,73],[242,76,247,74],[242,77,247,75,"substr"],[242,83,247,81],[242,84,247,82],[242,85,247,83],[242,87,247,85],[242,88,247,86],[242,89,247,87],[242,90,247,88,"toUpperCase"],[242,101,247,99],[242,102,247,100],[242,103,247,101],[242,105,247,103],[243,8,248,6,"admin_id"],[243,16,248,14],[243,18,248,16],[243,44,248,42],[244,8,248,44],[245,8,249,6,"participants"],[245,20,249,18],[245,22,249,20],[245,23,250,8],[246,10,251,10,"id"],[246,12,251,12],[246,14,251,14],[246,40,251,40],[247,10,252,10,"name"],[247,14,252,14],[247,16,252,16],[247,33,252,33],[248,10,253,10,"email"],[248,15,253,15],[248,17,253,17],[248,36,253,36],[249,10,254,10,"is_admin"],[249,18,254,18],[249,20,254,20],[249,24,254,24],[250,10,255,10,"paid_matchdays"],[250,24,255,24],[250,26,255,26],[250,27,255,27],[250,28,255,28],[250,30,255,30],[250,31,255,31],[250,32,255,32],[251,10,255,34],[252,10,256,10,"points"],[252,16,256,16],[252,18,256,18],[253,8,257,8],[253,9,257,9],[253,10,258,7],[254,8,259,6,"wallet_balance"],[254,22,259,20],[254,24,259,22],[254,25,259,23],[255,8,260,6,"is_active"],[255,17,260,15],[255,19,260,17],[255,23,260,21],[256,8,261,6,"current_matchday"],[256,24,261,22],[256,26,261,24],[256,27,261,25],[257,8,261,27],[258,8,262,6,"standings"],[258,17,262,15],[258,19,262,17],[258,20,263,8],[259,10,263,10,"position"],[259,18,263,18],[259,20,263,20],[259,21,263,21],[260,10,263,23,"player_id"],[260,19,263,32],[260,21,263,34],[260,47,263,60],[261,10,263,62,"name"],[261,14,263,66],[261,16,263,68],[261,33,263,85],[262,10,263,87,"points"],[262,16,263,93],[262,18,263,95],[263,8,263,97],[263,9,263,98],[263,10,264,7],[264,8,265,6,"created_at"],[264,18,265,16],[264,20,265,18],[264,24,265,22,"Date"],[264,28,265,26],[264,29,265,27],[264,30,265,28],[264,31,265,29,"toISOString"],[264,42,265,40],[264,43,265,41],[264,44,265,42],[265,8,266,6,"updated_at"],[265,18,266,16],[265,20,266,18],[265,24,266,22,"Date"],[265,28,266,26],[265,29,266,27],[265,30,266,28],[265,31,266,29,"toISOString"],[265,42,266,40],[265,43,266,41],[266,6,267,4],[266,7,267,5],[268,6,269,4],[269,6,270,4,"existingCompetitions"],[269,26,270,24],[269,27,270,25,"push"],[269,31,270,29],[269,32,270,30,"newCompetition"],[269,46,270,44],[269,47,270,45],[270,6,271,4],[270,12,271,10,"CrossPlatformStorage"],[270,32,271,30],[270,33,271,31,"setItem"],[270,40,271,38],[270,41,271,39],[270,59,271,57],[270,61,271,59,"JSON"],[270,65,271,63],[270,66,271,64,"stringify"],[270,75,271,73],[270,76,271,74,"existingCompetitions"],[270,96,271,94],[270,97,271,95],[270,98,271,96],[272,6,273,4],[273,6,274,4],[273,12,274,10,"logAdminAction"],[273,26,274,24],[273,27,274,25],[273,35,274,33],[273,37,274,35,"newCompetition"],[273,51,274,49],[273,52,274,50,"name"],[273,56,274,54],[273,58,274,56],[273,75,274,73],[273,77,274,75],[274,8,275,6,"competition_id"],[274,22,275,20],[274,24,275,22,"newCompetition"],[274,38,275,36],[274,39,275,37,"_id"],[274,42,275,40],[275,8,276,6,"rules"],[275,13,276,11],[275,15,276,13,"newCompetition"],[275,29,276,27],[275,30,276,28,"rules"],[275,35,276,33],[276,8,277,6,"total_matchdays"],[276,23,277,21],[276,25,277,23,"newCompetition"],[276,39,277,37],[276,40,277,38,"total_matchdays"],[277,6,278,4],[277,7,278,5],[277,8,278,6],[278,6,280,4,"console"],[278,13,280,11],[278,14,280,12,"log"],[278,17,280,15],[278,18,280,16],[278,64,280,62],[278,66,280,64,"existingCompetitions"],[278,86,280,84],[278,87,280,85,"length"],[278,93,280,91],[278,94,280,92],[279,6,281,4,"console"],[279,13,281,11],[279,14,281,12,"log"],[279,17,281,15],[279,18,281,16],[279,38,281,36],[279,40,281,38,"newCompetition"],[279,54,281,52],[279,55,281,53,"_id"],[279,58,281,56],[279,59,281,57],[280,6,282,4,"console"],[280,13,282,11],[280,14,282,12,"log"],[280,17,282,15],[280,18,282,16],[280,40,282,38],[280,42,282,40,"newCompetition"],[280,56,282,54],[280,57,282,55,"name"],[280,61,282,59],[280,62,282,60],[281,6,283,4,"console"],[281,13,283,11],[281,14,283,12,"log"],[281,17,283,15],[281,18,283,16],[281,44,283,42],[281,46,283,44,"newCompetition"],[281,60,283,58],[281,61,283,59,"total_matchdays"],[281,76,283,74],[281,77,283,75],[282,6,285,4],[282,13,285,11,"newCompetition"],[282,27,285,25],[283,4,286,2],[283,5,286,3],[284,4,288,2],[285,4,289,2,"validateNameMock"],[285,20,289,18],[285,22,289,20],[285,28,289,27,"name"],[285,32,289,39],[285,36,289,44],[286,6,290,4,"console"],[286,13,290,11],[286,14,290,12,"log"],[286,17,290,15],[286,18,290,16],[286,57,290,55],[286,59,290,57,"name"],[286,63,290,61],[286,64,290,62],[287,6,292,4],[287,10,292,8],[287,11,292,9,"name"],[287,15,292,13],[287,16,292,14,"trim"],[287,20,292,18],[287,21,292,19],[287,22,292,20],[287,24,292,22],[288,8,293,6],[288,15,293,13],[289,10,293,15,"available"],[289,19,293,24],[289,21,293,26],[289,25,293,30],[290,10,293,32,"message"],[290,17,293,39],[290,19,293,41],[291,8,293,44],[291,9,293,45],[292,6,294,4],[294,6,296,4],[295,6,297,4],[295,12,297,10,"storedCompetitions"],[295,30,297,28],[295,33,297,31],[295,39,297,37,"CrossPlatformStorage"],[295,59,297,57],[295,60,297,58,"getItem"],[295,67,297,65],[295,68,297,66],[295,86,297,84],[295,87,297,85],[296,6,298,4],[296,10,298,8,"existingCompetitions"],[296,30,298,28],[296,33,298,31,"storedCompetitions"],[296,51,298,49],[296,54,298,52,"JSON"],[296,58,298,56],[296,59,298,57,"parse"],[296,64,298,62],[296,65,298,63,"storedCompetitions"],[296,83,298,81],[296,84,298,82],[296,87,298,85],[296,89,298,87],[298,6,300,4],[299,6,301,4],[299,12,301,10,"defaultNames"],[299,24,301,22],[299,27,301,25],[299,28,301,26],[299,50,301,48],[299,52,301,50],[299,78,301,76],[299,80,301,78],[299,96,301,94],[299,97,301,95],[300,6,302,4],[300,12,302,10,"allNames"],[300,20,302,18],[300,23,302,21],[300,24,303,6],[300,27,303,9,"existingCompetitions"],[300,47,303,29],[300,48,303,30,"map"],[300,51,303,33],[300,52,303,35,"comp"],[300,56,303,44],[300,60,303,49,"comp"],[300,64,303,53],[300,65,303,54,"name"],[300,69,303,58],[300,70,303,59,"toLowerCase"],[300,81,303,70],[300,82,303,71],[300,83,303,72],[300,84,303,73],[300,86,304,6],[300,89,304,9,"defaultNames"],[300,101,304,21],[300,102,304,22,"map"],[300,105,304,25],[300,106,304,26,"name"],[300,110,304,30],[300,114,304,34,"name"],[300,118,304,38],[300,119,304,39,"toLowerCase"],[300,130,304,50],[300,131,304,51],[300,132,304,52],[300,133,304,53],[300,134,305,5],[301,6,307,4],[301,12,307,10,"isAvailable"],[301,23,307,21],[301,26,307,24],[301,27,307,25,"allNames"],[301,35,307,33],[301,36,307,34,"includes"],[301,44,307,42],[301,45,307,43,"name"],[301,49,307,47],[301,50,307,48,"toLowerCase"],[301,61,307,59],[301,62,307,60],[301,63,307,61],[301,64,307,62],[302,6,309,4],[302,13,309,11],[303,8,310,6,"available"],[303,17,310,15],[303,19,310,17,"isAvailable"],[303,30,310,28],[304,8,311,6,"message"],[304,15,311,13],[304,17,311,15,"isAvailable"],[304,28,311,26],[304,31,311,29],[304,47,311,45],[304,50,311,48],[305,6,312,4],[305,7,312,5],[306,4,313,2],[306,5,313,3],[307,4,315,2,"getMyCompetitionsMock"],[307,25,315,23],[307,27,315,25],[307,33,315,25,"getMyCompetitionsMock"],[307,34,315,25],[307,39,315,37],[308,6,316,4,"console"],[308,13,316,11],[308,14,316,12,"log"],[308,17,316,15],[308,18,316,16],[308,52,316,50],[308,53,316,51],[310,6,318,4],[311,6,319,4],[311,12,319,10,"storedCompetitions"],[311,30,319,28],[311,33,319,31],[311,39,319,37,"CrossPlatformStorage"],[311,59,319,57],[311,60,319,58,"getItem"],[311,67,319,65],[311,68,319,66],[311,86,319,84],[311,87,319,85],[312,6,320,4],[312,10,320,8,"competitions"],[312,22,320,20],[312,25,320,23,"storedCompetitions"],[312,43,320,41],[312,46,320,44,"JSON"],[312,50,320,48],[312,51,320,49,"parse"],[312,56,320,54],[312,57,320,55,"storedCompetitions"],[312,75,320,73],[312,76,320,74],[312,79,320,77],[312,81,320,79],[313,6,322,4,"console"],[313,13,322,11],[313,14,322,12,"log"],[313,17,322,15],[313,18,322,16],[313,53,322,51],[313,55,322,53,"competitions"],[313,67,322,65],[313,68,322,66,"length"],[313,74,322,72],[313,75,322,73],[315,6,324,4],[316,6,325,4,"competitions"],[316,18,325,16],[316,19,325,17,"forEach"],[316,26,325,24],[316,27,325,25],[316,28,325,26,"comp"],[316,32,325,35],[316,34,325,37,"index"],[316,39,325,50],[316,44,325,55],[317,8,326,6,"console"],[317,15,326,13],[317,16,326,14,"log"],[317,19,326,17],[317,20,326,18],[317,23,326,21,"index"],[317,28,326,26],[317,31,326,29],[317,32,326,30],[317,37,326,35,"comp"],[317,41,326,39],[317,42,326,40,"name"],[317,46,326,44],[317,55,326,53,"comp"],[317,59,326,57],[317,60,326,58,"_id"],[317,63,326,61],[317,66,326,64],[317,67,326,65],[318,6,327,4],[318,7,327,5],[318,8,327,6],[319,6,329,4],[319,13,329,11,"competitions"],[319,25,329,23],[320,4,330,2],[320,5,330,3],[321,4,332,2,"joinMock"],[321,12,332,10],[321,14,332,12],[321,20,332,19,"inviteCode"],[321,30,332,37],[321,34,332,42],[322,6,333,4,"console"],[322,13,333,11],[322,14,333,12,"log"],[322,17,333,15],[322,18,333,16],[322,59,333,57],[322,61,333,59,"inviteCode"],[322,71,333,69],[322,72,333,70],[323,6,334,4],[323,10,334,8,"inviteCode"],[323,20,334,18],[323,21,334,19,"length"],[323,27,334,25],[323,30,334,28],[323,31,334,29],[323,33,334,31],[324,8,335,6],[324,14,335,12],[324,18,335,16,"Error"],[324,23,335,21],[324,24,335,22],[324,45,335,43],[324,46,335,44],[325,6,336,4],[326,6,337,4],[326,13,337,11],[327,8,337,13,"message"],[327,15,337,20],[327,17,337,22],[328,6,337,57],[328,7,337,58],[329,4,338,2],[329,5,338,3],[330,4,340,2],[331,4,341,2,"deleteMock"],[331,14,341,12],[331,16,341,14],[331,22,341,21,"competitionId"],[331,35,341,42],[331,39,341,47],[332,6,342,4,"console"],[332,13,342,11],[332,14,342,12,"log"],[332,17,342,15],[332,18,342,16],[332,51,342,49],[332,53,342,51,"competitionId"],[332,66,342,64],[332,67,342,65],[333,6,344,4],[333,12,344,10,"storedCompetitions"],[333,30,344,28],[333,33,344,31],[333,39,344,37,"CrossPlatformStorage"],[333,59,344,57],[333,60,344,58,"getItem"],[333,67,344,65],[333,68,344,66],[333,86,344,84],[333,87,344,85],[334,6,345,4],[334,10,345,8,"competitions"],[334,22,345,20],[334,25,345,23,"storedCompetitions"],[334,43,345,41],[334,46,345,44,"JSON"],[334,50,345,48],[334,51,345,49,"parse"],[334,56,345,54],[334,57,345,55,"storedCompetitions"],[334,75,345,73],[334,76,345,74],[334,79,345,77],[334,81,345,79],[335,6,347,4],[335,12,347,10,"competitionToDelete"],[335,31,347,29],[335,34,347,32,"competitions"],[335,46,347,44],[335,47,347,45,"find"],[335,51,347,49],[335,52,347,51,"comp"],[335,56,347,60],[335,60,347,65,"comp"],[335,64,347,69],[335,65,347,70,"_id"],[335,68,347,73],[335,73,347,78,"competitionId"],[335,86,347,91],[335,87,347,92],[336,6,348,4],[336,10,348,8],[336,11,348,9,"competitionToDelete"],[336,30,348,28],[336,32,348,30],[337,8,349,6],[337,14,349,12],[337,18,349,16,"Error"],[337,23,349,21],[337,24,349,22],[337,47,349,45],[337,48,349,46],[338,6,350,4],[340,6,352,4],[341,6,353,4],[341,10,353,8,"competitionToDelete"],[341,29,353,27],[341,30,353,28,"admin_id"],[341,38,353,36],[341,43,353,41],[341,69,353,67],[341,71,353,69],[342,8,354,6],[342,14,354,12],[342,18,354,16,"Error"],[342,23,354,21],[342,24,354,22],[342,64,354,62],[342,65,354,63],[343,6,355,4],[345,6,357,4],[346,6,358,4,"competitions"],[346,18,358,16],[346,21,358,19,"competitions"],[346,33,358,31],[346,34,358,32,"filter"],[346,40,358,38],[346,41,358,40,"comp"],[346,45,358,49],[346,49,358,54,"comp"],[346,53,358,58],[346,54,358,59,"_id"],[346,57,358,62],[346,62,358,67,"competitionId"],[346,75,358,80],[346,76,358,81],[347,6,359,4],[347,12,359,10,"CrossPlatformStorage"],[347,32,359,30],[347,33,359,31,"setItem"],[347,40,359,38],[347,41,359,39],[347,59,359,57],[347,61,359,59,"JSON"],[347,65,359,63],[347,66,359,64,"stringify"],[347,75,359,73],[347,76,359,74,"competitions"],[347,88,359,86],[347,89,359,87],[347,90,359,88],[349,6,361,4],[350,6,362,4],[350,12,362,10,"logAdminAction"],[350,26,362,24],[350,27,362,25],[350,35,362,33],[350,37,362,35,"competitionToDelete"],[350,56,362,54],[350,57,362,55,"name"],[350,61,362,59],[350,63,362,61],[350,80,362,78],[350,81,362,79],[351,6,364,4,"console"],[351,13,364,11],[351,14,364,12,"log"],[351,17,364,15],[351,18,364,16],[351,54,364,52],[351,55,364,53],[352,6,365,4],[352,13,365,11],[353,8,365,13,"message"],[353,15,365,20],[353,17,365,22],[354,6,365,57],[354,7,365,58],[355,4,366,2],[355,5,366,3],[356,4,368,2],[357,4,369,2,"editMock"],[357,12,369,10],[357,14,369,12],[357,20,369,12,"editMock"],[357,21,369,19,"competitionId"],[357,34,369,40],[357,36,369,42,"updates"],[357,43,369,54],[357,48,369,59],[358,6,370,4,"console"],[358,13,370,11],[358,14,370,12,"log"],[358,17,370,15],[358,18,370,16],[358,49,370,47],[358,51,370,49,"competitionId"],[358,64,370,62],[358,66,370,64,"updates"],[358,73,370,71],[358,74,370,72],[359,6,372,4],[359,12,372,10,"storedCompetitions"],[359,30,372,28],[359,33,372,31],[359,39,372,37,"CrossPlatformStorage"],[359,59,372,57],[359,60,372,58,"getItem"],[359,67,372,65],[359,68,372,66],[359,86,372,84],[359,87,372,85],[360,6,373,4],[360,10,373,8,"competitions"],[360,22,373,20],[360,25,373,23,"storedCompetitions"],[360,43,373,41],[360,46,373,44,"JSON"],[360,50,373,48],[360,51,373,49,"parse"],[360,56,373,54],[360,57,373,55,"storedCompetitions"],[360,75,373,73],[360,76,373,74],[360,79,373,77],[360,81,373,79],[361,6,375,4],[361,12,375,10,"competitionIndex"],[361,28,375,26],[361,31,375,29,"competitions"],[361,43,375,41],[361,44,375,42,"findIndex"],[361,53,375,51],[361,54,375,53,"comp"],[361,58,375,62],[361,62,375,67,"comp"],[361,66,375,71],[361,67,375,72,"_id"],[361,70,375,75],[361,75,375,80,"competitionId"],[361,88,375,93],[361,89,375,94],[362,6,376,4],[362,10,376,8,"competitionIndex"],[362,26,376,24],[362,31,376,29],[362,32,376,30],[362,33,376,31],[362,35,376,33],[363,8,377,6],[363,14,377,12],[363,18,377,16,"Error"],[363,23,377,21],[363,24,377,22],[363,47,377,45],[363,48,377,46],[364,6,378,4],[365,6,380,4],[365,12,380,10,"competition"],[365,23,380,21],[365,26,380,24,"competitions"],[365,38,380,36],[365,39,380,37,"competitionIndex"],[365,55,380,53],[365,56,380,54],[367,6,382,4],[368,6,383,4],[368,10,383,8,"competition"],[368,21,383,19],[368,22,383,20,"admin_id"],[368,30,383,28],[368,35,383,33],[368,61,383,59],[368,63,383,61],[369,8,384,6],[369,14,384,12],[369,18,384,16,"Error"],[369,23,384,21],[369,24,384,22],[369,62,384,60],[369,63,384,61],[370,6,385,4],[372,6,387,4],[373,6,388,4,"competitions"],[373,18,388,16],[373,19,388,17,"competitionIndex"],[373,35,388,33],[373,36,388,34],[373,39,388,37],[374,8,389,6],[374,11,389,9,"competition"],[374,22,389,20],[375,8,390,6],[375,11,390,9,"updates"],[375,18,390,16],[376,8,391,6,"updated_at"],[376,18,391,16],[376,20,391,18],[376,24,391,22,"Date"],[376,28,391,26],[376,29,391,27],[376,30,391,28],[376,31,391,29,"toISOString"],[376,42,391,40],[376,43,391,41],[377,6,392,4],[377,7,392,5],[378,6,394,4],[378,12,394,10,"CrossPlatformStorage"],[378,32,394,30],[378,33,394,31,"setItem"],[378,40,394,38],[378,41,394,39],[378,59,394,57],[378,61,394,59,"JSON"],[378,65,394,63],[378,66,394,64,"stringify"],[378,75,394,73],[378,76,394,74,"competitions"],[378,88,394,86],[378,89,394,87],[378,90,394,88],[380,6,396,4],[381,6,397,4],[381,12,397,10,"logAdminAction"],[381,26,397,24],[381,27,397,25],[381,33,397,31],[381,35,397,33,"competition"],[381,46,397,44],[381,47,397,45,"name"],[381,51,397,49],[381,53,397,51],[381,70,397,68],[381,72,397,70,"updates"],[381,79,397,77],[381,80,397,78],[382,6,399,4,"console"],[382,13,399,11],[382,14,399,12,"log"],[382,17,399,15],[382,18,399,16],[382,54,399,52],[382,55,399,53],[383,6,400,4],[383,13,400,11,"competitions"],[383,25,400,23],[383,26,400,24,"competitionIndex"],[383,42,400,40],[383,43,400,41],[384,4,401,2],[384,5,401,3],[385,4,403,2],[386,4,404,2,"awardDailyPrizeMock"],[386,23,404,21],[386,25,404,23],[386,31,404,23,"awardDailyPrizeMock"],[386,32,404,30,"competitionId"],[386,45,404,51],[386,47,404,53,"matchday"],[386,55,404,69],[386,57,404,71,"winnerId"],[386,65,404,87],[386,70,404,92],[387,6,405,4,"console"],[387,13,405,11],[387,14,405,12,"log"],[387,17,405,15],[387,18,405,16],[387,62,405,60],[387,64,405,62,"matchday"],[387,72,405,70],[387,74,405,72],[387,83,405,81],[387,85,405,83,"winnerId"],[387,93,405,91],[387,94,405,92],[388,6,407,4],[388,12,407,10,"storedCompetitions"],[388,30,407,28],[388,33,407,31],[388,39,407,37,"CrossPlatformStorage"],[388,59,407,57],[388,60,407,58,"getItem"],[388,67,407,65],[388,68,407,66],[388,86,407,84],[388,87,407,85],[389,6,408,4],[389,10,408,8,"competitions"],[389,22,408,20],[389,25,408,23,"storedCompetitions"],[389,43,408,41],[389,46,408,44,"JSON"],[389,50,408,48],[389,51,408,49,"parse"],[389,56,408,54],[389,57,408,55,"storedCompetitions"],[389,75,408,73],[389,76,408,74],[389,79,408,77],[389,81,408,79],[390,6,410,4],[390,12,410,10,"competitionIndex"],[390,28,410,26],[390,31,410,29,"competitions"],[390,43,410,41],[390,44,410,42,"findIndex"],[390,53,410,51],[390,54,410,53,"comp"],[390,58,410,62],[390,62,410,67,"comp"],[390,66,410,71],[390,67,410,72,"_id"],[390,70,410,75],[390,75,410,80,"competitionId"],[390,88,410,93],[390,89,410,94],[391,6,411,4],[391,10,411,8,"competitionIndex"],[391,26,411,24],[391,31,411,29],[391,32,411,30],[391,33,411,31],[391,35,411,33],[392,8,412,6],[392,14,412,12],[392,18,412,16,"Error"],[392,23,412,21],[392,24,412,22],[392,47,412,45],[392,48,412,46],[393,6,413,4],[394,6,415,4],[394,12,415,10,"competition"],[394,23,415,21],[394,26,415,24,"competitions"],[394,38,415,36],[394,39,415,37,"competitionIndex"],[394,55,415,53],[394,56,415,54],[396,6,417,4],[397,6,418,4],[397,10,418,8,"competition"],[397,21,418,19],[397,22,418,20,"admin_id"],[397,30,418,28],[397,35,418,33],[397,61,418,59],[397,63,418,61],[398,8,419,6],[398,14,419,12],[398,18,419,16,"Error"],[398,23,419,21],[398,24,419,22],[398,59,419,57],[398,60,419,58],[399,6,420,4],[401,6,422,4],[402,6,423,4],[402,10,423,8],[402,11,423,9,"competition"],[402,22,423,20],[402,23,423,21,"rules"],[402,28,423,26],[402,32,423,30],[402,33,423,31],[402,34,423,32],[402,41,423,39],[402,43,423,41],[402,50,423,48],[402,51,423,49],[402,52,423,50,"includes"],[402,60,423,58],[402,61,423,59,"competition"],[402,72,423,70],[402,73,423,71,"rules"],[402,78,423,76],[402,79,423,77,"type"],[402,83,423,81],[402,84,423,82],[402,86,423,84],[403,8,424,6],[403,14,424,12],[403,18,424,16,"Error"],[403,23,424,21],[403,24,424,22],[403,69,424,67],[403,70,424,68],[404,6,425,4],[405,6,427,4],[405,12,427,10,"dailyPrizeAmount"],[405,28,427,26],[405,31,427,29,"competition"],[405,42,427,40],[405,43,427,41,"rules"],[405,48,427,46],[405,49,427,47,"daily_prize"],[405,60,427,58],[405,64,427,62],[405,65,427,63],[406,6,428,4],[406,12,428,10,"winner"],[406,18,428,16],[406,21,428,19,"competition"],[406,32,428,30],[406,33,428,31,"participants"],[406,45,428,43],[406,46,428,44,"find"],[406,50,428,48],[406,51,428,50,"p"],[406,52,428,56],[406,56,428,61,"p"],[406,57,428,62],[406,58,428,63,"id"],[406,60,428,65],[406,65,428,70,"winnerId"],[406,73,428,78],[406,74,428,79],[407,6,430,4],[407,10,430,8],[407,11,430,9,"winner"],[407,17,430,15],[407,19,430,17],[408,8,431,6],[408,14,431,12],[408,18,431,16,"Error"],[408,23,431,21],[408,24,431,22],[408,57,431,55],[408,58,431,56],[409,6,432,4],[411,6,434,4],[412,6,435,4],[412,10,435,8],[412,11,435,9,"competition"],[412,22,435,20],[412,23,435,21,"daily_winners"],[412,36,435,34],[412,38,435,36],[413,8,436,6,"competition"],[413,19,436,17],[413,20,436,18,"daily_winners"],[413,33,436,31],[413,36,436,34],[413,37,436,35],[413,38,436,36],[414,6,437,4],[416,6,439,4],[417,6,440,4],[417,10,440,8,"competition"],[417,21,440,19],[417,22,440,20,"daily_winners"],[417,35,440,33],[417,36,440,34,"matchday"],[417,44,440,42],[417,45,440,43],[417,47,440,45],[418,8,441,6],[418,14,441,12],[418,18,441,16,"Error"],[418,23,441,21],[418,24,441,22],[418,52,441,50,"matchday"],[418,60,441,58],[418,83,441,81,"competition"],[418,94,441,92],[418,95,441,93,"daily_winners"],[418,108,441,106],[418,109,441,107,"matchday"],[418,117,441,115],[418,118,441,116],[418,119,441,117,"name"],[418,123,441,121],[418,125,441,123],[418,126,441,124],[419,6,442,4],[421,6,444,4],[422,6,445,4,"competition"],[422,17,445,15],[422,18,445,16,"daily_winners"],[422,31,445,29],[422,32,445,30,"matchday"],[422,40,445,38],[422,41,445,39],[422,44,445,42],[423,8,446,6,"user_id"],[423,15,446,13],[423,17,446,15,"winnerId"],[423,25,446,23],[424,8,447,6,"name"],[424,12,447,10],[424,14,447,12,"winner"],[424,20,447,18],[424,21,447,19,"name"],[424,25,447,23],[425,8,448,6,"amount"],[425,14,448,12],[425,16,448,14,"dailyPrizeAmount"],[425,32,448,30],[426,8,449,6,"awarded_at"],[426,18,449,16],[426,20,449,18],[426,24,449,22,"Date"],[426,28,449,26],[426,29,449,27],[426,30,449,28],[426,31,449,29,"toISOString"],[426,42,449,40],[426,43,449,41],[427,6,450,4],[427,7,450,5],[429,6,452,4],[430,6,453,4,"competitions"],[430,18,453,16],[430,19,453,17,"competitionIndex"],[430,35,453,33],[430,36,453,34],[430,39,453,37,"competition"],[430,50,453,48],[431,6,454,4],[431,12,454,10,"CrossPlatformStorage"],[431,32,454,30],[431,33,454,31,"setItem"],[431,40,454,38],[431,41,454,39],[431,59,454,57],[431,61,454,59,"JSON"],[431,65,454,63],[431,66,454,64,"stringify"],[431,75,454,73],[431,76,454,74,"competitions"],[431,88,454,86],[431,89,454,87],[431,90,454,88],[433,6,456,4],[434,6,457,4],[434,12,457,10,"logAdminAction"],[434,26,457,24],[434,27,457,25],[434,46,457,44],[434,48,457,46,"competition"],[434,59,457,57],[434,60,457,58,"name"],[434,64,457,62],[434,66,457,64],[434,83,457,81],[434,85,457,83],[435,8,458,6,"matchday"],[435,16,458,14],[436,8,459,6,"winner"],[436,14,459,12],[436,16,459,14,"winner"],[436,22,459,20],[436,23,459,21,"name"],[436,27,459,25],[437,8,460,6,"amount"],[437,14,460,12],[437,16,460,14,"dailyPrizeAmount"],[438,6,461,4],[438,7,461,5],[438,8,461,6],[440,6,463,4],[441,6,464,4,"console"],[441,13,464,11],[441,14,464,12,"log"],[441,17,464,15],[441,18,464,16],[441,24,464,22,"winner"],[441,30,464,28],[441,31,464,29,"name"],[441,35,464,33],[441,48,464,46,"dailyPrizeAmount"],[441,64,464,62],[441,89,464,87,"matchday"],[441,97,464,95],[441,99,464,97],[441,100,464,98],[442,6,466,4,"console"],[442,13,466,11],[442,14,466,12,"log"],[442,17,466,15],[442,18,466,16],[442,54,466,52],[442,55,466,53],[443,6,467,4],[443,13,467,11],[444,8,468,6,"message"],[444,15,468,13],[444,17,468,15],[444,36,468,34,"dailyPrizeAmount"],[444,52,468,50],[444,67,468,65,"winner"],[444,73,468,71],[444,74,468,72,"name"],[444,78,468,76],[444,95,468,93,"matchday"],[444,103,468,101],[444,105,468,103],[445,8,469,6,"competition"],[445,19,469,17],[445,21,469,19,"competition"],[446,6,470,4],[446,7,470,5],[447,4,471,2],[447,5,471,3],[448,4,473,2],[449,4,474,2,"getAdminLogsMock"],[449,20,474,18],[449,22,474,20],[449,28,474,20,"getAdminLogsMock"],[449,29,474,20],[449,34,474,32],[450,6,475,4,"console"],[450,13,475,11],[450,14,475,12,"log"],[450,17,475,15],[450,18,475,16],[450,47,475,45],[450,48,475,46],[451,6,477,4],[451,10,477,8],[452,8,478,6],[452,14,478,12,"logs"],[452,18,478,16],[452,21,478,19],[452,28,478,25,"CrossPlatformStorage"],[452,48,478,45],[452,49,478,46,"getItem"],[452,56,478,53],[452,57,478,54],[452,68,478,65],[452,69,478,66],[452,74,478,70],[452,78,478,74],[453,8,479,6],[453,14,479,12,"adminLogs"],[453,23,479,21],[453,26,479,24,"JSON"],[453,30,479,28],[453,31,479,29,"parse"],[453,36,479,34],[453,37,479,35,"logs"],[453,41,479,39],[453,42,479,40],[455,8,481,6],[456,8,482,6,"adminLogs"],[456,17,482,15],[456,18,482,16,"sort"],[456,22,482,20],[456,23,482,21],[456,24,482,22,"a"],[456,25,482,28],[456,27,482,30,"b"],[456,28,482,36],[456,33,482,41],[456,37,482,45,"Date"],[456,41,482,49],[456,42,482,50,"b"],[456,43,482,51],[456,44,482,52,"timestamp"],[456,53,482,61],[456,54,482,62],[456,55,482,63,"getTime"],[456,62,482,70],[456,63,482,71],[456,64,482,72],[456,67,482,75],[456,71,482,79,"Date"],[456,75,482,83],[456,76,482,84,"a"],[456,77,482,85],[456,78,482,86,"timestamp"],[456,87,482,95],[456,88,482,96],[456,89,482,97,"getTime"],[456,96,482,104],[456,97,482,105],[456,98,482,106],[456,99,482,107],[457,8,484,6,"console"],[457,15,484,13],[457,16,484,14,"log"],[457,19,484,17],[457,20,484,18],[457,42,484,40],[457,44,484,42,"adminLogs"],[457,53,484,51],[457,54,484,52,"length"],[457,60,484,58],[457,61,484,59],[458,8,485,6],[458,15,485,13,"adminLogs"],[458,24,485,22],[459,6,486,4],[459,7,486,5],[459,8,486,6],[459,15,486,13,"error"],[459,20,486,18],[459,22,486,20],[460,8,487,6,"console"],[460,15,487,13],[460,16,487,14,"error"],[460,21,487,19],[460,22,487,20],[460,52,487,50],[460,54,487,52,"error"],[460,59,487,57],[460,60,487,58],[461,8,488,6],[461,15,488,13],[461,17,488,15],[462,6,489,4],[463,4,490,2],[464,2,491,0],[464,3,491,1],[466,2,493,0],[467,2,494,7],[467,8,494,13,"walletAPI"],[467,17,494,22],[467,20,494,25],[468,4,495,2,"getBalance"],[468,14,495,12],[468,16,495,14,"getBalance"],[468,17,495,14],[468,22,495,20,"apiClient"],[468,31,495,29],[468,32,495,30,"get"],[468,35,495,33],[468,36,495,34],[468,53,495,51],[468,54,495,52],[469,4,497,2,"topUp"],[469,9,497,7],[469,11,497,10,"amount"],[469,17,497,24],[469,21,498,4,"apiClient"],[469,30,498,13],[469,31,498,14,"post"],[469,35,498,18],[469,36,498,19],[469,51,498,34],[469,53,498,36],[469,57,498,40],[469,59,498,42],[470,6,499,6,"params"],[470,12,499,12],[470,14,499,14],[471,8,499,16,"amount"],[472,6,499,23],[473,4,500,4],[473,5,500,5],[473,6,500,6],[474,4,502,2,"withdraw"],[474,12,502,10],[474,14,502,13,"amount"],[474,20,502,27],[474,24,503,4,"apiClient"],[474,33,503,13],[474,34,503,14,"post"],[474,38,503,18],[474,39,503,19],[474,57,503,37],[474,59,503,39],[474,63,503,43],[474,65,503,45],[475,6,504,6,"params"],[475,12,504,12],[475,14,504,14],[476,8,504,16,"amount"],[477,6,504,23],[478,4,505,4],[478,5,505,5],[478,6,505,6],[479,4,507,2,"getTransactions"],[479,19,507,17],[479,21,507,19,"getTransactions"],[479,22,507,19],[479,27,507,25,"apiClient"],[479,36,507,34],[479,37,507,35,"get"],[479,40,507,38],[479,41,507,39],[479,56,507,54],[480,2,508,0],[480,3,508,1],[481,2,510,0],[481,6,510,0,"_default"],[481,14,510,0],[481,17,510,15,"apiClient"],[481,26,510,24],[482,0,510,25],[482,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBO;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;cgCG;mDCmB,sCD;GhCmD;oBkCG;kCDc,sCC;0BCC,0BD;GlCS;yBoCE;yBCU;KDE;GpCG;YsCE;GtCM;cuCG;kDCM,yCD;uCEW,yCF;GvCQ;Y0CG;oDCM,yCD;G1C0B;uB4CG;oDDM,yCC;iDCkB,6BD;G5C2C;oB8CG;qBCQ,qFD;G9CQ;cgDK,sChD;SiDE;MjDG;YkDE;MlDG;mBmDE,oCnD"},"hasCjsExports":false},"type":"js/module"}]}