{"dependencies":[{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _axios = require(_dependencyMap[0], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[1], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (false && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (false && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // AGGRESSIVE CLEANUP: Clear ALL legacy storage keys\n      const shouldClearStorage = false; // Cleanup done, now disable\n\n      if (shouldClearStorage) {\n        console.log('🗑️ AGGRESSIVE CLEANUP: Clearing ALL legacy data...');\n\n        // Clear main competition storage\n        await CrossPlatformStorage.removeItem('competitions_mock');\n        await CrossPlatformStorage.removeItem('admin_logs_mock');\n\n        // Clear ALL possible payment keys (comprehensive cleanup)\n        const legacyKeys = ['payments_650f1f1f1f1f1f1f1f1f1f1f_comp_1758742449593', 'payments_650f1f1f1f1f1f1f1f1f1f1f_comp_1758739458817', 'payments_650f1f1f1f1f1f1f1f1f1f1f_comp_mock_1', 'payments_650f1f1f1f1f1f1f1f1f1f1f_comp_1758785185912', 'mockCompetitions',\n        // Old key format\n        'participant_status_650f1f1f1f1f1f1f1f1f1f1f' // New format we'll use\n        ];\n\n        // Clear known payment keys\n        for (const key of legacyKeys) {\n          await CrossPlatformStorage.removeItem(key);\n          console.log(`✅ Cleared legacy key: ${key}`);\n        }\n\n        // Clear any keys that start with 'payments_' or 'comp_'\n        console.log('✅ COMPREHENSIVE CLEANUP COMPLETE - All legacy data cleared');\n        return []; // Always return empty after cleanup\n      }\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  const databaseAPI = {\n    resetDatabase: async () => {\n      console.log('🗑️ Resetting database - clearing all stored data');\n      try {\n        await CrossPlatformStorage.removeItem('competitions_mock');\n        await CrossPlatformStorage.removeItem('admin_logs_mock');\n        await CrossPlatformStorage.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n        await CrossPlatformStorage.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n        console.log('✅ Database reset complete - all data cleared');\n        return {\n          success: true,\n          message: 'Database reset complete'\n        };\n      } catch (error) {\n        console.error('❌ Database reset failed:', error);\n        return {\n          success: false,\n          message: 'Reset failed'\n        };\n      }\n    }\n  };\n  var _default = apiClient;\n});","lineCount":630,"map":[[27,2,673,0,"Object"],[27,8,673,0],[27,9,673,0,"defineProperty"],[27,23,673,0],[27,24,673,0,"exports"],[27,31,673,0],[28,4,673,0,"enumerable"],[28,14,673,0],[29,4,673,0,"get"],[29,7,673,0],[29,18,673,0,"get"],[29,19,673,0],[30,6,673,0],[30,13,673,0,"_default"],[30,21,673,0],[31,4,673,0],[32,2,673,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,637,0,"Object"],[45,8,637,0],[45,9,637,0,"defineProperty"],[45,23,637,0],[45,24,637,0,"exports"],[45,31,637,0],[46,4,637,0,"enumerable"],[46,14,637,0],[47,4,637,0,"get"],[47,7,637,0],[47,18,637,0,"get"],[47,19,637,0],[48,6,637,0],[48,13,637,0,"walletAPI"],[48,22,637,0],[49,4,637,0],[50,2,637,0],[51,2,654,0,"Object"],[51,8,654,0],[51,9,654,0,"defineProperty"],[51,23,654,0],[51,24,654,0,"exports"],[51,31,654,0],[52,4,654,0,"enumerable"],[52,14,654,0],[53,4,654,0,"get"],[53,7,654,0],[53,18,654,0,"get"],[53,19,654,0],[54,6,654,0],[54,13,654,0,"databaseAPI"],[54,24,654,0],[55,4,654,0],[56,2,654,0],[57,2,1,0],[57,6,1,0,"_axios"],[57,12,1,0],[57,15,1,0,"require"],[57,22,1,0],[57,23,1,0,"_dependencyMap"],[57,37,1,0],[58,2,1,0],[58,6,1,0,"axios"],[58,11,1,0],[58,14,1,0,"_interopDefault"],[58,29,1,0],[58,30,1,0,"_axios"],[58,36,1,0],[59,2,2,0],[59,6,2,0,"_expoSecureStore"],[59,22,2,0],[59,25,2,0,"require"],[59,32,2,0],[59,33,2,0,"_dependencyMap"],[59,47,2,0],[60,2,2,0],[60,6,2,0,"SecureStore"],[60,17,2,0],[60,20,2,0,"_interopNamespace"],[60,37,2,0],[60,38,2,0,"_expoSecureStore"],[60,54,2,0],[61,2,3,0],[61,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[61,42,3,0],[61,45,3,0,"require"],[61,52,3,0],[61,53,3,0,"_dependencyMap"],[61,67,3,0],[62,2,3,0],[62,6,3,0,"AsyncStorage"],[62,18,3,0],[62,21,3,0,"_interopDefault"],[62,36,3,0],[62,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[62,73,3,0],[63,2,4,0],[63,6,4,0,"_expoConstants"],[63,20,4,0],[63,23,4,0,"require"],[63,30,4,0],[63,31,4,0,"_dependencyMap"],[63,45,4,0],[64,2,4,0],[64,6,4,0,"Constants"],[64,15,4,0],[64,18,4,0,"_interopDefault"],[64,33,4,0],[64,34,4,0,"_expoConstants"],[64,48,4,0],[65,2,6,0],[66,2,7,0],[66,8,7,6,"CrossPlatformStorage"],[66,28,7,26],[66,29,7,27],[67,4,8,2],[67,17,8,15,"getItem"],[67,24,8,22,"getItem"],[67,25,8,23,"key"],[67,28,8,34],[67,30,8,60],[68,6,9,4],[68,10,9,8],[69,8,10,6],[70,8,11,6],[70,15,11,13],[70,21,11,19,"AsyncStorage"],[70,33,11,31],[70,34,11,31,"default"],[70,41,11,31],[70,42,11,32,"getItem"],[70,49,11,39],[70,50,11,40,"key"],[70,53,11,43],[70,54,11,44],[71,6,12,4],[71,7,12,5],[71,8,12,6],[71,15,12,13,"error"],[71,20,12,18],[71,22,12,20],[72,8,13,6],[73,8,14,6],[73,12,14,10],[73,21,14,43,"window"],[73,27,14,49],[73,28,14,50,"localStorage"],[73,40,14,62],[73,42,14,64],[74,10,15,8],[74,17,15,15,"window"],[74,23,15,21],[74,24,15,22,"localStorage"],[74,36,15,34],[74,37,15,35,"getItem"],[74,44,15,42],[74,45,15,43,"key"],[74,48,15,46],[74,49,15,47],[75,8,16,6],[76,8,17,6],[76,15,17,13],[76,19,17,17],[77,6,18,4],[78,4,19,2],[79,4,21,2],[79,17,21,15,"setItem"],[79,24,21,22,"setItem"],[79,25,21,23,"key"],[79,28,21,34],[79,30,21,36,"value"],[79,35,21,49],[79,37,21,66],[80,6,22,4],[80,10,22,8],[81,8,23,6],[82,8,24,6],[82,14,24,12,"AsyncStorage"],[82,26,24,24],[82,27,24,24,"default"],[82,34,24,24],[82,35,24,25,"setItem"],[82,42,24,32],[82,43,24,33,"key"],[82,46,24,36],[82,48,24,38,"value"],[82,53,24,43],[82,54,24,44],[83,6,25,4],[83,7,25,5],[83,8,25,6],[83,15,25,13,"error"],[83,20,25,18],[83,22,25,20],[84,8,26,6],[85,8,27,6],[85,12,27,10],[85,21,27,43,"window"],[85,27,27,49],[85,28,27,50,"localStorage"],[85,40,27,62],[85,42,27,64],[86,10,28,8,"window"],[86,16,28,14],[86,17,28,15,"localStorage"],[86,29,28,27],[86,30,28,28,"setItem"],[86,37,28,35],[86,38,28,36,"key"],[86,41,28,39],[86,43,28,41,"value"],[86,48,28,46],[86,49,28,47],[87,8,29,6],[88,6,30,4],[89,4,31,2],[90,4,33,2],[90,17,33,15,"removeItem"],[90,27,33,25,"removeItem"],[90,28,33,26,"key"],[90,31,33,37],[90,33,33,54],[91,6,34,4],[91,10,34,8],[92,8,35,6],[92,14,35,12,"AsyncStorage"],[92,26,35,24],[92,27,35,24,"default"],[92,34,35,24],[92,35,35,25,"removeItem"],[92,45,35,35],[92,46,35,36,"key"],[92,49,35,39],[92,50,35,40],[93,6,36,4],[93,7,36,5],[93,8,36,6],[93,15,36,13,"error"],[93,20,36,18],[93,22,36,20],[94,8,37,6],[94,12,37,10],[94,21,37,43,"window"],[94,27,37,49],[94,28,37,50,"localStorage"],[94,40,37,62],[94,42,37,64],[95,10,38,8,"window"],[95,16,38,14],[95,17,38,15,"localStorage"],[95,29,38,27],[95,30,38,28,"removeItem"],[95,40,38,38],[95,41,38,39,"key"],[95,44,38,42],[95,45,38,43],[96,8,39,6],[97,6,40,4],[98,4,41,2],[99,2,42,0],[101,2,44,0],[102,2,45,0],[102,8,45,6,"BACKEND_URL"],[102,19,45,17],[102,22,45,20,"Constants"],[102,31,45,29],[102,32,45,29,"default"],[102,39,45,29],[102,40,45,30,"expoConfig"],[102,50,45,40],[102,52,45,42,"extra"],[102,57,45,47],[102,59,45,49,"backendUrl"],[102,69,45,59],[102,73,45,63,"process"],[102,80,45,70],[102,81,45,71,"env"],[102,84,45,74],[102,85,45,75,"EXPO_PUBLIC_BACKEND_URL"],[102,108,45,98],[102,112,45,102],[102,163,45,153],[103,2,47,0],[103,8,47,6,"ApiClient"],[103,17,47,15],[103,18,47,16],[104,4,50,2,"constructor"],[104,15,50,13,"constructor"],[104,16,50,13],[104,18,50,16],[105,6,51,4],[105,10,51,8],[105,11,51,9,"client"],[105,17,51,15],[105,20,51,18,"axios"],[105,25,51,23],[105,26,51,23,"default"],[105,33,51,23],[105,34,51,24,"create"],[105,40,51,30],[105,41,51,31],[106,8,52,6,"baseURL"],[106,15,52,13],[106,17,52,15],[106,20,52,18,"BACKEND_URL"],[106,31,52,29],[106,37,52,35],[107,8,53,6,"timeout"],[107,15,53,13],[107,17,53,15],[107,22,53,20],[108,8,54,6,"headers"],[108,15,54,13],[108,17,54,15],[109,10,55,8],[109,24,55,22],[109,26,55,24],[110,8,56,6],[111,6,57,4],[111,7,57,5],[111,8,57,6],[113,6,59,4],[114,6,60,4],[114,10,60,8],[114,11,60,9,"client"],[114,17,60,15],[114,18,60,16,"interceptors"],[114,30,60,28],[114,31,60,29,"request"],[114,38,60,36],[114,39,60,37,"use"],[114,42,60,40],[114,43,60,41],[114,49,60,48,"config"],[114,55,60,54],[114,59,60,59],[115,8,61,6,"console"],[115,15,61,13],[115,16,61,14,"log"],[115,19,61,17],[115,20,61,18],[115,39,61,37,"config"],[115,45,61,43],[115,46,61,44,"method"],[115,52,61,50],[115,54,61,52,"toUpperCase"],[115,65,61,63],[115,66,61,64],[115,67,61,65],[115,71,61,69,"config"],[115,77,61,75],[115,78,61,76,"url"],[115,81,61,79],[115,83,61,81],[115,85,61,83,"config"],[115,91,61,89],[115,92,61,90,"data"],[115,96,61,94],[115,97,61,95],[116,8,63,6],[116,14,63,12,"token"],[116,19,63,17],[116,22,63,20],[116,28,63,26,"SecureStore"],[116,39,63,37],[116,40,63,38,"getItemAsync"],[116,52,63,50],[116,53,63,51],[116,68,63,66],[116,69,63,67],[117,8,64,6],[117,12,64,10,"token"],[117,17,64,15],[117,19,64,17],[118,10,65,8,"config"],[118,16,65,14],[118,17,65,15,"headers"],[118,24,65,22],[118,25,65,23,"Authorization"],[118,38,65,36],[118,41,65,39],[118,51,65,49,"token"],[118,56,65,54],[118,58,65,56],[119,8,66,6],[120,8,67,6],[120,15,67,13,"config"],[120,21,67,19],[121,6,68,4],[121,7,68,5],[121,8,68,6],[123,6,70,4],[124,6,71,4],[124,10,71,8],[124,11,71,9,"client"],[124,17,71,15],[124,18,71,16,"interceptors"],[124,30,71,28],[124,31,71,29,"response"],[124,39,71,37],[124,40,71,38,"use"],[124,43,71,41],[124,44,72,7,"response"],[124,52,72,15],[124,56,72,20],[125,8,73,8,"console"],[125,15,73,15],[125,16,73,16,"log"],[125,19,73,19],[125,20,73,20],[125,39,73,39,"response"],[125,47,73,47],[125,48,73,48,"status"],[125,54,73,54],[125,56,73,56],[125,58,73,58,"response"],[125,66,73,66],[125,67,73,67,"data"],[125,71,73,71],[125,72,73,72],[126,8,74,8],[126,15,74,15,"response"],[126,23,74,23],[127,6,75,6],[127,7,75,7],[127,9,76,7,"error"],[127,14,76,12],[127,18,76,17],[128,8,77,8,"console"],[128,15,77,15],[128,16,77,16,"log"],[128,19,77,19],[128,20,77,20],[128,36,77,36,"error"],[128,41,77,41],[128,42,77,42,"response"],[128,50,77,50],[128,52,77,52,"status"],[128,58,77,58],[128,62,77,62],[128,71,77,71],[128,73,77,73],[128,75,77,75,"error"],[128,80,77,80],[128,81,77,81,"response"],[128,89,77,89],[128,91,77,91,"data"],[128,95,77,95],[128,99,77,99,"error"],[128,104,77,104],[128,105,77,105,"message"],[128,112,77,112],[128,113,77,113],[129,8,79,8],[129,12,79,12,"error"],[129,17,79,17],[129,18,79,18,"response"],[129,26,79,26],[129,28,79,28,"status"],[129,34,79,34],[129,39,79,39],[129,42,79,42],[129,44,79,44],[130,10,80,10],[131,10,81,10,"SecureStore"],[131,21,81,21],[131,22,81,22,"deleteItemAsync"],[131,37,81,37],[131,38,81,38],[131,53,81,53],[131,54,81,54],[132,8,82,8],[133,8,83,8],[133,15,83,15,"Promise"],[133,22,83,22],[133,23,83,23,"reject"],[133,29,83,29],[133,30,83,30,"error"],[133,35,83,35],[133,36,83,36],[134,6,84,6],[134,7,85,4],[134,8,85,5],[135,4,86,2],[136,4,88,2],[136,10,88,8,"get"],[136,13,88,11,"get"],[136,14,88,21,"url"],[136,17,88,32],[136,19,88,46],[137,6,89,4],[137,12,89,10,"response"],[137,20,89,36],[137,23,89,39],[137,29,89,45],[137,33,89,49],[137,34,89,50,"client"],[137,40,89,56],[137,41,89,57,"get"],[137,44,89,60],[137,45,89,61,"url"],[137,48,89,64],[137,49,89,65],[138,6,90,4],[138,13,90,11,"response"],[138,21,90,19],[138,22,90,20,"data"],[138,26,90,24],[139,4,91,2],[140,4,93,2],[140,10,93,8,"post"],[140,14,93,12,"post"],[140,15,93,22,"url"],[140,18,93,33],[140,20,93,35,"data"],[140,24,93,45],[140,26,93,59],[141,6,94,4],[141,12,94,10,"response"],[141,20,94,36],[141,23,94,39],[141,29,94,45],[141,33,94,49],[141,34,94,50,"client"],[141,40,94,56],[141,41,94,57,"post"],[141,45,94,61],[141,46,94,62,"url"],[141,49,94,65],[141,51,94,67,"data"],[141,55,94,71],[141,56,94,72],[142,6,95,4],[142,13,95,11,"response"],[142,21,95,19],[142,22,95,20,"data"],[142,26,95,24],[143,4,96,2],[144,4,98,2],[144,10,98,8,"patch"],[144,15,98,13,"patch"],[144,16,98,23,"url"],[144,19,98,34],[144,21,98,36,"data"],[144,25,98,46],[144,27,98,60],[145,6,99,4],[145,12,99,10,"response"],[145,20,99,36],[145,23,99,39],[145,29,99,45],[145,33,99,49],[145,34,99,50,"client"],[145,40,99,56],[145,41,99,57,"patch"],[145,46,99,62],[145,47,99,63,"url"],[145,50,99,66],[145,52,99,68,"data"],[145,56,99,72],[145,57,99,73],[146,6,100,4],[146,13,100,11,"response"],[146,21,100,19],[146,22,100,20,"data"],[146,26,100,24],[147,4,101,2],[148,4,103,2],[148,10,103,8,"delete"],[148,16,103,14,"delete"],[148,17,103,24,"url"],[148,20,103,35],[148,22,103,49],[149,6,104,4],[149,12,104,10,"response"],[149,20,104,36],[149,23,104,39],[149,29,104,45],[149,33,104,49],[149,34,104,50,"client"],[149,40,104,56],[149,41,104,57,"delete"],[149,47,104,63],[149,48,104,64,"url"],[149,51,104,67],[149,52,104,68],[150,6,105,4],[150,13,105,11,"response"],[150,21,105,19],[150,22,105,20,"data"],[150,26,105,24],[151,4,106,2],[152,4,108,2],[152,10,108,8,"put"],[152,13,108,11,"put"],[152,14,108,21,"url"],[152,17,108,32],[152,19,108,34,"data"],[152,23,108,44],[152,25,108,58],[153,6,109,4],[153,12,109,10,"response"],[153,20,109,36],[153,23,109,39],[153,29,109,45],[153,33,109,49],[153,34,109,50,"client"],[153,40,109,56],[153,41,109,57,"put"],[153,44,109,60],[153,45,109,61,"url"],[153,48,109,64],[153,50,109,66,"data"],[153,54,109,70],[153,55,109,71],[154,6,110,4],[154,13,110,11,"response"],[154,21,110,19],[154,22,110,20,"data"],[154,26,110,24],[155,4,111,2],[156,2,112,0],[157,2,114,0],[157,8,114,6,"apiClient"],[157,17,114,15],[157,20,114,18],[157,24,114,22,"ApiClient"],[157,33,114,31],[157,34,114,32],[157,35,114,33],[159,2,116,0],[160,2,117,7],[160,8,117,13,"authAPI"],[160,15,117,20],[160,18,117,23],[161,4,118,2,"createSession"],[161,17,118,15],[161,19,118,18,"sessionId"],[161,28,118,35],[161,32,119,4,"apiClient"],[161,41,119,13],[161,42,119,14,"post"],[161,46,119,18],[161,47,119,19],[161,62,119,34],[161,64,119,36],[161,68,119,40],[161,70,119,42],[162,6,120,6,"headers"],[162,13,120,13],[162,15,120,15],[163,8,120,17],[163,22,120,31],[163,24,120,33,"sessionId"],[164,6,120,43],[165,4,121,4],[165,5,121,5],[165,6,121,6],[166,4,123,2,"signup"],[166,10,123,8],[166,12,123,11,"data"],[166,16,129,3],[166,20,129,8,"apiClient"],[166,29,129,17],[166,30,129,18,"post"],[166,34,129,22],[166,35,129,23],[166,49,129,37],[166,51,129,39,"data"],[166,55,129,43],[166,56,129,44],[167,4,131,2,"verifyOTP"],[167,13,131,11],[167,15,131,14,"data"],[167,19,131,55],[167,23,132,4,"apiClient"],[167,32,132,13],[167,33,132,14,"post"],[167,37,132,18],[167,38,132,19],[167,56,132,37],[167,58,132,39,"data"],[167,62,132,43],[167,63,132,44],[168,4,134,2,"login"],[168,9,134,7],[168,11,134,10,"data"],[168,15,134,51],[168,19,135,4,"apiClient"],[168,28,135,13],[168,29,135,14,"post"],[168,33,135,18],[168,34,135,19],[168,47,135,32],[168,49,135,34,"data"],[168,53,135,38],[168,54,135,39],[169,4,137,2,"resendOTP"],[169,13,137,11],[169,15,137,14,"email"],[169,20,137,27],[169,24,138,4,"apiClient"],[169,33,138,13],[169,34,138,14,"post"],[169,38,138,18],[169,39,138,19],[169,57,138,37],[169,59,138,39],[170,6,138,41,"email"],[171,4,138,47],[171,5,138,48],[171,6,138,49],[172,4,140,2,"getCurrentUser"],[172,18,140,16],[172,20,140,18,"getCurrentUser"],[172,21,140,18],[172,26,140,24,"apiClient"],[172,35,140,33],[172,36,140,34,"get"],[172,39,140,37],[172,40,140,38],[172,50,140,48],[172,51,140,49],[173,4,142,2,"logout"],[173,10,142,8],[173,12,142,10,"logout"],[173,13,142,10],[173,18,142,16,"apiClient"],[173,27,142,25],[173,28,142,26,"post"],[173,32,142,30],[173,33,142,31],[173,47,142,45],[173,48,142,46],[174,4,144,2,"updateLanguage"],[174,18,144,16],[174,20,144,19,"language"],[174,28,144,35],[174,32,145,4,"apiClient"],[174,41,145,13],[174,42,145,14,"patch"],[174,47,145,19],[174,48,145,20],[174,64,145,36],[174,66,145,38],[174,70,145,42],[174,72,145,44],[175,6,146,6,"params"],[175,12,146,12],[175,14,146,14],[176,8,146,16,"language"],[177,6,146,25],[178,4,147,4],[178,5,147,5],[178,6,147,6],[179,4,149,2,"toggleBiometric"],[179,19,149,17],[179,21,149,20,"enabled"],[179,28,149,36],[179,32,150,4,"apiClient"],[179,41,150,13],[179,42,150,14,"patch"],[179,47,150,19],[179,48,150,20],[179,65,150,37],[179,67,150,39],[179,71,150,43],[179,73,150,45],[180,6,151,6,"params"],[180,12,151,12],[180,14,151,14],[181,8,151,16,"enabled"],[182,6,151,24],[183,4,152,4],[183,5,152,5],[184,2,153,0],[184,3,153,1],[186,2,155,0],[187,2,156,0],[187,8,156,6,"logAdminAction"],[187,22,156,20],[187,25,156,23],[187,31,156,23,"logAdminAction"],[187,32,156,30,"action"],[187,38,156,44],[187,40,156,46,"competitionName"],[187,55,156,69],[187,57,156,71,"adminName"],[187,66,156,88],[187,68,156,90,"details"],[187,75,156,103],[187,80,156,108],[188,4,157,2],[188,8,157,6],[189,6,158,4],[189,12,158,10,"logs"],[189,16,158,14],[189,19,158,17],[189,26,158,23,"CrossPlatformStorage"],[189,46,158,43],[189,47,158,44,"getItem"],[189,54,158,51],[189,55,158,52],[189,66,158,63],[189,67,158,64],[189,72,158,68],[189,76,158,72],[190,6,159,4],[190,12,159,10,"adminLogs"],[190,21,159,19],[190,24,159,22,"JSON"],[190,28,159,26],[190,29,159,27,"parse"],[190,34,159,32],[190,35,159,33,"logs"],[190,39,159,37],[190,40,159,38],[191,6,161,4],[191,12,161,10,"logEntry"],[191,20,161,18],[191,23,161,21],[192,8,162,6,"id"],[192,10,162,8],[192,12,162,10],[192,19,162,17,"Date"],[192,23,162,21],[192,24,162,22,"now"],[192,27,162,25],[192,28,162,26],[192,29,162,27],[192,31,162,29],[193,8,163,6,"action"],[193,14,163,12],[194,8,164,6,"competition_name"],[194,24,164,22],[194,26,164,24,"competitionName"],[194,41,164,39],[195,8,165,6,"admin_name"],[195,18,165,16],[195,20,165,18,"adminName"],[195,29,165,27],[196,8,166,6,"details"],[196,15,166,13],[197,8,167,6,"timestamp"],[197,17,167,15],[197,19,167,17],[197,23,167,21,"Date"],[197,27,167,25],[197,28,167,26],[197,29,167,27],[197,30,167,28,"toISOString"],[197,41,167,39],[197,42,167,40],[198,6,168,4],[198,7,168,5],[199,6,170,4,"adminLogs"],[199,15,170,13],[199,16,170,14,"push"],[199,20,170,18],[199,21,170,19,"logEntry"],[199,29,170,27],[199,30,170,28],[200,6,171,4],[200,12,171,10,"CrossPlatformStorage"],[200,32,171,30],[200,33,171,31,"setItem"],[200,40,171,38],[200,41,171,39],[200,52,171,50],[200,54,171,52,"JSON"],[200,58,171,56],[200,59,171,57,"stringify"],[200,68,171,66],[200,69,171,67,"adminLogs"],[200,78,171,76],[200,79,171,77],[200,80,171,78],[201,6,173,4,"console"],[201,13,173,11],[201,14,173,12,"log"],[201,17,173,15],[201,18,173,16],[201,43,173,41],[201,45,173,43,"action"],[201,51,173,49],[201,53,173,51,"competitionName"],[201,68,173,66],[201,69,173,67],[202,4,174,2],[202,5,174,3],[202,6,174,4],[202,13,174,11,"error"],[202,18,174,16],[202,20,174,18],[203,6,175,4,"console"],[203,13,175,11],[203,14,175,12,"error"],[203,19,175,17],[203,20,175,18],[203,49,175,47],[203,51,175,49,"error"],[203,56,175,54],[203,57,175,55],[204,4,176,2],[205,2,177,0],[205,3,177,1],[207,2,179,0],[208,2,180,7],[208,8,180,13,"competitionAPI"],[208,22,180,27],[208,25,180,30],[209,4,181,2,"create"],[209,10,181,8],[209,12,181,11,"data"],[209,16,196,3],[209,20,196,8,"apiClient"],[209,29,196,17],[209,30,196,18,"post"],[209,34,196,22],[209,35,196,23],[209,50,196,38],[209,52,196,40,"data"],[209,56,196,44],[209,57,196,45],[210,4,198,2,"join"],[210,8,198,6],[210,10,198,9,"inviteCode"],[210,20,198,27],[210,24,199,4,"apiClient"],[210,33,199,13],[210,34,199,14,"post"],[210,38,199,18],[210,39,199,19],[210,59,199,39],[210,61,199,41],[211,6,199,43,"invite_code"],[211,17,199,54],[211,19,199,56,"inviteCode"],[212,4,199,67],[212,5,199,68],[212,6,199,69],[213,4,201,2,"getMyCompetitions"],[213,21,201,19],[213,23,201,21,"getMyCompetitions"],[213,24,201,21],[213,29,201,27,"apiClient"],[213,38,201,36],[213,39,201,37,"get"],[213,42,201,40],[213,43,201,41],[213,61,201,59],[213,62,201,60],[214,4,203,2,"getCompetition"],[214,18,203,16],[214,20,203,19,"id"],[214,22,203,29],[214,26,203,34,"apiClient"],[214,35,203,43],[214,36,203,44,"get"],[214,39,203,47],[214,40,203,48],[214,57,203,65,"id"],[214,59,203,67],[214,61,203,69],[214,62,203,70],[215,4,205,2,"updateStandings"],[215,19,205,17],[215,21,205,19,"updateStandings"],[215,22,206,4,"id"],[215,24,206,14],[215,26,207,4,"standings"],[215,35,207,18],[215,37,208,4,"matchday"],[215,45,208,21],[215,50,210,4,"apiClient"],[215,59,210,13],[215,60,210,14,"patch"],[215,65,210,19],[215,66,210,20],[215,83,210,37,"id"],[215,85,210,39],[215,97,210,51],[215,99,210,53],[216,6,211,6,"standings"],[216,15,211,15],[217,6,212,6,"matchday"],[218,4,213,4],[218,5,213,5],[218,6,213,6],[219,4,215,2,"payFee"],[219,10,215,8],[219,12,215,10,"payFee"],[219,13,215,11,"id"],[219,15,215,21],[219,17,215,23,"amount"],[219,23,215,37],[219,28,216,4,"apiClient"],[219,37,216,13],[219,38,216,14,"post"],[219,42,216,18],[219,43,216,19],[219,60,216,36,"id"],[219,62,216,38],[219,68,216,44],[219,70,216,46],[219,74,216,50],[219,76,216,52],[220,6,217,6,"params"],[220,12,217,12],[220,14,217,14],[221,8,217,16,"amount"],[222,6,217,23],[223,4,218,4],[223,5,218,5],[223,6,218,6],[224,4,220,2,"getTransactions"],[224,19,220,17],[224,21,220,20,"id"],[224,23,220,30],[224,27,221,4,"apiClient"],[224,36,221,13],[224,37,221,14,"get"],[224,40,221,17],[224,41,221,18],[224,58,221,35,"id"],[224,60,221,37],[224,75,221,52],[224,76,221,53],[225,4,223,2],[226,4,224,2,"payMatchdays"],[226,16,224,14],[226,18,224,16,"payMatchdays"],[226,19,224,17,"competitionId"],[226,32,224,38],[226,34,224,40,"matchdays"],[226,43,224,59],[226,48,225,4,"apiClient"],[226,57,225,13],[226,58,225,14,"post"],[226,62,225,18],[226,63,225,19],[226,80,225,36,"competitionId"],[226,93,225,49],[226,113,225,69],[226,115,225,71],[227,6,226,6,"competition_id"],[227,20,226,20],[227,22,226,22,"competitionId"],[227,35,226,35],[228,6,227,6,"matchdays"],[229,4,228,4],[229,5,228,5],[229,6,228,6],[230,4,230,2,"getMatchdayPayments"],[230,23,230,21],[230,25,230,24,"competitionId"],[230,38,230,45],[230,42,231,4,"apiClient"],[230,51,231,13],[230,52,231,14,"get"],[230,55,231,17],[230,56,231,18],[230,73,231,35,"competitionId"],[230,86,231,48],[230,106,231,68],[230,107,231,69],[231,4,233,2,"getPaymentStatusTable"],[231,25,233,23],[231,27,233,26,"competitionId"],[231,40,233,47],[231,44,234,4,"apiClient"],[231,53,234,13],[231,54,234,14,"get"],[231,57,234,17],[231,58,234,18],[231,75,234,35,"competitionId"],[231,88,234,48],[231,111,234,71],[231,112,234,72],[232,4,236,2],[233,4,237,2,"createMock"],[233,14,237,12],[233,16,237,14],[233,22,237,21,"data"],[233,26,250,3],[233,30,250,8],[234,6,251,4,"console"],[234,13,251,11],[234,14,251,12,"log"],[234,17,251,15],[234,18,251,16],[234,50,251,48],[234,52,251,50,"data"],[234,56,251,54],[234,57,251,55,"name"],[234,61,251,59],[234,62,251,60],[235,6,252,4,"console"],[235,13,252,11],[235,14,252,12,"log"],[235,17,252,15],[235,18,252,16],[235,39,252,37],[235,41,252,39,"data"],[235,45,252,43],[235,46,252,44,"total_matchdays"],[235,61,252,59],[235,65,252,63],[235,67,252,65],[235,68,252,66],[237,6,254,4],[238,6,255,4],[238,12,255,10,"storedCompetitions"],[238,30,255,28],[238,33,255,31],[238,39,255,37,"CrossPlatformStorage"],[238,59,255,57],[238,60,255,58,"getItem"],[238,67,255,65],[238,68,255,66],[238,87,255,85],[238,88,255,86],[239,6,256,4],[239,10,256,8,"existingCompetitions"],[239,30,256,28],[239,33,256,31,"storedCompetitions"],[239,51,256,49],[239,54,256,52,"JSON"],[239,58,256,56],[239,59,256,57,"parse"],[239,64,256,62],[239,65,256,63,"storedCompetitions"],[239,83,256,81],[239,84,256,82],[239,87,256,85],[239,89,256,87],[240,6,258,4,"console"],[240,13,258,11],[240,14,258,12,"log"],[240,17,258,15],[240,18,258,16],[240,60,258,58],[240,62,258,60,"existingCompetitions"],[240,82,258,80],[240,83,258,81,"length"],[240,89,258,87],[240,90,258,88],[242,6,260,4],[243,6,261,4],[243,12,261,10,"existingNames"],[243,25,261,23],[243,28,261,26,"existingCompetitions"],[243,48,261,46],[243,49,261,47,"map"],[243,52,261,50],[243,53,261,52,"comp"],[243,57,261,61],[243,61,261,66,"comp"],[243,65,261,70],[243,66,261,71,"name"],[243,70,261,75],[243,71,261,76,"toLowerCase"],[243,82,261,87],[243,83,261,88],[243,84,261,89],[243,85,261,90],[244,6,262,4],[244,10,262,8,"existingNames"],[244,23,262,21],[244,24,262,22,"includes"],[244,32,262,30],[244,33,262,31,"data"],[244,37,262,35],[244,38,262,36,"name"],[244,42,262,40],[244,43,262,41,"toLowerCase"],[244,54,262,52],[244,55,262,53],[244,56,262,54],[244,57,262,55],[244,59,262,57],[245,8,263,6],[245,14,263,12],[245,18,263,16,"Error"],[245,23,263,21],[245,24,263,22],[245,86,263,84],[245,87,263,85],[246,6,264,4],[248,6,266,4],[249,6,267,4],[249,12,267,10,"newCompetition"],[249,26,267,24],[249,29,267,27],[250,8,268,6,"_id"],[250,11,268,9],[250,13,268,11],[250,21,268,19,"Date"],[250,25,268,23],[250,26,268,24,"now"],[250,29,268,27],[250,30,268,28],[250,31,268,29],[250,33,268,31],[251,8,269,6,"name"],[251,12,269,10],[251,14,269,12,"data"],[251,18,269,16],[251,19,269,17,"name"],[251,23,269,21],[252,8,270,6,"total_matchdays"],[252,23,270,21],[252,25,270,23,"data"],[252,29,270,27],[252,30,270,28,"total_matchdays"],[252,45,270,43],[252,49,270,47],[252,51,270,49],[253,8,271,6,"participation_cost_per_team"],[253,35,271,33],[253,37,271,35,"data"],[253,41,271,39],[253,42,271,40,"participation_cost_per_team"],[253,69,271,67],[253,73,271,71],[253,78,271,76],[254,8,272,6,"expected_teams"],[254,22,272,20],[254,24,272,22,"data"],[254,28,272,26],[254,29,272,27,"expected_teams"],[254,43,272,41],[254,47,272,45],[254,48,272,46],[255,8,273,6,"total_prize_pool"],[255,24,273,22],[255,26,273,24,"data"],[255,30,273,28],[255,31,273,29,"total_prize_pool"],[255,47,273,45],[255,51,273,49],[255,57,273,55],[256,8,274,6,"daily_payment_enabled"],[256,29,274,27],[256,31,274,29,"data"],[256,35,274,33],[256,36,274,34,"daily_payment_enabled"],[256,57,274,55],[256,61,274,59],[256,66,274,64],[257,8,275,6,"daily_payment_amount"],[257,28,275,26],[257,30,275,28,"data"],[257,34,275,32],[257,35,275,33,"daily_payment_amount"],[257,55,275,53],[257,59,275,57],[257,62,275,60],[258,8,276,6,"rules"],[258,13,276,11],[258,15,276,13,"data"],[258,19,276,17],[258,20,276,18,"rules"],[258,25,276,23],[259,8,277,6,"invite_code"],[259,19,277,17],[259,21,277,19,"Math"],[259,25,277,23],[259,26,277,24,"random"],[259,32,277,30],[259,33,277,31],[259,34,277,32],[259,35,277,33,"toString"],[259,43,277,41],[259,44,277,42],[259,46,277,44],[259,47,277,45],[259,48,277,46,"substr"],[259,54,277,52],[259,55,277,53],[259,56,277,54],[259,58,277,56],[259,59,277,57],[259,60,277,58],[259,61,277,59,"toUpperCase"],[259,72,277,70],[259,73,277,71],[259,74,277,72],[260,8,278,6,"invite_link"],[260,19,278,17],[260,21,278,19],[260,50,278,48,"Math"],[260,54,278,52],[260,55,278,53,"random"],[260,61,278,59],[260,62,278,60],[260,63,278,61],[260,64,278,62,"toString"],[260,72,278,70],[260,73,278,71],[260,75,278,73],[260,76,278,74],[260,77,278,75,"substr"],[260,83,278,81],[260,84,278,82],[260,85,278,83],[260,87,278,85],[260,88,278,86],[260,89,278,87],[260,90,278,88,"toUpperCase"],[260,101,278,99],[260,102,278,100],[260,103,278,101],[260,105,278,103],[261,8,279,6,"admin_id"],[261,16,279,14],[261,18,279,16],[261,44,279,42],[262,8,279,44],[263,8,280,6,"participants"],[263,20,280,18],[263,22,280,20],[263,23,281,8],[264,10,282,10,"id"],[264,12,282,12],[264,14,282,14],[264,40,282,40],[265,10,283,10,"name"],[265,14,283,14],[265,16,283,16],[265,33,283,33],[266,10,284,10,"email"],[266,15,284,15],[266,17,284,17],[266,36,284,36],[267,10,285,10,"is_admin"],[267,18,285,18],[267,20,285,20],[267,24,285,24],[268,10,286,10,"paid_matchdays"],[268,24,286,24],[268,26,286,26],[268,27,286,27],[268,28,286,28],[268,30,286,30],[268,31,286,31],[268,32,286,32],[269,10,286,34],[270,10,287,10,"points"],[270,16,287,16],[270,18,287,18],[271,8,288,8],[271,9,288,9],[271,10,289,7],[272,8,290,6,"wallet_balance"],[272,22,290,20],[272,24,290,22],[272,25,290,23],[273,8,291,6,"is_active"],[273,17,291,15],[273,19,291,17],[273,23,291,21],[274,8,292,6,"current_matchday"],[274,24,292,22],[274,26,292,24],[274,27,292,25],[275,8,292,27],[276,8,293,6,"standings"],[276,17,293,15],[276,19,293,17],[276,20,294,8],[277,10,294,10,"position"],[277,18,294,18],[277,20,294,20],[277,21,294,21],[278,10,294,23,"player_id"],[278,19,294,32],[278,21,294,34],[278,47,294,60],[279,10,294,62,"name"],[279,14,294,66],[279,16,294,68],[279,33,294,85],[280,10,294,87,"points"],[280,16,294,93],[280,18,294,95],[281,8,294,97],[281,9,294,98],[281,10,295,7],[282,8,296,6,"created_at"],[282,18,296,16],[282,20,296,18],[282,24,296,22,"Date"],[282,28,296,26],[282,29,296,27],[282,30,296,28],[282,31,296,29,"toISOString"],[282,42,296,40],[282,43,296,41],[282,44,296,42],[283,8,297,6,"updated_at"],[283,18,297,16],[283,20,297,18],[283,24,297,22,"Date"],[283,28,297,26],[283,29,297,27],[283,30,297,28],[283,31,297,29,"toISOString"],[283,42,297,40],[283,43,297,41],[284,6,298,4],[284,7,298,5],[286,6,300,4],[287,6,301,4,"existingCompetitions"],[287,26,301,24],[287,27,301,25,"push"],[287,31,301,29],[287,32,301,30,"newCompetition"],[287,46,301,44],[287,47,301,45],[288,6,302,4],[288,12,302,10,"CrossPlatformStorage"],[288,32,302,30],[288,33,302,31,"setItem"],[288,40,302,38],[288,41,302,39],[288,60,302,58],[288,62,302,60,"JSON"],[288,66,302,64],[288,67,302,65,"stringify"],[288,76,302,74],[288,77,302,75,"existingCompetitions"],[288,97,302,95],[288,98,302,96],[288,99,302,97],[289,6,304,4,"console"],[289,13,304,11],[289,14,304,12,"log"],[289,17,304,15],[289,18,304,16],[289,71,304,69],[289,73,304,71,"existingCompetitions"],[289,93,304,91],[289,94,304,92,"length"],[289,100,304,98],[289,101,304,99],[291,6,306,4],[292,6,307,4],[292,12,307,10,"logAdminAction"],[292,26,307,24],[292,27,307,25],[292,35,307,33],[292,37,307,35,"newCompetition"],[292,51,307,49],[292,52,307,50,"name"],[292,56,307,54],[292,58,307,56],[292,75,307,73],[292,77,307,75],[293,8,308,6,"competition_id"],[293,22,308,20],[293,24,308,22,"newCompetition"],[293,38,308,36],[293,39,308,37,"_id"],[293,42,308,40],[294,8,309,6,"rules"],[294,13,309,11],[294,15,309,13,"newCompetition"],[294,29,309,27],[294,30,309,28,"rules"],[294,35,309,33],[295,8,310,6,"total_matchdays"],[295,23,310,21],[295,25,310,23,"newCompetition"],[295,39,310,37],[295,40,310,38,"total_matchdays"],[295,55,310,53],[296,8,311,6,"participation_cost_per_team"],[296,35,311,33],[296,37,311,35,"newCompetition"],[296,51,311,49],[296,52,311,50,"participation_cost_per_team"],[296,79,311,77],[297,8,312,6,"expected_teams"],[297,22,312,20],[297,24,312,22,"newCompetition"],[297,38,312,36],[297,39,312,37,"expected_teams"],[297,53,312,51],[298,8,313,6,"total_prize_pool"],[298,24,313,22],[298,26,313,24,"newCompetition"],[298,40,313,38],[298,41,313,39,"total_prize_pool"],[298,57,313,55],[299,8,314,6,"daily_payment_enabled"],[299,29,314,27],[299,31,314,29,"newCompetition"],[299,45,314,43],[299,46,314,44,"daily_payment_enabled"],[299,67,314,65],[300,8,315,6,"daily_payment_amount"],[300,28,315,26],[300,30,315,28,"newCompetition"],[300,44,315,42],[300,45,315,43,"daily_payment_amount"],[301,6,316,4],[301,7,316,5],[301,8,316,6],[302,6,318,4,"console"],[302,13,318,11],[302,14,318,12,"log"],[302,17,318,15],[302,18,318,16],[302,47,318,45],[302,49,318,47,"newCompetition"],[302,63,318,61],[302,64,318,62,"name"],[302,68,318,66],[302,69,318,67],[303,6,319,4,"console"],[303,13,319,11],[303,14,319,12,"log"],[303,17,319,15],[303,18,319,16],[303,40,319,38],[303,42,319,40,"newCompetition"],[303,56,319,54],[303,57,319,55,"name"],[303,61,319,59],[303,62,319,60],[304,6,320,4,"console"],[304,13,320,11],[304,14,320,12,"log"],[304,17,320,15],[304,18,320,16],[304,37,320,35],[304,39,320,37,"newCompetition"],[304,53,320,51],[304,54,320,52,"daily_payment_enabled"],[304,75,320,73],[304,78,320,76],[304,82,320,80,"newCompetition"],[304,96,320,94],[304,97,320,95,"daily_payment_amount"],[304,117,320,115],[304,132,320,130],[304,135,320,133],[304,145,320,143],[304,146,320,144],[305,6,321,4,"console"],[305,13,321,11],[305,14,321,12,"log"],[305,17,321,15],[305,18,321,16],[305,40,321,38],[305,42,321,40],[305,46,321,44,"newCompetition"],[305,60,321,58],[305,61,321,59,"total_prize_pool"],[305,77,321,75],[305,79,321,77],[305,80,321,78],[306,6,322,4,"console"],[306,13,322,11],[306,14,322,12,"log"],[306,17,322,15],[306,18,322,16],[306,35,322,33],[306,37,322,35,"newCompetition"],[306,51,322,49],[306,52,322,50,"invite_code"],[306,63,322,61],[306,64,322,62],[307,6,324,4],[307,13,324,11],[308,8,324,13,"data"],[308,12,324,17],[308,14,324,19,"newCompetition"],[309,6,324,34],[309,7,324,35],[310,4,325,2],[310,5,325,3],[311,4,327,2],[312,4,328,2,"payMatchdaysMock"],[312,20,328,18],[312,22,328,20],[312,28,328,20,"payMatchdaysMock"],[312,29,328,27,"competitionId"],[312,42,328,48],[312,44,328,50,"matchdays"],[312,53,328,69],[312,58,328,74],[313,6,329,4,"console"],[313,13,329,11],[313,14,329,12,"log"],[313,17,329,15],[313,18,329,16],[313,49,329,47],[313,51,329,49,"matchdays"],[313,60,329,58],[313,62,329,60],[313,78,329,76],[313,80,329,78,"competitionId"],[313,93,329,91],[313,94,329,92],[315,6,331,4],[316,6,332,4],[316,12,332,10,"totalCost"],[316,21,332,19],[316,24,332,22,"matchdays"],[316,33,332,31],[316,34,332,32,"length"],[316,40,332,38],[316,43,332,41],[316,44,332,42],[316,45,332,43],[316,46,332,44],[318,6,334,4],[319,6,335,4],[319,13,335,11],[320,8,336,6,"data"],[320,12,336,10],[320,14,336,12],[321,10,337,8,"message"],[321,17,337,15],[321,19,337,17],[321,44,337,42,"matchdays"],[321,53,337,51],[321,54,337,52,"length"],[321,60,337,58],[321,72,337,70],[322,10,338,8,"paid_matchdays"],[322,24,338,22],[322,26,338,24,"matchdays"],[322,35,338,33],[323,10,339,8,"total_cost"],[323,20,339,18],[323,22,339,20,"totalCost"],[323,31,339,29],[324,10,340,8,"new_user_balance"],[324,26,340,24],[324,28,340,26],[324,31,340,29],[324,34,340,32,"totalCost"],[324,43,340,41],[324,44,340,42],[325,8,341,6],[326,6,342,4],[326,7,342,5],[327,4,343,2],[327,5,343,3],[328,4,345,2,"getMatchdayPaymentsMock"],[328,27,345,25],[328,29,345,27],[328,35,345,34,"competitionId"],[328,48,345,55],[328,52,345,60],[329,6,346,4,"console"],[329,13,346,11],[329,14,346,12,"log"],[329,17,346,15],[329,18,346,16],[329,70,346,68],[329,72,346,70,"competitionId"],[329,85,346,83],[329,86,346,84],[331,6,348,4],[332,6,349,4],[332,12,349,10,"mockPayments"],[332,24,349,22],[332,27,349,25],[332,29,349,27],[333,6,350,4],[333,11,350,9],[333,15,350,13,"i"],[333,16,350,14],[333,19,350,17],[333,20,350,18],[333,22,350,20,"i"],[333,23,350,21],[333,27,350,25],[333,29,350,27],[333,31,350,29,"i"],[333,32,350,30],[333,34,350,32],[333,36,350,34],[334,8,351,6,"mockPayments"],[334,20,351,18],[334,21,351,19,"push"],[334,25,351,23],[334,26,351,24],[335,10,352,8,"_id"],[335,13,352,11],[335,15,352,13],[335,26,352,24,"i"],[335,27,352,25],[335,29,352,27],[336,10,353,8,"user_id"],[336,17,353,15],[336,19,353,17],[336,45,353,43],[337,10,354,8,"competition_id"],[337,24,354,22],[337,26,354,24,"competitionId"],[337,39,354,37],[338,10,355,8,"matchday"],[338,18,355,16],[338,20,355,18,"i"],[338,21,355,19],[339,10,356,8,"amount"],[339,16,356,14],[339,18,356,16],[339,19,356,17],[340,10,357,8,"status"],[340,16,357,14],[340,18,357,16,"i"],[340,19,357,17],[340,23,357,21],[340,24,357,22],[340,27,357,25],[340,33,357,31],[340,36,357,34],[340,45,357,43],[341,10,358,8,"paid_at"],[341,17,358,15],[341,19,358,17,"i"],[341,20,358,18],[341,24,358,22],[341,25,358,23],[341,28,358,26],[341,32,358,30,"Date"],[341,36,358,34],[341,37,358,35],[341,38,358,36],[341,39,358,37,"toISOString"],[341,50,358,48],[341,51,358,49],[341,52,358,50],[341,55,358,53],[341,59,358,57],[342,10,359,8,"created_at"],[342,20,359,18],[342,22,359,20],[342,26,359,24,"Date"],[342,30,359,28],[342,31,359,29],[342,32,359,30],[342,33,359,31,"toISOString"],[342,44,359,42],[342,45,359,43],[343,8,360,6],[343,9,360,7],[343,10,360,8],[344,6,361,4],[345,6,363,4],[345,13,363,11],[346,8,364,6,"data"],[346,12,364,10],[346,14,364,12],[347,10,365,8,"competition_id"],[347,24,365,22],[347,26,365,24,"competitionId"],[347,39,365,37],[348,10,366,8,"daily_payment_enabled"],[348,31,366,29],[348,33,366,31],[348,37,366,35],[349,10,367,8,"daily_payment_amount"],[349,30,367,28],[349,32,367,30],[349,33,367,31],[350,10,368,8,"total_matchdays"],[350,25,368,23],[350,27,368,25],[350,29,368,27],[351,10,369,8,"payments"],[351,18,369,16],[351,20,369,18,"mockPayments"],[352,8,370,6],[353,6,371,4],[353,7,371,5],[354,4,372,2],[354,5,372,3],[355,4,374,2,"getPaymentStatusTableMock"],[355,29,374,27],[355,31,374,29],[355,37,374,36,"competitionId"],[355,50,374,57],[355,54,374,62],[356,6,375,4,"console"],[356,13,375,11],[356,14,375,12,"log"],[356,17,375,15],[356,18,375,16],[356,73,375,71],[356,75,375,73,"competitionId"],[356,88,375,86],[356,89,375,87],[358,6,377,4],[359,6,378,4],[359,12,378,10,"mockTable"],[359,21,378,19],[359,24,378,22],[359,25,378,23],[360,8,379,6,"user_id"],[360,15,379,13],[360,17,379,15],[360,43,379,41],[361,8,380,6,"username"],[361,16,380,14],[361,18,380,16],[361,35,380,33],[362,8,381,6,"name"],[362,12,381,10],[362,14,381,12],[362,31,381,29],[363,8,382,6,"email"],[363,13,382,11],[363,15,382,13],[363,34,382,32],[364,8,383,6,"matchday_payments"],[364,25,383,23],[364,27,383,25,"Array"],[364,32,383,30],[364,33,383,31,"from"],[364,37,383,35],[364,38,383,36],[365,10,383,37,"length"],[365,16,383,43],[365,18,383,45],[366,8,383,47],[366,9,383,48],[366,11,383,50],[366,12,383,51,"_"],[366,13,383,52],[366,15,383,54,"i"],[366,16,383,55],[366,22,383,61],[367,10,384,8,"matchday"],[367,18,384,16],[367,20,384,18,"i"],[367,21,384,19],[367,24,384,22],[367,25,384,23],[368,10,385,8,"status"],[368,16,385,14],[368,18,385,17,"i"],[368,19,385,18],[368,22,385,21],[368,23,385,22],[368,26,385,25],[368,32,385,31],[368,35,385,34],[368,44,385,44],[369,10,386,8,"amount"],[369,16,386,14],[369,18,386,16],[369,19,386,17],[370,10,387,8,"paid_at"],[370,17,387,15],[370,19,387,17,"i"],[370,20,387,18],[370,23,387,21],[370,24,387,22],[370,27,387,25],[370,31,387,29,"Date"],[370,35,387,33],[370,36,387,34],[370,37,387,35],[370,38,387,36,"toISOString"],[370,49,387,47],[370,50,387,48],[370,51,387,49],[370,54,387,52],[371,8,388,6],[371,9,388,7],[371,10,388,8],[372,6,389,4],[372,7,389,5],[372,8,389,6],[373,6,391,4],[373,13,391,11],[374,8,392,6,"data"],[374,12,392,10],[374,14,392,12],[375,10,393,8,"competition_name"],[375,26,393,24],[375,28,393,26],[375,49,393,47],[376,10,394,8,"total_matchdays"],[376,25,394,23],[376,27,394,25],[376,29,394,27],[377,10,395,8,"daily_payment_amount"],[377,30,395,28],[377,32,395,30],[377,33,395,31],[378,10,396,8,"participants"],[378,22,396,20],[378,24,396,22,"mockTable"],[379,8,397,6],[380,6,398,4],[380,7,398,5],[381,4,399,2],[381,5,399,3],[382,4,401,2],[383,4,402,2,"validateNameMock"],[383,20,402,18],[383,22,402,20],[383,28,402,27,"name"],[383,32,402,39],[383,36,402,44],[384,6,403,4,"console"],[384,13,403,11],[384,14,403,12,"log"],[384,17,403,15],[384,18,403,16],[384,57,403,55],[384,59,403,57,"name"],[384,63,403,61],[384,64,403,62],[385,6,405,4],[385,10,405,8],[385,11,405,9,"name"],[385,15,405,13],[385,16,405,14,"trim"],[385,20,405,18],[385,21,405,19],[385,22,405,20],[385,24,405,22],[386,8,406,6],[386,15,406,13],[387,10,406,15,"available"],[387,19,406,24],[387,21,406,26],[387,25,406,30],[388,10,406,32,"message"],[388,17,406,39],[388,19,406,41],[389,8,406,44],[389,9,406,45],[390,6,407,4],[392,6,409,4],[393,6,410,4],[393,12,410,10,"storedCompetitions"],[393,30,410,28],[393,33,410,31],[393,39,410,37,"CrossPlatformStorage"],[393,59,410,57],[393,60,410,58,"getItem"],[393,67,410,65],[393,68,410,66],[393,86,410,84],[393,87,410,85],[394,6,411,4],[394,10,411,8,"existingCompetitions"],[394,30,411,28],[394,33,411,31,"storedCompetitions"],[394,51,411,49],[394,54,411,52,"JSON"],[394,58,411,56],[394,59,411,57,"parse"],[394,64,411,62],[394,65,411,63,"storedCompetitions"],[394,83,411,81],[394,84,411,82],[394,87,411,85],[394,89,411,87],[396,6,413,4],[397,6,414,4],[397,12,414,10,"defaultNames"],[397,24,414,22],[397,27,414,25],[397,28,414,26],[397,50,414,48],[397,52,414,50],[397,78,414,76],[397,80,414,78],[397,96,414,94],[397,97,414,95],[398,6,415,4],[398,12,415,10,"allNames"],[398,20,415,18],[398,23,415,21],[398,24,416,6],[398,27,416,9,"existingCompetitions"],[398,47,416,29],[398,48,416,30,"map"],[398,51,416,33],[398,52,416,35,"comp"],[398,56,416,44],[398,60,416,49,"comp"],[398,64,416,53],[398,65,416,54,"name"],[398,69,416,58],[398,70,416,59,"toLowerCase"],[398,81,416,70],[398,82,416,71],[398,83,416,72],[398,84,416,73],[398,86,417,6],[398,89,417,9,"defaultNames"],[398,101,417,21],[398,102,417,22,"map"],[398,105,417,25],[398,106,417,26,"name"],[398,110,417,30],[398,114,417,34,"name"],[398,118,417,38],[398,119,417,39,"toLowerCase"],[398,130,417,50],[398,131,417,51],[398,132,417,52],[398,133,417,53],[398,134,418,5],[399,6,420,4],[399,12,420,10,"isAvailable"],[399,23,420,21],[399,26,420,24],[399,27,420,25,"allNames"],[399,35,420,33],[399,36,420,34,"includes"],[399,44,420,42],[399,45,420,43,"name"],[399,49,420,47],[399,50,420,48,"toLowerCase"],[399,61,420,59],[399,62,420,60],[399,63,420,61],[399,64,420,62],[400,6,422,4],[400,13,422,11],[401,8,423,6,"available"],[401,17,423,15],[401,19,423,17,"isAvailable"],[401,30,423,28],[402,8,424,6,"message"],[402,15,424,13],[402,17,424,15,"isAvailable"],[402,28,424,26],[402,31,424,29],[402,47,424,45],[402,50,424,48],[403,6,425,4],[403,7,425,5],[404,4,426,2],[404,5,426,3],[405,4,428,2],[406,4,429,2,"getMyCompetitionsMock"],[406,25,429,23],[406,27,429,25],[406,33,429,25,"getMyCompetitionsMock"],[406,34,429,25],[406,39,429,37],[407,6,430,4,"console"],[407,13,430,11],[407,14,430,12,"log"],[407,17,430,15],[407,18,430,16],[407,52,430,50],[407,53,430,51],[409,6,432,4],[410,6,433,4],[410,12,433,10,"shouldClearStorage"],[410,30,433,28],[410,33,433,31],[410,38,433,36],[410,39,433,37],[410,40,433,38],[412,6,435,4],[412,10,435,8,"shouldClearStorage"],[412,28,435,26],[412,30,435,28],[413,8,436,6,"console"],[413,15,436,13],[413,16,436,14,"log"],[413,19,436,17],[413,20,436,18],[413,73,436,71],[413,74,436,72],[415,8,438,6],[416,8,439,6],[416,14,439,12,"CrossPlatformStorage"],[416,34,439,32],[416,35,439,33,"removeItem"],[416,45,439,43],[416,46,439,44],[416,65,439,63],[416,66,439,64],[417,8,440,6],[417,14,440,12,"CrossPlatformStorage"],[417,34,440,32],[417,35,440,33,"removeItem"],[417,45,440,43],[417,46,440,44],[417,63,440,61],[417,64,440,62],[419,8,442,6],[420,8,443,6],[420,14,443,12,"legacyKeys"],[420,24,443,22],[420,27,443,25],[420,28,444,8],[420,82,444,62],[420,84,445,8],[420,138,445,62],[420,140,446,8],[420,187,446,55],[420,189,447,8],[420,243,447,62],[420,245,448,8],[420,263,448,26],[421,8,448,28],[422,8,449,8],[422,53,449,53],[422,54,449,55],[423,8,449,55],[423,9,450,7],[425,8,452,6],[426,8,453,6],[426,13,453,11],[426,19,453,17,"key"],[426,22,453,20],[426,26,453,24,"legacyKeys"],[426,36,453,34],[426,38,453,36],[427,10,454,8],[427,16,454,14,"CrossPlatformStorage"],[427,36,454,34],[427,37,454,35,"removeItem"],[427,47,454,45],[427,48,454,46,"key"],[427,51,454,49],[427,52,454,50],[428,10,455,8,"console"],[428,17,455,15],[428,18,455,16,"log"],[428,21,455,19],[428,22,455,20],[428,47,455,45,"key"],[428,50,455,48],[428,52,455,50],[428,53,455,51],[429,8,456,6],[431,8,458,6],[432,8,459,6,"console"],[432,15,459,13],[432,16,459,14,"log"],[432,19,459,17],[432,20,459,18],[432,80,459,78],[432,81,459,79],[433,8,460,6],[433,15,460,13],[433,17,460,15],[433,18,460,16],[433,19,460,17],[434,6,461,4],[435,6,463,4],[435,12,463,10,"storedCompetitions"],[435,30,463,28],[435,33,463,31],[435,39,463,37,"CrossPlatformStorage"],[435,59,463,57],[435,60,463,58,"getItem"],[435,67,463,65],[435,68,463,66],[435,87,463,85],[435,88,463,86],[436,6,465,4],[436,10,465,8,"storedCompetitions"],[436,28,465,26],[436,30,465,28],[437,8,466,6],[437,14,466,12,"competitions"],[437,26,466,24],[437,29,466,27,"JSON"],[437,33,466,31],[437,34,466,32,"parse"],[437,39,466,37],[437,40,466,38,"storedCompetitions"],[437,58,466,56],[437,59,466,57],[438,8,467,6,"console"],[438,15,467,13],[438,16,467,14,"log"],[438,19,467,17],[438,20,467,18],[438,55,467,53],[438,57,467,55,"competitions"],[438,69,467,67],[438,70,467,68,"length"],[438,76,467,74],[438,77,467,75],[439,8,468,6],[439,15,468,13,"competitions"],[439,27,468,25],[440,6,469,4],[440,7,469,5],[440,13,469,11],[441,8,470,6,"console"],[441,15,470,13],[441,16,470,14,"log"],[441,19,470,17],[441,20,470,18],[441,80,470,78],[441,81,470,79],[442,8,471,6],[442,15,471,13],[442,17,471,15],[443,6,472,4],[444,4,473,2],[444,5,473,3],[445,4,475,2,"joinMock"],[445,12,475,10],[445,14,475,12],[445,20,475,19,"inviteCode"],[445,30,475,37],[445,34,475,42],[446,6,476,4,"console"],[446,13,476,11],[446,14,476,12,"log"],[446,17,476,15],[446,18,476,16],[446,59,476,57],[446,61,476,59,"inviteCode"],[446,71,476,69],[446,72,476,70],[447,6,477,4],[447,10,477,8,"inviteCode"],[447,20,477,18],[447,21,477,19,"length"],[447,27,477,25],[447,30,477,28],[447,31,477,29],[447,33,477,31],[448,8,478,6],[448,14,478,12],[448,18,478,16,"Error"],[448,23,478,21],[448,24,478,22],[448,45,478,43],[448,46,478,44],[449,6,479,4],[450,6,480,4],[450,13,480,11],[451,8,480,13,"message"],[451,15,480,20],[451,17,480,22],[452,6,480,57],[452,7,480,58],[453,4,481,2],[453,5,481,3],[454,4,483,2],[455,4,484,2,"deleteMock"],[455,14,484,12],[455,16,484,14],[455,22,484,21,"competitionId"],[455,35,484,42],[455,39,484,47],[456,6,485,4,"console"],[456,13,485,11],[456,14,485,12,"log"],[456,17,485,15],[456,18,485,16],[456,51,485,49],[456,53,485,51,"competitionId"],[456,66,485,64],[456,67,485,65],[457,6,487,4],[457,12,487,10,"storedCompetitions"],[457,30,487,28],[457,33,487,31],[457,39,487,37,"CrossPlatformStorage"],[457,59,487,57],[457,60,487,58,"getItem"],[457,67,487,65],[457,68,487,66],[457,86,487,84],[457,87,487,85],[458,6,488,4],[458,10,488,8,"competitions"],[458,22,488,20],[458,25,488,23,"storedCompetitions"],[458,43,488,41],[458,46,488,44,"JSON"],[458,50,488,48],[458,51,488,49,"parse"],[458,56,488,54],[458,57,488,55,"storedCompetitions"],[458,75,488,73],[458,76,488,74],[458,79,488,77],[458,81,488,79],[459,6,490,4],[459,12,490,10,"competitionToDelete"],[459,31,490,29],[459,34,490,32,"competitions"],[459,46,490,44],[459,47,490,45,"find"],[459,51,490,49],[459,52,490,51,"comp"],[459,56,490,60],[459,60,490,65,"comp"],[459,64,490,69],[459,65,490,70,"_id"],[459,68,490,73],[459,73,490,78,"competitionId"],[459,86,490,91],[459,87,490,92],[460,6,491,4],[460,10,491,8],[460,11,491,9,"competitionToDelete"],[460,30,491,28],[460,32,491,30],[461,8,492,6],[461,14,492,12],[461,18,492,16,"Error"],[461,23,492,21],[461,24,492,22],[461,47,492,45],[461,48,492,46],[462,6,493,4],[464,6,495,4],[465,6,496,4],[465,10,496,8,"competitionToDelete"],[465,29,496,27],[465,30,496,28,"admin_id"],[465,38,496,36],[465,43,496,41],[465,69,496,67],[465,71,496,69],[466,8,497,6],[466,14,497,12],[466,18,497,16,"Error"],[466,23,497,21],[466,24,497,22],[466,64,497,62],[466,65,497,63],[467,6,498,4],[469,6,500,4],[470,6,501,4,"competitions"],[470,18,501,16],[470,21,501,19,"competitions"],[470,33,501,31],[470,34,501,32,"filter"],[470,40,501,38],[470,41,501,40,"comp"],[470,45,501,49],[470,49,501,54,"comp"],[470,53,501,58],[470,54,501,59,"_id"],[470,57,501,62],[470,62,501,67,"competitionId"],[470,75,501,80],[470,76,501,81],[471,6,502,4],[471,12,502,10,"CrossPlatformStorage"],[471,32,502,30],[471,33,502,31,"setItem"],[471,40,502,38],[471,41,502,39],[471,59,502,57],[471,61,502,59,"JSON"],[471,65,502,63],[471,66,502,64,"stringify"],[471,75,502,73],[471,76,502,74,"competitions"],[471,88,502,86],[471,89,502,87],[471,90,502,88],[473,6,504,4],[474,6,505,4],[474,12,505,10,"logAdminAction"],[474,26,505,24],[474,27,505,25],[474,35,505,33],[474,37,505,35,"competitionToDelete"],[474,56,505,54],[474,57,505,55,"name"],[474,61,505,59],[474,63,505,61],[474,80,505,78],[474,81,505,79],[475,6,507,4,"console"],[475,13,507,11],[475,14,507,12,"log"],[475,17,507,15],[475,18,507,16],[475,54,507,52],[475,55,507,53],[476,6,508,4],[476,13,508,11],[477,8,508,13,"message"],[477,15,508,20],[477,17,508,22],[478,6,508,57],[478,7,508,58],[479,4,509,2],[479,5,509,3],[480,4,511,2],[481,4,512,2,"editMock"],[481,12,512,10],[481,14,512,12],[481,20,512,12,"editMock"],[481,21,512,19,"competitionId"],[481,34,512,40],[481,36,512,42,"updates"],[481,43,512,54],[481,48,512,59],[482,6,513,4,"console"],[482,13,513,11],[482,14,513,12,"log"],[482,17,513,15],[482,18,513,16],[482,49,513,47],[482,51,513,49,"competitionId"],[482,64,513,62],[482,66,513,64,"updates"],[482,73,513,71],[482,74,513,72],[483,6,515,4],[483,12,515,10,"storedCompetitions"],[483,30,515,28],[483,33,515,31],[483,39,515,37,"CrossPlatformStorage"],[483,59,515,57],[483,60,515,58,"getItem"],[483,67,515,65],[483,68,515,66],[483,86,515,84],[483,87,515,85],[484,6,516,4],[484,10,516,8,"competitions"],[484,22,516,20],[484,25,516,23,"storedCompetitions"],[484,43,516,41],[484,46,516,44,"JSON"],[484,50,516,48],[484,51,516,49,"parse"],[484,56,516,54],[484,57,516,55,"storedCompetitions"],[484,75,516,73],[484,76,516,74],[484,79,516,77],[484,81,516,79],[485,6,518,4],[485,12,518,10,"competitionIndex"],[485,28,518,26],[485,31,518,29,"competitions"],[485,43,518,41],[485,44,518,42,"findIndex"],[485,53,518,51],[485,54,518,53,"comp"],[485,58,518,62],[485,62,518,67,"comp"],[485,66,518,71],[485,67,518,72,"_id"],[485,70,518,75],[485,75,518,80,"competitionId"],[485,88,518,93],[485,89,518,94],[486,6,519,4],[486,10,519,8,"competitionIndex"],[486,26,519,24],[486,31,519,29],[486,32,519,30],[486,33,519,31],[486,35,519,33],[487,8,520,6],[487,14,520,12],[487,18,520,16,"Error"],[487,23,520,21],[487,24,520,22],[487,47,520,45],[487,48,520,46],[488,6,521,4],[489,6,523,4],[489,12,523,10,"competition"],[489,23,523,21],[489,26,523,24,"competitions"],[489,38,523,36],[489,39,523,37,"competitionIndex"],[489,55,523,53],[489,56,523,54],[491,6,525,4],[492,6,526,4],[492,10,526,8,"competition"],[492,21,526,19],[492,22,526,20,"admin_id"],[492,30,526,28],[492,35,526,33],[492,61,526,59],[492,63,526,61],[493,8,527,6],[493,14,527,12],[493,18,527,16,"Error"],[493,23,527,21],[493,24,527,22],[493,62,527,60],[493,63,527,61],[494,6,528,4],[496,6,530,4],[497,6,531,4,"competitions"],[497,18,531,16],[497,19,531,17,"competitionIndex"],[497,35,531,33],[497,36,531,34],[497,39,531,37],[498,8,532,6],[498,11,532,9,"competition"],[498,22,532,20],[499,8,533,6],[499,11,533,9,"updates"],[499,18,533,16],[500,8,534,6,"updated_at"],[500,18,534,16],[500,20,534,18],[500,24,534,22,"Date"],[500,28,534,26],[500,29,534,27],[500,30,534,28],[500,31,534,29,"toISOString"],[500,42,534,40],[500,43,534,41],[501,6,535,4],[501,7,535,5],[502,6,537,4],[502,12,537,10,"CrossPlatformStorage"],[502,32,537,30],[502,33,537,31,"setItem"],[502,40,537,38],[502,41,537,39],[502,59,537,57],[502,61,537,59,"JSON"],[502,65,537,63],[502,66,537,64,"stringify"],[502,75,537,73],[502,76,537,74,"competitions"],[502,88,537,86],[502,89,537,87],[502,90,537,88],[504,6,539,4],[505,6,540,4],[505,12,540,10,"logAdminAction"],[505,26,540,24],[505,27,540,25],[505,33,540,31],[505,35,540,33,"competition"],[505,46,540,44],[505,47,540,45,"name"],[505,51,540,49],[505,53,540,51],[505,70,540,68],[505,72,540,70,"updates"],[505,79,540,77],[505,80,540,78],[506,6,542,4,"console"],[506,13,542,11],[506,14,542,12,"log"],[506,17,542,15],[506,18,542,16],[506,54,542,52],[506,55,542,53],[507,6,543,4],[507,13,543,11,"competitions"],[507,25,543,23],[507,26,543,24,"competitionIndex"],[507,42,543,40],[507,43,543,41],[508,4,544,2],[508,5,544,3],[509,4,546,2],[510,4,547,2,"awardDailyPrizeMock"],[510,23,547,21],[510,25,547,23],[510,31,547,23,"awardDailyPrizeMock"],[510,32,547,30,"competitionId"],[510,45,547,51],[510,47,547,53,"matchday"],[510,55,547,69],[510,57,547,71,"winnerId"],[510,65,547,87],[510,70,547,92],[511,6,548,4,"console"],[511,13,548,11],[511,14,548,12,"log"],[511,17,548,15],[511,18,548,16],[511,62,548,60],[511,64,548,62,"matchday"],[511,72,548,70],[511,74,548,72],[511,83,548,81],[511,85,548,83,"winnerId"],[511,93,548,91],[511,94,548,92],[512,6,550,4],[512,12,550,10,"storedCompetitions"],[512,30,550,28],[512,33,550,31],[512,39,550,37,"CrossPlatformStorage"],[512,59,550,57],[512,60,550,58,"getItem"],[512,67,550,65],[512,68,550,66],[512,86,550,84],[512,87,550,85],[513,6,551,4],[513,10,551,8,"competitions"],[513,22,551,20],[513,25,551,23,"storedCompetitions"],[513,43,551,41],[513,46,551,44,"JSON"],[513,50,551,48],[513,51,551,49,"parse"],[513,56,551,54],[513,57,551,55,"storedCompetitions"],[513,75,551,73],[513,76,551,74],[513,79,551,77],[513,81,551,79],[514,6,553,4],[514,12,553,10,"competitionIndex"],[514,28,553,26],[514,31,553,29,"competitions"],[514,43,553,41],[514,44,553,42,"findIndex"],[514,53,553,51],[514,54,553,53,"comp"],[514,58,553,62],[514,62,553,67,"comp"],[514,66,553,71],[514,67,553,72,"_id"],[514,70,553,75],[514,75,553,80,"competitionId"],[514,88,553,93],[514,89,553,94],[515,6,554,4],[515,10,554,8,"competitionIndex"],[515,26,554,24],[515,31,554,29],[515,32,554,30],[515,33,554,31],[515,35,554,33],[516,8,555,6],[516,14,555,12],[516,18,555,16,"Error"],[516,23,555,21],[516,24,555,22],[516,47,555,45],[516,48,555,46],[517,6,556,4],[518,6,558,4],[518,12,558,10,"competition"],[518,23,558,21],[518,26,558,24,"competitions"],[518,38,558,36],[518,39,558,37,"competitionIndex"],[518,55,558,53],[518,56,558,54],[520,6,560,4],[521,6,561,4],[521,10,561,8,"competition"],[521,21,561,19],[521,22,561,20,"admin_id"],[521,30,561,28],[521,35,561,33],[521,61,561,59],[521,63,561,61],[522,8,562,6],[522,14,562,12],[522,18,562,16,"Error"],[522,23,562,21],[522,24,562,22],[522,59,562,57],[522,60,562,58],[523,6,563,4],[525,6,565,4],[526,6,566,4],[526,10,566,8],[526,11,566,9,"competition"],[526,22,566,20],[526,23,566,21,"rules"],[526,28,566,26],[526,32,566,30],[526,33,566,31],[526,34,566,32],[526,41,566,39],[526,43,566,41],[526,50,566,48],[526,51,566,49],[526,52,566,50,"includes"],[526,60,566,58],[526,61,566,59,"competition"],[526,72,566,70],[526,73,566,71,"rules"],[526,78,566,76],[526,79,566,77,"type"],[526,83,566,81],[526,84,566,82],[526,86,566,84],[527,8,567,6],[527,14,567,12],[527,18,567,16,"Error"],[527,23,567,21],[527,24,567,22],[527,69,567,67],[527,70,567,68],[528,6,568,4],[529,6,570,4],[529,12,570,10,"dailyPrizeAmount"],[529,28,570,26],[529,31,570,29,"competition"],[529,42,570,40],[529,43,570,41,"rules"],[529,48,570,46],[529,49,570,47,"daily_prize"],[529,60,570,58],[529,64,570,62],[529,65,570,63],[530,6,571,4],[530,12,571,10,"winner"],[530,18,571,16],[530,21,571,19,"competition"],[530,32,571,30],[530,33,571,31,"participants"],[530,45,571,43],[530,46,571,44,"find"],[530,50,571,48],[530,51,571,50,"p"],[530,52,571,56],[530,56,571,61,"p"],[530,57,571,62],[530,58,571,63,"id"],[530,60,571,65],[530,65,571,70,"winnerId"],[530,73,571,78],[530,74,571,79],[531,6,573,4],[531,10,573,8],[531,11,573,9,"winner"],[531,17,573,15],[531,19,573,17],[532,8,574,6],[532,14,574,12],[532,18,574,16,"Error"],[532,23,574,21],[532,24,574,22],[532,57,574,55],[532,58,574,56],[533,6,575,4],[535,6,577,4],[536,6,578,4],[536,10,578,8],[536,11,578,9,"competition"],[536,22,578,20],[536,23,578,21,"daily_winners"],[536,36,578,34],[536,38,578,36],[537,8,579,6,"competition"],[537,19,579,17],[537,20,579,18,"daily_winners"],[537,33,579,31],[537,36,579,34],[537,37,579,35],[537,38,579,36],[538,6,580,4],[540,6,582,4],[541,6,583,4],[541,10,583,8,"competition"],[541,21,583,19],[541,22,583,20,"daily_winners"],[541,35,583,33],[541,36,583,34,"matchday"],[541,44,583,42],[541,45,583,43],[541,47,583,45],[542,8,584,6],[542,14,584,12],[542,18,584,16,"Error"],[542,23,584,21],[542,24,584,22],[542,52,584,50,"matchday"],[542,60,584,58],[542,83,584,81,"competition"],[542,94,584,92],[542,95,584,93,"daily_winners"],[542,108,584,106],[542,109,584,107,"matchday"],[542,117,584,115],[542,118,584,116],[542,119,584,117,"name"],[542,123,584,121],[542,125,584,123],[542,126,584,124],[543,6,585,4],[545,6,587,4],[546,6,588,4,"competition"],[546,17,588,15],[546,18,588,16,"daily_winners"],[546,31,588,29],[546,32,588,30,"matchday"],[546,40,588,38],[546,41,588,39],[546,44,588,42],[547,8,589,6,"user_id"],[547,15,589,13],[547,17,589,15,"winnerId"],[547,25,589,23],[548,8,590,6,"name"],[548,12,590,10],[548,14,590,12,"winner"],[548,20,590,18],[548,21,590,19,"name"],[548,25,590,23],[549,8,591,6,"amount"],[549,14,591,12],[549,16,591,14,"dailyPrizeAmount"],[549,32,591,30],[550,8,592,6,"awarded_at"],[550,18,592,16],[550,20,592,18],[550,24,592,22,"Date"],[550,28,592,26],[550,29,592,27],[550,30,592,28],[550,31,592,29,"toISOString"],[550,42,592,40],[550,43,592,41],[551,6,593,4],[551,7,593,5],[553,6,595,4],[554,6,596,4,"competitions"],[554,18,596,16],[554,19,596,17,"competitionIndex"],[554,35,596,33],[554,36,596,34],[554,39,596,37,"competition"],[554,50,596,48],[555,6,597,4],[555,12,597,10,"CrossPlatformStorage"],[555,32,597,30],[555,33,597,31,"setItem"],[555,40,597,38],[555,41,597,39],[555,59,597,57],[555,61,597,59,"JSON"],[555,65,597,63],[555,66,597,64,"stringify"],[555,75,597,73],[555,76,597,74,"competitions"],[555,88,597,86],[555,89,597,87],[555,90,597,88],[557,6,599,4],[558,6,600,4],[558,12,600,10,"logAdminAction"],[558,26,600,24],[558,27,600,25],[558,46,600,44],[558,48,600,46,"competition"],[558,59,600,57],[558,60,600,58,"name"],[558,64,600,62],[558,66,600,64],[558,83,600,81],[558,85,600,83],[559,8,601,6,"matchday"],[559,16,601,14],[560,8,602,6,"winner"],[560,14,602,12],[560,16,602,14,"winner"],[560,22,602,20],[560,23,602,21,"name"],[560,27,602,25],[561,8,603,6,"amount"],[561,14,603,12],[561,16,603,14,"dailyPrizeAmount"],[562,6,604,4],[562,7,604,5],[562,8,604,6],[564,6,606,4],[565,6,607,4,"console"],[565,13,607,11],[565,14,607,12,"log"],[565,17,607,15],[565,18,607,16],[565,24,607,22,"winner"],[565,30,607,28],[565,31,607,29,"name"],[565,35,607,33],[565,48,607,46,"dailyPrizeAmount"],[565,64,607,62],[565,89,607,87,"matchday"],[565,97,607,95],[565,99,607,97],[565,100,607,98],[566,6,609,4,"console"],[566,13,609,11],[566,14,609,12,"log"],[566,17,609,15],[566,18,609,16],[566,54,609,52],[566,55,609,53],[567,6,610,4],[567,13,610,11],[568,8,611,6,"message"],[568,15,611,13],[568,17,611,15],[568,36,611,34,"dailyPrizeAmount"],[568,52,611,50],[568,67,611,65,"winner"],[568,73,611,71],[568,74,611,72,"name"],[568,78,611,76],[568,95,611,93,"matchday"],[568,103,611,101],[568,105,611,103],[569,8,612,6,"competition"],[569,19,612,17],[569,21,612,19,"competition"],[570,6,613,4],[570,7,613,5],[571,4,614,2],[571,5,614,3],[572,4,616,2],[573,4,617,2,"getAdminLogsMock"],[573,20,617,18],[573,22,617,20],[573,28,617,20,"getAdminLogsMock"],[573,29,617,20],[573,34,617,32],[574,6,618,4,"console"],[574,13,618,11],[574,14,618,12,"log"],[574,17,618,15],[574,18,618,16],[574,47,618,45],[574,48,618,46],[575,6,620,4],[575,10,620,8],[576,8,621,6],[576,14,621,12,"logs"],[576,18,621,16],[576,21,621,19],[576,28,621,25,"CrossPlatformStorage"],[576,48,621,45],[576,49,621,46,"getItem"],[576,56,621,53],[576,57,621,54],[576,68,621,65],[576,69,621,66],[576,74,621,70],[576,78,621,74],[577,8,622,6],[577,14,622,12,"adminLogs"],[577,23,622,21],[577,26,622,24,"JSON"],[577,30,622,28],[577,31,622,29,"parse"],[577,36,622,34],[577,37,622,35,"logs"],[577,41,622,39],[577,42,622,40],[579,8,624,6],[580,8,625,6,"adminLogs"],[580,17,625,15],[580,18,625,16,"sort"],[580,22,625,20],[580,23,625,21],[580,24,625,22,"a"],[580,25,625,28],[580,27,625,30,"b"],[580,28,625,36],[580,33,625,41],[580,37,625,45,"Date"],[580,41,625,49],[580,42,625,50,"b"],[580,43,625,51],[580,44,625,52,"timestamp"],[580,53,625,61],[580,54,625,62],[580,55,625,63,"getTime"],[580,62,625,70],[580,63,625,71],[580,64,625,72],[580,67,625,75],[580,71,625,79,"Date"],[580,75,625,83],[580,76,625,84,"a"],[580,77,625,85],[580,78,625,86,"timestamp"],[580,87,625,95],[580,88,625,96],[580,89,625,97,"getTime"],[580,96,625,104],[580,97,625,105],[580,98,625,106],[580,99,625,107],[581,8,627,6,"console"],[581,15,627,13],[581,16,627,14,"log"],[581,19,627,17],[581,20,627,18],[581,42,627,40],[581,44,627,42,"adminLogs"],[581,53,627,51],[581,54,627,52,"length"],[581,60,627,58],[581,61,627,59],[582,8,628,6],[582,15,628,13,"adminLogs"],[582,24,628,22],[583,6,629,4],[583,7,629,5],[583,8,629,6],[583,15,629,13,"error"],[583,20,629,18],[583,22,629,20],[584,8,630,6,"console"],[584,15,630,13],[584,16,630,14,"error"],[584,21,630,19],[584,22,630,20],[584,52,630,50],[584,54,630,52,"error"],[584,59,630,57],[584,60,630,58],[585,8,631,6],[585,15,631,13],[585,17,631,15],[586,6,632,4],[587,4,633,2],[588,2,634,0],[588,3,634,1],[590,2,636,0],[591,2,637,7],[591,8,637,13,"walletAPI"],[591,17,637,22],[591,20,637,25],[592,4,638,2,"getBalance"],[592,14,638,12],[592,16,638,14,"getBalance"],[592,17,638,14],[592,22,638,20,"apiClient"],[592,31,638,29],[592,32,638,30,"get"],[592,35,638,33],[592,36,638,34],[592,53,638,51],[592,54,638,52],[593,4,640,2,"topUp"],[593,9,640,7],[593,11,640,10,"amount"],[593,17,640,24],[593,21,641,4,"apiClient"],[593,30,641,13],[593,31,641,14,"post"],[593,35,641,18],[593,36,641,19],[593,51,641,34],[593,53,641,36],[593,57,641,40],[593,59,641,42],[594,6,642,6,"params"],[594,12,642,12],[594,14,642,14],[595,8,642,16,"amount"],[596,6,642,23],[597,4,643,4],[597,5,643,5],[597,6,643,6],[598,4,645,2,"withdraw"],[598,12,645,10],[598,14,645,13,"amount"],[598,20,645,27],[598,24,646,4,"apiClient"],[598,33,646,13],[598,34,646,14,"post"],[598,38,646,18],[598,39,646,19],[598,57,646,37],[598,59,646,39],[598,63,646,43],[598,65,646,45],[599,6,647,6,"params"],[599,12,647,12],[599,14,647,14],[600,8,647,16,"amount"],[601,6,647,23],[602,4,648,4],[602,5,648,5],[602,6,648,6],[603,4,650,2,"getTransactions"],[603,19,650,17],[603,21,650,19,"getTransactions"],[603,22,650,19],[603,27,650,25,"apiClient"],[603,36,650,34],[603,37,650,35,"get"],[603,40,650,38],[603,41,650,39],[603,56,650,54],[604,2,651,0],[604,3,651,1],[606,2,653,0],[607,2,654,7],[607,8,654,13,"databaseAPI"],[607,19,654,24],[607,22,654,27],[608,4,655,2,"resetDatabase"],[608,17,655,15],[608,19,655,17],[608,25,655,17,"resetDatabase"],[608,26,655,17],[608,31,655,29],[609,6,656,4,"console"],[609,13,656,11],[609,14,656,12,"log"],[609,17,656,15],[609,18,656,16],[609,69,656,67],[609,70,656,68],[610,6,658,4],[610,10,658,8],[611,8,659,6],[611,14,659,12,"CrossPlatformStorage"],[611,34,659,32],[611,35,659,33,"removeItem"],[611,45,659,43],[611,46,659,44],[611,65,659,63],[611,66,659,64],[612,8,660,6],[612,14,660,12,"CrossPlatformStorage"],[612,34,660,32],[612,35,660,33,"removeItem"],[612,45,660,43],[612,46,660,44],[612,63,660,61],[612,64,660,62],[613,8,661,6],[613,14,661,12,"CrossPlatformStorage"],[613,34,661,32],[613,35,661,33,"removeItem"],[613,45,661,43],[613,46,661,44],[613,87,661,85],[613,88,661,86],[614,8,662,6],[614,14,662,12,"CrossPlatformStorage"],[614,34,662,32],[614,35,662,33,"removeItem"],[614,45,662,43],[614,46,662,44],[614,85,662,83],[614,86,662,84],[615,8,664,6,"console"],[615,15,664,13],[615,16,664,14,"log"],[615,19,664,17],[615,20,664,18],[615,66,664,64],[615,67,664,65],[616,8,665,6],[616,15,665,13],[617,10,665,15,"success"],[617,17,665,22],[617,19,665,24],[617,23,665,28],[618,10,665,30,"message"],[618,17,665,37],[618,19,665,39],[619,8,665,65],[619,9,665,66],[620,6,666,4],[620,7,666,5],[620,8,666,6],[620,15,666,13,"error"],[620,20,666,18],[620,22,666,20],[621,8,667,6,"console"],[621,15,667,13],[621,16,667,14,"error"],[621,21,667,19],[621,22,667,20],[621,48,667,46],[621,50,667,48,"error"],[621,55,667,53],[621,56,667,54],[622,8,668,6],[622,15,668,13],[623,10,668,15,"success"],[623,17,668,22],[623,19,668,24],[623,24,668,29],[624,10,668,31,"message"],[624,17,668,38],[624,19,668,40],[625,8,668,55],[625,9,668,56],[626,6,669,4],[627,4,670,2],[628,2,671,0],[628,3,671,1],[629,2,673,0],[629,6,673,0,"_default"],[629,14,673,0],[629,17,673,15,"apiClient"],[629,26,673,24],[630,0,673,25],[630,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnCgE;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CG;G3C4C;Y4CE;G5CM;c6CG;kDCM,yCD;uCEW,yCF;G7CQ;YgDG;oDCM,yCD;GhD0B;uBkDG;oDDM,yCC;iDCkB,6BD;GlD2C;oBoDG;qBCQ,qFD;GpDQ;csDK,sCtD;SuDE;MvDG;YwDE;MxDG;mByDE,oCzD;iB0DK;G1De"},"hasCjsExports":false},"type":"js/module"}]}