{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays\n      });\n      console.log('✅ Competition created and logged! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":483,"map":[[27,2,510,0,"Object"],[27,8,510,0],[27,9,510,0,"defineProperty"],[27,23,510,0],[27,24,510,0,"exports"],[27,31,510,0],[28,4,510,0,"enumerable"],[28,14,510,0],[29,4,510,0,"get"],[29,7,510,0],[29,18,510,0,"get"],[29,19,510,0],[30,6,510,0],[30,13,510,0,"_default"],[30,21,510,0],[31,4,510,0],[32,2,510,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,494,0,"Object"],[45,8,494,0],[45,9,494,0,"defineProperty"],[45,23,494,0],[45,24,494,0,"exports"],[45,31,494,0],[46,4,494,0,"enumerable"],[46,14,494,0],[47,4,494,0,"get"],[47,7,494,0],[47,18,494,0,"get"],[47,19,494,0],[48,6,494,0],[48,13,494,0,"walletAPI"],[48,22,494,0],[49,4,494,0],[50,2,494,0],[51,2,508,2],[51,6,508,2,"_expoVirtualEnv"],[51,21,508,2],[51,24,508,2,"require"],[51,31,508,2],[51,32,508,2,"_dependencyMap"],[51,46,508,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,172,45,154],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,0],[182,8,156,6,"logAdminAction"],[182,22,156,20],[182,25,156,23],[182,31,156,23,"logAdminAction"],[182,32,156,30,"action"],[182,38,156,44],[182,40,156,46,"competitionName"],[182,55,156,69],[182,57,156,71,"adminName"],[182,66,156,88],[182,68,156,90,"details"],[182,75,156,103],[182,80,156,108],[183,4,157,2],[183,8,157,6],[184,6,158,4],[184,12,158,10,"logs"],[184,16,158,14],[184,19,158,17],[184,26,158,23,"CrossPlatformStorage"],[184,46,158,43],[184,47,158,44,"getItem"],[184,54,158,51],[184,55,158,52],[184,66,158,63],[184,67,158,64],[184,72,158,68],[184,76,158,72],[185,6,159,4],[185,12,159,10,"adminLogs"],[185,21,159,19],[185,24,159,22,"JSON"],[185,28,159,26],[185,29,159,27,"parse"],[185,34,159,32],[185,35,159,33,"logs"],[185,39,159,37],[185,40,159,38],[186,6,161,4],[186,12,161,10,"logEntry"],[186,20,161,18],[186,23,161,21],[187,8,162,6,"id"],[187,10,162,8],[187,12,162,10],[187,19,162,17,"Date"],[187,23,162,21],[187,24,162,22,"now"],[187,27,162,25],[187,28,162,26],[187,29,162,27],[187,31,162,29],[188,8,163,6,"action"],[188,14,163,12],[189,8,164,6,"competition_name"],[189,24,164,22],[189,26,164,24,"competitionName"],[189,41,164,39],[190,8,165,6,"admin_name"],[190,18,165,16],[190,20,165,18,"adminName"],[190,29,165,27],[191,8,166,6,"details"],[191,15,166,13],[192,8,167,6,"timestamp"],[192,17,167,15],[192,19,167,17],[192,23,167,21,"Date"],[192,27,167,25],[192,28,167,26],[192,29,167,27],[192,30,167,28,"toISOString"],[192,41,167,39],[192,42,167,40],[193,6,168,4],[193,7,168,5],[194,6,170,4,"adminLogs"],[194,15,170,13],[194,16,170,14,"push"],[194,20,170,18],[194,21,170,19,"logEntry"],[194,29,170,27],[194,30,170,28],[195,6,171,4],[195,12,171,10,"CrossPlatformStorage"],[195,32,171,30],[195,33,171,31,"setItem"],[195,40,171,38],[195,41,171,39],[195,52,171,50],[195,54,171,52,"JSON"],[195,58,171,56],[195,59,171,57,"stringify"],[195,68,171,66],[195,69,171,67,"adminLogs"],[195,78,171,76],[195,79,171,77],[195,80,171,78],[196,6,173,4,"console"],[196,13,173,11],[196,14,173,12,"log"],[196,17,173,15],[196,18,173,16],[196,43,173,41],[196,45,173,43,"action"],[196,51,173,49],[196,53,173,51,"competitionName"],[196,68,173,66],[196,69,173,67],[197,4,174,2],[197,5,174,3],[197,6,174,4],[197,13,174,11,"error"],[197,18,174,16],[197,20,174,18],[198,6,175,4,"console"],[198,13,175,11],[198,14,175,12,"error"],[198,19,175,17],[198,20,175,18],[198,49,175,47],[198,51,175,49,"error"],[198,56,175,54],[198,57,175,55],[199,4,176,2],[200,2,177,0],[200,3,177,1],[202,2,179,0],[203,2,180,7],[203,8,180,13,"competitionAPI"],[203,22,180,27],[203,25,180,30],[204,4,181,2,"create"],[204,10,181,8],[204,12,181,11,"data"],[204,16,188,3],[204,20,188,8,"apiClient"],[204,29,188,17],[204,30,188,18,"post"],[204,34,188,22],[204,35,188,23],[204,50,188,38],[204,52,188,40,"data"],[204,56,188,44],[204,57,188,45],[205,4,190,2,"join"],[205,8,190,6],[205,10,190,9,"inviteCode"],[205,20,190,27],[205,24,191,4,"apiClient"],[205,33,191,13],[205,34,191,14,"post"],[205,38,191,18],[205,39,191,19],[205,59,191,39],[205,61,191,41],[206,6,191,43,"invite_code"],[206,17,191,54],[206,19,191,56,"inviteCode"],[207,4,191,67],[207,5,191,68],[207,6,191,69],[208,4,193,2,"getMyCompetitions"],[208,21,193,19],[208,23,193,21,"getMyCompetitions"],[208,24,193,21],[208,29,193,27,"apiClient"],[208,38,193,36],[208,39,193,37,"get"],[208,42,193,40],[208,43,193,41],[208,61,193,59],[208,62,193,60],[209,4,195,2,"getCompetition"],[209,18,195,16],[209,20,195,19,"id"],[209,22,195,29],[209,26,195,34,"apiClient"],[209,35,195,43],[209,36,195,44,"get"],[209,39,195,47],[209,40,195,48],[209,57,195,65,"id"],[209,59,195,67],[209,61,195,69],[209,62,195,70],[210,4,197,2,"updateStandings"],[210,19,197,17],[210,21,197,19,"updateStandings"],[210,22,198,4,"id"],[210,24,198,14],[210,26,199,4,"standings"],[210,35,199,18],[210,37,200,4,"matchday"],[210,45,200,21],[210,50,202,4,"apiClient"],[210,59,202,13],[210,60,202,14,"patch"],[210,65,202,19],[210,66,202,20],[210,83,202,37,"id"],[210,85,202,39],[210,97,202,51],[210,99,202,53],[211,6,203,6,"standings"],[211,15,203,15],[212,6,204,6,"matchday"],[213,4,205,4],[213,5,205,5],[213,6,205,6],[214,4,207,2,"payFee"],[214,10,207,8],[214,12,207,10,"payFee"],[214,13,207,11,"id"],[214,15,207,21],[214,17,207,23,"amount"],[214,23,207,37],[214,28,208,4,"apiClient"],[214,37,208,13],[214,38,208,14,"post"],[214,42,208,18],[214,43,208,19],[214,60,208,36,"id"],[214,62,208,38],[214,68,208,44],[214,70,208,46],[214,74,208,50],[214,76,208,52],[215,6,209,6,"params"],[215,12,209,12],[215,14,209,14],[216,8,209,16,"amount"],[217,6,209,23],[218,4,210,4],[218,5,210,5],[218,6,210,6],[219,4,212,2,"getTransactions"],[219,19,212,17],[219,21,212,20,"id"],[219,23,212,30],[219,27,213,4,"apiClient"],[219,36,213,13],[219,37,213,14,"get"],[219,40,213,17],[219,41,213,18],[219,58,213,35,"id"],[219,60,213,37],[219,75,213,52],[219,76,213,53],[220,4,215,2],[221,4,216,2,"createMock"],[221,14,216,12],[221,16,216,14],[221,22,216,21,"data"],[221,26,224,3],[221,30,224,8],[222,6,225,4,"console"],[222,13,225,11],[222,14,225,12,"log"],[222,17,225,15],[222,18,225,16],[222,50,225,48],[222,52,225,50,"data"],[222,56,225,54],[222,57,225,55,"name"],[222,61,225,59],[222,62,225,60],[223,6,226,4,"console"],[223,13,226,11],[223,14,226,12,"log"],[223,17,226,15],[223,18,226,16],[223,39,226,37],[223,41,226,39,"data"],[223,45,226,43],[223,46,226,44,"total_matchdays"],[223,61,226,59],[223,65,226,63],[223,67,226,65],[223,68,226,66],[225,6,228,4],[226,6,229,4],[226,12,229,10,"storedCompetitions"],[226,30,229,28],[226,33,229,31],[226,39,229,37,"CrossPlatformStorage"],[226,59,229,57],[226,60,229,58,"getItem"],[226,67,229,65],[226,68,229,66],[226,86,229,84],[226,87,229,85],[227,6,230,4],[227,10,230,8,"existingCompetitions"],[227,30,230,28],[227,33,230,31,"storedCompetitions"],[227,51,230,49],[227,54,230,52,"JSON"],[227,58,230,56],[227,59,230,57,"parse"],[227,64,230,62],[227,65,230,63,"storedCompetitions"],[227,83,230,81],[227,84,230,82],[227,87,230,85],[227,89,230,87],[228,6,232,4,"console"],[228,13,232,11],[228,14,232,12,"log"],[228,17,232,15],[228,18,232,16],[228,60,232,58],[228,62,232,60,"existingCompetitions"],[228,82,232,80],[228,83,232,81,"length"],[228,89,232,87],[228,90,232,88],[230,6,234,4],[231,6,235,4],[231,12,235,10,"existingNames"],[231,25,235,23],[231,28,235,26,"existingCompetitions"],[231,48,235,46],[231,49,235,47,"map"],[231,52,235,50],[231,53,235,52,"comp"],[231,57,235,61],[231,61,235,66,"comp"],[231,65,235,70],[231,66,235,71,"name"],[231,70,235,75],[231,71,235,76,"toLowerCase"],[231,82,235,87],[231,83,235,88],[231,84,235,89],[231,85,235,90],[232,6,236,4],[232,10,236,8,"existingNames"],[232,23,236,21],[232,24,236,22,"includes"],[232,32,236,30],[232,33,236,31,"data"],[232,37,236,35],[232,38,236,36,"name"],[232,42,236,40],[232,43,236,41,"toLowerCase"],[232,54,236,52],[232,55,236,53],[232,56,236,54],[232,57,236,55],[232,59,236,57],[233,8,237,6],[233,14,237,12],[233,18,237,16,"Error"],[233,23,237,21],[233,24,237,22],[233,86,237,84],[233,87,237,85],[234,6,238,4],[236,6,240,4],[237,6,241,4],[237,12,241,10,"newCompetition"],[237,26,241,24],[237,29,241,27],[238,8,242,6,"_id"],[238,11,242,9],[238,13,242,11],[238,21,242,19,"Date"],[238,25,242,23],[238,26,242,24,"now"],[238,29,242,27],[238,30,242,28],[238,31,242,29],[238,33,242,31],[239,8,243,6,"name"],[239,12,243,10],[239,14,243,12,"data"],[239,18,243,16],[239,19,243,17,"name"],[239,23,243,21],[240,8,244,6,"total_matchdays"],[240,23,244,21],[240,25,244,23,"data"],[240,29,244,27],[240,30,244,28,"total_matchdays"],[240,45,244,43],[240,49,244,47],[240,51,244,49],[241,8,245,6,"rules"],[241,13,245,11],[241,15,245,13,"data"],[241,19,245,17],[241,20,245,18,"rules"],[241,25,245,23],[242,8,246,6,"invite_code"],[242,19,246,17],[242,21,246,19,"Math"],[242,25,246,23],[242,26,246,24,"random"],[242,32,246,30],[242,33,246,31],[242,34,246,32],[242,35,246,33,"toString"],[242,43,246,41],[242,44,246,42],[242,46,246,44],[242,47,246,45],[242,48,246,46,"substr"],[242,54,246,52],[242,55,246,53],[242,56,246,54],[242,58,246,56],[242,59,246,57],[242,60,246,58],[242,61,246,59,"toUpperCase"],[242,72,246,70],[242,73,246,71],[242,74,246,72],[243,8,247,6,"invite_link"],[243,19,247,17],[243,21,247,19],[243,50,247,48,"Math"],[243,54,247,52],[243,55,247,53,"random"],[243,61,247,59],[243,62,247,60],[243,63,247,61],[243,64,247,62,"toString"],[243,72,247,70],[243,73,247,71],[243,75,247,73],[243,76,247,74],[243,77,247,75,"substr"],[243,83,247,81],[243,84,247,82],[243,85,247,83],[243,87,247,85],[243,88,247,86],[243,89,247,87],[243,90,247,88,"toUpperCase"],[243,101,247,99],[243,102,247,100],[243,103,247,101],[243,105,247,103],[244,8,248,6,"admin_id"],[244,16,248,14],[244,18,248,16],[244,44,248,42],[245,8,248,44],[246,8,249,6,"participants"],[246,20,249,18],[246,22,249,20],[246,23,250,8],[247,10,251,10,"id"],[247,12,251,12],[247,14,251,14],[247,40,251,40],[248,10,252,10,"name"],[248,14,252,14],[248,16,252,16],[248,33,252,33],[249,10,253,10,"email"],[249,15,253,15],[249,17,253,17],[249,36,253,36],[250,10,254,10,"is_admin"],[250,18,254,18],[250,20,254,20],[250,24,254,24],[251,10,255,10,"paid_matchdays"],[251,24,255,24],[251,26,255,26],[251,27,255,27],[251,28,255,28],[251,30,255,30],[251,31,255,31],[251,32,255,32],[252,10,255,34],[253,10,256,10,"points"],[253,16,256,16],[253,18,256,18],[254,8,257,8],[254,9,257,9],[254,10,258,7],[255,8,259,6,"wallet_balance"],[255,22,259,20],[255,24,259,22],[255,25,259,23],[256,8,260,6,"is_active"],[256,17,260,15],[256,19,260,17],[256,23,260,21],[257,8,261,6,"current_matchday"],[257,24,261,22],[257,26,261,24],[257,27,261,25],[258,8,261,27],[259,8,262,6,"standings"],[259,17,262,15],[259,19,262,17],[259,20,263,8],[260,10,263,10,"position"],[260,18,263,18],[260,20,263,20],[260,21,263,21],[261,10,263,23,"player_id"],[261,19,263,32],[261,21,263,34],[261,47,263,60],[262,10,263,62,"name"],[262,14,263,66],[262,16,263,68],[262,33,263,85],[263,10,263,87,"points"],[263,16,263,93],[263,18,263,95],[264,8,263,97],[264,9,263,98],[264,10,264,7],[265,8,265,6,"created_at"],[265,18,265,16],[265,20,265,18],[265,24,265,22,"Date"],[265,28,265,26],[265,29,265,27],[265,30,265,28],[265,31,265,29,"toISOString"],[265,42,265,40],[265,43,265,41],[265,44,265,42],[266,8,266,6,"updated_at"],[266,18,266,16],[266,20,266,18],[266,24,266,22,"Date"],[266,28,266,26],[266,29,266,27],[266,30,266,28],[266,31,266,29,"toISOString"],[266,42,266,40],[266,43,266,41],[267,6,267,4],[267,7,267,5],[269,6,269,4],[270,6,270,4,"existingCompetitions"],[270,26,270,24],[270,27,270,25,"push"],[270,31,270,29],[270,32,270,30,"newCompetition"],[270,46,270,44],[270,47,270,45],[271,6,271,4],[271,12,271,10,"CrossPlatformStorage"],[271,32,271,30],[271,33,271,31,"setItem"],[271,40,271,38],[271,41,271,39],[271,59,271,57],[271,61,271,59,"JSON"],[271,65,271,63],[271,66,271,64,"stringify"],[271,75,271,73],[271,76,271,74,"existingCompetitions"],[271,96,271,94],[271,97,271,95],[271,98,271,96],[273,6,273,4],[274,6,274,4],[274,12,274,10,"logAdminAction"],[274,26,274,24],[274,27,274,25],[274,35,274,33],[274,37,274,35,"newCompetition"],[274,51,274,49],[274,52,274,50,"name"],[274,56,274,54],[274,58,274,56],[274,75,274,73],[274,77,274,75],[275,8,275,6,"competition_id"],[275,22,275,20],[275,24,275,22,"newCompetition"],[275,38,275,36],[275,39,275,37,"_id"],[275,42,275,40],[276,8,276,6,"rules"],[276,13,276,11],[276,15,276,13,"newCompetition"],[276,29,276,27],[276,30,276,28,"rules"],[276,35,276,33],[277,8,277,6,"total_matchdays"],[277,23,277,21],[277,25,277,23,"newCompetition"],[277,39,277,37],[277,40,277,38,"total_matchdays"],[278,6,278,4],[278,7,278,5],[278,8,278,6],[279,6,280,4,"console"],[279,13,280,11],[279,14,280,12,"log"],[279,17,280,15],[279,18,280,16],[279,64,280,62],[279,66,280,64,"existingCompetitions"],[279,86,280,84],[279,87,280,85,"length"],[279,93,280,91],[279,94,280,92],[280,6,281,4,"console"],[280,13,281,11],[280,14,281,12,"log"],[280,17,281,15],[280,18,281,16],[280,38,281,36],[280,40,281,38,"newCompetition"],[280,54,281,52],[280,55,281,53,"_id"],[280,58,281,56],[280,59,281,57],[281,6,282,4,"console"],[281,13,282,11],[281,14,282,12,"log"],[281,17,282,15],[281,18,282,16],[281,40,282,38],[281,42,282,40,"newCompetition"],[281,56,282,54],[281,57,282,55,"name"],[281,61,282,59],[281,62,282,60],[282,6,283,4,"console"],[282,13,283,11],[282,14,283,12,"log"],[282,17,283,15],[282,18,283,16],[282,44,283,42],[282,46,283,44,"newCompetition"],[282,60,283,58],[282,61,283,59,"total_matchdays"],[282,76,283,74],[282,77,283,75],[283,6,285,4],[283,13,285,11,"newCompetition"],[283,27,285,25],[284,4,286,2],[284,5,286,3],[285,4,288,2],[286,4,289,2,"validateNameMock"],[286,20,289,18],[286,22,289,20],[286,28,289,27,"name"],[286,32,289,39],[286,36,289,44],[287,6,290,4,"console"],[287,13,290,11],[287,14,290,12,"log"],[287,17,290,15],[287,18,290,16],[287,57,290,55],[287,59,290,57,"name"],[287,63,290,61],[287,64,290,62],[288,6,292,4],[288,10,292,8],[288,11,292,9,"name"],[288,15,292,13],[288,16,292,14,"trim"],[288,20,292,18],[288,21,292,19],[288,22,292,20],[288,24,292,22],[289,8,293,6],[289,15,293,13],[290,10,293,15,"available"],[290,19,293,24],[290,21,293,26],[290,25,293,30],[291,10,293,32,"message"],[291,17,293,39],[291,19,293,41],[292,8,293,44],[292,9,293,45],[293,6,294,4],[295,6,296,4],[296,6,297,4],[296,12,297,10,"storedCompetitions"],[296,30,297,28],[296,33,297,31],[296,39,297,37,"CrossPlatformStorage"],[296,59,297,57],[296,60,297,58,"getItem"],[296,67,297,65],[296,68,297,66],[296,86,297,84],[296,87,297,85],[297,6,298,4],[297,10,298,8,"existingCompetitions"],[297,30,298,28],[297,33,298,31,"storedCompetitions"],[297,51,298,49],[297,54,298,52,"JSON"],[297,58,298,56],[297,59,298,57,"parse"],[297,64,298,62],[297,65,298,63,"storedCompetitions"],[297,83,298,81],[297,84,298,82],[297,87,298,85],[297,89,298,87],[299,6,300,4],[300,6,301,4],[300,12,301,10,"defaultNames"],[300,24,301,22],[300,27,301,25],[300,28,301,26],[300,50,301,48],[300,52,301,50],[300,78,301,76],[300,80,301,78],[300,96,301,94],[300,97,301,95],[301,6,302,4],[301,12,302,10,"allNames"],[301,20,302,18],[301,23,302,21],[301,24,303,6],[301,27,303,9,"existingCompetitions"],[301,47,303,29],[301,48,303,30,"map"],[301,51,303,33],[301,52,303,35,"comp"],[301,56,303,44],[301,60,303,49,"comp"],[301,64,303,53],[301,65,303,54,"name"],[301,69,303,58],[301,70,303,59,"toLowerCase"],[301,81,303,70],[301,82,303,71],[301,83,303,72],[301,84,303,73],[301,86,304,6],[301,89,304,9,"defaultNames"],[301,101,304,21],[301,102,304,22,"map"],[301,105,304,25],[301,106,304,26,"name"],[301,110,304,30],[301,114,304,34,"name"],[301,118,304,38],[301,119,304,39,"toLowerCase"],[301,130,304,50],[301,131,304,51],[301,132,304,52],[301,133,304,53],[301,134,305,5],[302,6,307,4],[302,12,307,10,"isAvailable"],[302,23,307,21],[302,26,307,24],[302,27,307,25,"allNames"],[302,35,307,33],[302,36,307,34,"includes"],[302,44,307,42],[302,45,307,43,"name"],[302,49,307,47],[302,50,307,48,"toLowerCase"],[302,61,307,59],[302,62,307,60],[302,63,307,61],[302,64,307,62],[303,6,309,4],[303,13,309,11],[304,8,310,6,"available"],[304,17,310,15],[304,19,310,17,"isAvailable"],[304,30,310,28],[305,8,311,6,"message"],[305,15,311,13],[305,17,311,15,"isAvailable"],[305,28,311,26],[305,31,311,29],[305,47,311,45],[305,50,311,48],[306,6,312,4],[306,7,312,5],[307,4,313,2],[307,5,313,3],[308,4,315,2,"getMyCompetitionsMock"],[308,25,315,23],[308,27,315,25],[308,33,315,25,"getMyCompetitionsMock"],[308,34,315,25],[308,39,315,37],[309,6,316,4,"console"],[309,13,316,11],[309,14,316,12,"log"],[309,17,316,15],[309,18,316,16],[309,52,316,50],[309,53,316,51],[311,6,318,4],[312,6,319,4],[312,12,319,10,"storedCompetitions"],[312,30,319,28],[312,33,319,31],[312,39,319,37,"CrossPlatformStorage"],[312,59,319,57],[312,60,319,58,"getItem"],[312,67,319,65],[312,68,319,66],[312,86,319,84],[312,87,319,85],[313,6,320,4],[313,10,320,8,"competitions"],[313,22,320,20],[313,25,320,23,"storedCompetitions"],[313,43,320,41],[313,46,320,44,"JSON"],[313,50,320,48],[313,51,320,49,"parse"],[313,56,320,54],[313,57,320,55,"storedCompetitions"],[313,75,320,73],[313,76,320,74],[313,79,320,77],[313,81,320,79],[314,6,322,4,"console"],[314,13,322,11],[314,14,322,12,"log"],[314,17,322,15],[314,18,322,16],[314,53,322,51],[314,55,322,53,"competitions"],[314,67,322,65],[314,68,322,66,"length"],[314,74,322,72],[314,75,322,73],[316,6,324,4],[317,6,325,4,"competitions"],[317,18,325,16],[317,19,325,17,"forEach"],[317,26,325,24],[317,27,325,25],[317,28,325,26,"comp"],[317,32,325,35],[317,34,325,37,"index"],[317,39,325,50],[317,44,325,55],[318,8,326,6,"console"],[318,15,326,13],[318,16,326,14,"log"],[318,19,326,17],[318,20,326,18],[318,23,326,21,"index"],[318,28,326,26],[318,31,326,29],[318,32,326,30],[318,37,326,35,"comp"],[318,41,326,39],[318,42,326,40,"name"],[318,46,326,44],[318,55,326,53,"comp"],[318,59,326,57],[318,60,326,58,"_id"],[318,63,326,61],[318,66,326,64],[318,67,326,65],[319,6,327,4],[319,7,327,5],[319,8,327,6],[320,6,329,4],[320,13,329,11,"competitions"],[320,25,329,23],[321,4,330,2],[321,5,330,3],[322,4,332,2,"joinMock"],[322,12,332,10],[322,14,332,12],[322,20,332,19,"inviteCode"],[322,30,332,37],[322,34,332,42],[323,6,333,4,"console"],[323,13,333,11],[323,14,333,12,"log"],[323,17,333,15],[323,18,333,16],[323,59,333,57],[323,61,333,59,"inviteCode"],[323,71,333,69],[323,72,333,70],[324,6,334,4],[324,10,334,8,"inviteCode"],[324,20,334,18],[324,21,334,19,"length"],[324,27,334,25],[324,30,334,28],[324,31,334,29],[324,33,334,31],[325,8,335,6],[325,14,335,12],[325,18,335,16,"Error"],[325,23,335,21],[325,24,335,22],[325,45,335,43],[325,46,335,44],[326,6,336,4],[327,6,337,4],[327,13,337,11],[328,8,337,13,"message"],[328,15,337,20],[328,17,337,22],[329,6,337,57],[329,7,337,58],[330,4,338,2],[330,5,338,3],[331,4,340,2],[332,4,341,2,"deleteMock"],[332,14,341,12],[332,16,341,14],[332,22,341,21,"competitionId"],[332,35,341,42],[332,39,341,47],[333,6,342,4,"console"],[333,13,342,11],[333,14,342,12,"log"],[333,17,342,15],[333,18,342,16],[333,51,342,49],[333,53,342,51,"competitionId"],[333,66,342,64],[333,67,342,65],[334,6,344,4],[334,12,344,10,"storedCompetitions"],[334,30,344,28],[334,33,344,31],[334,39,344,37,"CrossPlatformStorage"],[334,59,344,57],[334,60,344,58,"getItem"],[334,67,344,65],[334,68,344,66],[334,86,344,84],[334,87,344,85],[335,6,345,4],[335,10,345,8,"competitions"],[335,22,345,20],[335,25,345,23,"storedCompetitions"],[335,43,345,41],[335,46,345,44,"JSON"],[335,50,345,48],[335,51,345,49,"parse"],[335,56,345,54],[335,57,345,55,"storedCompetitions"],[335,75,345,73],[335,76,345,74],[335,79,345,77],[335,81,345,79],[336,6,347,4],[336,12,347,10,"competitionToDelete"],[336,31,347,29],[336,34,347,32,"competitions"],[336,46,347,44],[336,47,347,45,"find"],[336,51,347,49],[336,52,347,51,"comp"],[336,56,347,60],[336,60,347,65,"comp"],[336,64,347,69],[336,65,347,70,"_id"],[336,68,347,73],[336,73,347,78,"competitionId"],[336,86,347,91],[336,87,347,92],[337,6,348,4],[337,10,348,8],[337,11,348,9,"competitionToDelete"],[337,30,348,28],[337,32,348,30],[338,8,349,6],[338,14,349,12],[338,18,349,16,"Error"],[338,23,349,21],[338,24,349,22],[338,47,349,45],[338,48,349,46],[339,6,350,4],[341,6,352,4],[342,6,353,4],[342,10,353,8,"competitionToDelete"],[342,29,353,27],[342,30,353,28,"admin_id"],[342,38,353,36],[342,43,353,41],[342,69,353,67],[342,71,353,69],[343,8,354,6],[343,14,354,12],[343,18,354,16,"Error"],[343,23,354,21],[343,24,354,22],[343,64,354,62],[343,65,354,63],[344,6,355,4],[346,6,357,4],[347,6,358,4,"competitions"],[347,18,358,16],[347,21,358,19,"competitions"],[347,33,358,31],[347,34,358,32,"filter"],[347,40,358,38],[347,41,358,40,"comp"],[347,45,358,49],[347,49,358,54,"comp"],[347,53,358,58],[347,54,358,59,"_id"],[347,57,358,62],[347,62,358,67,"competitionId"],[347,75,358,80],[347,76,358,81],[348,6,359,4],[348,12,359,10,"CrossPlatformStorage"],[348,32,359,30],[348,33,359,31,"setItem"],[348,40,359,38],[348,41,359,39],[348,59,359,57],[348,61,359,59,"JSON"],[348,65,359,63],[348,66,359,64,"stringify"],[348,75,359,73],[348,76,359,74,"competitions"],[348,88,359,86],[348,89,359,87],[348,90,359,88],[350,6,361,4],[351,6,362,4],[351,12,362,10,"logAdminAction"],[351,26,362,24],[351,27,362,25],[351,35,362,33],[351,37,362,35,"competitionToDelete"],[351,56,362,54],[351,57,362,55,"name"],[351,61,362,59],[351,63,362,61],[351,80,362,78],[351,81,362,79],[352,6,364,4,"console"],[352,13,364,11],[352,14,364,12,"log"],[352,17,364,15],[352,18,364,16],[352,54,364,52],[352,55,364,53],[353,6,365,4],[353,13,365,11],[354,8,365,13,"message"],[354,15,365,20],[354,17,365,22],[355,6,365,57],[355,7,365,58],[356,4,366,2],[356,5,366,3],[357,4,368,2],[358,4,369,2,"editMock"],[358,12,369,10],[358,14,369,12],[358,20,369,12,"editMock"],[358,21,369,19,"competitionId"],[358,34,369,40],[358,36,369,42,"updates"],[358,43,369,54],[358,48,369,59],[359,6,370,4,"console"],[359,13,370,11],[359,14,370,12,"log"],[359,17,370,15],[359,18,370,16],[359,49,370,47],[359,51,370,49,"competitionId"],[359,64,370,62],[359,66,370,64,"updates"],[359,73,370,71],[359,74,370,72],[360,6,372,4],[360,12,372,10,"storedCompetitions"],[360,30,372,28],[360,33,372,31],[360,39,372,37,"CrossPlatformStorage"],[360,59,372,57],[360,60,372,58,"getItem"],[360,67,372,65],[360,68,372,66],[360,86,372,84],[360,87,372,85],[361,6,373,4],[361,10,373,8,"competitions"],[361,22,373,20],[361,25,373,23,"storedCompetitions"],[361,43,373,41],[361,46,373,44,"JSON"],[361,50,373,48],[361,51,373,49,"parse"],[361,56,373,54],[361,57,373,55,"storedCompetitions"],[361,75,373,73],[361,76,373,74],[361,79,373,77],[361,81,373,79],[362,6,375,4],[362,12,375,10,"competitionIndex"],[362,28,375,26],[362,31,375,29,"competitions"],[362,43,375,41],[362,44,375,42,"findIndex"],[362,53,375,51],[362,54,375,53,"comp"],[362,58,375,62],[362,62,375,67,"comp"],[362,66,375,71],[362,67,375,72,"_id"],[362,70,375,75],[362,75,375,80,"competitionId"],[362,88,375,93],[362,89,375,94],[363,6,376,4],[363,10,376,8,"competitionIndex"],[363,26,376,24],[363,31,376,29],[363,32,376,30],[363,33,376,31],[363,35,376,33],[364,8,377,6],[364,14,377,12],[364,18,377,16,"Error"],[364,23,377,21],[364,24,377,22],[364,47,377,45],[364,48,377,46],[365,6,378,4],[366,6,380,4],[366,12,380,10,"competition"],[366,23,380,21],[366,26,380,24,"competitions"],[366,38,380,36],[366,39,380,37,"competitionIndex"],[366,55,380,53],[366,56,380,54],[368,6,382,4],[369,6,383,4],[369,10,383,8,"competition"],[369,21,383,19],[369,22,383,20,"admin_id"],[369,30,383,28],[369,35,383,33],[369,61,383,59],[369,63,383,61],[370,8,384,6],[370,14,384,12],[370,18,384,16,"Error"],[370,23,384,21],[370,24,384,22],[370,62,384,60],[370,63,384,61],[371,6,385,4],[373,6,387,4],[374,6,388,4,"competitions"],[374,18,388,16],[374,19,388,17,"competitionIndex"],[374,35,388,33],[374,36,388,34],[374,39,388,37],[375,8,389,6],[375,11,389,9,"competition"],[375,22,389,20],[376,8,390,6],[376,11,390,9,"updates"],[376,18,390,16],[377,8,391,6,"updated_at"],[377,18,391,16],[377,20,391,18],[377,24,391,22,"Date"],[377,28,391,26],[377,29,391,27],[377,30,391,28],[377,31,391,29,"toISOString"],[377,42,391,40],[377,43,391,41],[378,6,392,4],[378,7,392,5],[379,6,394,4],[379,12,394,10,"CrossPlatformStorage"],[379,32,394,30],[379,33,394,31,"setItem"],[379,40,394,38],[379,41,394,39],[379,59,394,57],[379,61,394,59,"JSON"],[379,65,394,63],[379,66,394,64,"stringify"],[379,75,394,73],[379,76,394,74,"competitions"],[379,88,394,86],[379,89,394,87],[379,90,394,88],[381,6,396,4],[382,6,397,4],[382,12,397,10,"logAdminAction"],[382,26,397,24],[382,27,397,25],[382,33,397,31],[382,35,397,33,"competition"],[382,46,397,44],[382,47,397,45,"name"],[382,51,397,49],[382,53,397,51],[382,70,397,68],[382,72,397,70,"updates"],[382,79,397,77],[382,80,397,78],[383,6,399,4,"console"],[383,13,399,11],[383,14,399,12,"log"],[383,17,399,15],[383,18,399,16],[383,54,399,52],[383,55,399,53],[384,6,400,4],[384,13,400,11,"competitions"],[384,25,400,23],[384,26,400,24,"competitionIndex"],[384,42,400,40],[384,43,400,41],[385,4,401,2],[385,5,401,3],[386,4,403,2],[387,4,404,2,"awardDailyPrizeMock"],[387,23,404,21],[387,25,404,23],[387,31,404,23,"awardDailyPrizeMock"],[387,32,404,30,"competitionId"],[387,45,404,51],[387,47,404,53,"matchday"],[387,55,404,69],[387,57,404,71,"winnerId"],[387,65,404,87],[387,70,404,92],[388,6,405,4,"console"],[388,13,405,11],[388,14,405,12,"log"],[388,17,405,15],[388,18,405,16],[388,62,405,60],[388,64,405,62,"matchday"],[388,72,405,70],[388,74,405,72],[388,83,405,81],[388,85,405,83,"winnerId"],[388,93,405,91],[388,94,405,92],[389,6,407,4],[389,12,407,10,"storedCompetitions"],[389,30,407,28],[389,33,407,31],[389,39,407,37,"CrossPlatformStorage"],[389,59,407,57],[389,60,407,58,"getItem"],[389,67,407,65],[389,68,407,66],[389,86,407,84],[389,87,407,85],[390,6,408,4],[390,10,408,8,"competitions"],[390,22,408,20],[390,25,408,23,"storedCompetitions"],[390,43,408,41],[390,46,408,44,"JSON"],[390,50,408,48],[390,51,408,49,"parse"],[390,56,408,54],[390,57,408,55,"storedCompetitions"],[390,75,408,73],[390,76,408,74],[390,79,408,77],[390,81,408,79],[391,6,410,4],[391,12,410,10,"competitionIndex"],[391,28,410,26],[391,31,410,29,"competitions"],[391,43,410,41],[391,44,410,42,"findIndex"],[391,53,410,51],[391,54,410,53,"comp"],[391,58,410,62],[391,62,410,67,"comp"],[391,66,410,71],[391,67,410,72,"_id"],[391,70,410,75],[391,75,410,80,"competitionId"],[391,88,410,93],[391,89,410,94],[392,6,411,4],[392,10,411,8,"competitionIndex"],[392,26,411,24],[392,31,411,29],[392,32,411,30],[392,33,411,31],[392,35,411,33],[393,8,412,6],[393,14,412,12],[393,18,412,16,"Error"],[393,23,412,21],[393,24,412,22],[393,47,412,45],[393,48,412,46],[394,6,413,4],[395,6,415,4],[395,12,415,10,"competition"],[395,23,415,21],[395,26,415,24,"competitions"],[395,38,415,36],[395,39,415,37,"competitionIndex"],[395,55,415,53],[395,56,415,54],[397,6,417,4],[398,6,418,4],[398,10,418,8,"competition"],[398,21,418,19],[398,22,418,20,"admin_id"],[398,30,418,28],[398,35,418,33],[398,61,418,59],[398,63,418,61],[399,8,419,6],[399,14,419,12],[399,18,419,16,"Error"],[399,23,419,21],[399,24,419,22],[399,59,419,57],[399,60,419,58],[400,6,420,4],[402,6,422,4],[403,6,423,4],[403,10,423,8],[403,11,423,9,"competition"],[403,22,423,20],[403,23,423,21,"rules"],[403,28,423,26],[403,32,423,30],[403,33,423,31],[403,34,423,32],[403,41,423,39],[403,43,423,41],[403,50,423,48],[403,51,423,49],[403,52,423,50,"includes"],[403,60,423,58],[403,61,423,59,"competition"],[403,72,423,70],[403,73,423,71,"rules"],[403,78,423,76],[403,79,423,77,"type"],[403,83,423,81],[403,84,423,82],[403,86,423,84],[404,8,424,6],[404,14,424,12],[404,18,424,16,"Error"],[404,23,424,21],[404,24,424,22],[404,69,424,67],[404,70,424,68],[405,6,425,4],[406,6,427,4],[406,12,427,10,"dailyPrizeAmount"],[406,28,427,26],[406,31,427,29,"competition"],[406,42,427,40],[406,43,427,41,"rules"],[406,48,427,46],[406,49,427,47,"daily_prize"],[406,60,427,58],[406,64,427,62],[406,65,427,63],[407,6,428,4],[407,12,428,10,"winner"],[407,18,428,16],[407,21,428,19,"competition"],[407,32,428,30],[407,33,428,31,"participants"],[407,45,428,43],[407,46,428,44,"find"],[407,50,428,48],[407,51,428,50,"p"],[407,52,428,56],[407,56,428,61,"p"],[407,57,428,62],[407,58,428,63,"id"],[407,60,428,65],[407,65,428,70,"winnerId"],[407,73,428,78],[407,74,428,79],[408,6,430,4],[408,10,430,8],[408,11,430,9,"winner"],[408,17,430,15],[408,19,430,17],[409,8,431,6],[409,14,431,12],[409,18,431,16,"Error"],[409,23,431,21],[409,24,431,22],[409,57,431,55],[409,58,431,56],[410,6,432,4],[412,6,434,4],[413,6,435,4],[413,10,435,8],[413,11,435,9,"competition"],[413,22,435,20],[413,23,435,21,"daily_winners"],[413,36,435,34],[413,38,435,36],[414,8,436,6,"competition"],[414,19,436,17],[414,20,436,18,"daily_winners"],[414,33,436,31],[414,36,436,34],[414,37,436,35],[414,38,436,36],[415,6,437,4],[417,6,439,4],[418,6,440,4],[418,10,440,8,"competition"],[418,21,440,19],[418,22,440,20,"daily_winners"],[418,35,440,33],[418,36,440,34,"matchday"],[418,44,440,42],[418,45,440,43],[418,47,440,45],[419,8,441,6],[419,14,441,12],[419,18,441,16,"Error"],[419,23,441,21],[419,24,441,22],[419,52,441,50,"matchday"],[419,60,441,58],[419,83,441,81,"competition"],[419,94,441,92],[419,95,441,93,"daily_winners"],[419,108,441,106],[419,109,441,107,"matchday"],[419,117,441,115],[419,118,441,116],[419,119,441,117,"name"],[419,123,441,121],[419,125,441,123],[419,126,441,124],[420,6,442,4],[422,6,444,4],[423,6,445,4,"competition"],[423,17,445,15],[423,18,445,16,"daily_winners"],[423,31,445,29],[423,32,445,30,"matchday"],[423,40,445,38],[423,41,445,39],[423,44,445,42],[424,8,446,6,"user_id"],[424,15,446,13],[424,17,446,15,"winnerId"],[424,25,446,23],[425,8,447,6,"name"],[425,12,447,10],[425,14,447,12,"winner"],[425,20,447,18],[425,21,447,19,"name"],[425,25,447,23],[426,8,448,6,"amount"],[426,14,448,12],[426,16,448,14,"dailyPrizeAmount"],[426,32,448,30],[427,8,449,6,"awarded_at"],[427,18,449,16],[427,20,449,18],[427,24,449,22,"Date"],[427,28,449,26],[427,29,449,27],[427,30,449,28],[427,31,449,29,"toISOString"],[427,42,449,40],[427,43,449,41],[428,6,450,4],[428,7,450,5],[430,6,452,4],[431,6,453,4,"competitions"],[431,18,453,16],[431,19,453,17,"competitionIndex"],[431,35,453,33],[431,36,453,34],[431,39,453,37,"competition"],[431,50,453,48],[432,6,454,4],[432,12,454,10,"CrossPlatformStorage"],[432,32,454,30],[432,33,454,31,"setItem"],[432,40,454,38],[432,41,454,39],[432,59,454,57],[432,61,454,59,"JSON"],[432,65,454,63],[432,66,454,64,"stringify"],[432,75,454,73],[432,76,454,74,"competitions"],[432,88,454,86],[432,89,454,87],[432,90,454,88],[434,6,456,4],[435,6,457,4],[435,12,457,10,"logAdminAction"],[435,26,457,24],[435,27,457,25],[435,46,457,44],[435,48,457,46,"competition"],[435,59,457,57],[435,60,457,58,"name"],[435,64,457,62],[435,66,457,64],[435,83,457,81],[435,85,457,83],[436,8,458,6,"matchday"],[436,16,458,14],[437,8,459,6,"winner"],[437,14,459,12],[437,16,459,14,"winner"],[437,22,459,20],[437,23,459,21,"name"],[437,27,459,25],[438,8,460,6,"amount"],[438,14,460,12],[438,16,460,14,"dailyPrizeAmount"],[439,6,461,4],[439,7,461,5],[439,8,461,6],[441,6,463,4],[442,6,464,4,"console"],[442,13,464,11],[442,14,464,12,"log"],[442,17,464,15],[442,18,464,16],[442,24,464,22,"winner"],[442,30,464,28],[442,31,464,29,"name"],[442,35,464,33],[442,48,464,46,"dailyPrizeAmount"],[442,64,464,62],[442,89,464,87,"matchday"],[442,97,464,95],[442,99,464,97],[442,100,464,98],[443,6,466,4,"console"],[443,13,466,11],[443,14,466,12,"log"],[443,17,466,15],[443,18,466,16],[443,54,466,52],[443,55,466,53],[444,6,467,4],[444,13,467,11],[445,8,468,6,"message"],[445,15,468,13],[445,17,468,15],[445,36,468,34,"dailyPrizeAmount"],[445,52,468,50],[445,67,468,65,"winner"],[445,73,468,71],[445,74,468,72,"name"],[445,78,468,76],[445,95,468,93,"matchday"],[445,103,468,101],[445,105,468,103],[446,8,469,6,"competition"],[446,19,469,17],[446,21,469,19,"competition"],[447,6,470,4],[447,7,470,5],[448,4,471,2],[448,5,471,3],[449,4,473,2],[450,4,474,2,"getAdminLogsMock"],[450,20,474,18],[450,22,474,20],[450,28,474,20,"getAdminLogsMock"],[450,29,474,20],[450,34,474,32],[451,6,475,4,"console"],[451,13,475,11],[451,14,475,12,"log"],[451,17,475,15],[451,18,475,16],[451,47,475,45],[451,48,475,46],[452,6,477,4],[452,10,477,8],[453,8,478,6],[453,14,478,12,"logs"],[453,18,478,16],[453,21,478,19],[453,28,478,25,"CrossPlatformStorage"],[453,48,478,45],[453,49,478,46,"getItem"],[453,56,478,53],[453,57,478,54],[453,68,478,65],[453,69,478,66],[453,74,478,70],[453,78,478,74],[454,8,479,6],[454,14,479,12,"adminLogs"],[454,23,479,21],[454,26,479,24,"JSON"],[454,30,479,28],[454,31,479,29,"parse"],[454,36,479,34],[454,37,479,35,"logs"],[454,41,479,39],[454,42,479,40],[456,8,481,6],[457,8,482,6,"adminLogs"],[457,17,482,15],[457,18,482,16,"sort"],[457,22,482,20],[457,23,482,21],[457,24,482,22,"a"],[457,25,482,28],[457,27,482,30,"b"],[457,28,482,36],[457,33,482,41],[457,37,482,45,"Date"],[457,41,482,49],[457,42,482,50,"b"],[457,43,482,51],[457,44,482,52,"timestamp"],[457,53,482,61],[457,54,482,62],[457,55,482,63,"getTime"],[457,62,482,70],[457,63,482,71],[457,64,482,72],[457,67,482,75],[457,71,482,79,"Date"],[457,75,482,83],[457,76,482,84,"a"],[457,77,482,85],[457,78,482,86,"timestamp"],[457,87,482,95],[457,88,482,96],[457,89,482,97,"getTime"],[457,96,482,104],[457,97,482,105],[457,98,482,106],[457,99,482,107],[458,8,484,6,"console"],[458,15,484,13],[458,16,484,14,"log"],[458,19,484,17],[458,20,484,18],[458,42,484,40],[458,44,484,42,"adminLogs"],[458,53,484,51],[458,54,484,52,"length"],[458,60,484,58],[458,61,484,59],[459,8,485,6],[459,15,485,13,"adminLogs"],[459,24,485,22],[460,6,486,4],[460,7,486,5],[460,8,486,6],[460,15,486,13,"error"],[460,20,486,18],[460,22,486,20],[461,8,487,6,"console"],[461,15,487,13],[461,16,487,14,"error"],[461,21,487,19],[461,22,487,20],[461,52,487,50],[461,54,487,52,"error"],[461,59,487,57],[461,60,487,58],[462,8,488,6],[462,15,488,13],[462,17,488,15],[463,6,489,4],[464,4,490,2],[465,2,491,0],[465,3,491,1],[467,2,493,0],[468,2,494,7],[468,8,494,13,"walletAPI"],[468,17,494,22],[468,20,494,25],[469,4,495,2,"getBalance"],[469,14,495,12],[469,16,495,14,"getBalance"],[469,17,495,14],[469,22,495,20,"apiClient"],[469,31,495,29],[469,32,495,30,"get"],[469,35,495,33],[469,36,495,34],[469,53,495,51],[469,54,495,52],[470,4,497,2,"topUp"],[470,9,497,7],[470,11,497,10,"amount"],[470,17,497,24],[470,21,498,4,"apiClient"],[470,30,498,13],[470,31,498,14,"post"],[470,35,498,18],[470,36,498,19],[470,51,498,34],[470,53,498,36],[470,57,498,40],[470,59,498,42],[471,6,499,6,"params"],[471,12,499,12],[471,14,499,14],[472,8,499,16,"amount"],[473,6,499,23],[474,4,500,4],[474,5,500,5],[474,6,500,6],[475,4,502,2,"withdraw"],[475,12,502,10],[475,14,502,13,"amount"],[475,20,502,27],[475,24,503,4,"apiClient"],[475,33,503,13],[475,34,503,14,"post"],[475,38,503,18],[475,39,503,19],[475,57,503,37],[475,59,503,39],[475,63,503,43],[475,65,503,45],[476,6,504,6,"params"],[476,12,504,12],[476,14,504,14],[477,8,504,16,"amount"],[478,6,504,23],[479,4,505,4],[479,5,505,5],[479,6,505,6],[480,4,507,2,"getTransactions"],[480,19,507,17],[480,21,507,19,"getTransactions"],[480,22,507,19],[480,27,507,25,"apiClient"],[480,36,507,34],[480,37,507,35,"get"],[480,40,507,38],[480,41,507,39],[480,56,507,54],[481,2,508,0],[481,3,508,1],[482,2,510,0],[482,6,510,0,"_default"],[482,14,510,0],[482,17,510,15,"apiClient"],[482,26,510,24],[483,0,510,25],[483,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBO;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;cgCG;mDCmB,sCD;GhCmD;oBkCG;kCDc,sCC;0BCC,0BD;GlCS;yBoCE;yBCU;KDE;GpCG;YsCE;GtCM;cuCG;kDCM,yCD;uCEW,yCF;GvCQ;Y0CG;oDCM,yCD;G1C0B;uB4CG;oDDM,yCC;iDCkB,6BD;G5C2C;oB8CG;qBCQ,qFD;G9CQ;cgDK,sChD;SiDE;MjDG;YkDE;MlDG;mBmDE,oCnD"},"hasCjsExports":false},"type":"js/module"}]}