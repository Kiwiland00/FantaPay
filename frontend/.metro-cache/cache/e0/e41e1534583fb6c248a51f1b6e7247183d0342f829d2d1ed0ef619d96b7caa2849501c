{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool\n      });\n      console.log('✅ Competition created and logged! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":489,"map":[[27,2,524,0,"Object"],[27,8,524,0],[27,9,524,0,"defineProperty"],[27,23,524,0],[27,24,524,0,"exports"],[27,31,524,0],[28,4,524,0,"enumerable"],[28,14,524,0],[29,4,524,0,"get"],[29,7,524,0],[29,18,524,0,"get"],[29,19,524,0],[30,6,524,0],[30,13,524,0,"_default"],[30,21,524,0],[31,4,524,0],[32,2,524,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,508,0,"Object"],[45,8,508,0],[45,9,508,0,"defineProperty"],[45,23,508,0],[45,24,508,0,"exports"],[45,31,508,0],[46,4,508,0,"enumerable"],[46,14,508,0],[47,4,508,0,"get"],[47,7,508,0],[47,18,508,0,"get"],[47,19,508,0],[48,6,508,0],[48,13,508,0,"walletAPI"],[48,22,508,0],[49,4,508,0],[50,2,508,0],[51,2,522,2],[51,6,522,2,"_expoVirtualEnv"],[51,21,522,2],[51,24,522,2,"require"],[51,31,522,2],[51,32,522,2,"_dependencyMap"],[51,46,522,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,171,45,153],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,0],[182,8,156,6,"logAdminAction"],[182,22,156,20],[182,25,156,23],[182,31,156,23,"logAdminAction"],[182,32,156,30,"action"],[182,38,156,44],[182,40,156,46,"competitionName"],[182,55,156,69],[182,57,156,71,"adminName"],[182,66,156,88],[182,68,156,90,"details"],[182,75,156,103],[182,80,156,108],[183,4,157,2],[183,8,157,6],[184,6,158,4],[184,12,158,10,"logs"],[184,16,158,14],[184,19,158,17],[184,26,158,23,"CrossPlatformStorage"],[184,46,158,43],[184,47,158,44,"getItem"],[184,54,158,51],[184,55,158,52],[184,66,158,63],[184,67,158,64],[184,72,158,68],[184,76,158,72],[185,6,159,4],[185,12,159,10,"adminLogs"],[185,21,159,19],[185,24,159,22,"JSON"],[185,28,159,26],[185,29,159,27,"parse"],[185,34,159,32],[185,35,159,33,"logs"],[185,39,159,37],[185,40,159,38],[186,6,161,4],[186,12,161,10,"logEntry"],[186,20,161,18],[186,23,161,21],[187,8,162,6,"id"],[187,10,162,8],[187,12,162,10],[187,19,162,17,"Date"],[187,23,162,21],[187,24,162,22,"now"],[187,27,162,25],[187,28,162,26],[187,29,162,27],[187,31,162,29],[188,8,163,6,"action"],[188,14,163,12],[189,8,164,6,"competition_name"],[189,24,164,22],[189,26,164,24,"competitionName"],[189,41,164,39],[190,8,165,6,"admin_name"],[190,18,165,16],[190,20,165,18,"adminName"],[190,29,165,27],[191,8,166,6,"details"],[191,15,166,13],[192,8,167,6,"timestamp"],[192,17,167,15],[192,19,167,17],[192,23,167,21,"Date"],[192,27,167,25],[192,28,167,26],[192,29,167,27],[192,30,167,28,"toISOString"],[192,41,167,39],[192,42,167,40],[193,6,168,4],[193,7,168,5],[194,6,170,4,"adminLogs"],[194,15,170,13],[194,16,170,14,"push"],[194,20,170,18],[194,21,170,19,"logEntry"],[194,29,170,27],[194,30,170,28],[195,6,171,4],[195,12,171,10,"CrossPlatformStorage"],[195,32,171,30],[195,33,171,31,"setItem"],[195,40,171,38],[195,41,171,39],[195,52,171,50],[195,54,171,52,"JSON"],[195,58,171,56],[195,59,171,57,"stringify"],[195,68,171,66],[195,69,171,67,"adminLogs"],[195,78,171,76],[195,79,171,77],[195,80,171,78],[196,6,173,4,"console"],[196,13,173,11],[196,14,173,12,"log"],[196,17,173,15],[196,18,173,16],[196,43,173,41],[196,45,173,43,"action"],[196,51,173,49],[196,53,173,51,"competitionName"],[196,68,173,66],[196,69,173,67],[197,4,174,2],[197,5,174,3],[197,6,174,4],[197,13,174,11,"error"],[197,18,174,16],[197,20,174,18],[198,6,175,4,"console"],[198,13,175,11],[198,14,175,12,"error"],[198,19,175,17],[198,20,175,18],[198,49,175,47],[198,51,175,49,"error"],[198,56,175,54],[198,57,175,55],[199,4,176,2],[200,2,177,0],[200,3,177,1],[202,2,179,0],[203,2,180,7],[203,8,180,13,"competitionAPI"],[203,22,180,27],[203,25,180,30],[204,4,181,2,"create"],[204,10,181,8],[204,12,181,11,"data"],[204,16,193,3],[204,20,193,8,"apiClient"],[204,29,193,17],[204,30,193,18,"post"],[204,34,193,22],[204,35,193,23],[204,50,193,38],[204,52,193,40,"data"],[204,56,193,44],[204,57,193,45],[205,4,195,2,"join"],[205,8,195,6],[205,10,195,9,"inviteCode"],[205,20,195,27],[205,24,196,4,"apiClient"],[205,33,196,13],[205,34,196,14,"post"],[205,38,196,18],[205,39,196,19],[205,59,196,39],[205,61,196,41],[206,6,196,43,"invite_code"],[206,17,196,54],[206,19,196,56,"inviteCode"],[207,4,196,67],[207,5,196,68],[207,6,196,69],[208,4,198,2,"getMyCompetitions"],[208,21,198,19],[208,23,198,21,"getMyCompetitions"],[208,24,198,21],[208,29,198,27,"apiClient"],[208,38,198,36],[208,39,198,37,"get"],[208,42,198,40],[208,43,198,41],[208,61,198,59],[208,62,198,60],[209,4,200,2,"getCompetition"],[209,18,200,16],[209,20,200,19,"id"],[209,22,200,29],[209,26,200,34,"apiClient"],[209,35,200,43],[209,36,200,44,"get"],[209,39,200,47],[209,40,200,48],[209,57,200,65,"id"],[209,59,200,67],[209,61,200,69],[209,62,200,70],[210,4,202,2,"updateStandings"],[210,19,202,17],[210,21,202,19,"updateStandings"],[210,22,203,4,"id"],[210,24,203,14],[210,26,204,4,"standings"],[210,35,204,18],[210,37,205,4,"matchday"],[210,45,205,21],[210,50,207,4,"apiClient"],[210,59,207,13],[210,60,207,14,"patch"],[210,65,207,19],[210,66,207,20],[210,83,207,37,"id"],[210,85,207,39],[210,97,207,51],[210,99,207,53],[211,6,208,6,"standings"],[211,15,208,15],[212,6,209,6,"matchday"],[213,4,210,4],[213,5,210,5],[213,6,210,6],[214,4,212,2,"payFee"],[214,10,212,8],[214,12,212,10,"payFee"],[214,13,212,11,"id"],[214,15,212,21],[214,17,212,23,"amount"],[214,23,212,37],[214,28,213,4,"apiClient"],[214,37,213,13],[214,38,213,14,"post"],[214,42,213,18],[214,43,213,19],[214,60,213,36,"id"],[214,62,213,38],[214,68,213,44],[214,70,213,46],[214,74,213,50],[214,76,213,52],[215,6,214,6,"params"],[215,12,214,12],[215,14,214,14],[216,8,214,16,"amount"],[217,6,214,23],[218,4,215,4],[218,5,215,5],[218,6,215,6],[219,4,217,2,"getTransactions"],[219,19,217,17],[219,21,217,20,"id"],[219,23,217,30],[219,27,218,4,"apiClient"],[219,36,218,13],[219,37,218,14,"get"],[219,40,218,17],[219,41,218,18],[219,58,218,35,"id"],[219,60,218,37],[219,75,218,52],[219,76,218,53],[220,4,220,2],[221,4,221,2,"createMock"],[221,14,221,12],[221,16,221,14],[221,22,221,21,"data"],[221,26,232,3],[221,30,232,8],[222,6,233,4,"console"],[222,13,233,11],[222,14,233,12,"log"],[222,17,233,15],[222,18,233,16],[222,50,233,48],[222,52,233,50,"data"],[222,56,233,54],[222,57,233,55,"name"],[222,61,233,59],[222,62,233,60],[223,6,234,4,"console"],[223,13,234,11],[223,14,234,12,"log"],[223,17,234,15],[223,18,234,16],[223,39,234,37],[223,41,234,39,"data"],[223,45,234,43],[223,46,234,44,"total_matchdays"],[223,61,234,59],[223,65,234,63],[223,67,234,65],[223,68,234,66],[225,6,236,4],[226,6,237,4],[226,12,237,10,"storedCompetitions"],[226,30,237,28],[226,33,237,31],[226,39,237,37,"CrossPlatformStorage"],[226,59,237,57],[226,60,237,58,"getItem"],[226,67,237,65],[226,68,237,66],[226,86,237,84],[226,87,237,85],[227,6,238,4],[227,10,238,8,"existingCompetitions"],[227,30,238,28],[227,33,238,31,"storedCompetitions"],[227,51,238,49],[227,54,238,52,"JSON"],[227,58,238,56],[227,59,238,57,"parse"],[227,64,238,62],[227,65,238,63,"storedCompetitions"],[227,83,238,81],[227,84,238,82],[227,87,238,85],[227,89,238,87],[228,6,240,4,"console"],[228,13,240,11],[228,14,240,12,"log"],[228,17,240,15],[228,18,240,16],[228,60,240,58],[228,62,240,60,"existingCompetitions"],[228,82,240,80],[228,83,240,81,"length"],[228,89,240,87],[228,90,240,88],[230,6,242,4],[231,6,243,4],[231,12,243,10,"existingNames"],[231,25,243,23],[231,28,243,26,"existingCompetitions"],[231,48,243,46],[231,49,243,47,"map"],[231,52,243,50],[231,53,243,52,"comp"],[231,57,243,61],[231,61,243,66,"comp"],[231,65,243,70],[231,66,243,71,"name"],[231,70,243,75],[231,71,243,76,"toLowerCase"],[231,82,243,87],[231,83,243,88],[231,84,243,89],[231,85,243,90],[232,6,244,4],[232,10,244,8,"existingNames"],[232,23,244,21],[232,24,244,22,"includes"],[232,32,244,30],[232,33,244,31,"data"],[232,37,244,35],[232,38,244,36,"name"],[232,42,244,40],[232,43,244,41,"toLowerCase"],[232,54,244,52],[232,55,244,53],[232,56,244,54],[232,57,244,55],[232,59,244,57],[233,8,245,6],[233,14,245,12],[233,18,245,16,"Error"],[233,23,245,21],[233,24,245,22],[233,86,245,84],[233,87,245,85],[234,6,246,4],[236,6,248,4],[237,6,249,4],[237,12,249,10,"newCompetition"],[237,26,249,24],[237,29,249,27],[238,8,250,6,"_id"],[238,11,250,9],[238,13,250,11],[238,21,250,19,"Date"],[238,25,250,23],[238,26,250,24,"now"],[238,29,250,27],[238,30,250,28],[238,31,250,29],[238,33,250,31],[239,8,251,6,"name"],[239,12,251,10],[239,14,251,12,"data"],[239,18,251,16],[239,19,251,17,"name"],[239,23,251,21],[240,8,252,6,"total_matchdays"],[240,23,252,21],[240,25,252,23,"data"],[240,29,252,27],[240,30,252,28,"total_matchdays"],[240,45,252,43],[240,49,252,47],[240,51,252,49],[241,8,253,6,"participation_cost_per_team"],[241,35,253,33],[241,37,253,35,"data"],[241,41,253,39],[241,42,253,40,"participation_cost_per_team"],[241,69,253,67],[241,73,253,71],[241,78,253,76],[242,8,254,6,"expected_teams"],[242,22,254,20],[242,24,254,22,"data"],[242,28,254,26],[242,29,254,27,"expected_teams"],[242,43,254,41],[242,47,254,45],[242,48,254,46],[243,8,255,6,"total_prize_pool"],[243,24,255,22],[243,26,255,24,"data"],[243,30,255,28],[243,31,255,29,"total_prize_pool"],[243,47,255,45],[243,51,255,49],[243,57,255,55],[244,8,256,6,"rules"],[244,13,256,11],[244,15,256,13,"data"],[244,19,256,17],[244,20,256,18,"rules"],[244,25,256,23],[245,8,257,6,"invite_code"],[245,19,257,17],[245,21,257,19,"Math"],[245,25,257,23],[245,26,257,24,"random"],[245,32,257,30],[245,33,257,31],[245,34,257,32],[245,35,257,33,"toString"],[245,43,257,41],[245,44,257,42],[245,46,257,44],[245,47,257,45],[245,48,257,46,"substr"],[245,54,257,52],[245,55,257,53],[245,56,257,54],[245,58,257,56],[245,59,257,57],[245,60,257,58],[245,61,257,59,"toUpperCase"],[245,72,257,70],[245,73,257,71],[245,74,257,72],[246,8,258,6,"invite_link"],[246,19,258,17],[246,21,258,19],[246,50,258,48,"Math"],[246,54,258,52],[246,55,258,53,"random"],[246,61,258,59],[246,62,258,60],[246,63,258,61],[246,64,258,62,"toString"],[246,72,258,70],[246,73,258,71],[246,75,258,73],[246,76,258,74],[246,77,258,75,"substr"],[246,83,258,81],[246,84,258,82],[246,85,258,83],[246,87,258,85],[246,88,258,86],[246,89,258,87],[246,90,258,88,"toUpperCase"],[246,101,258,99],[246,102,258,100],[246,103,258,101],[246,105,258,103],[247,8,259,6,"admin_id"],[247,16,259,14],[247,18,259,16],[247,44,259,42],[248,8,259,44],[249,8,260,6,"participants"],[249,20,260,18],[249,22,260,20],[249,23,261,8],[250,10,262,10,"id"],[250,12,262,12],[250,14,262,14],[250,40,262,40],[251,10,263,10,"name"],[251,14,263,14],[251,16,263,16],[251,33,263,33],[252,10,264,10,"email"],[252,15,264,15],[252,17,264,17],[252,36,264,36],[253,10,265,10,"is_admin"],[253,18,265,18],[253,20,265,20],[253,24,265,24],[254,10,266,10,"paid_matchdays"],[254,24,266,24],[254,26,266,26],[254,27,266,27],[254,28,266,28],[254,30,266,30],[254,31,266,31],[254,32,266,32],[255,10,266,34],[256,10,267,10,"points"],[256,16,267,16],[256,18,267,18],[257,8,268,8],[257,9,268,9],[257,10,269,7],[258,8,270,6,"wallet_balance"],[258,22,270,20],[258,24,270,22],[258,25,270,23],[259,8,271,6,"is_active"],[259,17,271,15],[259,19,271,17],[259,23,271,21],[260,8,272,6,"current_matchday"],[260,24,272,22],[260,26,272,24],[260,27,272,25],[261,8,272,27],[262,8,273,6,"standings"],[262,17,273,15],[262,19,273,17],[262,20,274,8],[263,10,274,10,"position"],[263,18,274,18],[263,20,274,20],[263,21,274,21],[264,10,274,23,"player_id"],[264,19,274,32],[264,21,274,34],[264,47,274,60],[265,10,274,62,"name"],[265,14,274,66],[265,16,274,68],[265,33,274,85],[266,10,274,87,"points"],[266,16,274,93],[266,18,274,95],[267,8,274,97],[267,9,274,98],[267,10,275,7],[268,8,276,6,"created_at"],[268,18,276,16],[268,20,276,18],[268,24,276,22,"Date"],[268,28,276,26],[268,29,276,27],[268,30,276,28],[268,31,276,29,"toISOString"],[268,42,276,40],[268,43,276,41],[268,44,276,42],[269,8,277,6,"updated_at"],[269,18,277,16],[269,20,277,18],[269,24,277,22,"Date"],[269,28,277,26],[269,29,277,27],[269,30,277,28],[269,31,277,29,"toISOString"],[269,42,277,40],[269,43,277,41],[270,6,278,4],[270,7,278,5],[272,6,280,4],[273,6,281,4,"existingCompetitions"],[273,26,281,24],[273,27,281,25,"push"],[273,31,281,29],[273,32,281,30,"newCompetition"],[273,46,281,44],[273,47,281,45],[274,6,282,4],[274,12,282,10,"CrossPlatformStorage"],[274,32,282,30],[274,33,282,31,"setItem"],[274,40,282,38],[274,41,282,39],[274,59,282,57],[274,61,282,59,"JSON"],[274,65,282,63],[274,66,282,64,"stringify"],[274,75,282,73],[274,76,282,74,"existingCompetitions"],[274,96,282,94],[274,97,282,95],[274,98,282,96],[276,6,284,4],[277,6,285,4],[277,12,285,10,"logAdminAction"],[277,26,285,24],[277,27,285,25],[277,35,285,33],[277,37,285,35,"newCompetition"],[277,51,285,49],[277,52,285,50,"name"],[277,56,285,54],[277,58,285,56],[277,75,285,73],[277,77,285,75],[278,8,286,6,"competition_id"],[278,22,286,20],[278,24,286,22,"newCompetition"],[278,38,286,36],[278,39,286,37,"_id"],[278,42,286,40],[279,8,287,6,"rules"],[279,13,287,11],[279,15,287,13,"newCompetition"],[279,29,287,27],[279,30,287,28,"rules"],[279,35,287,33],[280,8,288,6,"total_matchdays"],[280,23,288,21],[280,25,288,23,"newCompetition"],[280,39,288,37],[280,40,288,38,"total_matchdays"],[280,55,288,53],[281,8,289,6,"participation_cost_per_team"],[281,35,289,33],[281,37,289,35,"newCompetition"],[281,51,289,49],[281,52,289,50,"participation_cost_per_team"],[281,79,289,77],[282,8,290,6,"expected_teams"],[282,22,290,20],[282,24,290,22,"newCompetition"],[282,38,290,36],[282,39,290,37,"expected_teams"],[282,53,290,51],[283,8,291,6,"total_prize_pool"],[283,24,291,22],[283,26,291,24,"newCompetition"],[283,40,291,38],[283,41,291,39,"total_prize_pool"],[284,6,292,4],[284,7,292,5],[284,8,292,6],[285,6,294,4,"console"],[285,13,294,11],[285,14,294,12,"log"],[285,17,294,15],[285,18,294,16],[285,64,294,62],[285,66,294,64,"existingCompetitions"],[285,86,294,84],[285,87,294,85,"length"],[285,93,294,91],[285,94,294,92],[286,6,295,4,"console"],[286,13,295,11],[286,14,295,12,"log"],[286,17,295,15],[286,18,295,16],[286,38,295,36],[286,40,295,38,"newCompetition"],[286,54,295,52],[286,55,295,53,"_id"],[286,58,295,56],[286,59,295,57],[287,6,296,4,"console"],[287,13,296,11],[287,14,296,12,"log"],[287,17,296,15],[287,18,296,16],[287,40,296,38],[287,42,296,40,"newCompetition"],[287,56,296,54],[287,57,296,55,"name"],[287,61,296,59],[287,62,296,60],[288,6,297,4,"console"],[288,13,297,11],[288,14,297,12,"log"],[288,17,297,15],[288,18,297,16],[288,44,297,42],[288,46,297,44,"newCompetition"],[288,60,297,58],[288,61,297,59,"total_matchdays"],[288,76,297,74],[288,77,297,75],[289,6,299,4],[289,13,299,11,"newCompetition"],[289,27,299,25],[290,4,300,2],[290,5,300,3],[291,4,302,2],[292,4,303,2,"validateNameMock"],[292,20,303,18],[292,22,303,20],[292,28,303,27,"name"],[292,32,303,39],[292,36,303,44],[293,6,304,4,"console"],[293,13,304,11],[293,14,304,12,"log"],[293,17,304,15],[293,18,304,16],[293,57,304,55],[293,59,304,57,"name"],[293,63,304,61],[293,64,304,62],[294,6,306,4],[294,10,306,8],[294,11,306,9,"name"],[294,15,306,13],[294,16,306,14,"trim"],[294,20,306,18],[294,21,306,19],[294,22,306,20],[294,24,306,22],[295,8,307,6],[295,15,307,13],[296,10,307,15,"available"],[296,19,307,24],[296,21,307,26],[296,25,307,30],[297,10,307,32,"message"],[297,17,307,39],[297,19,307,41],[298,8,307,44],[298,9,307,45],[299,6,308,4],[301,6,310,4],[302,6,311,4],[302,12,311,10,"storedCompetitions"],[302,30,311,28],[302,33,311,31],[302,39,311,37,"CrossPlatformStorage"],[302,59,311,57],[302,60,311,58,"getItem"],[302,67,311,65],[302,68,311,66],[302,86,311,84],[302,87,311,85],[303,6,312,4],[303,10,312,8,"existingCompetitions"],[303,30,312,28],[303,33,312,31,"storedCompetitions"],[303,51,312,49],[303,54,312,52,"JSON"],[303,58,312,56],[303,59,312,57,"parse"],[303,64,312,62],[303,65,312,63,"storedCompetitions"],[303,83,312,81],[303,84,312,82],[303,87,312,85],[303,89,312,87],[305,6,314,4],[306,6,315,4],[306,12,315,10,"defaultNames"],[306,24,315,22],[306,27,315,25],[306,28,315,26],[306,50,315,48],[306,52,315,50],[306,78,315,76],[306,80,315,78],[306,96,315,94],[306,97,315,95],[307,6,316,4],[307,12,316,10,"allNames"],[307,20,316,18],[307,23,316,21],[307,24,317,6],[307,27,317,9,"existingCompetitions"],[307,47,317,29],[307,48,317,30,"map"],[307,51,317,33],[307,52,317,35,"comp"],[307,56,317,44],[307,60,317,49,"comp"],[307,64,317,53],[307,65,317,54,"name"],[307,69,317,58],[307,70,317,59,"toLowerCase"],[307,81,317,70],[307,82,317,71],[307,83,317,72],[307,84,317,73],[307,86,318,6],[307,89,318,9,"defaultNames"],[307,101,318,21],[307,102,318,22,"map"],[307,105,318,25],[307,106,318,26,"name"],[307,110,318,30],[307,114,318,34,"name"],[307,118,318,38],[307,119,318,39,"toLowerCase"],[307,130,318,50],[307,131,318,51],[307,132,318,52],[307,133,318,53],[307,134,319,5],[308,6,321,4],[308,12,321,10,"isAvailable"],[308,23,321,21],[308,26,321,24],[308,27,321,25,"allNames"],[308,35,321,33],[308,36,321,34,"includes"],[308,44,321,42],[308,45,321,43,"name"],[308,49,321,47],[308,50,321,48,"toLowerCase"],[308,61,321,59],[308,62,321,60],[308,63,321,61],[308,64,321,62],[309,6,323,4],[309,13,323,11],[310,8,324,6,"available"],[310,17,324,15],[310,19,324,17,"isAvailable"],[310,30,324,28],[311,8,325,6,"message"],[311,15,325,13],[311,17,325,15,"isAvailable"],[311,28,325,26],[311,31,325,29],[311,47,325,45],[311,50,325,48],[312,6,326,4],[312,7,326,5],[313,4,327,2],[313,5,327,3],[314,4,329,2,"getMyCompetitionsMock"],[314,25,329,23],[314,27,329,25],[314,33,329,25,"getMyCompetitionsMock"],[314,34,329,25],[314,39,329,37],[315,6,330,4,"console"],[315,13,330,11],[315,14,330,12,"log"],[315,17,330,15],[315,18,330,16],[315,52,330,50],[315,53,330,51],[317,6,332,4],[318,6,333,4],[318,12,333,10,"storedCompetitions"],[318,30,333,28],[318,33,333,31],[318,39,333,37,"CrossPlatformStorage"],[318,59,333,57],[318,60,333,58,"getItem"],[318,67,333,65],[318,68,333,66],[318,86,333,84],[318,87,333,85],[319,6,334,4],[319,10,334,8,"competitions"],[319,22,334,20],[319,25,334,23,"storedCompetitions"],[319,43,334,41],[319,46,334,44,"JSON"],[319,50,334,48],[319,51,334,49,"parse"],[319,56,334,54],[319,57,334,55,"storedCompetitions"],[319,75,334,73],[319,76,334,74],[319,79,334,77],[319,81,334,79],[320,6,336,4,"console"],[320,13,336,11],[320,14,336,12,"log"],[320,17,336,15],[320,18,336,16],[320,53,336,51],[320,55,336,53,"competitions"],[320,67,336,65],[320,68,336,66,"length"],[320,74,336,72],[320,75,336,73],[322,6,338,4],[323,6,339,4,"competitions"],[323,18,339,16],[323,19,339,17,"forEach"],[323,26,339,24],[323,27,339,25],[323,28,339,26,"comp"],[323,32,339,35],[323,34,339,37,"index"],[323,39,339,50],[323,44,339,55],[324,8,340,6,"console"],[324,15,340,13],[324,16,340,14,"log"],[324,19,340,17],[324,20,340,18],[324,23,340,21,"index"],[324,28,340,26],[324,31,340,29],[324,32,340,30],[324,37,340,35,"comp"],[324,41,340,39],[324,42,340,40,"name"],[324,46,340,44],[324,55,340,53,"comp"],[324,59,340,57],[324,60,340,58,"_id"],[324,63,340,61],[324,66,340,64],[324,67,340,65],[325,6,341,4],[325,7,341,5],[325,8,341,6],[326,6,343,4],[326,13,343,11,"competitions"],[326,25,343,23],[327,4,344,2],[327,5,344,3],[328,4,346,2,"joinMock"],[328,12,346,10],[328,14,346,12],[328,20,346,19,"inviteCode"],[328,30,346,37],[328,34,346,42],[329,6,347,4,"console"],[329,13,347,11],[329,14,347,12,"log"],[329,17,347,15],[329,18,347,16],[329,59,347,57],[329,61,347,59,"inviteCode"],[329,71,347,69],[329,72,347,70],[330,6,348,4],[330,10,348,8,"inviteCode"],[330,20,348,18],[330,21,348,19,"length"],[330,27,348,25],[330,30,348,28],[330,31,348,29],[330,33,348,31],[331,8,349,6],[331,14,349,12],[331,18,349,16,"Error"],[331,23,349,21],[331,24,349,22],[331,45,349,43],[331,46,349,44],[332,6,350,4],[333,6,351,4],[333,13,351,11],[334,8,351,13,"message"],[334,15,351,20],[334,17,351,22],[335,6,351,57],[335,7,351,58],[336,4,352,2],[336,5,352,3],[337,4,354,2],[338,4,355,2,"deleteMock"],[338,14,355,12],[338,16,355,14],[338,22,355,21,"competitionId"],[338,35,355,42],[338,39,355,47],[339,6,356,4,"console"],[339,13,356,11],[339,14,356,12,"log"],[339,17,356,15],[339,18,356,16],[339,51,356,49],[339,53,356,51,"competitionId"],[339,66,356,64],[339,67,356,65],[340,6,358,4],[340,12,358,10,"storedCompetitions"],[340,30,358,28],[340,33,358,31],[340,39,358,37,"CrossPlatformStorage"],[340,59,358,57],[340,60,358,58,"getItem"],[340,67,358,65],[340,68,358,66],[340,86,358,84],[340,87,358,85],[341,6,359,4],[341,10,359,8,"competitions"],[341,22,359,20],[341,25,359,23,"storedCompetitions"],[341,43,359,41],[341,46,359,44,"JSON"],[341,50,359,48],[341,51,359,49,"parse"],[341,56,359,54],[341,57,359,55,"storedCompetitions"],[341,75,359,73],[341,76,359,74],[341,79,359,77],[341,81,359,79],[342,6,361,4],[342,12,361,10,"competitionToDelete"],[342,31,361,29],[342,34,361,32,"competitions"],[342,46,361,44],[342,47,361,45,"find"],[342,51,361,49],[342,52,361,51,"comp"],[342,56,361,60],[342,60,361,65,"comp"],[342,64,361,69],[342,65,361,70,"_id"],[342,68,361,73],[342,73,361,78,"competitionId"],[342,86,361,91],[342,87,361,92],[343,6,362,4],[343,10,362,8],[343,11,362,9,"competitionToDelete"],[343,30,362,28],[343,32,362,30],[344,8,363,6],[344,14,363,12],[344,18,363,16,"Error"],[344,23,363,21],[344,24,363,22],[344,47,363,45],[344,48,363,46],[345,6,364,4],[347,6,366,4],[348,6,367,4],[348,10,367,8,"competitionToDelete"],[348,29,367,27],[348,30,367,28,"admin_id"],[348,38,367,36],[348,43,367,41],[348,69,367,67],[348,71,367,69],[349,8,368,6],[349,14,368,12],[349,18,368,16,"Error"],[349,23,368,21],[349,24,368,22],[349,64,368,62],[349,65,368,63],[350,6,369,4],[352,6,371,4],[353,6,372,4,"competitions"],[353,18,372,16],[353,21,372,19,"competitions"],[353,33,372,31],[353,34,372,32,"filter"],[353,40,372,38],[353,41,372,40,"comp"],[353,45,372,49],[353,49,372,54,"comp"],[353,53,372,58],[353,54,372,59,"_id"],[353,57,372,62],[353,62,372,67,"competitionId"],[353,75,372,80],[353,76,372,81],[354,6,373,4],[354,12,373,10,"CrossPlatformStorage"],[354,32,373,30],[354,33,373,31,"setItem"],[354,40,373,38],[354,41,373,39],[354,59,373,57],[354,61,373,59,"JSON"],[354,65,373,63],[354,66,373,64,"stringify"],[354,75,373,73],[354,76,373,74,"competitions"],[354,88,373,86],[354,89,373,87],[354,90,373,88],[356,6,375,4],[357,6,376,4],[357,12,376,10,"logAdminAction"],[357,26,376,24],[357,27,376,25],[357,35,376,33],[357,37,376,35,"competitionToDelete"],[357,56,376,54],[357,57,376,55,"name"],[357,61,376,59],[357,63,376,61],[357,80,376,78],[357,81,376,79],[358,6,378,4,"console"],[358,13,378,11],[358,14,378,12,"log"],[358,17,378,15],[358,18,378,16],[358,54,378,52],[358,55,378,53],[359,6,379,4],[359,13,379,11],[360,8,379,13,"message"],[360,15,379,20],[360,17,379,22],[361,6,379,57],[361,7,379,58],[362,4,380,2],[362,5,380,3],[363,4,382,2],[364,4,383,2,"editMock"],[364,12,383,10],[364,14,383,12],[364,20,383,12,"editMock"],[364,21,383,19,"competitionId"],[364,34,383,40],[364,36,383,42,"updates"],[364,43,383,54],[364,48,383,59],[365,6,384,4,"console"],[365,13,384,11],[365,14,384,12,"log"],[365,17,384,15],[365,18,384,16],[365,49,384,47],[365,51,384,49,"competitionId"],[365,64,384,62],[365,66,384,64,"updates"],[365,73,384,71],[365,74,384,72],[366,6,386,4],[366,12,386,10,"storedCompetitions"],[366,30,386,28],[366,33,386,31],[366,39,386,37,"CrossPlatformStorage"],[366,59,386,57],[366,60,386,58,"getItem"],[366,67,386,65],[366,68,386,66],[366,86,386,84],[366,87,386,85],[367,6,387,4],[367,10,387,8,"competitions"],[367,22,387,20],[367,25,387,23,"storedCompetitions"],[367,43,387,41],[367,46,387,44,"JSON"],[367,50,387,48],[367,51,387,49,"parse"],[367,56,387,54],[367,57,387,55,"storedCompetitions"],[367,75,387,73],[367,76,387,74],[367,79,387,77],[367,81,387,79],[368,6,389,4],[368,12,389,10,"competitionIndex"],[368,28,389,26],[368,31,389,29,"competitions"],[368,43,389,41],[368,44,389,42,"findIndex"],[368,53,389,51],[368,54,389,53,"comp"],[368,58,389,62],[368,62,389,67,"comp"],[368,66,389,71],[368,67,389,72,"_id"],[368,70,389,75],[368,75,389,80,"competitionId"],[368,88,389,93],[368,89,389,94],[369,6,390,4],[369,10,390,8,"competitionIndex"],[369,26,390,24],[369,31,390,29],[369,32,390,30],[369,33,390,31],[369,35,390,33],[370,8,391,6],[370,14,391,12],[370,18,391,16,"Error"],[370,23,391,21],[370,24,391,22],[370,47,391,45],[370,48,391,46],[371,6,392,4],[372,6,394,4],[372,12,394,10,"competition"],[372,23,394,21],[372,26,394,24,"competitions"],[372,38,394,36],[372,39,394,37,"competitionIndex"],[372,55,394,53],[372,56,394,54],[374,6,396,4],[375,6,397,4],[375,10,397,8,"competition"],[375,21,397,19],[375,22,397,20,"admin_id"],[375,30,397,28],[375,35,397,33],[375,61,397,59],[375,63,397,61],[376,8,398,6],[376,14,398,12],[376,18,398,16,"Error"],[376,23,398,21],[376,24,398,22],[376,62,398,60],[376,63,398,61],[377,6,399,4],[379,6,401,4],[380,6,402,4,"competitions"],[380,18,402,16],[380,19,402,17,"competitionIndex"],[380,35,402,33],[380,36,402,34],[380,39,402,37],[381,8,403,6],[381,11,403,9,"competition"],[381,22,403,20],[382,8,404,6],[382,11,404,9,"updates"],[382,18,404,16],[383,8,405,6,"updated_at"],[383,18,405,16],[383,20,405,18],[383,24,405,22,"Date"],[383,28,405,26],[383,29,405,27],[383,30,405,28],[383,31,405,29,"toISOString"],[383,42,405,40],[383,43,405,41],[384,6,406,4],[384,7,406,5],[385,6,408,4],[385,12,408,10,"CrossPlatformStorage"],[385,32,408,30],[385,33,408,31,"setItem"],[385,40,408,38],[385,41,408,39],[385,59,408,57],[385,61,408,59,"JSON"],[385,65,408,63],[385,66,408,64,"stringify"],[385,75,408,73],[385,76,408,74,"competitions"],[385,88,408,86],[385,89,408,87],[385,90,408,88],[387,6,410,4],[388,6,411,4],[388,12,411,10,"logAdminAction"],[388,26,411,24],[388,27,411,25],[388,33,411,31],[388,35,411,33,"competition"],[388,46,411,44],[388,47,411,45,"name"],[388,51,411,49],[388,53,411,51],[388,70,411,68],[388,72,411,70,"updates"],[388,79,411,77],[388,80,411,78],[389,6,413,4,"console"],[389,13,413,11],[389,14,413,12,"log"],[389,17,413,15],[389,18,413,16],[389,54,413,52],[389,55,413,53],[390,6,414,4],[390,13,414,11,"competitions"],[390,25,414,23],[390,26,414,24,"competitionIndex"],[390,42,414,40],[390,43,414,41],[391,4,415,2],[391,5,415,3],[392,4,417,2],[393,4,418,2,"awardDailyPrizeMock"],[393,23,418,21],[393,25,418,23],[393,31,418,23,"awardDailyPrizeMock"],[393,32,418,30,"competitionId"],[393,45,418,51],[393,47,418,53,"matchday"],[393,55,418,69],[393,57,418,71,"winnerId"],[393,65,418,87],[393,70,418,92],[394,6,419,4,"console"],[394,13,419,11],[394,14,419,12,"log"],[394,17,419,15],[394,18,419,16],[394,62,419,60],[394,64,419,62,"matchday"],[394,72,419,70],[394,74,419,72],[394,83,419,81],[394,85,419,83,"winnerId"],[394,93,419,91],[394,94,419,92],[395,6,421,4],[395,12,421,10,"storedCompetitions"],[395,30,421,28],[395,33,421,31],[395,39,421,37,"CrossPlatformStorage"],[395,59,421,57],[395,60,421,58,"getItem"],[395,67,421,65],[395,68,421,66],[395,86,421,84],[395,87,421,85],[396,6,422,4],[396,10,422,8,"competitions"],[396,22,422,20],[396,25,422,23,"storedCompetitions"],[396,43,422,41],[396,46,422,44,"JSON"],[396,50,422,48],[396,51,422,49,"parse"],[396,56,422,54],[396,57,422,55,"storedCompetitions"],[396,75,422,73],[396,76,422,74],[396,79,422,77],[396,81,422,79],[397,6,424,4],[397,12,424,10,"competitionIndex"],[397,28,424,26],[397,31,424,29,"competitions"],[397,43,424,41],[397,44,424,42,"findIndex"],[397,53,424,51],[397,54,424,53,"comp"],[397,58,424,62],[397,62,424,67,"comp"],[397,66,424,71],[397,67,424,72,"_id"],[397,70,424,75],[397,75,424,80,"competitionId"],[397,88,424,93],[397,89,424,94],[398,6,425,4],[398,10,425,8,"competitionIndex"],[398,26,425,24],[398,31,425,29],[398,32,425,30],[398,33,425,31],[398,35,425,33],[399,8,426,6],[399,14,426,12],[399,18,426,16,"Error"],[399,23,426,21],[399,24,426,22],[399,47,426,45],[399,48,426,46],[400,6,427,4],[401,6,429,4],[401,12,429,10,"competition"],[401,23,429,21],[401,26,429,24,"competitions"],[401,38,429,36],[401,39,429,37,"competitionIndex"],[401,55,429,53],[401,56,429,54],[403,6,431,4],[404,6,432,4],[404,10,432,8,"competition"],[404,21,432,19],[404,22,432,20,"admin_id"],[404,30,432,28],[404,35,432,33],[404,61,432,59],[404,63,432,61],[405,8,433,6],[405,14,433,12],[405,18,433,16,"Error"],[405,23,433,21],[405,24,433,22],[405,59,433,57],[405,60,433,58],[406,6,434,4],[408,6,436,4],[409,6,437,4],[409,10,437,8],[409,11,437,9,"competition"],[409,22,437,20],[409,23,437,21,"rules"],[409,28,437,26],[409,32,437,30],[409,33,437,31],[409,34,437,32],[409,41,437,39],[409,43,437,41],[409,50,437,48],[409,51,437,49],[409,52,437,50,"includes"],[409,60,437,58],[409,61,437,59,"competition"],[409,72,437,70],[409,73,437,71,"rules"],[409,78,437,76],[409,79,437,77,"type"],[409,83,437,81],[409,84,437,82],[409,86,437,84],[410,8,438,6],[410,14,438,12],[410,18,438,16,"Error"],[410,23,438,21],[410,24,438,22],[410,69,438,67],[410,70,438,68],[411,6,439,4],[412,6,441,4],[412,12,441,10,"dailyPrizeAmount"],[412,28,441,26],[412,31,441,29,"competition"],[412,42,441,40],[412,43,441,41,"rules"],[412,48,441,46],[412,49,441,47,"daily_prize"],[412,60,441,58],[412,64,441,62],[412,65,441,63],[413,6,442,4],[413,12,442,10,"winner"],[413,18,442,16],[413,21,442,19,"competition"],[413,32,442,30],[413,33,442,31,"participants"],[413,45,442,43],[413,46,442,44,"find"],[413,50,442,48],[413,51,442,50,"p"],[413,52,442,56],[413,56,442,61,"p"],[413,57,442,62],[413,58,442,63,"id"],[413,60,442,65],[413,65,442,70,"winnerId"],[413,73,442,78],[413,74,442,79],[414,6,444,4],[414,10,444,8],[414,11,444,9,"winner"],[414,17,444,15],[414,19,444,17],[415,8,445,6],[415,14,445,12],[415,18,445,16,"Error"],[415,23,445,21],[415,24,445,22],[415,57,445,55],[415,58,445,56],[416,6,446,4],[418,6,448,4],[419,6,449,4],[419,10,449,8],[419,11,449,9,"competition"],[419,22,449,20],[419,23,449,21,"daily_winners"],[419,36,449,34],[419,38,449,36],[420,8,450,6,"competition"],[420,19,450,17],[420,20,450,18,"daily_winners"],[420,33,450,31],[420,36,450,34],[420,37,450,35],[420,38,450,36],[421,6,451,4],[423,6,453,4],[424,6,454,4],[424,10,454,8,"competition"],[424,21,454,19],[424,22,454,20,"daily_winners"],[424,35,454,33],[424,36,454,34,"matchday"],[424,44,454,42],[424,45,454,43],[424,47,454,45],[425,8,455,6],[425,14,455,12],[425,18,455,16,"Error"],[425,23,455,21],[425,24,455,22],[425,52,455,50,"matchday"],[425,60,455,58],[425,83,455,81,"competition"],[425,94,455,92],[425,95,455,93,"daily_winners"],[425,108,455,106],[425,109,455,107,"matchday"],[425,117,455,115],[425,118,455,116],[425,119,455,117,"name"],[425,123,455,121],[425,125,455,123],[425,126,455,124],[426,6,456,4],[428,6,458,4],[429,6,459,4,"competition"],[429,17,459,15],[429,18,459,16,"daily_winners"],[429,31,459,29],[429,32,459,30,"matchday"],[429,40,459,38],[429,41,459,39],[429,44,459,42],[430,8,460,6,"user_id"],[430,15,460,13],[430,17,460,15,"winnerId"],[430,25,460,23],[431,8,461,6,"name"],[431,12,461,10],[431,14,461,12,"winner"],[431,20,461,18],[431,21,461,19,"name"],[431,25,461,23],[432,8,462,6,"amount"],[432,14,462,12],[432,16,462,14,"dailyPrizeAmount"],[432,32,462,30],[433,8,463,6,"awarded_at"],[433,18,463,16],[433,20,463,18],[433,24,463,22,"Date"],[433,28,463,26],[433,29,463,27],[433,30,463,28],[433,31,463,29,"toISOString"],[433,42,463,40],[433,43,463,41],[434,6,464,4],[434,7,464,5],[436,6,466,4],[437,6,467,4,"competitions"],[437,18,467,16],[437,19,467,17,"competitionIndex"],[437,35,467,33],[437,36,467,34],[437,39,467,37,"competition"],[437,50,467,48],[438,6,468,4],[438,12,468,10,"CrossPlatformStorage"],[438,32,468,30],[438,33,468,31,"setItem"],[438,40,468,38],[438,41,468,39],[438,59,468,57],[438,61,468,59,"JSON"],[438,65,468,63],[438,66,468,64,"stringify"],[438,75,468,73],[438,76,468,74,"competitions"],[438,88,468,86],[438,89,468,87],[438,90,468,88],[440,6,470,4],[441,6,471,4],[441,12,471,10,"logAdminAction"],[441,26,471,24],[441,27,471,25],[441,46,471,44],[441,48,471,46,"competition"],[441,59,471,57],[441,60,471,58,"name"],[441,64,471,62],[441,66,471,64],[441,83,471,81],[441,85,471,83],[442,8,472,6,"matchday"],[442,16,472,14],[443,8,473,6,"winner"],[443,14,473,12],[443,16,473,14,"winner"],[443,22,473,20],[443,23,473,21,"name"],[443,27,473,25],[444,8,474,6,"amount"],[444,14,474,12],[444,16,474,14,"dailyPrizeAmount"],[445,6,475,4],[445,7,475,5],[445,8,475,6],[447,6,477,4],[448,6,478,4,"console"],[448,13,478,11],[448,14,478,12,"log"],[448,17,478,15],[448,18,478,16],[448,24,478,22,"winner"],[448,30,478,28],[448,31,478,29,"name"],[448,35,478,33],[448,48,478,46,"dailyPrizeAmount"],[448,64,478,62],[448,89,478,87,"matchday"],[448,97,478,95],[448,99,478,97],[448,100,478,98],[449,6,480,4,"console"],[449,13,480,11],[449,14,480,12,"log"],[449,17,480,15],[449,18,480,16],[449,54,480,52],[449,55,480,53],[450,6,481,4],[450,13,481,11],[451,8,482,6,"message"],[451,15,482,13],[451,17,482,15],[451,36,482,34,"dailyPrizeAmount"],[451,52,482,50],[451,67,482,65,"winner"],[451,73,482,71],[451,74,482,72,"name"],[451,78,482,76],[451,95,482,93,"matchday"],[451,103,482,101],[451,105,482,103],[452,8,483,6,"competition"],[452,19,483,17],[452,21,483,19,"competition"],[453,6,484,4],[453,7,484,5],[454,4,485,2],[454,5,485,3],[455,4,487,2],[456,4,488,2,"getAdminLogsMock"],[456,20,488,18],[456,22,488,20],[456,28,488,20,"getAdminLogsMock"],[456,29,488,20],[456,34,488,32],[457,6,489,4,"console"],[457,13,489,11],[457,14,489,12,"log"],[457,17,489,15],[457,18,489,16],[457,47,489,45],[457,48,489,46],[458,6,491,4],[458,10,491,8],[459,8,492,6],[459,14,492,12,"logs"],[459,18,492,16],[459,21,492,19],[459,28,492,25,"CrossPlatformStorage"],[459,48,492,45],[459,49,492,46,"getItem"],[459,56,492,53],[459,57,492,54],[459,68,492,65],[459,69,492,66],[459,74,492,70],[459,78,492,74],[460,8,493,6],[460,14,493,12,"adminLogs"],[460,23,493,21],[460,26,493,24,"JSON"],[460,30,493,28],[460,31,493,29,"parse"],[460,36,493,34],[460,37,493,35,"logs"],[460,41,493,39],[460,42,493,40],[462,8,495,6],[463,8,496,6,"adminLogs"],[463,17,496,15],[463,18,496,16,"sort"],[463,22,496,20],[463,23,496,21],[463,24,496,22,"a"],[463,25,496,28],[463,27,496,30,"b"],[463,28,496,36],[463,33,496,41],[463,37,496,45,"Date"],[463,41,496,49],[463,42,496,50,"b"],[463,43,496,51],[463,44,496,52,"timestamp"],[463,53,496,61],[463,54,496,62],[463,55,496,63,"getTime"],[463,62,496,70],[463,63,496,71],[463,64,496,72],[463,67,496,75],[463,71,496,79,"Date"],[463,75,496,83],[463,76,496,84,"a"],[463,77,496,85],[463,78,496,86,"timestamp"],[463,87,496,95],[463,88,496,96],[463,89,496,97,"getTime"],[463,96,496,104],[463,97,496,105],[463,98,496,106],[463,99,496,107],[464,8,498,6,"console"],[464,15,498,13],[464,16,498,14,"log"],[464,19,498,17],[464,20,498,18],[464,42,498,40],[464,44,498,42,"adminLogs"],[464,53,498,51],[464,54,498,52,"length"],[464,60,498,58],[464,61,498,59],[465,8,499,6],[465,15,499,13,"adminLogs"],[465,24,499,22],[466,6,500,4],[466,7,500,5],[466,8,500,6],[466,15,500,13,"error"],[466,20,500,18],[466,22,500,20],[467,8,501,6,"console"],[467,15,501,13],[467,16,501,14,"error"],[467,21,501,19],[467,22,501,20],[467,52,501,50],[467,54,501,52,"error"],[467,59,501,57],[467,60,501,58],[468,8,502,6],[468,15,502,13],[468,17,502,15],[469,6,503,4],[470,4,504,2],[471,2,505,0],[471,3,505,1],[473,2,507,0],[474,2,508,7],[474,8,508,13,"walletAPI"],[474,17,508,22],[474,20,508,25],[475,4,509,2,"getBalance"],[475,14,509,12],[475,16,509,14,"getBalance"],[475,17,509,14],[475,22,509,20,"apiClient"],[475,31,509,29],[475,32,509,30,"get"],[475,35,509,33],[475,36,509,34],[475,53,509,51],[475,54,509,52],[476,4,511,2,"topUp"],[476,9,511,7],[476,11,511,10,"amount"],[476,17,511,24],[476,21,512,4,"apiClient"],[476,30,512,13],[476,31,512,14,"post"],[476,35,512,18],[476,36,512,19],[476,51,512,34],[476,53,512,36],[476,57,512,40],[476,59,512,42],[477,6,513,6,"params"],[477,12,513,12],[477,14,513,14],[478,8,513,16,"amount"],[479,6,513,23],[480,4,514,4],[480,5,514,5],[480,6,514,6],[481,4,516,2,"withdraw"],[481,12,516,10],[481,14,516,13,"amount"],[481,20,516,27],[481,24,517,4,"apiClient"],[481,33,517,13],[481,34,517,14,"post"],[481,38,517,18],[481,39,517,19],[481,57,517,37],[481,59,517,39],[481,63,517,43],[481,65,517,45],[482,6,518,6,"params"],[482,12,518,12],[482,14,518,14],[483,8,518,16,"amount"],[484,6,518,23],[485,4,519,4],[485,5,519,5],[485,6,519,6],[486,4,521,2,"getTransactions"],[486,19,521,17],[486,21,521,19,"getTransactions"],[486,22,521,19],[486,27,521,25,"apiClient"],[486,36,521,34],[486,37,521,35,"get"],[486,40,521,38],[486,41,521,39],[486,56,521,54],[487,2,522,0],[487,3,522,1],[488,2,524,0],[488,6,524,0,"_default"],[488,14,524,0],[488,17,524,15,"apiClient"],[488,26,524,24],[489,0,524,25],[489,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBY;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;cgCG;mDCsB,sCD;GhCyD;oBkCG;kCDc,sCC;0BCC,0BD;GlCS;yBoCE;yBCU;KDE;GpCG;YsCE;GtCM;cuCG;kDCM,yCD;uCEW,yCF;GvCQ;Y0CG;oDCM,yCD;G1C0B;uB4CG;oDDM,yCC;iDCkB,6BD;G5C2C;oB8CG;qBCQ,qFD;G9CQ;cgDK,sChD;SiDE;MjDG;YkDE;MlDG;mBmDE,oCnD"},"hasCjsExports":false},"type":"js/module"}]}