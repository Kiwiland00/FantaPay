{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        competitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n        });\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":577,"map":[[27,2,626,0,"Object"],[27,8,626,0],[27,9,626,0,"defineProperty"],[27,23,626,0],[27,24,626,0,"exports"],[27,31,626,0],[28,4,626,0,"enumerable"],[28,14,626,0],[29,4,626,0,"get"],[29,7,626,0],[29,18,626,0,"get"],[29,19,626,0],[30,6,626,0],[30,13,626,0,"_default"],[30,21,626,0],[31,4,626,0],[32,2,626,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,610,0,"Object"],[45,8,610,0],[45,9,610,0,"defineProperty"],[45,23,610,0],[45,24,610,0,"exports"],[45,31,610,0],[46,4,610,0,"enumerable"],[46,14,610,0],[47,4,610,0,"get"],[47,7,610,0],[47,18,610,0,"get"],[47,19,610,0],[48,6,610,0],[48,13,610,0,"walletAPI"],[48,22,610,0],[49,4,610,0],[50,2,610,0],[51,2,624,2],[51,6,624,2,"_expoVirtualEnv"],[51,21,624,2],[51,24,624,2,"require"],[51,31,624,2],[51,32,624,2,"_dependencyMap"],[51,46,624,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,171,45,153],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,0],[182,8,156,6,"logAdminAction"],[182,22,156,20],[182,25,156,23],[182,31,156,23,"logAdminAction"],[182,32,156,30,"action"],[182,38,156,44],[182,40,156,46,"competitionName"],[182,55,156,69],[182,57,156,71,"adminName"],[182,66,156,88],[182,68,156,90,"details"],[182,75,156,103],[182,80,156,108],[183,4,157,2],[183,8,157,6],[184,6,158,4],[184,12,158,10,"logs"],[184,16,158,14],[184,19,158,17],[184,26,158,23,"CrossPlatformStorage"],[184,46,158,43],[184,47,158,44,"getItem"],[184,54,158,51],[184,55,158,52],[184,66,158,63],[184,67,158,64],[184,72,158,68],[184,76,158,72],[185,6,159,4],[185,12,159,10,"adminLogs"],[185,21,159,19],[185,24,159,22,"JSON"],[185,28,159,26],[185,29,159,27,"parse"],[185,34,159,32],[185,35,159,33,"logs"],[185,39,159,37],[185,40,159,38],[186,6,161,4],[186,12,161,10,"logEntry"],[186,20,161,18],[186,23,161,21],[187,8,162,6,"id"],[187,10,162,8],[187,12,162,10],[187,19,162,17,"Date"],[187,23,162,21],[187,24,162,22,"now"],[187,27,162,25],[187,28,162,26],[187,29,162,27],[187,31,162,29],[188,8,163,6,"action"],[188,14,163,12],[189,8,164,6,"competition_name"],[189,24,164,22],[189,26,164,24,"competitionName"],[189,41,164,39],[190,8,165,6,"admin_name"],[190,18,165,16],[190,20,165,18,"adminName"],[190,29,165,27],[191,8,166,6,"details"],[191,15,166,13],[192,8,167,6,"timestamp"],[192,17,167,15],[192,19,167,17],[192,23,167,21,"Date"],[192,27,167,25],[192,28,167,26],[192,29,167,27],[192,30,167,28,"toISOString"],[192,41,167,39],[192,42,167,40],[193,6,168,4],[193,7,168,5],[194,6,170,4,"adminLogs"],[194,15,170,13],[194,16,170,14,"push"],[194,20,170,18],[194,21,170,19,"logEntry"],[194,29,170,27],[194,30,170,28],[195,6,171,4],[195,12,171,10,"CrossPlatformStorage"],[195,32,171,30],[195,33,171,31,"setItem"],[195,40,171,38],[195,41,171,39],[195,52,171,50],[195,54,171,52,"JSON"],[195,58,171,56],[195,59,171,57,"stringify"],[195,68,171,66],[195,69,171,67,"adminLogs"],[195,78,171,76],[195,79,171,77],[195,80,171,78],[196,6,173,4,"console"],[196,13,173,11],[196,14,173,12,"log"],[196,17,173,15],[196,18,173,16],[196,43,173,41],[196,45,173,43,"action"],[196,51,173,49],[196,53,173,51,"competitionName"],[196,68,173,66],[196,69,173,67],[197,4,174,2],[197,5,174,3],[197,6,174,4],[197,13,174,11,"error"],[197,18,174,16],[197,20,174,18],[198,6,175,4,"console"],[198,13,175,11],[198,14,175,12,"error"],[198,19,175,17],[198,20,175,18],[198,49,175,47],[198,51,175,49,"error"],[198,56,175,54],[198,57,175,55],[199,4,176,2],[200,2,177,0],[200,3,177,1],[202,2,179,0],[203,2,180,7],[203,8,180,13,"competitionAPI"],[203,22,180,27],[203,25,180,30],[204,4,181,2,"create"],[204,10,181,8],[204,12,181,11,"data"],[204,16,196,3],[204,20,196,8,"apiClient"],[204,29,196,17],[204,30,196,18,"post"],[204,34,196,22],[204,35,196,23],[204,50,196,38],[204,52,196,40,"data"],[204,56,196,44],[204,57,196,45],[205,4,198,2,"join"],[205,8,198,6],[205,10,198,9,"inviteCode"],[205,20,198,27],[205,24,199,4,"apiClient"],[205,33,199,13],[205,34,199,14,"post"],[205,38,199,18],[205,39,199,19],[205,59,199,39],[205,61,199,41],[206,6,199,43,"invite_code"],[206,17,199,54],[206,19,199,56,"inviteCode"],[207,4,199,67],[207,5,199,68],[207,6,199,69],[208,4,201,2,"getMyCompetitions"],[208,21,201,19],[208,23,201,21,"getMyCompetitions"],[208,24,201,21],[208,29,201,27,"apiClient"],[208,38,201,36],[208,39,201,37,"get"],[208,42,201,40],[208,43,201,41],[208,61,201,59],[208,62,201,60],[209,4,203,2,"getCompetition"],[209,18,203,16],[209,20,203,19,"id"],[209,22,203,29],[209,26,203,34,"apiClient"],[209,35,203,43],[209,36,203,44,"get"],[209,39,203,47],[209,40,203,48],[209,57,203,65,"id"],[209,59,203,67],[209,61,203,69],[209,62,203,70],[210,4,205,2,"updateStandings"],[210,19,205,17],[210,21,205,19,"updateStandings"],[210,22,206,4,"id"],[210,24,206,14],[210,26,207,4,"standings"],[210,35,207,18],[210,37,208,4,"matchday"],[210,45,208,21],[210,50,210,4,"apiClient"],[210,59,210,13],[210,60,210,14,"patch"],[210,65,210,19],[210,66,210,20],[210,83,210,37,"id"],[210,85,210,39],[210,97,210,51],[210,99,210,53],[211,6,211,6,"standings"],[211,15,211,15],[212,6,212,6,"matchday"],[213,4,213,4],[213,5,213,5],[213,6,213,6],[214,4,215,2,"payFee"],[214,10,215,8],[214,12,215,10,"payFee"],[214,13,215,11,"id"],[214,15,215,21],[214,17,215,23,"amount"],[214,23,215,37],[214,28,216,4,"apiClient"],[214,37,216,13],[214,38,216,14,"post"],[214,42,216,18],[214,43,216,19],[214,60,216,36,"id"],[214,62,216,38],[214,68,216,44],[214,70,216,46],[214,74,216,50],[214,76,216,52],[215,6,217,6,"params"],[215,12,217,12],[215,14,217,14],[216,8,217,16,"amount"],[217,6,217,23],[218,4,218,4],[218,5,218,5],[218,6,218,6],[219,4,220,2,"getTransactions"],[219,19,220,17],[219,21,220,20,"id"],[219,23,220,30],[219,27,221,4,"apiClient"],[219,36,221,13],[219,37,221,14,"get"],[219,40,221,17],[219,41,221,18],[219,58,221,35,"id"],[219,60,221,37],[219,75,221,52],[219,76,221,53],[220,4,223,2],[221,4,224,2,"payMatchdays"],[221,16,224,14],[221,18,224,16,"payMatchdays"],[221,19,224,17,"competitionId"],[221,32,224,38],[221,34,224,40,"matchdays"],[221,43,224,59],[221,48,225,4,"apiClient"],[221,57,225,13],[221,58,225,14,"post"],[221,62,225,18],[221,63,225,19],[221,80,225,36,"competitionId"],[221,93,225,49],[221,113,225,69],[221,115,225,71],[222,6,226,6,"competition_id"],[222,20,226,20],[222,22,226,22,"competitionId"],[222,35,226,35],[223,6,227,6,"matchdays"],[224,4,228,4],[224,5,228,5],[224,6,228,6],[225,4,230,2,"getMatchdayPayments"],[225,23,230,21],[225,25,230,24,"competitionId"],[225,38,230,45],[225,42,231,4,"apiClient"],[225,51,231,13],[225,52,231,14,"get"],[225,55,231,17],[225,56,231,18],[225,73,231,35,"competitionId"],[225,86,231,48],[225,106,231,68],[225,107,231,69],[226,4,233,2,"getPaymentStatusTable"],[226,25,233,23],[226,27,233,26,"competitionId"],[226,40,233,47],[226,44,234,4,"apiClient"],[226,53,234,13],[226,54,234,14,"get"],[226,57,234,17],[226,58,234,18],[226,75,234,35,"competitionId"],[226,88,234,48],[226,111,234,71],[226,112,234,72],[227,4,236,2],[228,4,237,2,"createMock"],[228,14,237,12],[228,16,237,14],[228,22,237,21,"data"],[228,26,250,3],[228,30,250,8],[229,6,251,4,"console"],[229,13,251,11],[229,14,251,12,"log"],[229,17,251,15],[229,18,251,16],[229,50,251,48],[229,52,251,50,"data"],[229,56,251,54],[229,57,251,55,"name"],[229,61,251,59],[229,62,251,60],[230,6,252,4,"console"],[230,13,252,11],[230,14,252,12,"log"],[230,17,252,15],[230,18,252,16],[230,39,252,37],[230,41,252,39,"data"],[230,45,252,43],[230,46,252,44,"total_matchdays"],[230,61,252,59],[230,65,252,63],[230,67,252,65],[230,68,252,66],[232,6,254,4],[233,6,255,4],[233,12,255,10,"storedCompetitions"],[233,30,255,28],[233,33,255,31],[233,39,255,37,"CrossPlatformStorage"],[233,59,255,57],[233,60,255,58,"getItem"],[233,67,255,65],[233,68,255,66],[233,87,255,85],[233,88,255,86],[234,6,256,4],[234,10,256,8,"existingCompetitions"],[234,30,256,28],[234,33,256,31,"storedCompetitions"],[234,51,256,49],[234,54,256,52,"JSON"],[234,58,256,56],[234,59,256,57,"parse"],[234,64,256,62],[234,65,256,63,"storedCompetitions"],[234,83,256,81],[234,84,256,82],[234,87,256,85],[234,89,256,87],[235,6,258,4,"console"],[235,13,258,11],[235,14,258,12,"log"],[235,17,258,15],[235,18,258,16],[235,60,258,58],[235,62,258,60,"existingCompetitions"],[235,82,258,80],[235,83,258,81,"length"],[235,89,258,87],[235,90,258,88],[237,6,260,4],[238,6,261,4],[238,12,261,10,"existingNames"],[238,25,261,23],[238,28,261,26,"existingCompetitions"],[238,48,261,46],[238,49,261,47,"map"],[238,52,261,50],[238,53,261,52,"comp"],[238,57,261,61],[238,61,261,66,"comp"],[238,65,261,70],[238,66,261,71,"name"],[238,70,261,75],[238,71,261,76,"toLowerCase"],[238,82,261,87],[238,83,261,88],[238,84,261,89],[238,85,261,90],[239,6,262,4],[239,10,262,8,"existingNames"],[239,23,262,21],[239,24,262,22,"includes"],[239,32,262,30],[239,33,262,31,"data"],[239,37,262,35],[239,38,262,36,"name"],[239,42,262,40],[239,43,262,41,"toLowerCase"],[239,54,262,52],[239,55,262,53],[239,56,262,54],[239,57,262,55],[239,59,262,57],[240,8,263,6],[240,14,263,12],[240,18,263,16,"Error"],[240,23,263,21],[240,24,263,22],[240,86,263,84],[240,87,263,85],[241,6,264,4],[243,6,266,4],[244,6,267,4],[244,12,267,10,"newCompetition"],[244,26,267,24],[244,29,267,27],[245,8,268,6,"_id"],[245,11,268,9],[245,13,268,11],[245,21,268,19,"Date"],[245,25,268,23],[245,26,268,24,"now"],[245,29,268,27],[245,30,268,28],[245,31,268,29],[245,33,268,31],[246,8,269,6,"name"],[246,12,269,10],[246,14,269,12,"data"],[246,18,269,16],[246,19,269,17,"name"],[246,23,269,21],[247,8,270,6,"total_matchdays"],[247,23,270,21],[247,25,270,23,"data"],[247,29,270,27],[247,30,270,28,"total_matchdays"],[247,45,270,43],[247,49,270,47],[247,51,270,49],[248,8,271,6,"participation_cost_per_team"],[248,35,271,33],[248,37,271,35,"data"],[248,41,271,39],[248,42,271,40,"participation_cost_per_team"],[248,69,271,67],[248,73,271,71],[248,78,271,76],[249,8,272,6,"expected_teams"],[249,22,272,20],[249,24,272,22,"data"],[249,28,272,26],[249,29,272,27,"expected_teams"],[249,43,272,41],[249,47,272,45],[249,48,272,46],[250,8,273,6,"total_prize_pool"],[250,24,273,22],[250,26,273,24,"data"],[250,30,273,28],[250,31,273,29,"total_prize_pool"],[250,47,273,45],[250,51,273,49],[250,57,273,55],[251,8,274,6,"daily_payment_enabled"],[251,29,274,27],[251,31,274,29,"data"],[251,35,274,33],[251,36,274,34,"daily_payment_enabled"],[251,57,274,55],[251,61,274,59],[251,66,274,64],[252,8,275,6,"daily_payment_amount"],[252,28,275,26],[252,30,275,28,"data"],[252,34,275,32],[252,35,275,33,"daily_payment_amount"],[252,55,275,53],[252,59,275,57],[252,62,275,60],[253,8,276,6,"rules"],[253,13,276,11],[253,15,276,13,"data"],[253,19,276,17],[253,20,276,18,"rules"],[253,25,276,23],[254,8,277,6,"invite_code"],[254,19,277,17],[254,21,277,19,"Math"],[254,25,277,23],[254,26,277,24,"random"],[254,32,277,30],[254,33,277,31],[254,34,277,32],[254,35,277,33,"toString"],[254,43,277,41],[254,44,277,42],[254,46,277,44],[254,47,277,45],[254,48,277,46,"substr"],[254,54,277,52],[254,55,277,53],[254,56,277,54],[254,58,277,56],[254,59,277,57],[254,60,277,58],[254,61,277,59,"toUpperCase"],[254,72,277,70],[254,73,277,71],[254,74,277,72],[255,8,278,6,"invite_link"],[255,19,278,17],[255,21,278,19],[255,50,278,48,"Math"],[255,54,278,52],[255,55,278,53,"random"],[255,61,278,59],[255,62,278,60],[255,63,278,61],[255,64,278,62,"toString"],[255,72,278,70],[255,73,278,71],[255,75,278,73],[255,76,278,74],[255,77,278,75,"substr"],[255,83,278,81],[255,84,278,82],[255,85,278,83],[255,87,278,85],[255,88,278,86],[255,89,278,87],[255,90,278,88,"toUpperCase"],[255,101,278,99],[255,102,278,100],[255,103,278,101],[255,105,278,103],[256,8,279,6,"admin_id"],[256,16,279,14],[256,18,279,16],[256,44,279,42],[257,8,279,44],[258,8,280,6,"participants"],[258,20,280,18],[258,22,280,20],[258,23,281,8],[259,10,282,10,"id"],[259,12,282,12],[259,14,282,14],[259,40,282,40],[260,10,283,10,"name"],[260,14,283,14],[260,16,283,16],[260,33,283,33],[261,10,284,10,"email"],[261,15,284,15],[261,17,284,17],[261,36,284,36],[262,10,285,10,"is_admin"],[262,18,285,18],[262,20,285,20],[262,24,285,24],[263,10,286,10,"paid_matchdays"],[263,24,286,24],[263,26,286,26],[263,27,286,27],[263,28,286,28],[263,30,286,30],[263,31,286,31],[263,32,286,32],[264,10,286,34],[265,10,287,10,"points"],[265,16,287,16],[265,18,287,18],[266,8,288,8],[266,9,288,9],[266,10,289,7],[267,8,290,6,"wallet_balance"],[267,22,290,20],[267,24,290,22],[267,25,290,23],[268,8,291,6,"is_active"],[268,17,291,15],[268,19,291,17],[268,23,291,21],[269,8,292,6,"current_matchday"],[269,24,292,22],[269,26,292,24],[269,27,292,25],[270,8,292,27],[271,8,293,6,"standings"],[271,17,293,15],[271,19,293,17],[271,20,294,8],[272,10,294,10,"position"],[272,18,294,18],[272,20,294,20],[272,21,294,21],[273,10,294,23,"player_id"],[273,19,294,32],[273,21,294,34],[273,47,294,60],[274,10,294,62,"name"],[274,14,294,66],[274,16,294,68],[274,33,294,85],[275,10,294,87,"points"],[275,16,294,93],[275,18,294,95],[276,8,294,97],[276,9,294,98],[276,10,295,7],[277,8,296,6,"created_at"],[277,18,296,16],[277,20,296,18],[277,24,296,22,"Date"],[277,28,296,26],[277,29,296,27],[277,30,296,28],[277,31,296,29,"toISOString"],[277,42,296,40],[277,43,296,41],[277,44,296,42],[278,8,297,6,"updated_at"],[278,18,297,16],[278,20,297,18],[278,24,297,22,"Date"],[278,28,297,26],[278,29,297,27],[278,30,297,28],[278,31,297,29,"toISOString"],[278,42,297,40],[278,43,297,41],[279,6,298,4],[279,7,298,5],[281,6,300,4],[282,6,301,4,"existingCompetitions"],[282,26,301,24],[282,27,301,25,"push"],[282,31,301,29],[282,32,301,30,"newCompetition"],[282,46,301,44],[282,47,301,45],[283,6,302,4],[283,12,302,10,"CrossPlatformStorage"],[283,32,302,30],[283,33,302,31,"setItem"],[283,40,302,38],[283,41,302,39],[283,60,302,58],[283,62,302,60,"JSON"],[283,66,302,64],[283,67,302,65,"stringify"],[283,76,302,74],[283,77,302,75,"existingCompetitions"],[283,97,302,95],[283,98,302,96],[283,99,302,97],[284,6,304,4,"console"],[284,13,304,11],[284,14,304,12,"log"],[284,17,304,15],[284,18,304,16],[284,71,304,69],[284,73,304,71,"existingCompetitions"],[284,93,304,91],[284,94,304,92,"length"],[284,100,304,98],[284,101,304,99],[286,6,306,4],[287,6,307,4],[287,12,307,10,"logAdminAction"],[287,26,307,24],[287,27,307,25],[287,35,307,33],[287,37,307,35,"newCompetition"],[287,51,307,49],[287,52,307,50,"name"],[287,56,307,54],[287,58,307,56],[287,75,307,73],[287,77,307,75],[288,8,308,6,"competition_id"],[288,22,308,20],[288,24,308,22,"newCompetition"],[288,38,308,36],[288,39,308,37,"_id"],[288,42,308,40],[289,8,309,6,"rules"],[289,13,309,11],[289,15,309,13,"newCompetition"],[289,29,309,27],[289,30,309,28,"rules"],[289,35,309,33],[290,8,310,6,"total_matchdays"],[290,23,310,21],[290,25,310,23,"newCompetition"],[290,39,310,37],[290,40,310,38,"total_matchdays"],[290,55,310,53],[291,8,311,6,"participation_cost_per_team"],[291,35,311,33],[291,37,311,35,"newCompetition"],[291,51,311,49],[291,52,311,50,"participation_cost_per_team"],[291,79,311,77],[292,8,312,6,"expected_teams"],[292,22,312,20],[292,24,312,22,"newCompetition"],[292,38,312,36],[292,39,312,37,"expected_teams"],[292,53,312,51],[293,8,313,6,"total_prize_pool"],[293,24,313,22],[293,26,313,24,"newCompetition"],[293,40,313,38],[293,41,313,39,"total_prize_pool"],[293,57,313,55],[294,8,314,6,"daily_payment_enabled"],[294,29,314,27],[294,31,314,29,"newCompetition"],[294,45,314,43],[294,46,314,44,"daily_payment_enabled"],[294,67,314,65],[295,8,315,6,"daily_payment_amount"],[295,28,315,26],[295,30,315,28,"newCompetition"],[295,44,315,42],[295,45,315,43,"daily_payment_amount"],[296,6,316,4],[296,7,316,5],[296,8,316,6],[297,6,318,4,"console"],[297,13,318,11],[297,14,318,12,"log"],[297,17,318,15],[297,18,318,16],[297,47,318,45],[297,49,318,47,"newCompetition"],[297,63,318,61],[297,64,318,62,"name"],[297,68,318,66],[297,69,318,67],[298,6,319,4,"console"],[298,13,319,11],[298,14,319,12,"log"],[298,17,319,15],[298,18,319,16],[298,40,319,38],[298,42,319,40,"newCompetition"],[298,56,319,54],[298,57,319,55,"name"],[298,61,319,59],[298,62,319,60],[299,6,320,4,"console"],[299,13,320,11],[299,14,320,12,"log"],[299,17,320,15],[299,18,320,16],[299,37,320,35],[299,39,320,37,"newCompetition"],[299,53,320,51],[299,54,320,52,"daily_payment_enabled"],[299,75,320,73],[299,78,320,76],[299,82,320,80,"newCompetition"],[299,96,320,94],[299,97,320,95,"daily_payment_amount"],[299,117,320,115],[299,132,320,130],[299,135,320,133],[299,145,320,143],[299,146,320,144],[300,6,321,4,"console"],[300,13,321,11],[300,14,321,12,"log"],[300,17,321,15],[300,18,321,16],[300,40,321,38],[300,42,321,40],[300,46,321,44,"newCompetition"],[300,60,321,58],[300,61,321,59,"total_prize_pool"],[300,77,321,75],[300,79,321,77],[300,80,321,78],[301,6,322,4,"console"],[301,13,322,11],[301,14,322,12,"log"],[301,17,322,15],[301,18,322,16],[301,35,322,33],[301,37,322,35,"newCompetition"],[301,51,322,49],[301,52,322,50,"invite_code"],[301,63,322,61],[301,64,322,62],[302,6,324,4],[302,13,324,11],[303,8,324,13,"data"],[303,12,324,17],[303,14,324,19,"newCompetition"],[304,6,324,34],[304,7,324,35],[305,4,325,2],[305,5,325,3],[306,4,327,2],[307,4,328,2,"payMatchdaysMock"],[307,20,328,18],[307,22,328,20],[307,28,328,20,"payMatchdaysMock"],[307,29,328,27,"competitionId"],[307,42,328,48],[307,44,328,50,"matchdays"],[307,53,328,69],[307,58,328,74],[308,6,329,4,"console"],[308,13,329,11],[308,14,329,12,"log"],[308,17,329,15],[308,18,329,16],[308,49,329,47],[308,51,329,49,"matchdays"],[308,60,329,58],[308,62,329,60],[308,78,329,76],[308,80,329,78,"competitionId"],[308,93,329,91],[308,94,329,92],[310,6,331,4],[311,6,332,4],[311,12,332,10,"totalCost"],[311,21,332,19],[311,24,332,22,"matchdays"],[311,33,332,31],[311,34,332,32,"length"],[311,40,332,38],[311,43,332,41],[311,44,332,42],[311,45,332,43],[311,46,332,44],[313,6,334,4],[314,6,335,4],[314,13,335,11],[315,8,336,6,"data"],[315,12,336,10],[315,14,336,12],[316,10,337,8,"message"],[316,17,337,15],[316,19,337,17],[316,44,337,42,"matchdays"],[316,53,337,51],[316,54,337,52,"length"],[316,60,337,58],[316,72,337,70],[317,10,338,8,"paid_matchdays"],[317,24,338,22],[317,26,338,24,"matchdays"],[317,35,338,33],[318,10,339,8,"total_cost"],[318,20,339,18],[318,22,339,20,"totalCost"],[318,31,339,29],[319,10,340,8,"new_user_balance"],[319,26,340,24],[319,28,340,26],[319,31,340,29],[319,34,340,32,"totalCost"],[319,43,340,41],[319,44,340,42],[320,8,341,6],[321,6,342,4],[321,7,342,5],[322,4,343,2],[322,5,343,3],[323,4,345,2,"getMatchdayPaymentsMock"],[323,27,345,25],[323,29,345,27],[323,35,345,34,"competitionId"],[323,48,345,55],[323,52,345,60],[324,6,346,4,"console"],[324,13,346,11],[324,14,346,12,"log"],[324,17,346,15],[324,18,346,16],[324,70,346,68],[324,72,346,70,"competitionId"],[324,85,346,83],[324,86,346,84],[326,6,348,4],[327,6,349,4],[327,12,349,10,"mockPayments"],[327,24,349,22],[327,27,349,25],[327,29,349,27],[328,6,350,4],[328,11,350,9],[328,15,350,13,"i"],[328,16,350,14],[328,19,350,17],[328,20,350,18],[328,22,350,20,"i"],[328,23,350,21],[328,27,350,25],[328,29,350,27],[328,31,350,29,"i"],[328,32,350,30],[328,34,350,32],[328,36,350,34],[329,8,351,6,"mockPayments"],[329,20,351,18],[329,21,351,19,"push"],[329,25,351,23],[329,26,351,24],[330,10,352,8,"_id"],[330,13,352,11],[330,15,352,13],[330,26,352,24,"i"],[330,27,352,25],[330,29,352,27],[331,10,353,8,"user_id"],[331,17,353,15],[331,19,353,17],[331,45,353,43],[332,10,354,8,"competition_id"],[332,24,354,22],[332,26,354,24,"competitionId"],[332,39,354,37],[333,10,355,8,"matchday"],[333,18,355,16],[333,20,355,18,"i"],[333,21,355,19],[334,10,356,8,"amount"],[334,16,356,14],[334,18,356,16],[334,19,356,17],[335,10,357,8,"status"],[335,16,357,14],[335,18,357,16,"i"],[335,19,357,17],[335,23,357,21],[335,24,357,22],[335,27,357,25],[335,33,357,31],[335,36,357,34],[335,45,357,43],[336,10,358,8,"paid_at"],[336,17,358,15],[336,19,358,17,"i"],[336,20,358,18],[336,24,358,22],[336,25,358,23],[336,28,358,26],[336,32,358,30,"Date"],[336,36,358,34],[336,37,358,35],[336,38,358,36],[336,39,358,37,"toISOString"],[336,50,358,48],[336,51,358,49],[336,52,358,50],[336,55,358,53],[336,59,358,57],[337,10,359,8,"created_at"],[337,20,359,18],[337,22,359,20],[337,26,359,24,"Date"],[337,30,359,28],[337,31,359,29],[337,32,359,30],[337,33,359,31,"toISOString"],[337,44,359,42],[337,45,359,43],[338,8,360,6],[338,9,360,7],[338,10,360,8],[339,6,361,4],[340,6,363,4],[340,13,363,11],[341,8,364,6,"data"],[341,12,364,10],[341,14,364,12],[342,10,365,8,"competition_id"],[342,24,365,22],[342,26,365,24,"competitionId"],[342,39,365,37],[343,10,366,8,"daily_payment_enabled"],[343,31,366,29],[343,33,366,31],[343,37,366,35],[344,10,367,8,"daily_payment_amount"],[344,30,367,28],[344,32,367,30],[344,33,367,31],[345,10,368,8,"total_matchdays"],[345,25,368,23],[345,27,368,25],[345,29,368,27],[346,10,369,8,"payments"],[346,18,369,16],[346,20,369,18,"mockPayments"],[347,8,370,6],[348,6,371,4],[348,7,371,5],[349,4,372,2],[349,5,372,3],[350,4,374,2,"getPaymentStatusTableMock"],[350,29,374,27],[350,31,374,29],[350,37,374,36,"competitionId"],[350,50,374,57],[350,54,374,62],[351,6,375,4,"console"],[351,13,375,11],[351,14,375,12,"log"],[351,17,375,15],[351,18,375,16],[351,73,375,71],[351,75,375,73,"competitionId"],[351,88,375,86],[351,89,375,87],[353,6,377,4],[354,6,378,4],[354,12,378,10,"mockTable"],[354,21,378,19],[354,24,378,22],[354,25,378,23],[355,8,379,6,"user_id"],[355,15,379,13],[355,17,379,15],[355,43,379,41],[356,8,380,6,"username"],[356,16,380,14],[356,18,380,16],[356,35,380,33],[357,8,381,6,"name"],[357,12,381,10],[357,14,381,12],[357,31,381,29],[358,8,382,6,"email"],[358,13,382,11],[358,15,382,13],[358,34,382,32],[359,8,383,6,"matchday_payments"],[359,25,383,23],[359,27,383,25,"Array"],[359,32,383,30],[359,33,383,31,"from"],[359,37,383,35],[359,38,383,36],[360,10,383,37,"length"],[360,16,383,43],[360,18,383,45],[361,8,383,47],[361,9,383,48],[361,11,383,50],[361,12,383,51,"_"],[361,13,383,52],[361,15,383,54,"i"],[361,16,383,55],[361,22,383,61],[362,10,384,8,"matchday"],[362,18,384,16],[362,20,384,18,"i"],[362,21,384,19],[362,24,384,22],[362,25,384,23],[363,10,385,8,"status"],[363,16,385,14],[363,18,385,17,"i"],[363,19,385,18],[363,22,385,21],[363,23,385,22],[363,26,385,25],[363,32,385,31],[363,35,385,34],[363,44,385,44],[364,10,386,8,"amount"],[364,16,386,14],[364,18,386,16],[364,19,386,17],[365,10,387,8,"paid_at"],[365,17,387,15],[365,19,387,17,"i"],[365,20,387,18],[365,23,387,21],[365,24,387,22],[365,27,387,25],[365,31,387,29,"Date"],[365,35,387,33],[365,36,387,34],[365,37,387,35],[365,38,387,36,"toISOString"],[365,49,387,47],[365,50,387,48],[365,51,387,49],[365,54,387,52],[366,8,388,6],[366,9,388,7],[366,10,388,8],[367,6,389,4],[367,7,389,5],[367,8,389,6],[368,6,391,4],[368,13,391,11],[369,8,392,6,"data"],[369,12,392,10],[369,14,392,12],[370,10,393,8,"competition_name"],[370,26,393,24],[370,28,393,26],[370,49,393,47],[371,10,394,8,"total_matchdays"],[371,25,394,23],[371,27,394,25],[371,29,394,27],[372,10,395,8,"daily_payment_amount"],[372,30,395,28],[372,32,395,30],[372,33,395,31],[373,10,396,8,"participants"],[373,22,396,20],[373,24,396,22,"mockTable"],[374,8,397,6],[375,6,398,4],[375,7,398,5],[376,4,399,2],[376,5,399,3],[377,4,401,2],[378,4,402,2,"validateNameMock"],[378,20,402,18],[378,22,402,20],[378,28,402,27,"name"],[378,32,402,39],[378,36,402,44],[379,6,403,4,"console"],[379,13,403,11],[379,14,403,12,"log"],[379,17,403,15],[379,18,403,16],[379,57,403,55],[379,59,403,57,"name"],[379,63,403,61],[379,64,403,62],[380,6,405,4],[380,10,405,8],[380,11,405,9,"name"],[380,15,405,13],[380,16,405,14,"trim"],[380,20,405,18],[380,21,405,19],[380,22,405,20],[380,24,405,22],[381,8,406,6],[381,15,406,13],[382,10,406,15,"available"],[382,19,406,24],[382,21,406,26],[382,25,406,30],[383,10,406,32,"message"],[383,17,406,39],[383,19,406,41],[384,8,406,44],[384,9,406,45],[385,6,407,4],[387,6,409,4],[388,6,410,4],[388,12,410,10,"storedCompetitions"],[388,30,410,28],[388,33,410,31],[388,39,410,37,"CrossPlatformStorage"],[388,59,410,57],[388,60,410,58,"getItem"],[388,67,410,65],[388,68,410,66],[388,86,410,84],[388,87,410,85],[389,6,411,4],[389,10,411,8,"existingCompetitions"],[389,30,411,28],[389,33,411,31,"storedCompetitions"],[389,51,411,49],[389,54,411,52,"JSON"],[389,58,411,56],[389,59,411,57,"parse"],[389,64,411,62],[389,65,411,63,"storedCompetitions"],[389,83,411,81],[389,84,411,82],[389,87,411,85],[389,89,411,87],[391,6,413,4],[392,6,414,4],[392,12,414,10,"defaultNames"],[392,24,414,22],[392,27,414,25],[392,28,414,26],[392,50,414,48],[392,52,414,50],[392,78,414,76],[392,80,414,78],[392,96,414,94],[392,97,414,95],[393,6,415,4],[393,12,415,10,"allNames"],[393,20,415,18],[393,23,415,21],[393,24,416,6],[393,27,416,9,"existingCompetitions"],[393,47,416,29],[393,48,416,30,"map"],[393,51,416,33],[393,52,416,35,"comp"],[393,56,416,44],[393,60,416,49,"comp"],[393,64,416,53],[393,65,416,54,"name"],[393,69,416,58],[393,70,416,59,"toLowerCase"],[393,81,416,70],[393,82,416,71],[393,83,416,72],[393,84,416,73],[393,86,417,6],[393,89,417,9,"defaultNames"],[393,101,417,21],[393,102,417,22,"map"],[393,105,417,25],[393,106,417,26,"name"],[393,110,417,30],[393,114,417,34,"name"],[393,118,417,38],[393,119,417,39,"toLowerCase"],[393,130,417,50],[393,131,417,51],[393,132,417,52],[393,133,417,53],[393,134,418,5],[394,6,420,4],[394,12,420,10,"isAvailable"],[394,23,420,21],[394,26,420,24],[394,27,420,25,"allNames"],[394,35,420,33],[394,36,420,34,"includes"],[394,44,420,42],[394,45,420,43,"name"],[394,49,420,47],[394,50,420,48,"toLowerCase"],[394,61,420,59],[394,62,420,60],[394,63,420,61],[394,64,420,62],[395,6,422,4],[395,13,422,11],[396,8,423,6,"available"],[396,17,423,15],[396,19,423,17,"isAvailable"],[396,30,423,28],[397,8,424,6,"message"],[397,15,424,13],[397,17,424,15,"isAvailable"],[397,28,424,26],[397,31,424,29],[397,47,424,45],[397,50,424,48],[398,6,425,4],[398,7,425,5],[399,4,426,2],[399,5,426,3],[400,4,428,2],[401,4,429,2,"getMyCompetitionsMock"],[401,25,429,23],[401,27,429,25],[401,33,429,25,"getMyCompetitionsMock"],[401,34,429,25],[401,39,429,37],[402,6,430,4,"console"],[402,13,430,11],[402,14,430,12,"log"],[402,17,430,15],[402,18,430,16],[402,52,430,50],[402,53,430,51],[403,6,431,4],[403,12,431,10,"storedCompetitions"],[403,30,431,28],[403,33,431,31],[403,39,431,37,"CrossPlatformStorage"],[403,59,431,57],[403,60,431,58,"getItem"],[403,67,431,65],[403,68,431,66],[403,87,431,85],[403,88,431,86],[404,6,433,4],[404,10,433,8,"storedCompetitions"],[404,28,433,26],[404,30,433,28],[405,8,434,6],[405,14,434,12,"competitions"],[405,26,434,24],[405,29,434,27,"JSON"],[405,33,434,31],[405,34,434,32,"parse"],[405,39,434,37],[405,40,434,38,"storedCompetitions"],[405,58,434,56],[405,59,434,57],[406,8,435,6,"console"],[406,15,435,13],[406,16,435,14,"log"],[406,19,435,17],[406,20,435,18],[406,55,435,53],[406,57,435,55,"competitions"],[406,69,435,67],[406,70,435,68,"length"],[406,76,435,74],[406,77,435,75],[407,8,437,6,"competitions"],[407,20,437,18],[407,21,437,19,"forEach"],[407,28,437,26],[407,29,437,27],[407,30,437,28,"comp"],[407,34,437,37],[407,36,437,39,"index"],[407,41,437,52],[407,46,437,57],[408,10,438,8,"console"],[408,17,438,15],[408,18,438,16,"log"],[408,21,438,19],[408,22,438,20],[408,25,438,23,"index"],[408,30,438,28],[408,33,438,31],[408,34,438,32],[408,39,438,37,"comp"],[408,43,438,41],[408,44,438,42,"name"],[408,48,438,46],[408,57,438,55,"comp"],[408,61,438,59],[408,62,438,60,"_id"],[408,65,438,63],[408,68,438,66],[408,69,438,67],[409,8,439,6],[409,9,439,7],[409,10,439,8],[410,8,441,6],[410,15,441,13,"competitions"],[410,27,441,25],[411,6,442,4],[411,7,442,5],[411,13,442,11],[412,8,443,6,"console"],[412,15,443,13],[412,16,443,14,"log"],[412,19,443,17],[412,20,443,18],[412,80,443,78],[412,81,443,79],[413,8,444,6],[413,15,444,13],[413,17,444,15],[414,6,445,4],[415,4,446,2],[415,5,446,3],[416,4,448,2,"joinMock"],[416,12,448,10],[416,14,448,12],[416,20,448,19,"inviteCode"],[416,30,448,37],[416,34,448,42],[417,6,449,4,"console"],[417,13,449,11],[417,14,449,12,"log"],[417,17,449,15],[417,18,449,16],[417,59,449,57],[417,61,449,59,"inviteCode"],[417,71,449,69],[417,72,449,70],[418,6,450,4],[418,10,450,8,"inviteCode"],[418,20,450,18],[418,21,450,19,"length"],[418,27,450,25],[418,30,450,28],[418,31,450,29],[418,33,450,31],[419,8,451,6],[419,14,451,12],[419,18,451,16,"Error"],[419,23,451,21],[419,24,451,22],[419,45,451,43],[419,46,451,44],[420,6,452,4],[421,6,453,4],[421,13,453,11],[422,8,453,13,"message"],[422,15,453,20],[422,17,453,22],[423,6,453,57],[423,7,453,58],[424,4,454,2],[424,5,454,3],[425,4,456,2],[426,4,457,2,"deleteMock"],[426,14,457,12],[426,16,457,14],[426,22,457,21,"competitionId"],[426,35,457,42],[426,39,457,47],[427,6,458,4,"console"],[427,13,458,11],[427,14,458,12,"log"],[427,17,458,15],[427,18,458,16],[427,51,458,49],[427,53,458,51,"competitionId"],[427,66,458,64],[427,67,458,65],[428,6,460,4],[428,12,460,10,"storedCompetitions"],[428,30,460,28],[428,33,460,31],[428,39,460,37,"CrossPlatformStorage"],[428,59,460,57],[428,60,460,58,"getItem"],[428,67,460,65],[428,68,460,66],[428,86,460,84],[428,87,460,85],[429,6,461,4],[429,10,461,8,"competitions"],[429,22,461,20],[429,25,461,23,"storedCompetitions"],[429,43,461,41],[429,46,461,44,"JSON"],[429,50,461,48],[429,51,461,49,"parse"],[429,56,461,54],[429,57,461,55,"storedCompetitions"],[429,75,461,73],[429,76,461,74],[429,79,461,77],[429,81,461,79],[430,6,463,4],[430,12,463,10,"competitionToDelete"],[430,31,463,29],[430,34,463,32,"competitions"],[430,46,463,44],[430,47,463,45,"find"],[430,51,463,49],[430,52,463,51,"comp"],[430,56,463,60],[430,60,463,65,"comp"],[430,64,463,69],[430,65,463,70,"_id"],[430,68,463,73],[430,73,463,78,"competitionId"],[430,86,463,91],[430,87,463,92],[431,6,464,4],[431,10,464,8],[431,11,464,9,"competitionToDelete"],[431,30,464,28],[431,32,464,30],[432,8,465,6],[432,14,465,12],[432,18,465,16,"Error"],[432,23,465,21],[432,24,465,22],[432,47,465,45],[432,48,465,46],[433,6,466,4],[435,6,468,4],[436,6,469,4],[436,10,469,8,"competitionToDelete"],[436,29,469,27],[436,30,469,28,"admin_id"],[436,38,469,36],[436,43,469,41],[436,69,469,67],[436,71,469,69],[437,8,470,6],[437,14,470,12],[437,18,470,16,"Error"],[437,23,470,21],[437,24,470,22],[437,64,470,62],[437,65,470,63],[438,6,471,4],[440,6,473,4],[441,6,474,4,"competitions"],[441,18,474,16],[441,21,474,19,"competitions"],[441,33,474,31],[441,34,474,32,"filter"],[441,40,474,38],[441,41,474,40,"comp"],[441,45,474,49],[441,49,474,54,"comp"],[441,53,474,58],[441,54,474,59,"_id"],[441,57,474,62],[441,62,474,67,"competitionId"],[441,75,474,80],[441,76,474,81],[442,6,475,4],[442,12,475,10,"CrossPlatformStorage"],[442,32,475,30],[442,33,475,31,"setItem"],[442,40,475,38],[442,41,475,39],[442,59,475,57],[442,61,475,59,"JSON"],[442,65,475,63],[442,66,475,64,"stringify"],[442,75,475,73],[442,76,475,74,"competitions"],[442,88,475,86],[442,89,475,87],[442,90,475,88],[444,6,477,4],[445,6,478,4],[445,12,478,10,"logAdminAction"],[445,26,478,24],[445,27,478,25],[445,35,478,33],[445,37,478,35,"competitionToDelete"],[445,56,478,54],[445,57,478,55,"name"],[445,61,478,59],[445,63,478,61],[445,80,478,78],[445,81,478,79],[446,6,480,4,"console"],[446,13,480,11],[446,14,480,12,"log"],[446,17,480,15],[446,18,480,16],[446,54,480,52],[446,55,480,53],[447,6,481,4],[447,13,481,11],[448,8,481,13,"message"],[448,15,481,20],[448,17,481,22],[449,6,481,57],[449,7,481,58],[450,4,482,2],[450,5,482,3],[451,4,484,2],[452,4,485,2,"editMock"],[452,12,485,10],[452,14,485,12],[452,20,485,12,"editMock"],[452,21,485,19,"competitionId"],[452,34,485,40],[452,36,485,42,"updates"],[452,43,485,54],[452,48,485,59],[453,6,486,4,"console"],[453,13,486,11],[453,14,486,12,"log"],[453,17,486,15],[453,18,486,16],[453,49,486,47],[453,51,486,49,"competitionId"],[453,64,486,62],[453,66,486,64,"updates"],[453,73,486,71],[453,74,486,72],[454,6,488,4],[454,12,488,10,"storedCompetitions"],[454,30,488,28],[454,33,488,31],[454,39,488,37,"CrossPlatformStorage"],[454,59,488,57],[454,60,488,58,"getItem"],[454,67,488,65],[454,68,488,66],[454,86,488,84],[454,87,488,85],[455,6,489,4],[455,10,489,8,"competitions"],[455,22,489,20],[455,25,489,23,"storedCompetitions"],[455,43,489,41],[455,46,489,44,"JSON"],[455,50,489,48],[455,51,489,49,"parse"],[455,56,489,54],[455,57,489,55,"storedCompetitions"],[455,75,489,73],[455,76,489,74],[455,79,489,77],[455,81,489,79],[456,6,491,4],[456,12,491,10,"competitionIndex"],[456,28,491,26],[456,31,491,29,"competitions"],[456,43,491,41],[456,44,491,42,"findIndex"],[456,53,491,51],[456,54,491,53,"comp"],[456,58,491,62],[456,62,491,67,"comp"],[456,66,491,71],[456,67,491,72,"_id"],[456,70,491,75],[456,75,491,80,"competitionId"],[456,88,491,93],[456,89,491,94],[457,6,492,4],[457,10,492,8,"competitionIndex"],[457,26,492,24],[457,31,492,29],[457,32,492,30],[457,33,492,31],[457,35,492,33],[458,8,493,6],[458,14,493,12],[458,18,493,16,"Error"],[458,23,493,21],[458,24,493,22],[458,47,493,45],[458,48,493,46],[459,6,494,4],[460,6,496,4],[460,12,496,10,"competition"],[460,23,496,21],[460,26,496,24,"competitions"],[460,38,496,36],[460,39,496,37,"competitionIndex"],[460,55,496,53],[460,56,496,54],[462,6,498,4],[463,6,499,4],[463,10,499,8,"competition"],[463,21,499,19],[463,22,499,20,"admin_id"],[463,30,499,28],[463,35,499,33],[463,61,499,59],[463,63,499,61],[464,8,500,6],[464,14,500,12],[464,18,500,16,"Error"],[464,23,500,21],[464,24,500,22],[464,62,500,60],[464,63,500,61],[465,6,501,4],[467,6,503,4],[468,6,504,4,"competitions"],[468,18,504,16],[468,19,504,17,"competitionIndex"],[468,35,504,33],[468,36,504,34],[468,39,504,37],[469,8,505,6],[469,11,505,9,"competition"],[469,22,505,20],[470,8,506,6],[470,11,506,9,"updates"],[470,18,506,16],[471,8,507,6,"updated_at"],[471,18,507,16],[471,20,507,18],[471,24,507,22,"Date"],[471,28,507,26],[471,29,507,27],[471,30,507,28],[471,31,507,29,"toISOString"],[471,42,507,40],[471,43,507,41],[472,6,508,4],[472,7,508,5],[473,6,510,4],[473,12,510,10,"CrossPlatformStorage"],[473,32,510,30],[473,33,510,31,"setItem"],[473,40,510,38],[473,41,510,39],[473,59,510,57],[473,61,510,59,"JSON"],[473,65,510,63],[473,66,510,64,"stringify"],[473,75,510,73],[473,76,510,74,"competitions"],[473,88,510,86],[473,89,510,87],[473,90,510,88],[475,6,512,4],[476,6,513,4],[476,12,513,10,"logAdminAction"],[476,26,513,24],[476,27,513,25],[476,33,513,31],[476,35,513,33,"competition"],[476,46,513,44],[476,47,513,45,"name"],[476,51,513,49],[476,53,513,51],[476,70,513,68],[476,72,513,70,"updates"],[476,79,513,77],[476,80,513,78],[477,6,515,4,"console"],[477,13,515,11],[477,14,515,12,"log"],[477,17,515,15],[477,18,515,16],[477,54,515,52],[477,55,515,53],[478,6,516,4],[478,13,516,11,"competitions"],[478,25,516,23],[478,26,516,24,"competitionIndex"],[478,42,516,40],[478,43,516,41],[479,4,517,2],[479,5,517,3],[480,4,519,2],[481,4,520,2,"awardDailyPrizeMock"],[481,23,520,21],[481,25,520,23],[481,31,520,23,"awardDailyPrizeMock"],[481,32,520,30,"competitionId"],[481,45,520,51],[481,47,520,53,"matchday"],[481,55,520,69],[481,57,520,71,"winnerId"],[481,65,520,87],[481,70,520,92],[482,6,521,4,"console"],[482,13,521,11],[482,14,521,12,"log"],[482,17,521,15],[482,18,521,16],[482,62,521,60],[482,64,521,62,"matchday"],[482,72,521,70],[482,74,521,72],[482,83,521,81],[482,85,521,83,"winnerId"],[482,93,521,91],[482,94,521,92],[483,6,523,4],[483,12,523,10,"storedCompetitions"],[483,30,523,28],[483,33,523,31],[483,39,523,37,"CrossPlatformStorage"],[483,59,523,57],[483,60,523,58,"getItem"],[483,67,523,65],[483,68,523,66],[483,86,523,84],[483,87,523,85],[484,6,524,4],[484,10,524,8,"competitions"],[484,22,524,20],[484,25,524,23,"storedCompetitions"],[484,43,524,41],[484,46,524,44,"JSON"],[484,50,524,48],[484,51,524,49,"parse"],[484,56,524,54],[484,57,524,55,"storedCompetitions"],[484,75,524,73],[484,76,524,74],[484,79,524,77],[484,81,524,79],[485,6,526,4],[485,12,526,10,"competitionIndex"],[485,28,526,26],[485,31,526,29,"competitions"],[485,43,526,41],[485,44,526,42,"findIndex"],[485,53,526,51],[485,54,526,53,"comp"],[485,58,526,62],[485,62,526,67,"comp"],[485,66,526,71],[485,67,526,72,"_id"],[485,70,526,75],[485,75,526,80,"competitionId"],[485,88,526,93],[485,89,526,94],[486,6,527,4],[486,10,527,8,"competitionIndex"],[486,26,527,24],[486,31,527,29],[486,32,527,30],[486,33,527,31],[486,35,527,33],[487,8,528,6],[487,14,528,12],[487,18,528,16,"Error"],[487,23,528,21],[487,24,528,22],[487,47,528,45],[487,48,528,46],[488,6,529,4],[489,6,531,4],[489,12,531,10,"competition"],[489,23,531,21],[489,26,531,24,"competitions"],[489,38,531,36],[489,39,531,37,"competitionIndex"],[489,55,531,53],[489,56,531,54],[491,6,533,4],[492,6,534,4],[492,10,534,8,"competition"],[492,21,534,19],[492,22,534,20,"admin_id"],[492,30,534,28],[492,35,534,33],[492,61,534,59],[492,63,534,61],[493,8,535,6],[493,14,535,12],[493,18,535,16,"Error"],[493,23,535,21],[493,24,535,22],[493,59,535,57],[493,60,535,58],[494,6,536,4],[496,6,538,4],[497,6,539,4],[497,10,539,8],[497,11,539,9,"competition"],[497,22,539,20],[497,23,539,21,"rules"],[497,28,539,26],[497,32,539,30],[497,33,539,31],[497,34,539,32],[497,41,539,39],[497,43,539,41],[497,50,539,48],[497,51,539,49],[497,52,539,50,"includes"],[497,60,539,58],[497,61,539,59,"competition"],[497,72,539,70],[497,73,539,71,"rules"],[497,78,539,76],[497,79,539,77,"type"],[497,83,539,81],[497,84,539,82],[497,86,539,84],[498,8,540,6],[498,14,540,12],[498,18,540,16,"Error"],[498,23,540,21],[498,24,540,22],[498,69,540,67],[498,70,540,68],[499,6,541,4],[500,6,543,4],[500,12,543,10,"dailyPrizeAmount"],[500,28,543,26],[500,31,543,29,"competition"],[500,42,543,40],[500,43,543,41,"rules"],[500,48,543,46],[500,49,543,47,"daily_prize"],[500,60,543,58],[500,64,543,62],[500,65,543,63],[501,6,544,4],[501,12,544,10,"winner"],[501,18,544,16],[501,21,544,19,"competition"],[501,32,544,30],[501,33,544,31,"participants"],[501,45,544,43],[501,46,544,44,"find"],[501,50,544,48],[501,51,544,50,"p"],[501,52,544,56],[501,56,544,61,"p"],[501,57,544,62],[501,58,544,63,"id"],[501,60,544,65],[501,65,544,70,"winnerId"],[501,73,544,78],[501,74,544,79],[502,6,546,4],[502,10,546,8],[502,11,546,9,"winner"],[502,17,546,15],[502,19,546,17],[503,8,547,6],[503,14,547,12],[503,18,547,16,"Error"],[503,23,547,21],[503,24,547,22],[503,57,547,55],[503,58,547,56],[504,6,548,4],[506,6,550,4],[507,6,551,4],[507,10,551,8],[507,11,551,9,"competition"],[507,22,551,20],[507,23,551,21,"daily_winners"],[507,36,551,34],[507,38,551,36],[508,8,552,6,"competition"],[508,19,552,17],[508,20,552,18,"daily_winners"],[508,33,552,31],[508,36,552,34],[508,37,552,35],[508,38,552,36],[509,6,553,4],[511,6,555,4],[512,6,556,4],[512,10,556,8,"competition"],[512,21,556,19],[512,22,556,20,"daily_winners"],[512,35,556,33],[512,36,556,34,"matchday"],[512,44,556,42],[512,45,556,43],[512,47,556,45],[513,8,557,6],[513,14,557,12],[513,18,557,16,"Error"],[513,23,557,21],[513,24,557,22],[513,52,557,50,"matchday"],[513,60,557,58],[513,83,557,81,"competition"],[513,94,557,92],[513,95,557,93,"daily_winners"],[513,108,557,106],[513,109,557,107,"matchday"],[513,117,557,115],[513,118,557,116],[513,119,557,117,"name"],[513,123,557,121],[513,125,557,123],[513,126,557,124],[514,6,558,4],[516,6,560,4],[517,6,561,4,"competition"],[517,17,561,15],[517,18,561,16,"daily_winners"],[517,31,561,29],[517,32,561,30,"matchday"],[517,40,561,38],[517,41,561,39],[517,44,561,42],[518,8,562,6,"user_id"],[518,15,562,13],[518,17,562,15,"winnerId"],[518,25,562,23],[519,8,563,6,"name"],[519,12,563,10],[519,14,563,12,"winner"],[519,20,563,18],[519,21,563,19,"name"],[519,25,563,23],[520,8,564,6,"amount"],[520,14,564,12],[520,16,564,14,"dailyPrizeAmount"],[520,32,564,30],[521,8,565,6,"awarded_at"],[521,18,565,16],[521,20,565,18],[521,24,565,22,"Date"],[521,28,565,26],[521,29,565,27],[521,30,565,28],[521,31,565,29,"toISOString"],[521,42,565,40],[521,43,565,41],[522,6,566,4],[522,7,566,5],[524,6,568,4],[525,6,569,4,"competitions"],[525,18,569,16],[525,19,569,17,"competitionIndex"],[525,35,569,33],[525,36,569,34],[525,39,569,37,"competition"],[525,50,569,48],[526,6,570,4],[526,12,570,10,"CrossPlatformStorage"],[526,32,570,30],[526,33,570,31,"setItem"],[526,40,570,38],[526,41,570,39],[526,59,570,57],[526,61,570,59,"JSON"],[526,65,570,63],[526,66,570,64,"stringify"],[526,75,570,73],[526,76,570,74,"competitions"],[526,88,570,86],[526,89,570,87],[526,90,570,88],[528,6,572,4],[529,6,573,4],[529,12,573,10,"logAdminAction"],[529,26,573,24],[529,27,573,25],[529,46,573,44],[529,48,573,46,"competition"],[529,59,573,57],[529,60,573,58,"name"],[529,64,573,62],[529,66,573,64],[529,83,573,81],[529,85,573,83],[530,8,574,6,"matchday"],[530,16,574,14],[531,8,575,6,"winner"],[531,14,575,12],[531,16,575,14,"winner"],[531,22,575,20],[531,23,575,21,"name"],[531,27,575,25],[532,8,576,6,"amount"],[532,14,576,12],[532,16,576,14,"dailyPrizeAmount"],[533,6,577,4],[533,7,577,5],[533,8,577,6],[535,6,579,4],[536,6,580,4,"console"],[536,13,580,11],[536,14,580,12,"log"],[536,17,580,15],[536,18,580,16],[536,24,580,22,"winner"],[536,30,580,28],[536,31,580,29,"name"],[536,35,580,33],[536,48,580,46,"dailyPrizeAmount"],[536,64,580,62],[536,89,580,87,"matchday"],[536,97,580,95],[536,99,580,97],[536,100,580,98],[537,6,582,4,"console"],[537,13,582,11],[537,14,582,12,"log"],[537,17,582,15],[537,18,582,16],[537,54,582,52],[537,55,582,53],[538,6,583,4],[538,13,583,11],[539,8,584,6,"message"],[539,15,584,13],[539,17,584,15],[539,36,584,34,"dailyPrizeAmount"],[539,52,584,50],[539,67,584,65,"winner"],[539,73,584,71],[539,74,584,72,"name"],[539,78,584,76],[539,95,584,93,"matchday"],[539,103,584,101],[539,105,584,103],[540,8,585,6,"competition"],[540,19,585,17],[540,21,585,19,"competition"],[541,6,586,4],[541,7,586,5],[542,4,587,2],[542,5,587,3],[543,4,589,2],[544,4,590,2,"getAdminLogsMock"],[544,20,590,18],[544,22,590,20],[544,28,590,20,"getAdminLogsMock"],[544,29,590,20],[544,34,590,32],[545,6,591,4,"console"],[545,13,591,11],[545,14,591,12,"log"],[545,17,591,15],[545,18,591,16],[545,47,591,45],[545,48,591,46],[546,6,593,4],[546,10,593,8],[547,8,594,6],[547,14,594,12,"logs"],[547,18,594,16],[547,21,594,19],[547,28,594,25,"CrossPlatformStorage"],[547,48,594,45],[547,49,594,46,"getItem"],[547,56,594,53],[547,57,594,54],[547,68,594,65],[547,69,594,66],[547,74,594,70],[547,78,594,74],[548,8,595,6],[548,14,595,12,"adminLogs"],[548,23,595,21],[548,26,595,24,"JSON"],[548,30,595,28],[548,31,595,29,"parse"],[548,36,595,34],[548,37,595,35,"logs"],[548,41,595,39],[548,42,595,40],[550,8,597,6],[551,8,598,6,"adminLogs"],[551,17,598,15],[551,18,598,16,"sort"],[551,22,598,20],[551,23,598,21],[551,24,598,22,"a"],[551,25,598,28],[551,27,598,30,"b"],[551,28,598,36],[551,33,598,41],[551,37,598,45,"Date"],[551,41,598,49],[551,42,598,50,"b"],[551,43,598,51],[551,44,598,52,"timestamp"],[551,53,598,61],[551,54,598,62],[551,55,598,63,"getTime"],[551,62,598,70],[551,63,598,71],[551,64,598,72],[551,67,598,75],[551,71,598,79,"Date"],[551,75,598,83],[551,76,598,84,"a"],[551,77,598,85],[551,78,598,86,"timestamp"],[551,87,598,95],[551,88,598,96],[551,89,598,97,"getTime"],[551,96,598,104],[551,97,598,105],[551,98,598,106],[551,99,598,107],[552,8,600,6,"console"],[552,15,600,13],[552,16,600,14,"log"],[552,19,600,17],[552,20,600,18],[552,42,600,40],[552,44,600,42,"adminLogs"],[552,53,600,51],[552,54,600,52,"length"],[552,60,600,58],[552,61,600,59],[553,8,601,6],[553,15,601,13,"adminLogs"],[553,24,601,22],[554,6,602,4],[554,7,602,5],[554,8,602,6],[554,15,602,13,"error"],[554,20,602,18],[554,22,602,20],[555,8,603,6,"console"],[555,15,603,13],[555,16,603,14,"error"],[555,21,603,19],[555,22,603,20],[555,52,603,50],[555,54,603,52,"error"],[555,59,603,57],[555,60,603,58],[556,8,604,6],[556,15,604,13],[556,17,604,15],[557,6,605,4],[558,4,606,2],[559,2,607,0],[559,3,607,1],[561,2,609,0],[562,2,610,7],[562,8,610,13,"walletAPI"],[562,17,610,22],[562,20,610,25],[563,4,611,2,"getBalance"],[563,14,611,12],[563,16,611,14,"getBalance"],[563,17,611,14],[563,22,611,20,"apiClient"],[563,31,611,29],[563,32,611,30,"get"],[563,35,611,33],[563,36,611,34],[563,53,611,51],[563,54,611,52],[564,4,613,2,"topUp"],[564,9,613,7],[564,11,613,10,"amount"],[564,17,613,24],[564,21,614,4,"apiClient"],[564,30,614,13],[564,31,614,14,"post"],[564,35,614,18],[564,36,614,19],[564,51,614,34],[564,53,614,36],[564,57,614,40],[564,59,614,42],[565,6,615,6,"params"],[565,12,615,12],[565,14,615,14],[566,8,615,16,"amount"],[567,6,615,23],[568,4,616,4],[568,5,616,5],[568,6,616,6],[569,4,618,2,"withdraw"],[569,12,618,10],[569,14,618,13,"amount"],[569,20,618,27],[569,24,619,4,"apiClient"],[569,33,619,13],[569,34,619,14,"post"],[569,38,619,18],[569,39,619,19],[569,57,619,37],[569,59,619,39],[569,63,619,43],[569,65,619,45],[570,6,620,6,"params"],[570,12,620,12],[570,14,620,14],[571,8,620,16,"amount"],[572,6,620,23],[573,4,621,4],[573,5,621,5],[573,6,621,6],[574,4,623,2,"getTransactions"],[574,19,623,17],[574,21,623,19,"getTransactions"],[574,22,623,19],[574,27,623,25,"apiClient"],[574,36,623,34],[574,37,623,35,"get"],[574,40,623,38],[574,41,623,39],[574,56,623,54],[575,2,624,0],[575,3,624,1],[576,2,626,0],[576,6,626,0,"_default"],[576,14,626,0],[576,17,626,15,"apiClient"],[576,26,626,24],[577,0,626,25],[577,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnCgE;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CG;2BCQ;ODE;G3CO;Y6CE;G7CM;c8CG;kDCM,yCD;uCEW,yCF;G9CQ;YiDG;oDCM,yCD;GjD0B;uBmDG;oDDM,yCC;iDCkB,6BD;GnD2C;oBqDG;qBCQ,qFD;GrDQ;cuDK,sCvD;SwDE;MxDG;YyDE;MzDG;mB0DE,oC1D"},"hasCjsExports":false},"type":"js/module"}]}