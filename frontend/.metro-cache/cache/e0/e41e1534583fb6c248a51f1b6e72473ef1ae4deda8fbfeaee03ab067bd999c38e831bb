{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":39,"index":150}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"../utils/CrossPlatformStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":151},"end":{"line":4,"column":65,"index":216}}],"key":"f35s9TWsgQpxKKiCp9CmSar+L+U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _utilsCrossPlatformStorage = require(_dependencyMap[4], \"../utils/CrossPlatformStorage\");\n  var CrossPlatformStorage = _interopDefault(_utilsCrossPlatformStorage);\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantaleague-pay.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.default.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      // Generate truly random unique invite code (not based on name)\n      const generateRandomCode = () => {\n        const chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'; // Exclude confusing chars like O, 0, I, L\n        let result = '';\n        for (let i = 0; i < 8; i++) {\n          result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n      };\n\n      // Ensure invite code is globally unique\n      let inviteCode = generateRandomCode();\n      while (existingCompetitions.some(comp => comp.invite_code === inviteCode)) {\n        inviteCode = generateRandomCode();\n        console.log('🔄 Generated new code due to collision:', inviteCode);\n      }\n      console.log('✅ Generated unique invite code:', inviteCode);\n      const newCompetition = {\n        _id: `comp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: inviteCode,\n        // Random unique code\n        invite_link: `https://fantapay.app/join/${inviteCode}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        competitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n        });\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    },\n    // Critical Missing Method: Get ALL competitions for uniqueness validation\n    getAllCompetitions: async () => {\n      console.log('🌐 Mock: Getting ALL competitions for validation');\n      try {\n        // Get competitions from both storage locations \n        const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n        let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Also check the old storage key for backwards compatibility\n        const oldStoredCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n        const oldCompetitions = oldStoredCompetitions ? JSON.parse(oldStoredCompetitions) : [];\n\n        // Combine both sources and remove duplicates\n        const allCompetitions = [...competitions, ...oldCompetitions];\n        const uniqueCompetitions = allCompetitions.filter((comp, index, self) => index === self.findIndex(c => c._id === comp._id));\n        console.log('📊 Total unique competitions found:', uniqueCompetitions.length);\n        return uniqueCompetitions;\n      } catch (error) {\n        console.error('💥 Error getting all competitions:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  const databaseAPI = {\n    resetDatabase: async () => {\n      console.log('🗑️ Resetting database - clearing all stored data');\n      try {\n        await CrossPlatformStorage.default.removeItem('competitions_mock');\n        await CrossPlatformStorage.default.removeItem('admin_logs_mock');\n        await CrossPlatformStorage.default.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n        await CrossPlatformStorage.default.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n        console.log('✅ Database reset complete - all data cleared');\n        return {\n          success: true,\n          message: 'Database reset complete'\n        };\n      } catch (error) {\n        console.error('❌ Database reset failed:', error);\n        return {\n          success: false,\n          message: 'Reset failed'\n        };\n      }\n    }\n  };\n  var _default = apiClient;\n});","lineCount":611,"map":[[27,2,655,0,"Object"],[27,8,655,0],[27,9,655,0,"defineProperty"],[27,23,655,0],[27,24,655,0,"exports"],[27,31,655,0],[28,4,655,0,"enumerable"],[28,14,655,0],[29,4,655,0,"get"],[29,7,655,0],[29,18,655,0,"get"],[29,19,655,0],[30,6,655,0],[30,13,655,0,"_default"],[30,21,655,0],[31,4,655,0],[32,2,655,0],[33,2,79,0,"Object"],[33,8,79,0],[33,9,79,0,"defineProperty"],[33,23,79,0],[33,24,79,0,"exports"],[33,31,79,0],[34,4,79,0,"enumerable"],[34,14,79,0],[35,4,79,0,"get"],[35,7,79,0],[35,18,79,0,"get"],[35,19,79,0],[36,6,79,0],[36,13,79,0,"authAPI"],[36,20,79,0],[37,4,79,0],[38,2,79,0],[39,2,142,0,"Object"],[39,8,142,0],[39,9,142,0,"defineProperty"],[39,23,142,0],[39,24,142,0,"exports"],[39,31,142,0],[40,4,142,0,"enumerable"],[40,14,142,0],[41,4,142,0,"get"],[41,7,142,0],[41,18,142,0,"get"],[41,19,142,0],[42,6,142,0],[42,13,142,0,"competitionAPI"],[42,27,142,0],[43,4,142,0],[44,2,142,0],[45,2,619,0,"Object"],[45,8,619,0],[45,9,619,0,"defineProperty"],[45,23,619,0],[45,24,619,0,"exports"],[45,31,619,0],[46,4,619,0,"enumerable"],[46,14,619,0],[47,4,619,0,"get"],[47,7,619,0],[47,18,619,0,"get"],[47,19,619,0],[48,6,619,0],[48,13,619,0,"walletAPI"],[48,22,619,0],[49,4,619,0],[50,2,619,0],[51,2,636,0,"Object"],[51,8,636,0],[51,9,636,0,"defineProperty"],[51,23,636,0],[51,24,636,0,"exports"],[51,31,636,0],[52,4,636,0,"enumerable"],[52,14,636,0],[53,4,636,0,"get"],[53,7,636,0],[53,18,636,0,"get"],[53,19,636,0],[54,6,636,0],[54,13,636,0,"databaseAPI"],[54,24,636,0],[55,4,636,0],[56,2,636,0],[57,2,653,2],[57,6,653,2,"_expoVirtualEnv"],[57,21,653,2],[57,24,653,2,"require"],[57,31,653,2],[57,32,653,2,"_dependencyMap"],[57,46,653,2],[58,2,1,0],[58,6,1,0,"_axios"],[58,12,1,0],[58,15,1,0,"require"],[58,22,1,0],[58,23,1,0,"_dependencyMap"],[58,37,1,0],[59,2,1,0],[59,6,1,0,"axios"],[59,11,1,0],[59,14,1,0,"_interopDefault"],[59,29,1,0],[59,30,1,0,"_axios"],[59,36,1,0],[60,2,2,0],[60,6,2,0,"_expoSecureStore"],[60,22,2,0],[60,25,2,0,"require"],[60,32,2,0],[60,33,2,0,"_dependencyMap"],[60,47,2,0],[61,2,2,0],[61,6,2,0,"SecureStore"],[61,17,2,0],[61,20,2,0,"_interopNamespace"],[61,37,2,0],[61,38,2,0,"_expoSecureStore"],[61,54,2,0],[62,2,3,0],[62,6,3,0,"_expoConstants"],[62,20,3,0],[62,23,3,0,"require"],[62,30,3,0],[62,31,3,0,"_dependencyMap"],[62,45,3,0],[63,2,3,0],[63,6,3,0,"Constants"],[63,15,3,0],[63,18,3,0,"_interopDefault"],[63,33,3,0],[63,34,3,0,"_expoConstants"],[63,48,3,0],[64,2,4,0],[64,6,4,0,"_utilsCrossPlatformStorage"],[64,32,4,0],[64,35,4,0,"require"],[64,42,4,0],[64,43,4,0,"_dependencyMap"],[64,57,4,0],[65,2,4,0],[65,6,4,0,"CrossPlatformStorage"],[65,26,4,0],[65,29,4,0,"_interopDefault"],[65,44,4,0],[65,45,4,0,"_utilsCrossPlatformStorage"],[65,71,4,0],[66,2,6,0],[67,2,7,0],[67,8,7,6,"BACKEND_URL"],[67,19,7,17],[67,22,7,20,"Constants"],[67,31,7,29],[67,32,7,29,"default"],[67,39,7,29],[67,40,7,30,"expoConfig"],[67,50,7,40],[67,52,7,42,"extra"],[67,57,7,47],[67,59,7,49,"backendUrl"],[67,69,7,59],[67,73,7,59,"_expoVirtualEnv"],[67,88,7,59],[67,89,7,59,"env"],[67,92,7,59],[67,93,7,59,"EXPO_PUBLIC_BACKEND_URL"],[67,116,7,98],[67,120,7,102],[67,171,7,153],[68,2,9,0],[68,8,9,6,"ApiClient"],[68,17,9,15],[68,18,9,16],[69,4,12,2,"constructor"],[69,15,12,13,"constructor"],[69,16,12,13],[69,18,12,16],[70,6,13,4],[70,10,13,8],[70,11,13,9,"client"],[70,17,13,15],[70,20,13,18,"axios"],[70,25,13,23],[70,26,13,23,"default"],[70,33,13,23],[70,34,13,24,"create"],[70,40,13,30],[70,41,13,31],[71,8,14,6,"baseURL"],[71,15,14,13],[71,17,14,15],[71,20,14,18,"BACKEND_URL"],[71,31,14,29],[71,37,14,35],[72,8,15,6,"timeout"],[72,15,15,13],[72,17,15,15],[72,22,15,20],[73,8,16,6,"headers"],[73,15,16,13],[73,17,16,15],[74,10,17,8],[74,24,17,22],[74,26,17,24],[75,8,18,6],[76,6,19,4],[76,7,19,5],[76,8,19,6],[78,6,21,4],[79,6,22,4],[79,10,22,8],[79,11,22,9,"client"],[79,17,22,15],[79,18,22,16,"interceptors"],[79,30,22,28],[79,31,22,29,"request"],[79,38,22,36],[79,39,22,37,"use"],[79,42,22,40],[79,43,22,41],[79,49,22,48,"config"],[79,55,22,54],[79,59,22,59],[80,8,23,6,"console"],[80,15,23,13],[80,16,23,14,"log"],[80,19,23,17],[80,20,23,18],[80,39,23,37,"config"],[80,45,23,43],[80,46,23,44,"method"],[80,52,23,50],[80,54,23,52,"toUpperCase"],[80,65,23,63],[80,66,23,64],[80,67,23,65],[80,71,23,69,"config"],[80,77,23,75],[80,78,23,76,"url"],[80,81,23,79],[80,83,23,81],[80,85,23,83,"config"],[80,91,23,89],[80,92,23,90,"data"],[80,96,23,94],[80,97,23,95],[81,8,25,6],[81,14,25,12,"token"],[81,19,25,17],[81,22,25,20],[81,28,25,26,"SecureStore"],[81,39,25,37],[81,40,25,38,"getItemAsync"],[81,52,25,50],[81,53,25,51],[81,68,25,66],[81,69,25,67],[82,8,26,6],[82,12,26,10,"token"],[82,17,26,15],[82,19,26,17],[83,10,27,8,"config"],[83,16,27,14],[83,17,27,15,"headers"],[83,24,27,22],[83,25,27,23,"Authorization"],[83,38,27,36],[83,41,27,39],[83,51,27,49,"token"],[83,56,27,54],[83,58,27,56],[84,8,28,6],[85,8,29,6],[85,15,29,13,"config"],[85,21,29,19],[86,6,30,4],[86,7,30,5],[86,8,30,6],[88,6,32,4],[89,6,33,4],[89,10,33,8],[89,11,33,9,"client"],[89,17,33,15],[89,18,33,16,"interceptors"],[89,30,33,28],[89,31,33,29,"response"],[89,39,33,37],[89,40,33,38,"use"],[89,43,33,41],[89,44,34,7,"response"],[89,52,34,15],[89,56,34,20],[90,8,35,8,"console"],[90,15,35,15],[90,16,35,16,"log"],[90,19,35,19],[90,20,35,20],[90,39,35,39,"response"],[90,47,35,47],[90,48,35,48,"status"],[90,54,35,54],[90,56,35,56],[90,58,35,58,"response"],[90,66,35,66],[90,67,35,67,"data"],[90,71,35,71],[90,72,35,72],[91,8,36,8],[91,15,36,15,"response"],[91,23,36,23],[92,6,37,6],[92,7,37,7],[92,9,38,7,"error"],[92,14,38,12],[92,18,38,17],[93,8,39,8,"console"],[93,15,39,15],[93,16,39,16,"log"],[93,19,39,19],[93,20,39,20],[93,36,39,36,"error"],[93,41,39,41],[93,42,39,42,"response"],[93,50,39,50],[93,52,39,52,"status"],[93,58,39,58],[93,62,39,62],[93,71,39,71],[93,73,39,73],[93,75,39,75,"error"],[93,80,39,80],[93,81,39,81,"response"],[93,89,39,89],[93,91,39,91,"data"],[93,95,39,95],[93,99,39,99,"error"],[93,104,39,104],[93,105,39,105,"message"],[93,112,39,112],[93,113,39,113],[94,8,41,8],[94,12,41,12,"error"],[94,17,41,17],[94,18,41,18,"response"],[94,26,41,26],[94,28,41,28,"status"],[94,34,41,34],[94,39,41,39],[94,42,41,42],[94,44,41,44],[95,10,42,10],[96,10,43,10,"SecureStore"],[96,21,43,21],[96,22,43,22,"deleteItemAsync"],[96,37,43,37],[96,38,43,38],[96,53,43,53],[96,54,43,54],[97,8,44,8],[98,8,45,8],[98,15,45,15,"Promise"],[98,22,45,22],[98,23,45,23,"reject"],[98,29,45,29],[98,30,45,30,"error"],[98,35,45,35],[98,36,45,36],[99,6,46,6],[99,7,47,4],[99,8,47,5],[100,4,48,2],[101,4,50,2],[101,10,50,8,"get"],[101,13,50,11,"get"],[101,14,50,21,"url"],[101,17,50,32],[101,19,50,46],[102,6,51,4],[102,12,51,10,"response"],[102,20,51,36],[102,23,51,39],[102,29,51,45],[102,33,51,49],[102,34,51,50,"client"],[102,40,51,56],[102,41,51,57,"get"],[102,44,51,60],[102,45,51,61,"url"],[102,48,51,64],[102,49,51,65],[103,6,52,4],[103,13,52,11,"response"],[103,21,52,19],[103,22,52,20,"data"],[103,26,52,24],[104,4,53,2],[105,4,55,2],[105,10,55,8,"post"],[105,14,55,12,"post"],[105,15,55,22,"url"],[105,18,55,33],[105,20,55,35,"data"],[105,24,55,45],[105,26,55,59],[106,6,56,4],[106,12,56,10,"response"],[106,20,56,36],[106,23,56,39],[106,29,56,45],[106,33,56,49],[106,34,56,50,"client"],[106,40,56,56],[106,41,56,57,"post"],[106,45,56,61],[106,46,56,62,"url"],[106,49,56,65],[106,51,56,67,"data"],[106,55,56,71],[106,56,56,72],[107,6,57,4],[107,13,57,11,"response"],[107,21,57,19],[107,22,57,20,"data"],[107,26,57,24],[108,4,58,2],[109,4,60,2],[109,10,60,8,"patch"],[109,15,60,13,"patch"],[109,16,60,23,"url"],[109,19,60,34],[109,21,60,36,"data"],[109,25,60,46],[109,27,60,60],[110,6,61,4],[110,12,61,10,"response"],[110,20,61,36],[110,23,61,39],[110,29,61,45],[110,33,61,49],[110,34,61,50,"client"],[110,40,61,56],[110,41,61,57,"patch"],[110,46,61,62],[110,47,61,63,"url"],[110,50,61,66],[110,52,61,68,"data"],[110,56,61,72],[110,57,61,73],[111,6,62,4],[111,13,62,11,"response"],[111,21,62,19],[111,22,62,20,"data"],[111,26,62,24],[112,4,63,2],[113,4,65,2],[113,10,65,8,"delete"],[113,16,65,14,"delete"],[113,17,65,24,"url"],[113,20,65,35],[113,22,65,49],[114,6,66,4],[114,12,66,10,"response"],[114,20,66,36],[114,23,66,39],[114,29,66,45],[114,33,66,49],[114,34,66,50,"client"],[114,40,66,56],[114,41,66,57,"delete"],[114,47,66,63],[114,48,66,64,"url"],[114,51,66,67],[114,52,66,68],[115,6,67,4],[115,13,67,11,"response"],[115,21,67,19],[115,22,67,20,"data"],[115,26,67,24],[116,4,68,2],[117,4,70,2],[117,10,70,8,"put"],[117,13,70,11,"put"],[117,14,70,21,"url"],[117,17,70,32],[117,19,70,34,"data"],[117,23,70,44],[117,25,70,58],[118,6,71,4],[118,12,71,10,"response"],[118,20,71,36],[118,23,71,39],[118,29,71,45],[118,33,71,49],[118,34,71,50,"client"],[118,40,71,56],[118,41,71,57,"put"],[118,44,71,60],[118,45,71,61,"url"],[118,48,71,64],[118,50,71,66,"data"],[118,54,71,70],[118,55,71,71],[119,6,72,4],[119,13,72,11,"response"],[119,21,72,19],[119,22,72,20,"data"],[119,26,72,24],[120,4,73,2],[121,2,74,0],[122,2,76,0],[122,8,76,6,"apiClient"],[122,17,76,15],[122,20,76,18],[122,24,76,22,"ApiClient"],[122,33,76,31],[122,34,76,32],[122,35,76,33],[124,2,78,0],[125,2,79,7],[125,8,79,13,"authAPI"],[125,15,79,20],[125,18,79,23],[126,4,80,2,"createSession"],[126,17,80,15],[126,19,80,18,"sessionId"],[126,28,80,35],[126,32,81,4,"apiClient"],[126,41,81,13],[126,42,81,14,"post"],[126,46,81,18],[126,47,81,19],[126,62,81,34],[126,64,81,36],[126,68,81,40],[126,70,81,42],[127,6,82,6,"headers"],[127,13,82,13],[127,15,82,15],[128,8,82,17],[128,22,82,31],[128,24,82,33,"sessionId"],[129,6,82,43],[130,4,83,4],[130,5,83,5],[130,6,83,6],[131,4,85,2,"signup"],[131,10,85,8],[131,12,85,11,"data"],[131,16,91,3],[131,20,91,8,"apiClient"],[131,29,91,17],[131,30,91,18,"post"],[131,34,91,22],[131,35,91,23],[131,49,91,37],[131,51,91,39,"data"],[131,55,91,43],[131,56,91,44],[132,4,93,2,"verifyOTP"],[132,13,93,11],[132,15,93,14,"data"],[132,19,93,55],[132,23,94,4,"apiClient"],[132,32,94,13],[132,33,94,14,"post"],[132,37,94,18],[132,38,94,19],[132,56,94,37],[132,58,94,39,"data"],[132,62,94,43],[132,63,94,44],[133,4,96,2,"login"],[133,9,96,7],[133,11,96,10,"data"],[133,15,96,51],[133,19,97,4,"apiClient"],[133,28,97,13],[133,29,97,14,"post"],[133,33,97,18],[133,34,97,19],[133,47,97,32],[133,49,97,34,"data"],[133,53,97,38],[133,54,97,39],[134,4,99,2,"resendOTP"],[134,13,99,11],[134,15,99,14,"email"],[134,20,99,27],[134,24,100,4,"apiClient"],[134,33,100,13],[134,34,100,14,"post"],[134,38,100,18],[134,39,100,19],[134,57,100,37],[134,59,100,39],[135,6,100,41,"email"],[136,4,100,47],[136,5,100,48],[136,6,100,49],[137,4,102,2,"getCurrentUser"],[137,18,102,16],[137,20,102,18,"getCurrentUser"],[137,21,102,18],[137,26,102,24,"apiClient"],[137,35,102,33],[137,36,102,34,"get"],[137,39,102,37],[137,40,102,38],[137,50,102,48],[137,51,102,49],[138,4,104,2,"logout"],[138,10,104,8],[138,12,104,10,"logout"],[138,13,104,10],[138,18,104,16,"apiClient"],[138,27,104,25],[138,28,104,26,"post"],[138,32,104,30],[138,33,104,31],[138,47,104,45],[138,48,104,46],[139,4,106,2,"updateLanguage"],[139,18,106,16],[139,20,106,19,"language"],[139,28,106,35],[139,32,107,4,"apiClient"],[139,41,107,13],[139,42,107,14,"patch"],[139,47,107,19],[139,48,107,20],[139,64,107,36],[139,66,107,38],[139,70,107,42],[139,72,107,44],[140,6,108,6,"params"],[140,12,108,12],[140,14,108,14],[141,8,108,16,"language"],[142,6,108,25],[143,4,109,4],[143,5,109,5],[143,6,109,6],[144,4,111,2,"toggleBiometric"],[144,19,111,17],[144,21,111,20,"enabled"],[144,28,111,36],[144,32,112,4,"apiClient"],[144,41,112,13],[144,42,112,14,"patch"],[144,47,112,19],[144,48,112,20],[144,65,112,37],[144,67,112,39],[144,71,112,43],[144,73,112,45],[145,6,113,6,"params"],[145,12,113,12],[145,14,113,14],[146,8,113,16,"enabled"],[147,6,113,24],[148,4,114,4],[148,5,114,5],[149,2,115,0],[149,3,115,1],[151,2,117,0],[152,2,118,0],[152,8,118,6,"logAdminAction"],[152,22,118,20],[152,25,118,23],[152,31,118,23,"logAdminAction"],[152,32,118,30,"action"],[152,38,118,44],[152,40,118,46,"competitionName"],[152,55,118,69],[152,57,118,71,"adminName"],[152,66,118,88],[152,68,118,90,"details"],[152,75,118,103],[152,80,118,108],[153,4,119,2],[153,8,119,6],[154,6,120,4],[154,12,120,10,"logs"],[154,16,120,14],[154,19,120,17],[154,26,120,23,"CrossPlatformStorage"],[154,46,120,43],[154,47,120,43,"default"],[154,54,120,43],[154,55,120,44,"getItem"],[154,62,120,51],[154,63,120,52],[154,74,120,63],[154,75,120,64],[154,80,120,68],[154,84,120,72],[155,6,121,4],[155,12,121,10,"adminLogs"],[155,21,121,19],[155,24,121,22,"JSON"],[155,28,121,26],[155,29,121,27,"parse"],[155,34,121,32],[155,35,121,33,"logs"],[155,39,121,37],[155,40,121,38],[156,6,123,4],[156,12,123,10,"logEntry"],[156,20,123,18],[156,23,123,21],[157,8,124,6,"id"],[157,10,124,8],[157,12,124,10],[157,19,124,17,"Date"],[157,23,124,21],[157,24,124,22,"now"],[157,27,124,25],[157,28,124,26],[157,29,124,27],[157,31,124,29],[158,8,125,6,"action"],[158,14,125,12],[159,8,126,6,"competition_name"],[159,24,126,22],[159,26,126,24,"competitionName"],[159,41,126,39],[160,8,127,6,"admin_name"],[160,18,127,16],[160,20,127,18,"adminName"],[160,29,127,27],[161,8,128,6,"details"],[161,15,128,13],[162,8,129,6,"timestamp"],[162,17,129,15],[162,19,129,17],[162,23,129,21,"Date"],[162,27,129,25],[162,28,129,26],[162,29,129,27],[162,30,129,28,"toISOString"],[162,41,129,39],[162,42,129,40],[163,6,130,4],[163,7,130,5],[164,6,132,4,"adminLogs"],[164,15,132,13],[164,16,132,14,"push"],[164,20,132,18],[164,21,132,19,"logEntry"],[164,29,132,27],[164,30,132,28],[165,6,133,4],[165,12,133,10,"CrossPlatformStorage"],[165,32,133,30],[165,33,133,30,"default"],[165,40,133,30],[165,41,133,31,"setItem"],[165,48,133,38],[165,49,133,39],[165,60,133,50],[165,62,133,52,"JSON"],[165,66,133,56],[165,67,133,57,"stringify"],[165,76,133,66],[165,77,133,67,"adminLogs"],[165,86,133,76],[165,87,133,77],[165,88,133,78],[166,6,135,4,"console"],[166,13,135,11],[166,14,135,12,"log"],[166,17,135,15],[166,18,135,16],[166,43,135,41],[166,45,135,43,"action"],[166,51,135,49],[166,53,135,51,"competitionName"],[166,68,135,66],[166,69,135,67],[167,4,136,2],[167,5,136,3],[167,6,136,4],[167,13,136,11,"error"],[167,18,136,16],[167,20,136,18],[168,6,137,4,"console"],[168,13,137,11],[168,14,137,12,"error"],[168,19,137,17],[168,20,137,18],[168,49,137,47],[168,51,137,49,"error"],[168,56,137,54],[168,57,137,55],[169,4,138,2],[170,2,139,0],[170,3,139,1],[172,2,141,0],[173,2,142,7],[173,8,142,13,"competitionAPI"],[173,22,142,27],[173,25,142,30],[174,4,143,2,"create"],[174,10,143,8],[174,12,143,11,"data"],[174,16,158,3],[174,20,158,8,"apiClient"],[174,29,158,17],[174,30,158,18,"post"],[174,34,158,22],[174,35,158,23],[174,50,158,38],[174,52,158,40,"data"],[174,56,158,44],[174,57,158,45],[175,4,160,2,"join"],[175,8,160,6],[175,10,160,9,"inviteCode"],[175,20,160,27],[175,24,161,4,"apiClient"],[175,33,161,13],[175,34,161,14,"post"],[175,38,161,18],[175,39,161,19],[175,59,161,39],[175,61,161,41],[176,6,161,43,"invite_code"],[176,17,161,54],[176,19,161,56,"inviteCode"],[177,4,161,67],[177,5,161,68],[177,6,161,69],[178,4,163,2,"getMyCompetitions"],[178,21,163,19],[178,23,163,21,"getMyCompetitions"],[178,24,163,21],[178,29,163,27,"apiClient"],[178,38,163,36],[178,39,163,37,"get"],[178,42,163,40],[178,43,163,41],[178,61,163,59],[178,62,163,60],[179,4,165,2,"getCompetition"],[179,18,165,16],[179,20,165,19,"id"],[179,22,165,29],[179,26,165,34,"apiClient"],[179,35,165,43],[179,36,165,44,"get"],[179,39,165,47],[179,40,165,48],[179,57,165,65,"id"],[179,59,165,67],[179,61,165,69],[179,62,165,70],[180,4,167,2,"updateStandings"],[180,19,167,17],[180,21,167,19,"updateStandings"],[180,22,168,4,"id"],[180,24,168,14],[180,26,169,4,"standings"],[180,35,169,18],[180,37,170,4,"matchday"],[180,45,170,21],[180,50,172,4,"apiClient"],[180,59,172,13],[180,60,172,14,"patch"],[180,65,172,19],[180,66,172,20],[180,83,172,37,"id"],[180,85,172,39],[180,97,172,51],[180,99,172,53],[181,6,173,6,"standings"],[181,15,173,15],[182,6,174,6,"matchday"],[183,4,175,4],[183,5,175,5],[183,6,175,6],[184,4,177,2,"payFee"],[184,10,177,8],[184,12,177,10,"payFee"],[184,13,177,11,"id"],[184,15,177,21],[184,17,177,23,"amount"],[184,23,177,37],[184,28,178,4,"apiClient"],[184,37,178,13],[184,38,178,14,"post"],[184,42,178,18],[184,43,178,19],[184,60,178,36,"id"],[184,62,178,38],[184,68,178,44],[184,70,178,46],[184,74,178,50],[184,76,178,52],[185,6,179,6,"params"],[185,12,179,12],[185,14,179,14],[186,8,179,16,"amount"],[187,6,179,23],[188,4,180,4],[188,5,180,5],[188,6,180,6],[189,4,182,2,"getTransactions"],[189,19,182,17],[189,21,182,20,"id"],[189,23,182,30],[189,27,183,4,"apiClient"],[189,36,183,13],[189,37,183,14,"get"],[189,40,183,17],[189,41,183,18],[189,58,183,35,"id"],[189,60,183,37],[189,75,183,52],[189,76,183,53],[190,4,185,2],[191,4,186,2,"payMatchdays"],[191,16,186,14],[191,18,186,16,"payMatchdays"],[191,19,186,17,"competitionId"],[191,32,186,38],[191,34,186,40,"matchdays"],[191,43,186,59],[191,48,187,4,"apiClient"],[191,57,187,13],[191,58,187,14,"post"],[191,62,187,18],[191,63,187,19],[191,80,187,36,"competitionId"],[191,93,187,49],[191,113,187,69],[191,115,187,71],[192,6,188,6,"competition_id"],[192,20,188,20],[192,22,188,22,"competitionId"],[192,35,188,35],[193,6,189,6,"matchdays"],[194,4,190,4],[194,5,190,5],[194,6,190,6],[195,4,192,2,"getMatchdayPayments"],[195,23,192,21],[195,25,192,24,"competitionId"],[195,38,192,45],[195,42,193,4,"apiClient"],[195,51,193,13],[195,52,193,14,"get"],[195,55,193,17],[195,56,193,18],[195,73,193,35,"competitionId"],[195,86,193,48],[195,106,193,68],[195,107,193,69],[196,4,195,2,"getPaymentStatusTable"],[196,25,195,23],[196,27,195,26,"competitionId"],[196,40,195,47],[196,44,196,4,"apiClient"],[196,53,196,13],[196,54,196,14,"get"],[196,57,196,17],[196,58,196,18],[196,75,196,35,"competitionId"],[196,88,196,48],[196,111,196,71],[196,112,196,72],[197,4,198,2],[198,4,199,2,"createMock"],[198,14,199,12],[198,16,199,14],[198,22,199,21,"data"],[198,26,212,3],[198,30,212,8],[199,6,213,4,"console"],[199,13,213,11],[199,14,213,12,"log"],[199,17,213,15],[199,18,213,16],[199,50,213,48],[199,52,213,50,"data"],[199,56,213,54],[199,57,213,55,"name"],[199,61,213,59],[199,62,213,60],[200,6,214,4,"console"],[200,13,214,11],[200,14,214,12,"log"],[200,17,214,15],[200,18,214,16],[200,39,214,37],[200,41,214,39,"data"],[200,45,214,43],[200,46,214,44,"total_matchdays"],[200,61,214,59],[200,65,214,63],[200,67,214,65],[200,68,214,66],[202,6,216,4],[203,6,217,4],[203,12,217,10,"storedCompetitions"],[203,30,217,28],[203,33,217,31],[203,39,217,37,"CrossPlatformStorage"],[203,59,217,57],[203,60,217,57,"default"],[203,67,217,57],[203,68,217,58,"getItem"],[203,75,217,65],[203,76,217,66],[203,95,217,85],[203,96,217,86],[204,6,218,4],[204,10,218,8,"existingCompetitions"],[204,30,218,28],[204,33,218,31,"storedCompetitions"],[204,51,218,49],[204,54,218,52,"JSON"],[204,58,218,56],[204,59,218,57,"parse"],[204,64,218,62],[204,65,218,63,"storedCompetitions"],[204,83,218,81],[204,84,218,82],[204,87,218,85],[204,89,218,87],[205,6,220,4,"console"],[205,13,220,11],[205,14,220,12,"log"],[205,17,220,15],[205,18,220,16],[205,60,220,58],[205,62,220,60,"existingCompetitions"],[205,82,220,80],[205,83,220,81,"length"],[205,89,220,87],[205,90,220,88],[207,6,222,4],[208,6,223,4],[208,12,223,10,"existingNames"],[208,25,223,23],[208,28,223,26,"existingCompetitions"],[208,48,223,46],[208,49,223,47,"map"],[208,52,223,50],[208,53,223,52,"comp"],[208,57,223,61],[208,61,223,66,"comp"],[208,65,223,70],[208,66,223,71,"name"],[208,70,223,75],[208,71,223,76,"toLowerCase"],[208,82,223,87],[208,83,223,88],[208,84,223,89],[208,85,223,90],[209,6,224,4],[209,10,224,8,"existingNames"],[209,23,224,21],[209,24,224,22,"includes"],[209,32,224,30],[209,33,224,31,"data"],[209,37,224,35],[209,38,224,36,"name"],[209,42,224,40],[209,43,224,41,"toLowerCase"],[209,54,224,52],[209,55,224,53],[209,56,224,54],[209,57,224,55],[209,59,224,57],[210,8,225,6],[210,14,225,12],[210,18,225,16,"Error"],[210,23,225,21],[210,24,225,22],[210,86,225,84],[210,87,225,85],[211,6,226,4],[213,6,228,4],[214,6,229,4],[215,6,230,4],[215,12,230,10,"generateRandomCode"],[215,30,230,28],[215,33,230,31,"generateRandomCode"],[215,34,230,31],[215,39,230,37],[216,8,231,6],[216,14,231,12,"chars"],[216,19,231,17],[216,22,231,20],[216,58,231,56],[216,59,231,57],[216,60,231,58],[217,8,232,6],[217,12,232,10,"result"],[217,18,232,16],[217,21,232,19],[217,23,232,21],[218,8,233,6],[218,13,233,11],[218,17,233,15,"i"],[218,18,233,16],[218,21,233,19],[218,22,233,20],[218,24,233,22,"i"],[218,25,233,23],[218,28,233,26],[218,29,233,27],[218,31,233,29,"i"],[218,32,233,30],[218,34,233,32],[218,36,233,34],[219,10,234,8,"result"],[219,16,234,14],[219,20,234,18,"chars"],[219,25,234,23],[219,26,234,24,"charAt"],[219,32,234,30],[219,33,234,31,"Math"],[219,37,234,35],[219,38,234,36,"floor"],[219,43,234,41],[219,44,234,42,"Math"],[219,48,234,46],[219,49,234,47,"random"],[219,55,234,53],[219,56,234,54],[219,57,234,55],[219,60,234,58,"chars"],[219,65,234,63],[219,66,234,64,"length"],[219,72,234,70],[219,73,234,71],[219,74,234,72],[220,8,235,6],[221,8,236,6],[221,15,236,13,"result"],[221,21,236,19],[222,6,237,4],[222,7,237,5],[224,6,239,4],[225,6,240,4],[225,10,240,8,"inviteCode"],[225,20,240,18],[225,23,240,21,"generateRandomCode"],[225,41,240,39],[225,42,240,40],[225,43,240,41],[226,6,241,4],[226,13,241,11,"existingCompetitions"],[226,33,241,31],[226,34,241,32,"some"],[226,38,241,36],[226,39,241,38,"comp"],[226,43,241,47],[226,47,241,52,"comp"],[226,51,241,56],[226,52,241,57,"invite_code"],[226,63,241,68],[226,68,241,73,"inviteCode"],[226,78,241,83],[226,79,241,84],[226,81,241,86],[227,8,242,6,"inviteCode"],[227,18,242,16],[227,21,242,19,"generateRandomCode"],[227,39,242,37],[227,40,242,38],[227,41,242,39],[228,8,243,6,"console"],[228,15,243,13],[228,16,243,14,"log"],[228,19,243,17],[228,20,243,18],[228,61,243,59],[228,63,243,61,"inviteCode"],[228,73,243,71],[228,74,243,72],[229,6,244,4],[230,6,246,4,"console"],[230,13,246,11],[230,14,246,12,"log"],[230,17,246,15],[230,18,246,16],[230,51,246,49],[230,53,246,51,"inviteCode"],[230,63,246,61],[230,64,246,62],[231,6,248,4],[231,12,248,10,"newCompetition"],[231,26,248,24],[231,29,248,27],[232,8,249,6,"_id"],[232,11,249,9],[232,13,249,11],[232,21,249,19,"Date"],[232,25,249,23],[232,26,249,24,"now"],[232,29,249,27],[232,30,249,28],[232,31,249,29],[232,35,249,33,"Math"],[232,39,249,37],[232,40,249,38,"random"],[232,46,249,44],[232,47,249,45],[232,48,249,46],[232,49,249,47,"toString"],[232,57,249,55],[232,58,249,56],[232,60,249,58],[232,61,249,59],[232,62,249,60,"substr"],[232,68,249,66],[232,69,249,67],[232,70,249,68],[232,72,249,70],[232,73,249,71],[232,74,249,72],[232,76,249,74],[233,8,250,6,"name"],[233,12,250,10],[233,14,250,12,"data"],[233,18,250,16],[233,19,250,17,"name"],[233,23,250,21],[234,8,251,6,"total_matchdays"],[234,23,251,21],[234,25,251,23,"data"],[234,29,251,27],[234,30,251,28,"total_matchdays"],[234,45,251,43],[234,49,251,47],[234,51,251,49],[235,8,252,6,"participation_cost_per_team"],[235,35,252,33],[235,37,252,35,"data"],[235,41,252,39],[235,42,252,40,"participation_cost_per_team"],[235,69,252,67],[235,73,252,71],[235,78,252,76],[236,8,253,6,"expected_teams"],[236,22,253,20],[236,24,253,22,"data"],[236,28,253,26],[236,29,253,27,"expected_teams"],[236,43,253,41],[236,47,253,45],[236,48,253,46],[237,8,254,6,"total_prize_pool"],[237,24,254,22],[237,26,254,24,"data"],[237,30,254,28],[237,31,254,29,"total_prize_pool"],[237,47,254,45],[237,51,254,49],[237,57,254,55],[238,8,255,6,"daily_payment_enabled"],[238,29,255,27],[238,31,255,29,"data"],[238,35,255,33],[238,36,255,34,"daily_payment_enabled"],[238,57,255,55],[238,61,255,59],[238,66,255,64],[239,8,256,6,"daily_payment_amount"],[239,28,256,26],[239,30,256,28,"data"],[239,34,256,32],[239,35,256,33,"daily_payment_amount"],[239,55,256,53],[239,59,256,57],[239,62,256,60],[240,8,257,6,"rules"],[240,13,257,11],[240,15,257,13,"data"],[240,19,257,17],[240,20,257,18,"rules"],[240,25,257,23],[241,8,258,6,"invite_code"],[241,19,258,17],[241,21,258,19,"inviteCode"],[241,31,258,29],[242,8,258,31],[243,8,259,6,"invite_link"],[243,19,259,17],[243,21,259,19],[243,50,259,48,"inviteCode"],[243,60,259,58],[243,62,259,60],[244,8,260,6,"admin_id"],[244,16,260,14],[244,18,260,16],[244,44,260,42],[245,8,260,44],[246,8,261,6,"participants"],[246,20,261,18],[246,22,261,20],[246,23,262,8],[247,10,263,10,"id"],[247,12,263,12],[247,14,263,14],[247,40,263,40],[248,10,264,10,"name"],[248,14,264,14],[248,16,264,16],[248,33,264,33],[249,10,265,10,"email"],[249,15,265,15],[249,17,265,17],[249,36,265,36],[250,10,266,10,"is_admin"],[250,18,266,18],[250,20,266,20],[250,24,266,24],[251,10,267,10,"paid_matchdays"],[251,24,267,24],[251,26,267,26],[251,27,267,27],[251,28,267,28],[251,30,267,30],[251,31,267,31],[251,32,267,32],[252,10,267,34],[253,10,268,10,"points"],[253,16,268,16],[253,18,268,18],[254,8,269,8],[254,9,269,9],[254,10,270,7],[255,8,271,6,"wallet_balance"],[255,22,271,20],[255,24,271,22],[255,25,271,23],[256,8,272,6,"is_active"],[256,17,272,15],[256,19,272,17],[256,23,272,21],[257,8,273,6,"current_matchday"],[257,24,273,22],[257,26,273,24],[257,27,273,25],[258,8,273,27],[259,8,274,6,"standings"],[259,17,274,15],[259,19,274,17],[259,20,275,8],[260,10,275,10,"position"],[260,18,275,18],[260,20,275,20],[260,21,275,21],[261,10,275,23,"player_id"],[261,19,275,32],[261,21,275,34],[261,47,275,60],[262,10,275,62,"name"],[262,14,275,66],[262,16,275,68],[262,33,275,85],[263,10,275,87,"points"],[263,16,275,93],[263,18,275,95],[264,8,275,97],[264,9,275,98],[264,10,276,7],[265,8,277,6,"created_at"],[265,18,277,16],[265,20,277,18],[265,24,277,22,"Date"],[265,28,277,26],[265,29,277,27],[265,30,277,28],[265,31,277,29,"toISOString"],[265,42,277,40],[265,43,277,41],[265,44,277,42],[266,8,278,6,"updated_at"],[266,18,278,16],[266,20,278,18],[266,24,278,22,"Date"],[266,28,278,26],[266,29,278,27],[266,30,278,28],[266,31,278,29,"toISOString"],[266,42,278,40],[266,43,278,41],[267,6,279,4],[267,7,279,5],[269,6,281,4],[270,6,282,4,"existingCompetitions"],[270,26,282,24],[270,27,282,25,"push"],[270,31,282,29],[270,32,282,30,"newCompetition"],[270,46,282,44],[270,47,282,45],[271,6,283,4],[271,12,283,10,"CrossPlatformStorage"],[271,32,283,30],[271,33,283,30,"default"],[271,40,283,30],[271,41,283,31,"setItem"],[271,48,283,38],[271,49,283,39],[271,68,283,58],[271,70,283,60,"JSON"],[271,74,283,64],[271,75,283,65,"stringify"],[271,84,283,74],[271,85,283,75,"existingCompetitions"],[271,105,283,95],[271,106,283,96],[271,107,283,97],[272,6,285,4,"console"],[272,13,285,11],[272,14,285,12,"log"],[272,17,285,15],[272,18,285,16],[272,71,285,69],[272,73,285,71,"existingCompetitions"],[272,93,285,91],[272,94,285,92,"length"],[272,100,285,98],[272,101,285,99],[274,6,287,4],[275,6,288,4],[275,12,288,10,"logAdminAction"],[275,26,288,24],[275,27,288,25],[275,35,288,33],[275,37,288,35,"newCompetition"],[275,51,288,49],[275,52,288,50,"name"],[275,56,288,54],[275,58,288,56],[275,75,288,73],[275,77,288,75],[276,8,289,6,"competition_id"],[276,22,289,20],[276,24,289,22,"newCompetition"],[276,38,289,36],[276,39,289,37,"_id"],[276,42,289,40],[277,8,290,6,"rules"],[277,13,290,11],[277,15,290,13,"newCompetition"],[277,29,290,27],[277,30,290,28,"rules"],[277,35,290,33],[278,8,291,6,"total_matchdays"],[278,23,291,21],[278,25,291,23,"newCompetition"],[278,39,291,37],[278,40,291,38,"total_matchdays"],[278,55,291,53],[279,8,292,6,"participation_cost_per_team"],[279,35,292,33],[279,37,292,35,"newCompetition"],[279,51,292,49],[279,52,292,50,"participation_cost_per_team"],[279,79,292,77],[280,8,293,6,"expected_teams"],[280,22,293,20],[280,24,293,22,"newCompetition"],[280,38,293,36],[280,39,293,37,"expected_teams"],[280,53,293,51],[281,8,294,6,"total_prize_pool"],[281,24,294,22],[281,26,294,24,"newCompetition"],[281,40,294,38],[281,41,294,39,"total_prize_pool"],[281,57,294,55],[282,8,295,6,"daily_payment_enabled"],[282,29,295,27],[282,31,295,29,"newCompetition"],[282,45,295,43],[282,46,295,44,"daily_payment_enabled"],[282,67,295,65],[283,8,296,6,"daily_payment_amount"],[283,28,296,26],[283,30,296,28,"newCompetition"],[283,44,296,42],[283,45,296,43,"daily_payment_amount"],[284,6,297,4],[284,7,297,5],[284,8,297,6],[285,6,299,4,"console"],[285,13,299,11],[285,14,299,12,"log"],[285,17,299,15],[285,18,299,16],[285,47,299,45],[285,49,299,47,"newCompetition"],[285,63,299,61],[285,64,299,62,"name"],[285,68,299,66],[285,69,299,67],[286,6,300,4,"console"],[286,13,300,11],[286,14,300,12,"log"],[286,17,300,15],[286,18,300,16],[286,40,300,38],[286,42,300,40,"newCompetition"],[286,56,300,54],[286,57,300,55,"name"],[286,61,300,59],[286,62,300,60],[287,6,301,4,"console"],[287,13,301,11],[287,14,301,12,"log"],[287,17,301,15],[287,18,301,16],[287,37,301,35],[287,39,301,37,"newCompetition"],[287,53,301,51],[287,54,301,52,"daily_payment_enabled"],[287,75,301,73],[287,78,301,76],[287,82,301,80,"newCompetition"],[287,96,301,94],[287,97,301,95,"daily_payment_amount"],[287,117,301,115],[287,132,301,130],[287,135,301,133],[287,145,301,143],[287,146,301,144],[288,6,302,4,"console"],[288,13,302,11],[288,14,302,12,"log"],[288,17,302,15],[288,18,302,16],[288,40,302,38],[288,42,302,40],[288,46,302,44,"newCompetition"],[288,60,302,58],[288,61,302,59,"total_prize_pool"],[288,77,302,75],[288,79,302,77],[288,80,302,78],[289,6,303,4,"console"],[289,13,303,11],[289,14,303,12,"log"],[289,17,303,15],[289,18,303,16],[289,35,303,33],[289,37,303,35,"newCompetition"],[289,51,303,49],[289,52,303,50,"invite_code"],[289,63,303,61],[289,64,303,62],[290,6,305,4],[290,13,305,11],[291,8,305,13,"data"],[291,12,305,17],[291,14,305,19,"newCompetition"],[292,6,305,34],[292,7,305,35],[293,4,306,2],[293,5,306,3],[294,4,308,2],[295,4,309,2,"payMatchdaysMock"],[295,20,309,18],[295,22,309,20],[295,28,309,20,"payMatchdaysMock"],[295,29,309,27,"competitionId"],[295,42,309,48],[295,44,309,50,"matchdays"],[295,53,309,69],[295,58,309,74],[296,6,310,4,"console"],[296,13,310,11],[296,14,310,12,"log"],[296,17,310,15],[296,18,310,16],[296,49,310,47],[296,51,310,49,"matchdays"],[296,60,310,58],[296,62,310,60],[296,78,310,76],[296,80,310,78,"competitionId"],[296,93,310,91],[296,94,310,92],[298,6,312,4],[299,6,313,4],[299,12,313,10,"totalCost"],[299,21,313,19],[299,24,313,22,"matchdays"],[299,33,313,31],[299,34,313,32,"length"],[299,40,313,38],[299,43,313,41],[299,44,313,42],[299,45,313,43],[299,46,313,44],[301,6,315,4],[302,6,316,4],[302,13,316,11],[303,8,317,6,"data"],[303,12,317,10],[303,14,317,12],[304,10,318,8,"message"],[304,17,318,15],[304,19,318,17],[304,44,318,42,"matchdays"],[304,53,318,51],[304,54,318,52,"length"],[304,60,318,58],[304,72,318,70],[305,10,319,8,"paid_matchdays"],[305,24,319,22],[305,26,319,24,"matchdays"],[305,35,319,33],[306,10,320,8,"total_cost"],[306,20,320,18],[306,22,320,20,"totalCost"],[306,31,320,29],[307,10,321,8,"new_user_balance"],[307,26,321,24],[307,28,321,26],[307,31,321,29],[307,34,321,32,"totalCost"],[307,43,321,41],[307,44,321,42],[308,8,322,6],[309,6,323,4],[309,7,323,5],[310,4,324,2],[310,5,324,3],[311,4,326,2,"getMatchdayPaymentsMock"],[311,27,326,25],[311,29,326,27],[311,35,326,34,"competitionId"],[311,48,326,55],[311,52,326,60],[312,6,327,4,"console"],[312,13,327,11],[312,14,327,12,"log"],[312,17,327,15],[312,18,327,16],[312,70,327,68],[312,72,327,70,"competitionId"],[312,85,327,83],[312,86,327,84],[314,6,329,4],[315,6,330,4],[315,12,330,10,"mockPayments"],[315,24,330,22],[315,27,330,25],[315,29,330,27],[316,6,331,4],[316,11,331,9],[316,15,331,13,"i"],[316,16,331,14],[316,19,331,17],[316,20,331,18],[316,22,331,20,"i"],[316,23,331,21],[316,27,331,25],[316,29,331,27],[316,31,331,29,"i"],[316,32,331,30],[316,34,331,32],[316,36,331,34],[317,8,332,6,"mockPayments"],[317,20,332,18],[317,21,332,19,"push"],[317,25,332,23],[317,26,332,24],[318,10,333,8,"_id"],[318,13,333,11],[318,15,333,13],[318,26,333,24,"i"],[318,27,333,25],[318,29,333,27],[319,10,334,8,"user_id"],[319,17,334,15],[319,19,334,17],[319,45,334,43],[320,10,335,8,"competition_id"],[320,24,335,22],[320,26,335,24,"competitionId"],[320,39,335,37],[321,10,336,8,"matchday"],[321,18,336,16],[321,20,336,18,"i"],[321,21,336,19],[322,10,337,8,"amount"],[322,16,337,14],[322,18,337,16],[322,19,337,17],[323,10,338,8,"status"],[323,16,338,14],[323,18,338,16,"i"],[323,19,338,17],[323,23,338,21],[323,24,338,22],[323,27,338,25],[323,33,338,31],[323,36,338,34],[323,45,338,43],[324,10,339,8,"paid_at"],[324,17,339,15],[324,19,339,17,"i"],[324,20,339,18],[324,24,339,22],[324,25,339,23],[324,28,339,26],[324,32,339,30,"Date"],[324,36,339,34],[324,37,339,35],[324,38,339,36],[324,39,339,37,"toISOString"],[324,50,339,48],[324,51,339,49],[324,52,339,50],[324,55,339,53],[324,59,339,57],[325,10,340,8,"created_at"],[325,20,340,18],[325,22,340,20],[325,26,340,24,"Date"],[325,30,340,28],[325,31,340,29],[325,32,340,30],[325,33,340,31,"toISOString"],[325,44,340,42],[325,45,340,43],[326,8,341,6],[326,9,341,7],[326,10,341,8],[327,6,342,4],[328,6,344,4],[328,13,344,11],[329,8,345,6,"data"],[329,12,345,10],[329,14,345,12],[330,10,346,8,"competition_id"],[330,24,346,22],[330,26,346,24,"competitionId"],[330,39,346,37],[331,10,347,8,"daily_payment_enabled"],[331,31,347,29],[331,33,347,31],[331,37,347,35],[332,10,348,8,"daily_payment_amount"],[332,30,348,28],[332,32,348,30],[332,33,348,31],[333,10,349,8,"total_matchdays"],[333,25,349,23],[333,27,349,25],[333,29,349,27],[334,10,350,8,"payments"],[334,18,350,16],[334,20,350,18,"mockPayments"],[335,8,351,6],[336,6,352,4],[336,7,352,5],[337,4,353,2],[337,5,353,3],[338,4,355,2,"getPaymentStatusTableMock"],[338,29,355,27],[338,31,355,29],[338,37,355,36,"competitionId"],[338,50,355,57],[338,54,355,62],[339,6,356,4,"console"],[339,13,356,11],[339,14,356,12,"log"],[339,17,356,15],[339,18,356,16],[339,73,356,71],[339,75,356,73,"competitionId"],[339,88,356,86],[339,89,356,87],[341,6,358,4],[342,6,359,4],[342,12,359,10,"mockTable"],[342,21,359,19],[342,24,359,22],[342,25,359,23],[343,8,360,6,"user_id"],[343,15,360,13],[343,17,360,15],[343,43,360,41],[344,8,361,6,"username"],[344,16,361,14],[344,18,361,16],[344,35,361,33],[345,8,362,6,"name"],[345,12,362,10],[345,14,362,12],[345,31,362,29],[346,8,363,6,"email"],[346,13,363,11],[346,15,363,13],[346,34,363,32],[347,8,364,6,"matchday_payments"],[347,25,364,23],[347,27,364,25,"Array"],[347,32,364,30],[347,33,364,31,"from"],[347,37,364,35],[347,38,364,36],[348,10,364,37,"length"],[348,16,364,43],[348,18,364,45],[349,8,364,47],[349,9,364,48],[349,11,364,50],[349,12,364,51,"_"],[349,13,364,52],[349,15,364,54,"i"],[349,16,364,55],[349,22,364,61],[350,10,365,8,"matchday"],[350,18,365,16],[350,20,365,18,"i"],[350,21,365,19],[350,24,365,22],[350,25,365,23],[351,10,366,8,"status"],[351,16,366,14],[351,18,366,17,"i"],[351,19,366,18],[351,22,366,21],[351,23,366,22],[351,26,366,25],[351,32,366,31],[351,35,366,34],[351,44,366,44],[352,10,367,8,"amount"],[352,16,367,14],[352,18,367,16],[352,19,367,17],[353,10,368,8,"paid_at"],[353,17,368,15],[353,19,368,17,"i"],[353,20,368,18],[353,23,368,21],[353,24,368,22],[353,27,368,25],[353,31,368,29,"Date"],[353,35,368,33],[353,36,368,34],[353,37,368,35],[353,38,368,36,"toISOString"],[353,49,368,47],[353,50,368,48],[353,51,368,49],[353,54,368,52],[354,8,369,6],[354,9,369,7],[354,10,369,8],[355,6,370,4],[355,7,370,5],[355,8,370,6],[356,6,372,4],[356,13,372,11],[357,8,373,6,"data"],[357,12,373,10],[357,14,373,12],[358,10,374,8,"competition_name"],[358,26,374,24],[358,28,374,26],[358,49,374,47],[359,10,375,8,"total_matchdays"],[359,25,375,23],[359,27,375,25],[359,29,375,27],[360,10,376,8,"daily_payment_amount"],[360,30,376,28],[360,32,376,30],[360,33,376,31],[361,10,377,8,"participants"],[361,22,377,20],[361,24,377,22,"mockTable"],[362,8,378,6],[363,6,379,4],[363,7,379,5],[364,4,380,2],[364,5,380,3],[365,4,382,2],[366,4,383,2,"validateNameMock"],[366,20,383,18],[366,22,383,20],[366,28,383,27,"name"],[366,32,383,39],[366,36,383,44],[367,6,384,4,"console"],[367,13,384,11],[367,14,384,12,"log"],[367,17,384,15],[367,18,384,16],[367,57,384,55],[367,59,384,57,"name"],[367,63,384,61],[367,64,384,62],[368,6,386,4],[368,10,386,8],[368,11,386,9,"name"],[368,15,386,13],[368,16,386,14,"trim"],[368,20,386,18],[368,21,386,19],[368,22,386,20],[368,24,386,22],[369,8,387,6],[369,15,387,13],[370,10,387,15,"available"],[370,19,387,24],[370,21,387,26],[370,25,387,30],[371,10,387,32,"message"],[371,17,387,39],[371,19,387,41],[372,8,387,44],[372,9,387,45],[373,6,388,4],[375,6,390,4],[376,6,391,4],[376,12,391,10,"storedCompetitions"],[376,30,391,28],[376,33,391,31],[376,39,391,37,"CrossPlatformStorage"],[376,59,391,57],[376,60,391,57,"default"],[376,67,391,57],[376,68,391,58,"getItem"],[376,75,391,65],[376,76,391,66],[376,94,391,84],[376,95,391,85],[377,6,392,4],[377,10,392,8,"existingCompetitions"],[377,30,392,28],[377,33,392,31,"storedCompetitions"],[377,51,392,49],[377,54,392,52,"JSON"],[377,58,392,56],[377,59,392,57,"parse"],[377,64,392,62],[377,65,392,63,"storedCompetitions"],[377,83,392,81],[377,84,392,82],[377,87,392,85],[377,89,392,87],[379,6,394,4],[380,6,395,4],[380,12,395,10,"defaultNames"],[380,24,395,22],[380,27,395,25],[380,28,395,26],[380,50,395,48],[380,52,395,50],[380,78,395,76],[380,80,395,78],[380,96,395,94],[380,97,395,95],[381,6,396,4],[381,12,396,10,"allNames"],[381,20,396,18],[381,23,396,21],[381,24,397,6],[381,27,397,9,"existingCompetitions"],[381,47,397,29],[381,48,397,30,"map"],[381,51,397,33],[381,52,397,35,"comp"],[381,56,397,44],[381,60,397,49,"comp"],[381,64,397,53],[381,65,397,54,"name"],[381,69,397,58],[381,70,397,59,"toLowerCase"],[381,81,397,70],[381,82,397,71],[381,83,397,72],[381,84,397,73],[381,86,398,6],[381,89,398,9,"defaultNames"],[381,101,398,21],[381,102,398,22,"map"],[381,105,398,25],[381,106,398,26,"name"],[381,110,398,30],[381,114,398,34,"name"],[381,118,398,38],[381,119,398,39,"toLowerCase"],[381,130,398,50],[381,131,398,51],[381,132,398,52],[381,133,398,53],[381,134,399,5],[382,6,401,4],[382,12,401,10,"isAvailable"],[382,23,401,21],[382,26,401,24],[382,27,401,25,"allNames"],[382,35,401,33],[382,36,401,34,"includes"],[382,44,401,42],[382,45,401,43,"name"],[382,49,401,47],[382,50,401,48,"toLowerCase"],[382,61,401,59],[382,62,401,60],[382,63,401,61],[382,64,401,62],[383,6,403,4],[383,13,403,11],[384,8,404,6,"available"],[384,17,404,15],[384,19,404,17,"isAvailable"],[384,30,404,28],[385,8,405,6,"message"],[385,15,405,13],[385,17,405,15,"isAvailable"],[385,28,405,26],[385,31,405,29],[385,47,405,45],[385,50,405,48],[386,6,406,4],[386,7,406,5],[387,4,407,2],[387,5,407,3],[388,4,409,2],[389,4,410,2,"getMyCompetitionsMock"],[389,25,410,23],[389,27,410,25],[389,33,410,25,"getMyCompetitionsMock"],[389,34,410,25],[389,39,410,37],[390,6,411,4,"console"],[390,13,411,11],[390,14,411,12,"log"],[390,17,411,15],[390,18,411,16],[390,52,411,50],[390,53,411,51],[391,6,412,4],[391,12,412,10,"storedCompetitions"],[391,30,412,28],[391,33,412,31],[391,39,412,37,"CrossPlatformStorage"],[391,59,412,57],[391,60,412,57,"default"],[391,67,412,57],[391,68,412,58,"getItem"],[391,75,412,65],[391,76,412,66],[391,95,412,85],[391,96,412,86],[392,6,414,4],[392,10,414,8,"storedCompetitions"],[392,28,414,26],[392,30,414,28],[393,8,415,6],[393,14,415,12,"competitions"],[393,26,415,24],[393,29,415,27,"JSON"],[393,33,415,31],[393,34,415,32,"parse"],[393,39,415,37],[393,40,415,38,"storedCompetitions"],[393,58,415,56],[393,59,415,57],[394,8,416,6,"console"],[394,15,416,13],[394,16,416,14,"log"],[394,19,416,17],[394,20,416,18],[394,55,416,53],[394,57,416,55,"competitions"],[394,69,416,67],[394,70,416,68,"length"],[394,76,416,74],[394,77,416,75],[395,8,418,6,"competitions"],[395,20,418,18],[395,21,418,19,"forEach"],[395,28,418,26],[395,29,418,27],[395,30,418,28,"comp"],[395,34,418,37],[395,36,418,39,"index"],[395,41,418,52],[395,46,418,57],[396,10,419,8,"console"],[396,17,419,15],[396,18,419,16,"log"],[396,21,419,19],[396,22,419,20],[396,25,419,23,"index"],[396,30,419,28],[396,33,419,31],[396,34,419,32],[396,39,419,37,"comp"],[396,43,419,41],[396,44,419,42,"name"],[396,48,419,46],[396,57,419,55,"comp"],[396,61,419,59],[396,62,419,60,"_id"],[396,65,419,63],[396,68,419,66],[396,69,419,67],[397,8,420,6],[397,9,420,7],[397,10,420,8],[398,8,422,6],[398,15,422,13,"competitions"],[398,27,422,25],[399,6,423,4],[399,7,423,5],[399,13,423,11],[400,8,424,6,"console"],[400,15,424,13],[400,16,424,14,"log"],[400,19,424,17],[400,20,424,18],[400,80,424,78],[400,81,424,79],[401,8,425,6],[401,15,425,13],[401,17,425,15],[402,6,426,4],[403,4,427,2],[403,5,427,3],[404,4,429,2,"joinMock"],[404,12,429,10],[404,14,429,12],[404,20,429,19,"inviteCode"],[404,30,429,37],[404,34,429,42],[405,6,430,4,"console"],[405,13,430,11],[405,14,430,12,"log"],[405,17,430,15],[405,18,430,16],[405,59,430,57],[405,61,430,59,"inviteCode"],[405,71,430,69],[405,72,430,70],[406,6,431,4],[406,10,431,8,"inviteCode"],[406,20,431,18],[406,21,431,19,"length"],[406,27,431,25],[406,30,431,28],[406,31,431,29],[406,33,431,31],[407,8,432,6],[407,14,432,12],[407,18,432,16,"Error"],[407,23,432,21],[407,24,432,22],[407,45,432,43],[407,46,432,44],[408,6,433,4],[409,6,434,4],[409,13,434,11],[410,8,434,13,"message"],[410,15,434,20],[410,17,434,22],[411,6,434,57],[411,7,434,58],[412,4,435,2],[412,5,435,3],[413,4,437,2],[414,4,438,2,"deleteMock"],[414,14,438,12],[414,16,438,14],[414,22,438,21,"competitionId"],[414,35,438,42],[414,39,438,47],[415,6,439,4,"console"],[415,13,439,11],[415,14,439,12,"log"],[415,17,439,15],[415,18,439,16],[415,51,439,49],[415,53,439,51,"competitionId"],[415,66,439,64],[415,67,439,65],[416,6,441,4],[416,12,441,10,"storedCompetitions"],[416,30,441,28],[416,33,441,31],[416,39,441,37,"CrossPlatformStorage"],[416,59,441,57],[416,60,441,57,"default"],[416,67,441,57],[416,68,441,58,"getItem"],[416,75,441,65],[416,76,441,66],[416,94,441,84],[416,95,441,85],[417,6,442,4],[417,10,442,8,"competitions"],[417,22,442,20],[417,25,442,23,"storedCompetitions"],[417,43,442,41],[417,46,442,44,"JSON"],[417,50,442,48],[417,51,442,49,"parse"],[417,56,442,54],[417,57,442,55,"storedCompetitions"],[417,75,442,73],[417,76,442,74],[417,79,442,77],[417,81,442,79],[418,6,444,4],[418,12,444,10,"competitionToDelete"],[418,31,444,29],[418,34,444,32,"competitions"],[418,46,444,44],[418,47,444,45,"find"],[418,51,444,49],[418,52,444,51,"comp"],[418,56,444,60],[418,60,444,65,"comp"],[418,64,444,69],[418,65,444,70,"_id"],[418,68,444,73],[418,73,444,78,"competitionId"],[418,86,444,91],[418,87,444,92],[419,6,445,4],[419,10,445,8],[419,11,445,9,"competitionToDelete"],[419,30,445,28],[419,32,445,30],[420,8,446,6],[420,14,446,12],[420,18,446,16,"Error"],[420,23,446,21],[420,24,446,22],[420,47,446,45],[420,48,446,46],[421,6,447,4],[423,6,449,4],[424,6,450,4],[424,10,450,8,"competitionToDelete"],[424,29,450,27],[424,30,450,28,"admin_id"],[424,38,450,36],[424,43,450,41],[424,69,450,67],[424,71,450,69],[425,8,451,6],[425,14,451,12],[425,18,451,16,"Error"],[425,23,451,21],[425,24,451,22],[425,64,451,62],[425,65,451,63],[426,6,452,4],[428,6,454,4],[429,6,455,4,"competitions"],[429,18,455,16],[429,21,455,19,"competitions"],[429,33,455,31],[429,34,455,32,"filter"],[429,40,455,38],[429,41,455,40,"comp"],[429,45,455,49],[429,49,455,54,"comp"],[429,53,455,58],[429,54,455,59,"_id"],[429,57,455,62],[429,62,455,67,"competitionId"],[429,75,455,80],[429,76,455,81],[430,6,456,4],[430,12,456,10,"CrossPlatformStorage"],[430,32,456,30],[430,33,456,30,"default"],[430,40,456,30],[430,41,456,31,"setItem"],[430,48,456,38],[430,49,456,39],[430,67,456,57],[430,69,456,59,"JSON"],[430,73,456,63],[430,74,456,64,"stringify"],[430,83,456,73],[430,84,456,74,"competitions"],[430,96,456,86],[430,97,456,87],[430,98,456,88],[432,6,458,4],[433,6,459,4],[433,12,459,10,"logAdminAction"],[433,26,459,24],[433,27,459,25],[433,35,459,33],[433,37,459,35,"competitionToDelete"],[433,56,459,54],[433,57,459,55,"name"],[433,61,459,59],[433,63,459,61],[433,80,459,78],[433,81,459,79],[434,6,461,4,"console"],[434,13,461,11],[434,14,461,12,"log"],[434,17,461,15],[434,18,461,16],[434,54,461,52],[434,55,461,53],[435,6,462,4],[435,13,462,11],[436,8,462,13,"message"],[436,15,462,20],[436,17,462,22],[437,6,462,57],[437,7,462,58],[438,4,463,2],[438,5,463,3],[439,4,465,2],[440,4,466,2,"editMock"],[440,12,466,10],[440,14,466,12],[440,20,466,12,"editMock"],[440,21,466,19,"competitionId"],[440,34,466,40],[440,36,466,42,"updates"],[440,43,466,54],[440,48,466,59],[441,6,467,4,"console"],[441,13,467,11],[441,14,467,12,"log"],[441,17,467,15],[441,18,467,16],[441,49,467,47],[441,51,467,49,"competitionId"],[441,64,467,62],[441,66,467,64,"updates"],[441,73,467,71],[441,74,467,72],[442,6,469,4],[442,12,469,10,"storedCompetitions"],[442,30,469,28],[442,33,469,31],[442,39,469,37,"CrossPlatformStorage"],[442,59,469,57],[442,60,469,57,"default"],[442,67,469,57],[442,68,469,58,"getItem"],[442,75,469,65],[442,76,469,66],[442,94,469,84],[442,95,469,85],[443,6,470,4],[443,10,470,8,"competitions"],[443,22,470,20],[443,25,470,23,"storedCompetitions"],[443,43,470,41],[443,46,470,44,"JSON"],[443,50,470,48],[443,51,470,49,"parse"],[443,56,470,54],[443,57,470,55,"storedCompetitions"],[443,75,470,73],[443,76,470,74],[443,79,470,77],[443,81,470,79],[444,6,472,4],[444,12,472,10,"competitionIndex"],[444,28,472,26],[444,31,472,29,"competitions"],[444,43,472,41],[444,44,472,42,"findIndex"],[444,53,472,51],[444,54,472,53,"comp"],[444,58,472,62],[444,62,472,67,"comp"],[444,66,472,71],[444,67,472,72,"_id"],[444,70,472,75],[444,75,472,80,"competitionId"],[444,88,472,93],[444,89,472,94],[445,6,473,4],[445,10,473,8,"competitionIndex"],[445,26,473,24],[445,31,473,29],[445,32,473,30],[445,33,473,31],[445,35,473,33],[446,8,474,6],[446,14,474,12],[446,18,474,16,"Error"],[446,23,474,21],[446,24,474,22],[446,47,474,45],[446,48,474,46],[447,6,475,4],[448,6,477,4],[448,12,477,10,"competition"],[448,23,477,21],[448,26,477,24,"competitions"],[448,38,477,36],[448,39,477,37,"competitionIndex"],[448,55,477,53],[448,56,477,54],[450,6,479,4],[451,6,480,4],[451,10,480,8,"competition"],[451,21,480,19],[451,22,480,20,"admin_id"],[451,30,480,28],[451,35,480,33],[451,61,480,59],[451,63,480,61],[452,8,481,6],[452,14,481,12],[452,18,481,16,"Error"],[452,23,481,21],[452,24,481,22],[452,62,481,60],[452,63,481,61],[453,6,482,4],[455,6,484,4],[456,6,485,4,"competitions"],[456,18,485,16],[456,19,485,17,"competitionIndex"],[456,35,485,33],[456,36,485,34],[456,39,485,37],[457,8,486,6],[457,11,486,9,"competition"],[457,22,486,20],[458,8,487,6],[458,11,487,9,"updates"],[458,18,487,16],[459,8,488,6,"updated_at"],[459,18,488,16],[459,20,488,18],[459,24,488,22,"Date"],[459,28,488,26],[459,29,488,27],[459,30,488,28],[459,31,488,29,"toISOString"],[459,42,488,40],[459,43,488,41],[460,6,489,4],[460,7,489,5],[461,6,491,4],[461,12,491,10,"CrossPlatformStorage"],[461,32,491,30],[461,33,491,30,"default"],[461,40,491,30],[461,41,491,31,"setItem"],[461,48,491,38],[461,49,491,39],[461,67,491,57],[461,69,491,59,"JSON"],[461,73,491,63],[461,74,491,64,"stringify"],[461,83,491,73],[461,84,491,74,"competitions"],[461,96,491,86],[461,97,491,87],[461,98,491,88],[463,6,493,4],[464,6,494,4],[464,12,494,10,"logAdminAction"],[464,26,494,24],[464,27,494,25],[464,33,494,31],[464,35,494,33,"competition"],[464,46,494,44],[464,47,494,45,"name"],[464,51,494,49],[464,53,494,51],[464,70,494,68],[464,72,494,70,"updates"],[464,79,494,77],[464,80,494,78],[465,6,496,4,"console"],[465,13,496,11],[465,14,496,12,"log"],[465,17,496,15],[465,18,496,16],[465,54,496,52],[465,55,496,53],[466,6,497,4],[466,13,497,11,"competitions"],[466,25,497,23],[466,26,497,24,"competitionIndex"],[466,42,497,40],[466,43,497,41],[467,4,498,2],[467,5,498,3],[468,4,500,2],[469,4,501,2,"awardDailyPrizeMock"],[469,23,501,21],[469,25,501,23],[469,31,501,23,"awardDailyPrizeMock"],[469,32,501,30,"competitionId"],[469,45,501,51],[469,47,501,53,"matchday"],[469,55,501,69],[469,57,501,71,"winnerId"],[469,65,501,87],[469,70,501,92],[470,6,502,4,"console"],[470,13,502,11],[470,14,502,12,"log"],[470,17,502,15],[470,18,502,16],[470,62,502,60],[470,64,502,62,"matchday"],[470,72,502,70],[470,74,502,72],[470,83,502,81],[470,85,502,83,"winnerId"],[470,93,502,91],[470,94,502,92],[471,6,504,4],[471,12,504,10,"storedCompetitions"],[471,30,504,28],[471,33,504,31],[471,39,504,37,"CrossPlatformStorage"],[471,59,504,57],[471,60,504,57,"default"],[471,67,504,57],[471,68,504,58,"getItem"],[471,75,504,65],[471,76,504,66],[471,94,504,84],[471,95,504,85],[472,6,505,4],[472,10,505,8,"competitions"],[472,22,505,20],[472,25,505,23,"storedCompetitions"],[472,43,505,41],[472,46,505,44,"JSON"],[472,50,505,48],[472,51,505,49,"parse"],[472,56,505,54],[472,57,505,55,"storedCompetitions"],[472,75,505,73],[472,76,505,74],[472,79,505,77],[472,81,505,79],[473,6,507,4],[473,12,507,10,"competitionIndex"],[473,28,507,26],[473,31,507,29,"competitions"],[473,43,507,41],[473,44,507,42,"findIndex"],[473,53,507,51],[473,54,507,53,"comp"],[473,58,507,62],[473,62,507,67,"comp"],[473,66,507,71],[473,67,507,72,"_id"],[473,70,507,75],[473,75,507,80,"competitionId"],[473,88,507,93],[473,89,507,94],[474,6,508,4],[474,10,508,8,"competitionIndex"],[474,26,508,24],[474,31,508,29],[474,32,508,30],[474,33,508,31],[474,35,508,33],[475,8,509,6],[475,14,509,12],[475,18,509,16,"Error"],[475,23,509,21],[475,24,509,22],[475,47,509,45],[475,48,509,46],[476,6,510,4],[477,6,512,4],[477,12,512,10,"competition"],[477,23,512,21],[477,26,512,24,"competitions"],[477,38,512,36],[477,39,512,37,"competitionIndex"],[477,55,512,53],[477,56,512,54],[479,6,514,4],[480,6,515,4],[480,10,515,8,"competition"],[480,21,515,19],[480,22,515,20,"admin_id"],[480,30,515,28],[480,35,515,33],[480,61,515,59],[480,63,515,61],[481,8,516,6],[481,14,516,12],[481,18,516,16,"Error"],[481,23,516,21],[481,24,516,22],[481,59,516,57],[481,60,516,58],[482,6,517,4],[484,6,519,4],[485,6,520,4],[485,10,520,8],[485,11,520,9,"competition"],[485,22,520,20],[485,23,520,21,"rules"],[485,28,520,26],[485,32,520,30],[485,33,520,31],[485,34,520,32],[485,41,520,39],[485,43,520,41],[485,50,520,48],[485,51,520,49],[485,52,520,50,"includes"],[485,60,520,58],[485,61,520,59,"competition"],[485,72,520,70],[485,73,520,71,"rules"],[485,78,520,76],[485,79,520,77,"type"],[485,83,520,81],[485,84,520,82],[485,86,520,84],[486,8,521,6],[486,14,521,12],[486,18,521,16,"Error"],[486,23,521,21],[486,24,521,22],[486,69,521,67],[486,70,521,68],[487,6,522,4],[488,6,524,4],[488,12,524,10,"dailyPrizeAmount"],[488,28,524,26],[488,31,524,29,"competition"],[488,42,524,40],[488,43,524,41,"rules"],[488,48,524,46],[488,49,524,47,"daily_prize"],[488,60,524,58],[488,64,524,62],[488,65,524,63],[489,6,525,4],[489,12,525,10,"winner"],[489,18,525,16],[489,21,525,19,"competition"],[489,32,525,30],[489,33,525,31,"participants"],[489,45,525,43],[489,46,525,44,"find"],[489,50,525,48],[489,51,525,50,"p"],[489,52,525,56],[489,56,525,61,"p"],[489,57,525,62],[489,58,525,63,"id"],[489,60,525,65],[489,65,525,70,"winnerId"],[489,73,525,78],[489,74,525,79],[490,6,527,4],[490,10,527,8],[490,11,527,9,"winner"],[490,17,527,15],[490,19,527,17],[491,8,528,6],[491,14,528,12],[491,18,528,16,"Error"],[491,23,528,21],[491,24,528,22],[491,57,528,55],[491,58,528,56],[492,6,529,4],[494,6,531,4],[495,6,532,4],[495,10,532,8],[495,11,532,9,"competition"],[495,22,532,20],[495,23,532,21,"daily_winners"],[495,36,532,34],[495,38,532,36],[496,8,533,6,"competition"],[496,19,533,17],[496,20,533,18,"daily_winners"],[496,33,533,31],[496,36,533,34],[496,37,533,35],[496,38,533,36],[497,6,534,4],[499,6,536,4],[500,6,537,4],[500,10,537,8,"competition"],[500,21,537,19],[500,22,537,20,"daily_winners"],[500,35,537,33],[500,36,537,34,"matchday"],[500,44,537,42],[500,45,537,43],[500,47,537,45],[501,8,538,6],[501,14,538,12],[501,18,538,16,"Error"],[501,23,538,21],[501,24,538,22],[501,52,538,50,"matchday"],[501,60,538,58],[501,83,538,81,"competition"],[501,94,538,92],[501,95,538,93,"daily_winners"],[501,108,538,106],[501,109,538,107,"matchday"],[501,117,538,115],[501,118,538,116],[501,119,538,117,"name"],[501,123,538,121],[501,125,538,123],[501,126,538,124],[502,6,539,4],[504,6,541,4],[505,6,542,4,"competition"],[505,17,542,15],[505,18,542,16,"daily_winners"],[505,31,542,29],[505,32,542,30,"matchday"],[505,40,542,38],[505,41,542,39],[505,44,542,42],[506,8,543,6,"user_id"],[506,15,543,13],[506,17,543,15,"winnerId"],[506,25,543,23],[507,8,544,6,"name"],[507,12,544,10],[507,14,544,12,"winner"],[507,20,544,18],[507,21,544,19,"name"],[507,25,544,23],[508,8,545,6,"amount"],[508,14,545,12],[508,16,545,14,"dailyPrizeAmount"],[508,32,545,30],[509,8,546,6,"awarded_at"],[509,18,546,16],[509,20,546,18],[509,24,546,22,"Date"],[509,28,546,26],[509,29,546,27],[509,30,546,28],[509,31,546,29,"toISOString"],[509,42,546,40],[509,43,546,41],[510,6,547,4],[510,7,547,5],[512,6,549,4],[513,6,550,4,"competitions"],[513,18,550,16],[513,19,550,17,"competitionIndex"],[513,35,550,33],[513,36,550,34],[513,39,550,37,"competition"],[513,50,550,48],[514,6,551,4],[514,12,551,10,"CrossPlatformStorage"],[514,32,551,30],[514,33,551,30,"default"],[514,40,551,30],[514,41,551,31,"setItem"],[514,48,551,38],[514,49,551,39],[514,67,551,57],[514,69,551,59,"JSON"],[514,73,551,63],[514,74,551,64,"stringify"],[514,83,551,73],[514,84,551,74,"competitions"],[514,96,551,86],[514,97,551,87],[514,98,551,88],[516,6,553,4],[517,6,554,4],[517,12,554,10,"logAdminAction"],[517,26,554,24],[517,27,554,25],[517,46,554,44],[517,48,554,46,"competition"],[517,59,554,57],[517,60,554,58,"name"],[517,64,554,62],[517,66,554,64],[517,83,554,81],[517,85,554,83],[518,8,555,6,"matchday"],[518,16,555,14],[519,8,556,6,"winner"],[519,14,556,12],[519,16,556,14,"winner"],[519,22,556,20],[519,23,556,21,"name"],[519,27,556,25],[520,8,557,6,"amount"],[520,14,557,12],[520,16,557,14,"dailyPrizeAmount"],[521,6,558,4],[521,7,558,5],[521,8,558,6],[523,6,560,4],[524,6,561,4,"console"],[524,13,561,11],[524,14,561,12,"log"],[524,17,561,15],[524,18,561,16],[524,24,561,22,"winner"],[524,30,561,28],[524,31,561,29,"name"],[524,35,561,33],[524,48,561,46,"dailyPrizeAmount"],[524,64,561,62],[524,89,561,87,"matchday"],[524,97,561,95],[524,99,561,97],[524,100,561,98],[525,6,563,4,"console"],[525,13,563,11],[525,14,563,12,"log"],[525,17,563,15],[525,18,563,16],[525,54,563,52],[525,55,563,53],[526,6,564,4],[526,13,564,11],[527,8,565,6,"message"],[527,15,565,13],[527,17,565,15],[527,36,565,34,"dailyPrizeAmount"],[527,52,565,50],[527,67,565,65,"winner"],[527,73,565,71],[527,74,565,72,"name"],[527,78,565,76],[527,95,565,93,"matchday"],[527,103,565,101],[527,105,565,103],[528,8,566,6,"competition"],[528,19,566,17],[528,21,566,19,"competition"],[529,6,567,4],[529,7,567,5],[530,4,568,2],[530,5,568,3],[531,4,570,2],[532,4,571,2,"getAdminLogsMock"],[532,20,571,18],[532,22,571,20],[532,28,571,20,"getAdminLogsMock"],[532,29,571,20],[532,34,571,32],[533,6,572,4,"console"],[533,13,572,11],[533,14,572,12,"log"],[533,17,572,15],[533,18,572,16],[533,47,572,45],[533,48,572,46],[534,6,574,4],[534,10,574,8],[535,8,575,6],[535,14,575,12,"logs"],[535,18,575,16],[535,21,575,19],[535,28,575,25,"CrossPlatformStorage"],[535,48,575,45],[535,49,575,45,"default"],[535,56,575,45],[535,57,575,46,"getItem"],[535,64,575,53],[535,65,575,54],[535,76,575,65],[535,77,575,66],[535,82,575,70],[535,86,575,74],[536,8,576,6],[536,14,576,12,"adminLogs"],[536,23,576,21],[536,26,576,24,"JSON"],[536,30,576,28],[536,31,576,29,"parse"],[536,36,576,34],[536,37,576,35,"logs"],[536,41,576,39],[536,42,576,40],[538,8,578,6],[539,8,579,6,"adminLogs"],[539,17,579,15],[539,18,579,16,"sort"],[539,22,579,20],[539,23,579,21],[539,24,579,22,"a"],[539,25,579,28],[539,27,579,30,"b"],[539,28,579,36],[539,33,579,41],[539,37,579,45,"Date"],[539,41,579,49],[539,42,579,50,"b"],[539,43,579,51],[539,44,579,52,"timestamp"],[539,53,579,61],[539,54,579,62],[539,55,579,63,"getTime"],[539,62,579,70],[539,63,579,71],[539,64,579,72],[539,67,579,75],[539,71,579,79,"Date"],[539,75,579,83],[539,76,579,84,"a"],[539,77,579,85],[539,78,579,86,"timestamp"],[539,87,579,95],[539,88,579,96],[539,89,579,97,"getTime"],[539,96,579,104],[539,97,579,105],[539,98,579,106],[539,99,579,107],[540,8,581,6,"console"],[540,15,581,13],[540,16,581,14,"log"],[540,19,581,17],[540,20,581,18],[540,42,581,40],[540,44,581,42,"adminLogs"],[540,53,581,51],[540,54,581,52,"length"],[540,60,581,58],[540,61,581,59],[541,8,582,6],[541,15,582,13,"adminLogs"],[541,24,582,22],[542,6,583,4],[542,7,583,5],[542,8,583,6],[542,15,583,13,"error"],[542,20,583,18],[542,22,583,20],[543,8,584,6,"console"],[543,15,584,13],[543,16,584,14,"error"],[543,21,584,19],[543,22,584,20],[543,52,584,50],[543,54,584,52,"error"],[543,59,584,57],[543,60,584,58],[544,8,585,6],[544,15,585,13],[544,17,585,15],[545,6,586,4],[546,4,587,2],[546,5,587,3],[547,4,589,2],[548,4,590,2,"getAllCompetitions"],[548,22,590,20],[548,24,590,22],[548,30,590,22,"getAllCompetitions"],[548,31,590,22],[548,36,590,34],[549,6,591,4,"console"],[549,13,591,11],[549,14,591,12,"log"],[549,17,591,15],[549,18,591,16],[549,68,591,66],[549,69,591,67],[550,6,593,4],[550,10,593,8],[551,8,594,6],[552,8,595,6],[552,14,595,12,"storedCompetitions"],[552,32,595,30],[552,35,595,33],[552,41,595,39,"CrossPlatformStorage"],[552,61,595,59],[552,62,595,59,"default"],[552,69,595,59],[552,70,595,60,"getItem"],[552,77,595,67],[552,78,595,68],[552,97,595,87],[552,98,595,88],[553,8,596,6],[553,12,596,10,"competitions"],[553,24,596,22],[553,27,596,25,"storedCompetitions"],[553,45,596,43],[553,48,596,46,"JSON"],[553,52,596,50],[553,53,596,51,"parse"],[553,58,596,56],[553,59,596,57,"storedCompetitions"],[553,77,596,75],[553,78,596,76],[553,81,596,79],[553,83,596,81],[555,8,598,6],[556,8,599,6],[556,14,599,12,"oldStoredCompetitions"],[556,35,599,33],[556,38,599,36],[556,44,599,42,"CrossPlatformStorage"],[556,64,599,62],[556,65,599,62,"default"],[556,72,599,62],[556,73,599,63,"getItem"],[556,80,599,70],[556,81,599,71],[556,99,599,89],[556,100,599,90],[557,8,600,6],[557,14,600,12,"oldCompetitions"],[557,29,600,27],[557,32,600,30,"oldStoredCompetitions"],[557,53,600,51],[557,56,600,54,"JSON"],[557,60,600,58],[557,61,600,59,"parse"],[557,66,600,64],[557,67,600,65,"oldStoredCompetitions"],[557,88,600,86],[557,89,600,87],[557,92,600,90],[557,94,600,92],[559,8,602,6],[560,8,603,6],[560,14,603,12,"allCompetitions"],[560,29,603,27],[560,32,603,30],[560,33,603,31],[560,36,603,34,"competitions"],[560,48,603,46],[560,50,603,48],[560,53,603,51,"oldCompetitions"],[560,68,603,66],[560,69,603,67],[561,8,604,6],[561,14,604,12,"uniqueCompetitions"],[561,32,604,30],[561,35,604,33,"allCompetitions"],[561,50,604,48],[561,51,604,49,"filter"],[561,57,604,55],[561,58,604,56],[561,59,604,57,"comp"],[561,63,604,61],[561,65,604,63,"index"],[561,70,604,68],[561,72,604,70,"self"],[561,76,604,74],[561,81,605,8,"index"],[561,86,605,13],[561,91,605,18,"self"],[561,95,605,22],[561,96,605,23,"findIndex"],[561,105,605,32],[561,106,605,33,"c"],[561,107,605,34],[561,111,605,38,"c"],[561,112,605,39],[561,113,605,40,"_id"],[561,116,605,43],[561,121,605,48,"comp"],[561,125,605,52],[561,126,605,53,"_id"],[561,129,605,56],[561,130,606,6],[561,131,606,7],[562,8,608,6,"console"],[562,15,608,13],[562,16,608,14,"log"],[562,19,608,17],[562,20,608,18],[562,57,608,55],[562,59,608,57,"uniqueCompetitions"],[562,77,608,75],[562,78,608,76,"length"],[562,84,608,82],[562,85,608,83],[563,8,609,6],[563,15,609,13,"uniqueCompetitions"],[563,33,609,31],[564,6,611,4],[564,7,611,5],[564,8,611,6],[564,15,611,13,"error"],[564,20,611,18],[564,22,611,20],[565,8,612,6,"console"],[565,15,612,13],[565,16,612,14,"error"],[565,21,612,19],[565,22,612,20],[565,58,612,56],[565,60,612,58,"error"],[565,65,612,63],[565,66,612,64],[566,8,613,6],[566,15,613,13],[566,17,613,15],[567,6,614,4],[568,4,615,2],[569,2,616,0],[569,3,616,1],[571,2,618,0],[572,2,619,7],[572,8,619,13,"walletAPI"],[572,17,619,22],[572,20,619,25],[573,4,620,2,"getBalance"],[573,14,620,12],[573,16,620,14,"getBalance"],[573,17,620,14],[573,22,620,20,"apiClient"],[573,31,620,29],[573,32,620,30,"get"],[573,35,620,33],[573,36,620,34],[573,53,620,51],[573,54,620,52],[574,4,622,2,"topUp"],[574,9,622,7],[574,11,622,10,"amount"],[574,17,622,24],[574,21,623,4,"apiClient"],[574,30,623,13],[574,31,623,14,"post"],[574,35,623,18],[574,36,623,19],[574,51,623,34],[574,53,623,36],[574,57,623,40],[574,59,623,42],[575,6,624,6,"params"],[575,12,624,12],[575,14,624,14],[576,8,624,16,"amount"],[577,6,624,23],[578,4,625,4],[578,5,625,5],[578,6,625,6],[579,4,627,2,"withdraw"],[579,12,627,10],[579,14,627,13,"amount"],[579,20,627,27],[579,24,628,4,"apiClient"],[579,33,628,13],[579,34,628,14,"post"],[579,38,628,18],[579,39,628,19],[579,57,628,37],[579,59,628,39],[579,63,628,43],[579,65,628,45],[580,6,629,6,"params"],[580,12,629,12],[580,14,629,14],[581,8,629,16,"amount"],[582,6,629,23],[583,4,630,4],[583,5,630,5],[583,6,630,6],[584,4,632,2,"getTransactions"],[584,19,632,17],[584,21,632,19,"getTransactions"],[584,22,632,19],[584,27,632,25,"apiClient"],[584,36,632,34],[584,37,632,35,"get"],[584,40,632,38],[584,41,632,39],[584,56,632,54],[585,2,633,0],[585,3,633,1],[587,2,635,0],[588,2,636,7],[588,8,636,13,"databaseAPI"],[588,19,636,24],[588,22,636,27],[589,4,637,2,"resetDatabase"],[589,17,637,15],[589,19,637,17],[589,25,637,17,"resetDatabase"],[589,26,637,17],[589,31,637,29],[590,6,638,4,"console"],[590,13,638,11],[590,14,638,12,"log"],[590,17,638,15],[590,18,638,16],[590,69,638,67],[590,70,638,68],[591,6,640,4],[591,10,640,8],[592,8,641,6],[592,14,641,12,"CrossPlatformStorage"],[592,34,641,32],[592,35,641,32,"default"],[592,42,641,32],[592,43,641,33,"removeItem"],[592,53,641,43],[592,54,641,44],[592,73,641,63],[592,74,641,64],[593,8,642,6],[593,14,642,12,"CrossPlatformStorage"],[593,34,642,32],[593,35,642,32,"default"],[593,42,642,32],[593,43,642,33,"removeItem"],[593,53,642,43],[593,54,642,44],[593,71,642,61],[593,72,642,62],[594,8,643,6],[594,14,643,12,"CrossPlatformStorage"],[594,34,643,32],[594,35,643,32,"default"],[594,42,643,32],[594,43,643,33,"removeItem"],[594,53,643,43],[594,54,643,44],[594,95,643,85],[594,96,643,86],[595,8,644,6],[595,14,644,12,"CrossPlatformStorage"],[595,34,644,32],[595,35,644,32,"default"],[595,42,644,32],[595,43,644,33,"removeItem"],[595,53,644,43],[595,54,644,44],[595,93,644,83],[595,94,644,84],[596,8,646,6,"console"],[596,15,646,13],[596,16,646,14,"log"],[596,19,646,17],[596,20,646,18],[596,66,646,64],[596,67,646,65],[597,8,647,6],[597,15,647,13],[598,10,647,15,"success"],[598,17,647,22],[598,19,647,24],[598,23,647,28],[599,10,647,30,"message"],[599,17,647,37],[599,19,647,39],[600,8,647,65],[600,9,647,66],[601,6,648,4],[601,7,648,5],[601,8,648,6],[601,15,648,13,"error"],[601,20,648,18],[601,22,648,20],[602,8,649,6,"console"],[602,15,649,13],[602,16,649,14,"error"],[602,21,649,19],[602,22,649,20],[602,48,649,46],[602,50,649,48,"error"],[602,55,649,53],[602,56,649,54],[603,8,650,6],[603,15,650,13],[604,10,650,15,"success"],[604,17,650,22],[604,19,650,24],[604,24,650,29],[605,10,650,31,"message"],[605,17,650,38],[605,19,650,40],[606,8,650,55],[606,9,650,56],[607,6,651,4],[608,4,652,2],[609,2,653,0],[609,3,653,1],[610,2,655,0],[610,6,655,0,"_default"],[610,14,655,0],[610,17,655,15,"apiClient"],[610,26,655,24],[611,0,655,25],[611,3]],"functionMap":{"names":["<global>","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","generateRandomCode","existingCompetitions.some$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","competitionAPI.getAllCompetitions","allCompetitions.filter$argument_0","self.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACQ;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CDC;iBWM;MXG;UYE;4CZM;aaE;4CbC;ScE;uCdC;aeE;iDfC;kBgBE,+BhB;UiBE,oCjB;kBkBE;MlBG;mBmBE;MnBG;uBoBI;CpBqB;UqBI;6CrBe;QsBE;qEtBC;qBuBE,uCvB;kBwBE,oDxB;mByBE;MzBQ;U0BE;M1BG;mB2BE;qD3BC;gB4BG;M5BI;uB6BE;qE7BC;yB8BE;wE9BC;c+BG;mDCwB,sCD;+BEO;KFO;qCGI,8CH;G/BiE;oBmCG;GnCe;2BoCE;GpC2B;6BqCE;kDCS;QDK;GrCW;oBuCG;kCPc,sCO;0BCC,0BD;GvCS;yByCG;2BCQ;ODE;GzCO;Y2CE;G3CM;c4CG;kDCM,yCD;uCEW,yCF;G5CQ;Y+CG;oDCM,yCD;G/C0B;uBiDG;oDDM,yCC;iDCkB,6BD;GjD2C;oBmDG;qBCQ,qFD;GnDQ;sBqDG;wDCc;iCCC,uBD,CD;GrDU;cwDK,sCxD;SyDE;MzDG;Y0DE;M1DG;mB2DE,oC3D;iB4DK;G5De"},"hasCjsExports":false},"type":"js/module"}]}