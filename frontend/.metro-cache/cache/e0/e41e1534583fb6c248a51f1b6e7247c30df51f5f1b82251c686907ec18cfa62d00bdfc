{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // FORCE CLEANUP: Clear competitions storage if we need fresh start\n      const shouldClearStorage = false; // Set to true for complete cleanup\n\n      if (shouldClearStorage) {\n        console.log('🗑️ FORCE CLEANUP: Clearing all competition data...');\n        await CrossPlatformStorage.removeItem('competitions_mock');\n        await CrossPlatformStorage.removeItem('admin_logs_mock');\n\n        // Clear all payment records with wildcard pattern\n        const paymentKeys = ['payments_650f1f1f1f1f1f1f1f1f1f1f_comp_1758742449593', 'payments_650f1f1f1f1f1f1f1f1f1f1f_comp_1758739458817', 'payments_650f1f1f1f1f1f1f1f1f1f1f_comp_mock_1', 'payments_650f1f1f1f1f1f1f1f1f1f1f_comp_1758785185912'];\n        for (const key of paymentKeys) {\n          await CrossPlatformStorage.removeItem(key);\n          console.log(`✅ Cleared payment data: ${key}`);\n        }\n        console.log('✅ FORCE CLEANUP COMPLETE - All competitions removed');\n        return []; // Return empty array after cleanup\n      }\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        competitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n        });\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  const databaseAPI = {\n    resetDatabase: async () => {\n      console.log('🗑️ Resetting database - clearing all stored data');\n      try {\n        await CrossPlatformStorage.removeItem('competitions_mock');\n        await CrossPlatformStorage.removeItem('admin_logs_mock');\n        await CrossPlatformStorage.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n        await CrossPlatformStorage.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n        console.log('✅ Database reset complete - all data cleared');\n        return {\n          success: true,\n          message: 'Database reset complete'\n        };\n      } catch (error) {\n        console.error('❌ Database reset failed:', error);\n        return {\n          success: false,\n          message: 'Reset failed'\n        };\n      }\n    }\n  };\n  var _default = apiClient;\n});","lineCount":625,"map":[[27,2,672,0,"Object"],[27,8,672,0],[27,9,672,0,"defineProperty"],[27,23,672,0],[27,24,672,0,"exports"],[27,31,672,0],[28,4,672,0,"enumerable"],[28,14,672,0],[29,4,672,0,"get"],[29,7,672,0],[29,18,672,0,"get"],[29,19,672,0],[30,6,672,0],[30,13,672,0,"_default"],[30,21,672,0],[31,4,672,0],[32,2,672,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,636,0,"Object"],[45,8,636,0],[45,9,636,0,"defineProperty"],[45,23,636,0],[45,24,636,0,"exports"],[45,31,636,0],[46,4,636,0,"enumerable"],[46,14,636,0],[47,4,636,0,"get"],[47,7,636,0],[47,18,636,0,"get"],[47,19,636,0],[48,6,636,0],[48,13,636,0,"walletAPI"],[48,22,636,0],[49,4,636,0],[50,2,636,0],[51,2,653,0,"Object"],[51,8,653,0],[51,9,653,0,"defineProperty"],[51,23,653,0],[51,24,653,0,"exports"],[51,31,653,0],[52,4,653,0,"enumerable"],[52,14,653,0],[53,4,653,0,"get"],[53,7,653,0],[53,18,653,0,"get"],[53,19,653,0],[54,6,653,0],[54,13,653,0,"databaseAPI"],[54,24,653,0],[55,4,653,0],[56,2,653,0],[57,2,670,2],[57,6,670,2,"_expoVirtualEnv"],[57,21,670,2],[57,24,670,2,"require"],[57,31,670,2],[57,32,670,2,"_dependencyMap"],[57,46,670,2],[58,2,1,0],[58,6,1,0,"_axios"],[58,12,1,0],[58,15,1,0,"require"],[58,22,1,0],[58,23,1,0,"_dependencyMap"],[58,37,1,0],[59,2,1,0],[59,6,1,0,"axios"],[59,11,1,0],[59,14,1,0,"_interopDefault"],[59,29,1,0],[59,30,1,0,"_axios"],[59,36,1,0],[60,2,2,0],[60,6,2,0,"_expoSecureStore"],[60,22,2,0],[60,25,2,0,"require"],[60,32,2,0],[60,33,2,0,"_dependencyMap"],[60,47,2,0],[61,2,2,0],[61,6,2,0,"SecureStore"],[61,17,2,0],[61,20,2,0,"_interopNamespace"],[61,37,2,0],[61,38,2,0,"_expoSecureStore"],[61,54,2,0],[62,2,3,0],[62,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[62,42,3,0],[62,45,3,0,"require"],[62,52,3,0],[62,53,3,0,"_dependencyMap"],[62,67,3,0],[63,2,3,0],[63,6,3,0,"AsyncStorage"],[63,18,3,0],[63,21,3,0,"_interopDefault"],[63,36,3,0],[63,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[63,73,3,0],[64,2,4,0],[64,6,4,0,"_expoConstants"],[64,20,4,0],[64,23,4,0,"require"],[64,30,4,0],[64,31,4,0,"_dependencyMap"],[64,45,4,0],[65,2,4,0],[65,6,4,0,"Constants"],[65,15,4,0],[65,18,4,0,"_interopDefault"],[65,33,4,0],[65,34,4,0,"_expoConstants"],[65,48,4,0],[66,2,6,0],[67,2,7,0],[67,8,7,6,"CrossPlatformStorage"],[67,28,7,26],[67,29,7,27],[68,4,8,2],[68,17,8,15,"getItem"],[68,24,8,22,"getItem"],[68,25,8,23,"key"],[68,28,8,34],[68,30,8,60],[69,6,9,4],[69,10,9,8],[70,8,10,6],[71,8,11,6],[71,15,11,13],[71,21,11,19,"AsyncStorage"],[71,33,11,31],[71,34,11,31,"default"],[71,41,11,31],[71,42,11,32,"getItem"],[71,49,11,39],[71,50,11,40,"key"],[71,53,11,43],[71,54,11,44],[72,6,12,4],[72,7,12,5],[72,8,12,6],[72,15,12,13,"error"],[72,20,12,18],[72,22,12,20],[73,8,13,6],[74,8,14,6],[74,12,14,10],[74,19,14,17,"window"],[74,25,14,23],[74,30,14,28],[74,41,14,39],[74,45,14,43,"window"],[74,51,14,49],[74,52,14,50,"localStorage"],[74,64,14,62],[74,66,14,64],[75,10,15,8],[75,17,15,15,"window"],[75,23,15,21],[75,24,15,22,"localStorage"],[75,36,15,34],[75,37,15,35,"getItem"],[75,44,15,42],[75,45,15,43,"key"],[75,48,15,46],[75,49,15,47],[76,8,16,6],[77,8,17,6],[77,15,17,13],[77,19,17,17],[78,6,18,4],[79,4,19,2],[80,4,21,2],[80,17,21,15,"setItem"],[80,24,21,22,"setItem"],[80,25,21,23,"key"],[80,28,21,34],[80,30,21,36,"value"],[80,35,21,49],[80,37,21,66],[81,6,22,4],[81,10,22,8],[82,8,23,6],[83,8,24,6],[83,14,24,12,"AsyncStorage"],[83,26,24,24],[83,27,24,24,"default"],[83,34,24,24],[83,35,24,25,"setItem"],[83,42,24,32],[83,43,24,33,"key"],[83,46,24,36],[83,48,24,38,"value"],[83,53,24,43],[83,54,24,44],[84,6,25,4],[84,7,25,5],[84,8,25,6],[84,15,25,13,"error"],[84,20,25,18],[84,22,25,20],[85,8,26,6],[86,8,27,6],[86,12,27,10],[86,19,27,17,"window"],[86,25,27,23],[86,30,27,28],[86,41,27,39],[86,45,27,43,"window"],[86,51,27,49],[86,52,27,50,"localStorage"],[86,64,27,62],[86,66,27,64],[87,10,28,8,"window"],[87,16,28,14],[87,17,28,15,"localStorage"],[87,29,28,27],[87,30,28,28,"setItem"],[87,37,28,35],[87,38,28,36,"key"],[87,41,28,39],[87,43,28,41,"value"],[87,48,28,46],[87,49,28,47],[88,8,29,6],[89,6,30,4],[90,4,31,2],[91,4,33,2],[91,17,33,15,"removeItem"],[91,27,33,25,"removeItem"],[91,28,33,26,"key"],[91,31,33,37],[91,33,33,54],[92,6,34,4],[92,10,34,8],[93,8,35,6],[93,14,35,12,"AsyncStorage"],[93,26,35,24],[93,27,35,24,"default"],[93,34,35,24],[93,35,35,25,"removeItem"],[93,45,35,35],[93,46,35,36,"key"],[93,49,35,39],[93,50,35,40],[94,6,36,4],[94,7,36,5],[94,8,36,6],[94,15,36,13,"error"],[94,20,36,18],[94,22,36,20],[95,8,37,6],[95,12,37,10],[95,19,37,17,"window"],[95,25,37,23],[95,30,37,28],[95,41,37,39],[95,45,37,43,"window"],[95,51,37,49],[95,52,37,50,"localStorage"],[95,64,37,62],[95,66,37,64],[96,10,38,8,"window"],[96,16,38,14],[96,17,38,15,"localStorage"],[96,29,38,27],[96,30,38,28,"removeItem"],[96,40,38,38],[96,41,38,39,"key"],[96,44,38,42],[96,45,38,43],[97,8,39,6],[98,6,40,4],[99,4,41,2],[100,2,42,0],[102,2,44,0],[103,2,45,0],[103,8,45,6,"BACKEND_URL"],[103,19,45,17],[103,22,45,20,"Constants"],[103,31,45,29],[103,32,45,29,"default"],[103,39,45,29],[103,40,45,30,"expoConfig"],[103,50,45,40],[103,52,45,42,"extra"],[103,57,45,47],[103,59,45,49,"backendUrl"],[103,69,45,59],[103,73,45,59,"_expoVirtualEnv"],[103,88,45,59],[103,89,45,59,"env"],[103,92,45,59],[103,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[103,116,45,98],[103,120,45,102],[103,171,45,153],[104,2,47,0],[104,8,47,6,"ApiClient"],[104,17,47,15],[104,18,47,16],[105,4,50,2,"constructor"],[105,15,50,13,"constructor"],[105,16,50,13],[105,18,50,16],[106,6,51,4],[106,10,51,8],[106,11,51,9,"client"],[106,17,51,15],[106,20,51,18,"axios"],[106,25,51,23],[106,26,51,23,"default"],[106,33,51,23],[106,34,51,24,"create"],[106,40,51,30],[106,41,51,31],[107,8,52,6,"baseURL"],[107,15,52,13],[107,17,52,15],[107,20,52,18,"BACKEND_URL"],[107,31,52,29],[107,37,52,35],[108,8,53,6,"timeout"],[108,15,53,13],[108,17,53,15],[108,22,53,20],[109,8,54,6,"headers"],[109,15,54,13],[109,17,54,15],[110,10,55,8],[110,24,55,22],[110,26,55,24],[111,8,56,6],[112,6,57,4],[112,7,57,5],[112,8,57,6],[114,6,59,4],[115,6,60,4],[115,10,60,8],[115,11,60,9,"client"],[115,17,60,15],[115,18,60,16,"interceptors"],[115,30,60,28],[115,31,60,29,"request"],[115,38,60,36],[115,39,60,37,"use"],[115,42,60,40],[115,43,60,41],[115,49,60,48,"config"],[115,55,60,54],[115,59,60,59],[116,8,61,6,"console"],[116,15,61,13],[116,16,61,14,"log"],[116,19,61,17],[116,20,61,18],[116,39,61,37,"config"],[116,45,61,43],[116,46,61,44,"method"],[116,52,61,50],[116,54,61,52,"toUpperCase"],[116,65,61,63],[116,66,61,64],[116,67,61,65],[116,71,61,69,"config"],[116,77,61,75],[116,78,61,76,"url"],[116,81,61,79],[116,83,61,81],[116,85,61,83,"config"],[116,91,61,89],[116,92,61,90,"data"],[116,96,61,94],[116,97,61,95],[117,8,63,6],[117,14,63,12,"token"],[117,19,63,17],[117,22,63,20],[117,28,63,26,"SecureStore"],[117,39,63,37],[117,40,63,38,"getItemAsync"],[117,52,63,50],[117,53,63,51],[117,68,63,66],[117,69,63,67],[118,8,64,6],[118,12,64,10,"token"],[118,17,64,15],[118,19,64,17],[119,10,65,8,"config"],[119,16,65,14],[119,17,65,15,"headers"],[119,24,65,22],[119,25,65,23,"Authorization"],[119,38,65,36],[119,41,65,39],[119,51,65,49,"token"],[119,56,65,54],[119,58,65,56],[120,8,66,6],[121,8,67,6],[121,15,67,13,"config"],[121,21,67,19],[122,6,68,4],[122,7,68,5],[122,8,68,6],[124,6,70,4],[125,6,71,4],[125,10,71,8],[125,11,71,9,"client"],[125,17,71,15],[125,18,71,16,"interceptors"],[125,30,71,28],[125,31,71,29,"response"],[125,39,71,37],[125,40,71,38,"use"],[125,43,71,41],[125,44,72,7,"response"],[125,52,72,15],[125,56,72,20],[126,8,73,8,"console"],[126,15,73,15],[126,16,73,16,"log"],[126,19,73,19],[126,20,73,20],[126,39,73,39,"response"],[126,47,73,47],[126,48,73,48,"status"],[126,54,73,54],[126,56,73,56],[126,58,73,58,"response"],[126,66,73,66],[126,67,73,67,"data"],[126,71,73,71],[126,72,73,72],[127,8,74,8],[127,15,74,15,"response"],[127,23,74,23],[128,6,75,6],[128,7,75,7],[128,9,76,7,"error"],[128,14,76,12],[128,18,76,17],[129,8,77,8,"console"],[129,15,77,15],[129,16,77,16,"log"],[129,19,77,19],[129,20,77,20],[129,36,77,36,"error"],[129,41,77,41],[129,42,77,42,"response"],[129,50,77,50],[129,52,77,52,"status"],[129,58,77,58],[129,62,77,62],[129,71,77,71],[129,73,77,73],[129,75,77,75,"error"],[129,80,77,80],[129,81,77,81,"response"],[129,89,77,89],[129,91,77,91,"data"],[129,95,77,95],[129,99,77,99,"error"],[129,104,77,104],[129,105,77,105,"message"],[129,112,77,112],[129,113,77,113],[130,8,79,8],[130,12,79,12,"error"],[130,17,79,17],[130,18,79,18,"response"],[130,26,79,26],[130,28,79,28,"status"],[130,34,79,34],[130,39,79,39],[130,42,79,42],[130,44,79,44],[131,10,80,10],[132,10,81,10,"SecureStore"],[132,21,81,21],[132,22,81,22,"deleteItemAsync"],[132,37,81,37],[132,38,81,38],[132,53,81,53],[132,54,81,54],[133,8,82,8],[134,8,83,8],[134,15,83,15,"Promise"],[134,22,83,22],[134,23,83,23,"reject"],[134,29,83,29],[134,30,83,30,"error"],[134,35,83,35],[134,36,83,36],[135,6,84,6],[135,7,85,4],[135,8,85,5],[136,4,86,2],[137,4,88,2],[137,10,88,8,"get"],[137,13,88,11,"get"],[137,14,88,21,"url"],[137,17,88,32],[137,19,88,46],[138,6,89,4],[138,12,89,10,"response"],[138,20,89,36],[138,23,89,39],[138,29,89,45],[138,33,89,49],[138,34,89,50,"client"],[138,40,89,56],[138,41,89,57,"get"],[138,44,89,60],[138,45,89,61,"url"],[138,48,89,64],[138,49,89,65],[139,6,90,4],[139,13,90,11,"response"],[139,21,90,19],[139,22,90,20,"data"],[139,26,90,24],[140,4,91,2],[141,4,93,2],[141,10,93,8,"post"],[141,14,93,12,"post"],[141,15,93,22,"url"],[141,18,93,33],[141,20,93,35,"data"],[141,24,93,45],[141,26,93,59],[142,6,94,4],[142,12,94,10,"response"],[142,20,94,36],[142,23,94,39],[142,29,94,45],[142,33,94,49],[142,34,94,50,"client"],[142,40,94,56],[142,41,94,57,"post"],[142,45,94,61],[142,46,94,62,"url"],[142,49,94,65],[142,51,94,67,"data"],[142,55,94,71],[142,56,94,72],[143,6,95,4],[143,13,95,11,"response"],[143,21,95,19],[143,22,95,20,"data"],[143,26,95,24],[144,4,96,2],[145,4,98,2],[145,10,98,8,"patch"],[145,15,98,13,"patch"],[145,16,98,23,"url"],[145,19,98,34],[145,21,98,36,"data"],[145,25,98,46],[145,27,98,60],[146,6,99,4],[146,12,99,10,"response"],[146,20,99,36],[146,23,99,39],[146,29,99,45],[146,33,99,49],[146,34,99,50,"client"],[146,40,99,56],[146,41,99,57,"patch"],[146,46,99,62],[146,47,99,63,"url"],[146,50,99,66],[146,52,99,68,"data"],[146,56,99,72],[146,57,99,73],[147,6,100,4],[147,13,100,11,"response"],[147,21,100,19],[147,22,100,20,"data"],[147,26,100,24],[148,4,101,2],[149,4,103,2],[149,10,103,8,"delete"],[149,16,103,14,"delete"],[149,17,103,24,"url"],[149,20,103,35],[149,22,103,49],[150,6,104,4],[150,12,104,10,"response"],[150,20,104,36],[150,23,104,39],[150,29,104,45],[150,33,104,49],[150,34,104,50,"client"],[150,40,104,56],[150,41,104,57,"delete"],[150,47,104,63],[150,48,104,64,"url"],[150,51,104,67],[150,52,104,68],[151,6,105,4],[151,13,105,11,"response"],[151,21,105,19],[151,22,105,20,"data"],[151,26,105,24],[152,4,106,2],[153,4,108,2],[153,10,108,8,"put"],[153,13,108,11,"put"],[153,14,108,21,"url"],[153,17,108,32],[153,19,108,34,"data"],[153,23,108,44],[153,25,108,58],[154,6,109,4],[154,12,109,10,"response"],[154,20,109,36],[154,23,109,39],[154,29,109,45],[154,33,109,49],[154,34,109,50,"client"],[154,40,109,56],[154,41,109,57,"put"],[154,44,109,60],[154,45,109,61,"url"],[154,48,109,64],[154,50,109,66,"data"],[154,54,109,70],[154,55,109,71],[155,6,110,4],[155,13,110,11,"response"],[155,21,110,19],[155,22,110,20,"data"],[155,26,110,24],[156,4,111,2],[157,2,112,0],[158,2,114,0],[158,8,114,6,"apiClient"],[158,17,114,15],[158,20,114,18],[158,24,114,22,"ApiClient"],[158,33,114,31],[158,34,114,32],[158,35,114,33],[160,2,116,0],[161,2,117,7],[161,8,117,13,"authAPI"],[161,15,117,20],[161,18,117,23],[162,4,118,2,"createSession"],[162,17,118,15],[162,19,118,18,"sessionId"],[162,28,118,35],[162,32,119,4,"apiClient"],[162,41,119,13],[162,42,119,14,"post"],[162,46,119,18],[162,47,119,19],[162,62,119,34],[162,64,119,36],[162,68,119,40],[162,70,119,42],[163,6,120,6,"headers"],[163,13,120,13],[163,15,120,15],[164,8,120,17],[164,22,120,31],[164,24,120,33,"sessionId"],[165,6,120,43],[166,4,121,4],[166,5,121,5],[166,6,121,6],[167,4,123,2,"signup"],[167,10,123,8],[167,12,123,11,"data"],[167,16,129,3],[167,20,129,8,"apiClient"],[167,29,129,17],[167,30,129,18,"post"],[167,34,129,22],[167,35,129,23],[167,49,129,37],[167,51,129,39,"data"],[167,55,129,43],[167,56,129,44],[168,4,131,2,"verifyOTP"],[168,13,131,11],[168,15,131,14,"data"],[168,19,131,55],[168,23,132,4,"apiClient"],[168,32,132,13],[168,33,132,14,"post"],[168,37,132,18],[168,38,132,19],[168,56,132,37],[168,58,132,39,"data"],[168,62,132,43],[168,63,132,44],[169,4,134,2,"login"],[169,9,134,7],[169,11,134,10,"data"],[169,15,134,51],[169,19,135,4,"apiClient"],[169,28,135,13],[169,29,135,14,"post"],[169,33,135,18],[169,34,135,19],[169,47,135,32],[169,49,135,34,"data"],[169,53,135,38],[169,54,135,39],[170,4,137,2,"resendOTP"],[170,13,137,11],[170,15,137,14,"email"],[170,20,137,27],[170,24,138,4,"apiClient"],[170,33,138,13],[170,34,138,14,"post"],[170,38,138,18],[170,39,138,19],[170,57,138,37],[170,59,138,39],[171,6,138,41,"email"],[172,4,138,47],[172,5,138,48],[172,6,138,49],[173,4,140,2,"getCurrentUser"],[173,18,140,16],[173,20,140,18,"getCurrentUser"],[173,21,140,18],[173,26,140,24,"apiClient"],[173,35,140,33],[173,36,140,34,"get"],[173,39,140,37],[173,40,140,38],[173,50,140,48],[173,51,140,49],[174,4,142,2,"logout"],[174,10,142,8],[174,12,142,10,"logout"],[174,13,142,10],[174,18,142,16,"apiClient"],[174,27,142,25],[174,28,142,26,"post"],[174,32,142,30],[174,33,142,31],[174,47,142,45],[174,48,142,46],[175,4,144,2,"updateLanguage"],[175,18,144,16],[175,20,144,19,"language"],[175,28,144,35],[175,32,145,4,"apiClient"],[175,41,145,13],[175,42,145,14,"patch"],[175,47,145,19],[175,48,145,20],[175,64,145,36],[175,66,145,38],[175,70,145,42],[175,72,145,44],[176,6,146,6,"params"],[176,12,146,12],[176,14,146,14],[177,8,146,16,"language"],[178,6,146,25],[179,4,147,4],[179,5,147,5],[179,6,147,6],[180,4,149,2,"toggleBiometric"],[180,19,149,17],[180,21,149,20,"enabled"],[180,28,149,36],[180,32,150,4,"apiClient"],[180,41,150,13],[180,42,150,14,"patch"],[180,47,150,19],[180,48,150,20],[180,65,150,37],[180,67,150,39],[180,71,150,43],[180,73,150,45],[181,6,151,6,"params"],[181,12,151,12],[181,14,151,14],[182,8,151,16,"enabled"],[183,6,151,24],[184,4,152,4],[184,5,152,5],[185,2,153,0],[185,3,153,1],[187,2,155,0],[188,2,156,0],[188,8,156,6,"logAdminAction"],[188,22,156,20],[188,25,156,23],[188,31,156,23,"logAdminAction"],[188,32,156,30,"action"],[188,38,156,44],[188,40,156,46,"competitionName"],[188,55,156,69],[188,57,156,71,"adminName"],[188,66,156,88],[188,68,156,90,"details"],[188,75,156,103],[188,80,156,108],[189,4,157,2],[189,8,157,6],[190,6,158,4],[190,12,158,10,"logs"],[190,16,158,14],[190,19,158,17],[190,26,158,23,"CrossPlatformStorage"],[190,46,158,43],[190,47,158,44,"getItem"],[190,54,158,51],[190,55,158,52],[190,66,158,63],[190,67,158,64],[190,72,158,68],[190,76,158,72],[191,6,159,4],[191,12,159,10,"adminLogs"],[191,21,159,19],[191,24,159,22,"JSON"],[191,28,159,26],[191,29,159,27,"parse"],[191,34,159,32],[191,35,159,33,"logs"],[191,39,159,37],[191,40,159,38],[192,6,161,4],[192,12,161,10,"logEntry"],[192,20,161,18],[192,23,161,21],[193,8,162,6,"id"],[193,10,162,8],[193,12,162,10],[193,19,162,17,"Date"],[193,23,162,21],[193,24,162,22,"now"],[193,27,162,25],[193,28,162,26],[193,29,162,27],[193,31,162,29],[194,8,163,6,"action"],[194,14,163,12],[195,8,164,6,"competition_name"],[195,24,164,22],[195,26,164,24,"competitionName"],[195,41,164,39],[196,8,165,6,"admin_name"],[196,18,165,16],[196,20,165,18,"adminName"],[196,29,165,27],[197,8,166,6,"details"],[197,15,166,13],[198,8,167,6,"timestamp"],[198,17,167,15],[198,19,167,17],[198,23,167,21,"Date"],[198,27,167,25],[198,28,167,26],[198,29,167,27],[198,30,167,28,"toISOString"],[198,41,167,39],[198,42,167,40],[199,6,168,4],[199,7,168,5],[200,6,170,4,"adminLogs"],[200,15,170,13],[200,16,170,14,"push"],[200,20,170,18],[200,21,170,19,"logEntry"],[200,29,170,27],[200,30,170,28],[201,6,171,4],[201,12,171,10,"CrossPlatformStorage"],[201,32,171,30],[201,33,171,31,"setItem"],[201,40,171,38],[201,41,171,39],[201,52,171,50],[201,54,171,52,"JSON"],[201,58,171,56],[201,59,171,57,"stringify"],[201,68,171,66],[201,69,171,67,"adminLogs"],[201,78,171,76],[201,79,171,77],[201,80,171,78],[202,6,173,4,"console"],[202,13,173,11],[202,14,173,12,"log"],[202,17,173,15],[202,18,173,16],[202,43,173,41],[202,45,173,43,"action"],[202,51,173,49],[202,53,173,51,"competitionName"],[202,68,173,66],[202,69,173,67],[203,4,174,2],[203,5,174,3],[203,6,174,4],[203,13,174,11,"error"],[203,18,174,16],[203,20,174,18],[204,6,175,4,"console"],[204,13,175,11],[204,14,175,12,"error"],[204,19,175,17],[204,20,175,18],[204,49,175,47],[204,51,175,49,"error"],[204,56,175,54],[204,57,175,55],[205,4,176,2],[206,2,177,0],[206,3,177,1],[208,2,179,0],[209,2,180,7],[209,8,180,13,"competitionAPI"],[209,22,180,27],[209,25,180,30],[210,4,181,2,"create"],[210,10,181,8],[210,12,181,11,"data"],[210,16,196,3],[210,20,196,8,"apiClient"],[210,29,196,17],[210,30,196,18,"post"],[210,34,196,22],[210,35,196,23],[210,50,196,38],[210,52,196,40,"data"],[210,56,196,44],[210,57,196,45],[211,4,198,2,"join"],[211,8,198,6],[211,10,198,9,"inviteCode"],[211,20,198,27],[211,24,199,4,"apiClient"],[211,33,199,13],[211,34,199,14,"post"],[211,38,199,18],[211,39,199,19],[211,59,199,39],[211,61,199,41],[212,6,199,43,"invite_code"],[212,17,199,54],[212,19,199,56,"inviteCode"],[213,4,199,67],[213,5,199,68],[213,6,199,69],[214,4,201,2,"getMyCompetitions"],[214,21,201,19],[214,23,201,21,"getMyCompetitions"],[214,24,201,21],[214,29,201,27,"apiClient"],[214,38,201,36],[214,39,201,37,"get"],[214,42,201,40],[214,43,201,41],[214,61,201,59],[214,62,201,60],[215,4,203,2,"getCompetition"],[215,18,203,16],[215,20,203,19,"id"],[215,22,203,29],[215,26,203,34,"apiClient"],[215,35,203,43],[215,36,203,44,"get"],[215,39,203,47],[215,40,203,48],[215,57,203,65,"id"],[215,59,203,67],[215,61,203,69],[215,62,203,70],[216,4,205,2,"updateStandings"],[216,19,205,17],[216,21,205,19,"updateStandings"],[216,22,206,4,"id"],[216,24,206,14],[216,26,207,4,"standings"],[216,35,207,18],[216,37,208,4,"matchday"],[216,45,208,21],[216,50,210,4,"apiClient"],[216,59,210,13],[216,60,210,14,"patch"],[216,65,210,19],[216,66,210,20],[216,83,210,37,"id"],[216,85,210,39],[216,97,210,51],[216,99,210,53],[217,6,211,6,"standings"],[217,15,211,15],[218,6,212,6,"matchday"],[219,4,213,4],[219,5,213,5],[219,6,213,6],[220,4,215,2,"payFee"],[220,10,215,8],[220,12,215,10,"payFee"],[220,13,215,11,"id"],[220,15,215,21],[220,17,215,23,"amount"],[220,23,215,37],[220,28,216,4,"apiClient"],[220,37,216,13],[220,38,216,14,"post"],[220,42,216,18],[220,43,216,19],[220,60,216,36,"id"],[220,62,216,38],[220,68,216,44],[220,70,216,46],[220,74,216,50],[220,76,216,52],[221,6,217,6,"params"],[221,12,217,12],[221,14,217,14],[222,8,217,16,"amount"],[223,6,217,23],[224,4,218,4],[224,5,218,5],[224,6,218,6],[225,4,220,2,"getTransactions"],[225,19,220,17],[225,21,220,20,"id"],[225,23,220,30],[225,27,221,4,"apiClient"],[225,36,221,13],[225,37,221,14,"get"],[225,40,221,17],[225,41,221,18],[225,58,221,35,"id"],[225,60,221,37],[225,75,221,52],[225,76,221,53],[226,4,223,2],[227,4,224,2,"payMatchdays"],[227,16,224,14],[227,18,224,16,"payMatchdays"],[227,19,224,17,"competitionId"],[227,32,224,38],[227,34,224,40,"matchdays"],[227,43,224,59],[227,48,225,4,"apiClient"],[227,57,225,13],[227,58,225,14,"post"],[227,62,225,18],[227,63,225,19],[227,80,225,36,"competitionId"],[227,93,225,49],[227,113,225,69],[227,115,225,71],[228,6,226,6,"competition_id"],[228,20,226,20],[228,22,226,22,"competitionId"],[228,35,226,35],[229,6,227,6,"matchdays"],[230,4,228,4],[230,5,228,5],[230,6,228,6],[231,4,230,2,"getMatchdayPayments"],[231,23,230,21],[231,25,230,24,"competitionId"],[231,38,230,45],[231,42,231,4,"apiClient"],[231,51,231,13],[231,52,231,14,"get"],[231,55,231,17],[231,56,231,18],[231,73,231,35,"competitionId"],[231,86,231,48],[231,106,231,68],[231,107,231,69],[232,4,233,2,"getPaymentStatusTable"],[232,25,233,23],[232,27,233,26,"competitionId"],[232,40,233,47],[232,44,234,4,"apiClient"],[232,53,234,13],[232,54,234,14,"get"],[232,57,234,17],[232,58,234,18],[232,75,234,35,"competitionId"],[232,88,234,48],[232,111,234,71],[232,112,234,72],[233,4,236,2],[234,4,237,2,"createMock"],[234,14,237,12],[234,16,237,14],[234,22,237,21,"data"],[234,26,250,3],[234,30,250,8],[235,6,251,4,"console"],[235,13,251,11],[235,14,251,12,"log"],[235,17,251,15],[235,18,251,16],[235,50,251,48],[235,52,251,50,"data"],[235,56,251,54],[235,57,251,55,"name"],[235,61,251,59],[235,62,251,60],[236,6,252,4,"console"],[236,13,252,11],[236,14,252,12,"log"],[236,17,252,15],[236,18,252,16],[236,39,252,37],[236,41,252,39,"data"],[236,45,252,43],[236,46,252,44,"total_matchdays"],[236,61,252,59],[236,65,252,63],[236,67,252,65],[236,68,252,66],[238,6,254,4],[239,6,255,4],[239,12,255,10,"storedCompetitions"],[239,30,255,28],[239,33,255,31],[239,39,255,37,"CrossPlatformStorage"],[239,59,255,57],[239,60,255,58,"getItem"],[239,67,255,65],[239,68,255,66],[239,87,255,85],[239,88,255,86],[240,6,256,4],[240,10,256,8,"existingCompetitions"],[240,30,256,28],[240,33,256,31,"storedCompetitions"],[240,51,256,49],[240,54,256,52,"JSON"],[240,58,256,56],[240,59,256,57,"parse"],[240,64,256,62],[240,65,256,63,"storedCompetitions"],[240,83,256,81],[240,84,256,82],[240,87,256,85],[240,89,256,87],[241,6,258,4,"console"],[241,13,258,11],[241,14,258,12,"log"],[241,17,258,15],[241,18,258,16],[241,60,258,58],[241,62,258,60,"existingCompetitions"],[241,82,258,80],[241,83,258,81,"length"],[241,89,258,87],[241,90,258,88],[243,6,260,4],[244,6,261,4],[244,12,261,10,"existingNames"],[244,25,261,23],[244,28,261,26,"existingCompetitions"],[244,48,261,46],[244,49,261,47,"map"],[244,52,261,50],[244,53,261,52,"comp"],[244,57,261,61],[244,61,261,66,"comp"],[244,65,261,70],[244,66,261,71,"name"],[244,70,261,75],[244,71,261,76,"toLowerCase"],[244,82,261,87],[244,83,261,88],[244,84,261,89],[244,85,261,90],[245,6,262,4],[245,10,262,8,"existingNames"],[245,23,262,21],[245,24,262,22,"includes"],[245,32,262,30],[245,33,262,31,"data"],[245,37,262,35],[245,38,262,36,"name"],[245,42,262,40],[245,43,262,41,"toLowerCase"],[245,54,262,52],[245,55,262,53],[245,56,262,54],[245,57,262,55],[245,59,262,57],[246,8,263,6],[246,14,263,12],[246,18,263,16,"Error"],[246,23,263,21],[246,24,263,22],[246,86,263,84],[246,87,263,85],[247,6,264,4],[249,6,266,4],[250,6,267,4],[250,12,267,10,"newCompetition"],[250,26,267,24],[250,29,267,27],[251,8,268,6,"_id"],[251,11,268,9],[251,13,268,11],[251,21,268,19,"Date"],[251,25,268,23],[251,26,268,24,"now"],[251,29,268,27],[251,30,268,28],[251,31,268,29],[251,33,268,31],[252,8,269,6,"name"],[252,12,269,10],[252,14,269,12,"data"],[252,18,269,16],[252,19,269,17,"name"],[252,23,269,21],[253,8,270,6,"total_matchdays"],[253,23,270,21],[253,25,270,23,"data"],[253,29,270,27],[253,30,270,28,"total_matchdays"],[253,45,270,43],[253,49,270,47],[253,51,270,49],[254,8,271,6,"participation_cost_per_team"],[254,35,271,33],[254,37,271,35,"data"],[254,41,271,39],[254,42,271,40,"participation_cost_per_team"],[254,69,271,67],[254,73,271,71],[254,78,271,76],[255,8,272,6,"expected_teams"],[255,22,272,20],[255,24,272,22,"data"],[255,28,272,26],[255,29,272,27,"expected_teams"],[255,43,272,41],[255,47,272,45],[255,48,272,46],[256,8,273,6,"total_prize_pool"],[256,24,273,22],[256,26,273,24,"data"],[256,30,273,28],[256,31,273,29,"total_prize_pool"],[256,47,273,45],[256,51,273,49],[256,57,273,55],[257,8,274,6,"daily_payment_enabled"],[257,29,274,27],[257,31,274,29,"data"],[257,35,274,33],[257,36,274,34,"daily_payment_enabled"],[257,57,274,55],[257,61,274,59],[257,66,274,64],[258,8,275,6,"daily_payment_amount"],[258,28,275,26],[258,30,275,28,"data"],[258,34,275,32],[258,35,275,33,"daily_payment_amount"],[258,55,275,53],[258,59,275,57],[258,62,275,60],[259,8,276,6,"rules"],[259,13,276,11],[259,15,276,13,"data"],[259,19,276,17],[259,20,276,18,"rules"],[259,25,276,23],[260,8,277,6,"invite_code"],[260,19,277,17],[260,21,277,19,"Math"],[260,25,277,23],[260,26,277,24,"random"],[260,32,277,30],[260,33,277,31],[260,34,277,32],[260,35,277,33,"toString"],[260,43,277,41],[260,44,277,42],[260,46,277,44],[260,47,277,45],[260,48,277,46,"substr"],[260,54,277,52],[260,55,277,53],[260,56,277,54],[260,58,277,56],[260,59,277,57],[260,60,277,58],[260,61,277,59,"toUpperCase"],[260,72,277,70],[260,73,277,71],[260,74,277,72],[261,8,278,6,"invite_link"],[261,19,278,17],[261,21,278,19],[261,50,278,48,"Math"],[261,54,278,52],[261,55,278,53,"random"],[261,61,278,59],[261,62,278,60],[261,63,278,61],[261,64,278,62,"toString"],[261,72,278,70],[261,73,278,71],[261,75,278,73],[261,76,278,74],[261,77,278,75,"substr"],[261,83,278,81],[261,84,278,82],[261,85,278,83],[261,87,278,85],[261,88,278,86],[261,89,278,87],[261,90,278,88,"toUpperCase"],[261,101,278,99],[261,102,278,100],[261,103,278,101],[261,105,278,103],[262,8,279,6,"admin_id"],[262,16,279,14],[262,18,279,16],[262,44,279,42],[263,8,279,44],[264,8,280,6,"participants"],[264,20,280,18],[264,22,280,20],[264,23,281,8],[265,10,282,10,"id"],[265,12,282,12],[265,14,282,14],[265,40,282,40],[266,10,283,10,"name"],[266,14,283,14],[266,16,283,16],[266,33,283,33],[267,10,284,10,"email"],[267,15,284,15],[267,17,284,17],[267,36,284,36],[268,10,285,10,"is_admin"],[268,18,285,18],[268,20,285,20],[268,24,285,24],[269,10,286,10,"paid_matchdays"],[269,24,286,24],[269,26,286,26],[269,27,286,27],[269,28,286,28],[269,30,286,30],[269,31,286,31],[269,32,286,32],[270,10,286,34],[271,10,287,10,"points"],[271,16,287,16],[271,18,287,18],[272,8,288,8],[272,9,288,9],[272,10,289,7],[273,8,290,6,"wallet_balance"],[273,22,290,20],[273,24,290,22],[273,25,290,23],[274,8,291,6,"is_active"],[274,17,291,15],[274,19,291,17],[274,23,291,21],[275,8,292,6,"current_matchday"],[275,24,292,22],[275,26,292,24],[275,27,292,25],[276,8,292,27],[277,8,293,6,"standings"],[277,17,293,15],[277,19,293,17],[277,20,294,8],[278,10,294,10,"position"],[278,18,294,18],[278,20,294,20],[278,21,294,21],[279,10,294,23,"player_id"],[279,19,294,32],[279,21,294,34],[279,47,294,60],[280,10,294,62,"name"],[280,14,294,66],[280,16,294,68],[280,33,294,85],[281,10,294,87,"points"],[281,16,294,93],[281,18,294,95],[282,8,294,97],[282,9,294,98],[282,10,295,7],[283,8,296,6,"created_at"],[283,18,296,16],[283,20,296,18],[283,24,296,22,"Date"],[283,28,296,26],[283,29,296,27],[283,30,296,28],[283,31,296,29,"toISOString"],[283,42,296,40],[283,43,296,41],[283,44,296,42],[284,8,297,6,"updated_at"],[284,18,297,16],[284,20,297,18],[284,24,297,22,"Date"],[284,28,297,26],[284,29,297,27],[284,30,297,28],[284,31,297,29,"toISOString"],[284,42,297,40],[284,43,297,41],[285,6,298,4],[285,7,298,5],[287,6,300,4],[288,6,301,4,"existingCompetitions"],[288,26,301,24],[288,27,301,25,"push"],[288,31,301,29],[288,32,301,30,"newCompetition"],[288,46,301,44],[288,47,301,45],[289,6,302,4],[289,12,302,10,"CrossPlatformStorage"],[289,32,302,30],[289,33,302,31,"setItem"],[289,40,302,38],[289,41,302,39],[289,60,302,58],[289,62,302,60,"JSON"],[289,66,302,64],[289,67,302,65,"stringify"],[289,76,302,74],[289,77,302,75,"existingCompetitions"],[289,97,302,95],[289,98,302,96],[289,99,302,97],[290,6,304,4,"console"],[290,13,304,11],[290,14,304,12,"log"],[290,17,304,15],[290,18,304,16],[290,71,304,69],[290,73,304,71,"existingCompetitions"],[290,93,304,91],[290,94,304,92,"length"],[290,100,304,98],[290,101,304,99],[292,6,306,4],[293,6,307,4],[293,12,307,10,"logAdminAction"],[293,26,307,24],[293,27,307,25],[293,35,307,33],[293,37,307,35,"newCompetition"],[293,51,307,49],[293,52,307,50,"name"],[293,56,307,54],[293,58,307,56],[293,75,307,73],[293,77,307,75],[294,8,308,6,"competition_id"],[294,22,308,20],[294,24,308,22,"newCompetition"],[294,38,308,36],[294,39,308,37,"_id"],[294,42,308,40],[295,8,309,6,"rules"],[295,13,309,11],[295,15,309,13,"newCompetition"],[295,29,309,27],[295,30,309,28,"rules"],[295,35,309,33],[296,8,310,6,"total_matchdays"],[296,23,310,21],[296,25,310,23,"newCompetition"],[296,39,310,37],[296,40,310,38,"total_matchdays"],[296,55,310,53],[297,8,311,6,"participation_cost_per_team"],[297,35,311,33],[297,37,311,35,"newCompetition"],[297,51,311,49],[297,52,311,50,"participation_cost_per_team"],[297,79,311,77],[298,8,312,6,"expected_teams"],[298,22,312,20],[298,24,312,22,"newCompetition"],[298,38,312,36],[298,39,312,37,"expected_teams"],[298,53,312,51],[299,8,313,6,"total_prize_pool"],[299,24,313,22],[299,26,313,24,"newCompetition"],[299,40,313,38],[299,41,313,39,"total_prize_pool"],[299,57,313,55],[300,8,314,6,"daily_payment_enabled"],[300,29,314,27],[300,31,314,29,"newCompetition"],[300,45,314,43],[300,46,314,44,"daily_payment_enabled"],[300,67,314,65],[301,8,315,6,"daily_payment_amount"],[301,28,315,26],[301,30,315,28,"newCompetition"],[301,44,315,42],[301,45,315,43,"daily_payment_amount"],[302,6,316,4],[302,7,316,5],[302,8,316,6],[303,6,318,4,"console"],[303,13,318,11],[303,14,318,12,"log"],[303,17,318,15],[303,18,318,16],[303,47,318,45],[303,49,318,47,"newCompetition"],[303,63,318,61],[303,64,318,62,"name"],[303,68,318,66],[303,69,318,67],[304,6,319,4,"console"],[304,13,319,11],[304,14,319,12,"log"],[304,17,319,15],[304,18,319,16],[304,40,319,38],[304,42,319,40,"newCompetition"],[304,56,319,54],[304,57,319,55,"name"],[304,61,319,59],[304,62,319,60],[305,6,320,4,"console"],[305,13,320,11],[305,14,320,12,"log"],[305,17,320,15],[305,18,320,16],[305,37,320,35],[305,39,320,37,"newCompetition"],[305,53,320,51],[305,54,320,52,"daily_payment_enabled"],[305,75,320,73],[305,78,320,76],[305,82,320,80,"newCompetition"],[305,96,320,94],[305,97,320,95,"daily_payment_amount"],[305,117,320,115],[305,132,320,130],[305,135,320,133],[305,145,320,143],[305,146,320,144],[306,6,321,4,"console"],[306,13,321,11],[306,14,321,12,"log"],[306,17,321,15],[306,18,321,16],[306,40,321,38],[306,42,321,40],[306,46,321,44,"newCompetition"],[306,60,321,58],[306,61,321,59,"total_prize_pool"],[306,77,321,75],[306,79,321,77],[306,80,321,78],[307,6,322,4,"console"],[307,13,322,11],[307,14,322,12,"log"],[307,17,322,15],[307,18,322,16],[307,35,322,33],[307,37,322,35,"newCompetition"],[307,51,322,49],[307,52,322,50,"invite_code"],[307,63,322,61],[307,64,322,62],[308,6,324,4],[308,13,324,11],[309,8,324,13,"data"],[309,12,324,17],[309,14,324,19,"newCompetition"],[310,6,324,34],[310,7,324,35],[311,4,325,2],[311,5,325,3],[312,4,327,2],[313,4,328,2,"payMatchdaysMock"],[313,20,328,18],[313,22,328,20],[313,28,328,20,"payMatchdaysMock"],[313,29,328,27,"competitionId"],[313,42,328,48],[313,44,328,50,"matchdays"],[313,53,328,69],[313,58,328,74],[314,6,329,4,"console"],[314,13,329,11],[314,14,329,12,"log"],[314,17,329,15],[314,18,329,16],[314,49,329,47],[314,51,329,49,"matchdays"],[314,60,329,58],[314,62,329,60],[314,78,329,76],[314,80,329,78,"competitionId"],[314,93,329,91],[314,94,329,92],[316,6,331,4],[317,6,332,4],[317,12,332,10,"totalCost"],[317,21,332,19],[317,24,332,22,"matchdays"],[317,33,332,31],[317,34,332,32,"length"],[317,40,332,38],[317,43,332,41],[317,44,332,42],[317,45,332,43],[317,46,332,44],[319,6,334,4],[320,6,335,4],[320,13,335,11],[321,8,336,6,"data"],[321,12,336,10],[321,14,336,12],[322,10,337,8,"message"],[322,17,337,15],[322,19,337,17],[322,44,337,42,"matchdays"],[322,53,337,51],[322,54,337,52,"length"],[322,60,337,58],[322,72,337,70],[323,10,338,8,"paid_matchdays"],[323,24,338,22],[323,26,338,24,"matchdays"],[323,35,338,33],[324,10,339,8,"total_cost"],[324,20,339,18],[324,22,339,20,"totalCost"],[324,31,339,29],[325,10,340,8,"new_user_balance"],[325,26,340,24],[325,28,340,26],[325,31,340,29],[325,34,340,32,"totalCost"],[325,43,340,41],[325,44,340,42],[326,8,341,6],[327,6,342,4],[327,7,342,5],[328,4,343,2],[328,5,343,3],[329,4,345,2,"getMatchdayPaymentsMock"],[329,27,345,25],[329,29,345,27],[329,35,345,34,"competitionId"],[329,48,345,55],[329,52,345,60],[330,6,346,4,"console"],[330,13,346,11],[330,14,346,12,"log"],[330,17,346,15],[330,18,346,16],[330,70,346,68],[330,72,346,70,"competitionId"],[330,85,346,83],[330,86,346,84],[332,6,348,4],[333,6,349,4],[333,12,349,10,"mockPayments"],[333,24,349,22],[333,27,349,25],[333,29,349,27],[334,6,350,4],[334,11,350,9],[334,15,350,13,"i"],[334,16,350,14],[334,19,350,17],[334,20,350,18],[334,22,350,20,"i"],[334,23,350,21],[334,27,350,25],[334,29,350,27],[334,31,350,29,"i"],[334,32,350,30],[334,34,350,32],[334,36,350,34],[335,8,351,6,"mockPayments"],[335,20,351,18],[335,21,351,19,"push"],[335,25,351,23],[335,26,351,24],[336,10,352,8,"_id"],[336,13,352,11],[336,15,352,13],[336,26,352,24,"i"],[336,27,352,25],[336,29,352,27],[337,10,353,8,"user_id"],[337,17,353,15],[337,19,353,17],[337,45,353,43],[338,10,354,8,"competition_id"],[338,24,354,22],[338,26,354,24,"competitionId"],[338,39,354,37],[339,10,355,8,"matchday"],[339,18,355,16],[339,20,355,18,"i"],[339,21,355,19],[340,10,356,8,"amount"],[340,16,356,14],[340,18,356,16],[340,19,356,17],[341,10,357,8,"status"],[341,16,357,14],[341,18,357,16,"i"],[341,19,357,17],[341,23,357,21],[341,24,357,22],[341,27,357,25],[341,33,357,31],[341,36,357,34],[341,45,357,43],[342,10,358,8,"paid_at"],[342,17,358,15],[342,19,358,17,"i"],[342,20,358,18],[342,24,358,22],[342,25,358,23],[342,28,358,26],[342,32,358,30,"Date"],[342,36,358,34],[342,37,358,35],[342,38,358,36],[342,39,358,37,"toISOString"],[342,50,358,48],[342,51,358,49],[342,52,358,50],[342,55,358,53],[342,59,358,57],[343,10,359,8,"created_at"],[343,20,359,18],[343,22,359,20],[343,26,359,24,"Date"],[343,30,359,28],[343,31,359,29],[343,32,359,30],[343,33,359,31,"toISOString"],[343,44,359,42],[343,45,359,43],[344,8,360,6],[344,9,360,7],[344,10,360,8],[345,6,361,4],[346,6,363,4],[346,13,363,11],[347,8,364,6,"data"],[347,12,364,10],[347,14,364,12],[348,10,365,8,"competition_id"],[348,24,365,22],[348,26,365,24,"competitionId"],[348,39,365,37],[349,10,366,8,"daily_payment_enabled"],[349,31,366,29],[349,33,366,31],[349,37,366,35],[350,10,367,8,"daily_payment_amount"],[350,30,367,28],[350,32,367,30],[350,33,367,31],[351,10,368,8,"total_matchdays"],[351,25,368,23],[351,27,368,25],[351,29,368,27],[352,10,369,8,"payments"],[352,18,369,16],[352,20,369,18,"mockPayments"],[353,8,370,6],[354,6,371,4],[354,7,371,5],[355,4,372,2],[355,5,372,3],[356,4,374,2,"getPaymentStatusTableMock"],[356,29,374,27],[356,31,374,29],[356,37,374,36,"competitionId"],[356,50,374,57],[356,54,374,62],[357,6,375,4,"console"],[357,13,375,11],[357,14,375,12,"log"],[357,17,375,15],[357,18,375,16],[357,73,375,71],[357,75,375,73,"competitionId"],[357,88,375,86],[357,89,375,87],[359,6,377,4],[360,6,378,4],[360,12,378,10,"mockTable"],[360,21,378,19],[360,24,378,22],[360,25,378,23],[361,8,379,6,"user_id"],[361,15,379,13],[361,17,379,15],[361,43,379,41],[362,8,380,6,"username"],[362,16,380,14],[362,18,380,16],[362,35,380,33],[363,8,381,6,"name"],[363,12,381,10],[363,14,381,12],[363,31,381,29],[364,8,382,6,"email"],[364,13,382,11],[364,15,382,13],[364,34,382,32],[365,8,383,6,"matchday_payments"],[365,25,383,23],[365,27,383,25,"Array"],[365,32,383,30],[365,33,383,31,"from"],[365,37,383,35],[365,38,383,36],[366,10,383,37,"length"],[366,16,383,43],[366,18,383,45],[367,8,383,47],[367,9,383,48],[367,11,383,50],[367,12,383,51,"_"],[367,13,383,52],[367,15,383,54,"i"],[367,16,383,55],[367,22,383,61],[368,10,384,8,"matchday"],[368,18,384,16],[368,20,384,18,"i"],[368,21,384,19],[368,24,384,22],[368,25,384,23],[369,10,385,8,"status"],[369,16,385,14],[369,18,385,17,"i"],[369,19,385,18],[369,22,385,21],[369,23,385,22],[369,26,385,25],[369,32,385,31],[369,35,385,34],[369,44,385,44],[370,10,386,8,"amount"],[370,16,386,14],[370,18,386,16],[370,19,386,17],[371,10,387,8,"paid_at"],[371,17,387,15],[371,19,387,17,"i"],[371,20,387,18],[371,23,387,21],[371,24,387,22],[371,27,387,25],[371,31,387,29,"Date"],[371,35,387,33],[371,36,387,34],[371,37,387,35],[371,38,387,36,"toISOString"],[371,49,387,47],[371,50,387,48],[371,51,387,49],[371,54,387,52],[372,8,388,6],[372,9,388,7],[372,10,388,8],[373,6,389,4],[373,7,389,5],[373,8,389,6],[374,6,391,4],[374,13,391,11],[375,8,392,6,"data"],[375,12,392,10],[375,14,392,12],[376,10,393,8,"competition_name"],[376,26,393,24],[376,28,393,26],[376,49,393,47],[377,10,394,8,"total_matchdays"],[377,25,394,23],[377,27,394,25],[377,29,394,27],[378,10,395,8,"daily_payment_amount"],[378,30,395,28],[378,32,395,30],[378,33,395,31],[379,10,396,8,"participants"],[379,22,396,20],[379,24,396,22,"mockTable"],[380,8,397,6],[381,6,398,4],[381,7,398,5],[382,4,399,2],[382,5,399,3],[383,4,401,2],[384,4,402,2,"validateNameMock"],[384,20,402,18],[384,22,402,20],[384,28,402,27,"name"],[384,32,402,39],[384,36,402,44],[385,6,403,4,"console"],[385,13,403,11],[385,14,403,12,"log"],[385,17,403,15],[385,18,403,16],[385,57,403,55],[385,59,403,57,"name"],[385,63,403,61],[385,64,403,62],[386,6,405,4],[386,10,405,8],[386,11,405,9,"name"],[386,15,405,13],[386,16,405,14,"trim"],[386,20,405,18],[386,21,405,19],[386,22,405,20],[386,24,405,22],[387,8,406,6],[387,15,406,13],[388,10,406,15,"available"],[388,19,406,24],[388,21,406,26],[388,25,406,30],[389,10,406,32,"message"],[389,17,406,39],[389,19,406,41],[390,8,406,44],[390,9,406,45],[391,6,407,4],[393,6,409,4],[394,6,410,4],[394,12,410,10,"storedCompetitions"],[394,30,410,28],[394,33,410,31],[394,39,410,37,"CrossPlatformStorage"],[394,59,410,57],[394,60,410,58,"getItem"],[394,67,410,65],[394,68,410,66],[394,86,410,84],[394,87,410,85],[395,6,411,4],[395,10,411,8,"existingCompetitions"],[395,30,411,28],[395,33,411,31,"storedCompetitions"],[395,51,411,49],[395,54,411,52,"JSON"],[395,58,411,56],[395,59,411,57,"parse"],[395,64,411,62],[395,65,411,63,"storedCompetitions"],[395,83,411,81],[395,84,411,82],[395,87,411,85],[395,89,411,87],[397,6,413,4],[398,6,414,4],[398,12,414,10,"defaultNames"],[398,24,414,22],[398,27,414,25],[398,28,414,26],[398,50,414,48],[398,52,414,50],[398,78,414,76],[398,80,414,78],[398,96,414,94],[398,97,414,95],[399,6,415,4],[399,12,415,10,"allNames"],[399,20,415,18],[399,23,415,21],[399,24,416,6],[399,27,416,9,"existingCompetitions"],[399,47,416,29],[399,48,416,30,"map"],[399,51,416,33],[399,52,416,35,"comp"],[399,56,416,44],[399,60,416,49,"comp"],[399,64,416,53],[399,65,416,54,"name"],[399,69,416,58],[399,70,416,59,"toLowerCase"],[399,81,416,70],[399,82,416,71],[399,83,416,72],[399,84,416,73],[399,86,417,6],[399,89,417,9,"defaultNames"],[399,101,417,21],[399,102,417,22,"map"],[399,105,417,25],[399,106,417,26,"name"],[399,110,417,30],[399,114,417,34,"name"],[399,118,417,38],[399,119,417,39,"toLowerCase"],[399,130,417,50],[399,131,417,51],[399,132,417,52],[399,133,417,53],[399,134,418,5],[400,6,420,4],[400,12,420,10,"isAvailable"],[400,23,420,21],[400,26,420,24],[400,27,420,25,"allNames"],[400,35,420,33],[400,36,420,34,"includes"],[400,44,420,42],[400,45,420,43,"name"],[400,49,420,47],[400,50,420,48,"toLowerCase"],[400,61,420,59],[400,62,420,60],[400,63,420,61],[400,64,420,62],[401,6,422,4],[401,13,422,11],[402,8,423,6,"available"],[402,17,423,15],[402,19,423,17,"isAvailable"],[402,30,423,28],[403,8,424,6,"message"],[403,15,424,13],[403,17,424,15,"isAvailable"],[403,28,424,26],[403,31,424,29],[403,47,424,45],[403,50,424,48],[404,6,425,4],[404,7,425,5],[405,4,426,2],[405,5,426,3],[406,4,428,2],[407,4,429,2,"getMyCompetitionsMock"],[407,25,429,23],[407,27,429,25],[407,33,429,25,"getMyCompetitionsMock"],[407,34,429,25],[407,39,429,37],[408,6,430,4,"console"],[408,13,430,11],[408,14,430,12,"log"],[408,17,430,15],[408,18,430,16],[408,52,430,50],[408,53,430,51],[410,6,432,4],[411,6,433,4],[411,12,433,10,"shouldClearStorage"],[411,30,433,28],[411,33,433,31],[411,38,433,36],[411,39,433,37],[411,40,433,38],[413,6,435,4],[413,10,435,8,"shouldClearStorage"],[413,28,435,26],[413,30,435,28],[414,8,436,6,"console"],[414,15,436,13],[414,16,436,14,"log"],[414,19,436,17],[414,20,436,18],[414,73,436,71],[414,74,436,72],[415,8,437,6],[415,14,437,12,"CrossPlatformStorage"],[415,34,437,32],[415,35,437,33,"removeItem"],[415,45,437,43],[415,46,437,44],[415,65,437,63],[415,66,437,64],[416,8,438,6],[416,14,438,12,"CrossPlatformStorage"],[416,34,438,32],[416,35,438,33,"removeItem"],[416,45,438,43],[416,46,438,44],[416,63,438,61],[416,64,438,62],[418,8,440,6],[419,8,441,6],[419,14,441,12,"paymentKeys"],[419,25,441,23],[419,28,441,26],[419,29,442,8],[419,83,442,62],[419,85,443,8],[419,139,443,62],[419,141,444,8],[419,188,444,55],[419,190,445,8],[419,244,445,62],[419,245,446,7],[420,8,448,6],[420,13,448,11],[420,19,448,17,"key"],[420,22,448,20],[420,26,448,24,"paymentKeys"],[420,37,448,35],[420,39,448,37],[421,10,449,8],[421,16,449,14,"CrossPlatformStorage"],[421,36,449,34],[421,37,449,35,"removeItem"],[421,47,449,45],[421,48,449,46,"key"],[421,51,449,49],[421,52,449,50],[422,10,450,8,"console"],[422,17,450,15],[422,18,450,16,"log"],[422,21,450,19],[422,22,450,20],[422,49,450,47,"key"],[422,52,450,50],[422,54,450,52],[422,55,450,53],[423,8,451,6],[424,8,453,6,"console"],[424,15,453,13],[424,16,453,14,"log"],[424,19,453,17],[424,20,453,18],[424,73,453,71],[424,74,453,72],[425,8,454,6],[425,15,454,13],[425,17,454,15],[425,18,454,16],[425,19,454,17],[426,6,455,4],[427,6,457,4],[427,12,457,10,"storedCompetitions"],[427,30,457,28],[427,33,457,31],[427,39,457,37,"CrossPlatformStorage"],[427,59,457,57],[427,60,457,58,"getItem"],[427,67,457,65],[427,68,457,66],[427,87,457,85],[427,88,457,86],[428,6,459,4],[428,10,459,8,"storedCompetitions"],[428,28,459,26],[428,30,459,28],[429,8,460,6],[429,14,460,12,"competitions"],[429,26,460,24],[429,29,460,27,"JSON"],[429,33,460,31],[429,34,460,32,"parse"],[429,39,460,37],[429,40,460,38,"storedCompetitions"],[429,58,460,56],[429,59,460,57],[430,8,461,6,"console"],[430,15,461,13],[430,16,461,14,"log"],[430,19,461,17],[430,20,461,18],[430,55,461,53],[430,57,461,55,"competitions"],[430,69,461,67],[430,70,461,68,"length"],[430,76,461,74],[430,77,461,75],[431,8,463,6,"competitions"],[431,20,463,18],[431,21,463,19,"forEach"],[431,28,463,26],[431,29,463,27],[431,30,463,28,"comp"],[431,34,463,37],[431,36,463,39,"index"],[431,41,463,52],[431,46,463,57],[432,10,464,8,"console"],[432,17,464,15],[432,18,464,16,"log"],[432,21,464,19],[432,22,464,20],[432,25,464,23,"index"],[432,30,464,28],[432,33,464,31],[432,34,464,32],[432,39,464,37,"comp"],[432,43,464,41],[432,44,464,42,"name"],[432,48,464,46],[432,57,464,55,"comp"],[432,61,464,59],[432,62,464,60,"_id"],[432,65,464,63],[432,68,464,66],[432,69,464,67],[433,8,465,6],[433,9,465,7],[433,10,465,8],[434,8,467,6],[434,15,467,13,"competitions"],[434,27,467,25],[435,6,468,4],[435,7,468,5],[435,13,468,11],[436,8,469,6,"console"],[436,15,469,13],[436,16,469,14,"log"],[436,19,469,17],[436,20,469,18],[436,80,469,78],[436,81,469,79],[437,8,470,6],[437,15,470,13],[437,17,470,15],[438,6,471,4],[439,4,472,2],[439,5,472,3],[440,4,474,2,"joinMock"],[440,12,474,10],[440,14,474,12],[440,20,474,19,"inviteCode"],[440,30,474,37],[440,34,474,42],[441,6,475,4,"console"],[441,13,475,11],[441,14,475,12,"log"],[441,17,475,15],[441,18,475,16],[441,59,475,57],[441,61,475,59,"inviteCode"],[441,71,475,69],[441,72,475,70],[442,6,476,4],[442,10,476,8,"inviteCode"],[442,20,476,18],[442,21,476,19,"length"],[442,27,476,25],[442,30,476,28],[442,31,476,29],[442,33,476,31],[443,8,477,6],[443,14,477,12],[443,18,477,16,"Error"],[443,23,477,21],[443,24,477,22],[443,45,477,43],[443,46,477,44],[444,6,478,4],[445,6,479,4],[445,13,479,11],[446,8,479,13,"message"],[446,15,479,20],[446,17,479,22],[447,6,479,57],[447,7,479,58],[448,4,480,2],[448,5,480,3],[449,4,482,2],[450,4,483,2,"deleteMock"],[450,14,483,12],[450,16,483,14],[450,22,483,21,"competitionId"],[450,35,483,42],[450,39,483,47],[451,6,484,4,"console"],[451,13,484,11],[451,14,484,12,"log"],[451,17,484,15],[451,18,484,16],[451,51,484,49],[451,53,484,51,"competitionId"],[451,66,484,64],[451,67,484,65],[452,6,486,4],[452,12,486,10,"storedCompetitions"],[452,30,486,28],[452,33,486,31],[452,39,486,37,"CrossPlatformStorage"],[452,59,486,57],[452,60,486,58,"getItem"],[452,67,486,65],[452,68,486,66],[452,86,486,84],[452,87,486,85],[453,6,487,4],[453,10,487,8,"competitions"],[453,22,487,20],[453,25,487,23,"storedCompetitions"],[453,43,487,41],[453,46,487,44,"JSON"],[453,50,487,48],[453,51,487,49,"parse"],[453,56,487,54],[453,57,487,55,"storedCompetitions"],[453,75,487,73],[453,76,487,74],[453,79,487,77],[453,81,487,79],[454,6,489,4],[454,12,489,10,"competitionToDelete"],[454,31,489,29],[454,34,489,32,"competitions"],[454,46,489,44],[454,47,489,45,"find"],[454,51,489,49],[454,52,489,51,"comp"],[454,56,489,60],[454,60,489,65,"comp"],[454,64,489,69],[454,65,489,70,"_id"],[454,68,489,73],[454,73,489,78,"competitionId"],[454,86,489,91],[454,87,489,92],[455,6,490,4],[455,10,490,8],[455,11,490,9,"competitionToDelete"],[455,30,490,28],[455,32,490,30],[456,8,491,6],[456,14,491,12],[456,18,491,16,"Error"],[456,23,491,21],[456,24,491,22],[456,47,491,45],[456,48,491,46],[457,6,492,4],[459,6,494,4],[460,6,495,4],[460,10,495,8,"competitionToDelete"],[460,29,495,27],[460,30,495,28,"admin_id"],[460,38,495,36],[460,43,495,41],[460,69,495,67],[460,71,495,69],[461,8,496,6],[461,14,496,12],[461,18,496,16,"Error"],[461,23,496,21],[461,24,496,22],[461,64,496,62],[461,65,496,63],[462,6,497,4],[464,6,499,4],[465,6,500,4,"competitions"],[465,18,500,16],[465,21,500,19,"competitions"],[465,33,500,31],[465,34,500,32,"filter"],[465,40,500,38],[465,41,500,40,"comp"],[465,45,500,49],[465,49,500,54,"comp"],[465,53,500,58],[465,54,500,59,"_id"],[465,57,500,62],[465,62,500,67,"competitionId"],[465,75,500,80],[465,76,500,81],[466,6,501,4],[466,12,501,10,"CrossPlatformStorage"],[466,32,501,30],[466,33,501,31,"setItem"],[466,40,501,38],[466,41,501,39],[466,59,501,57],[466,61,501,59,"JSON"],[466,65,501,63],[466,66,501,64,"stringify"],[466,75,501,73],[466,76,501,74,"competitions"],[466,88,501,86],[466,89,501,87],[466,90,501,88],[468,6,503,4],[469,6,504,4],[469,12,504,10,"logAdminAction"],[469,26,504,24],[469,27,504,25],[469,35,504,33],[469,37,504,35,"competitionToDelete"],[469,56,504,54],[469,57,504,55,"name"],[469,61,504,59],[469,63,504,61],[469,80,504,78],[469,81,504,79],[470,6,506,4,"console"],[470,13,506,11],[470,14,506,12,"log"],[470,17,506,15],[470,18,506,16],[470,54,506,52],[470,55,506,53],[471,6,507,4],[471,13,507,11],[472,8,507,13,"message"],[472,15,507,20],[472,17,507,22],[473,6,507,57],[473,7,507,58],[474,4,508,2],[474,5,508,3],[475,4,510,2],[476,4,511,2,"editMock"],[476,12,511,10],[476,14,511,12],[476,20,511,12,"editMock"],[476,21,511,19,"competitionId"],[476,34,511,40],[476,36,511,42,"updates"],[476,43,511,54],[476,48,511,59],[477,6,512,4,"console"],[477,13,512,11],[477,14,512,12,"log"],[477,17,512,15],[477,18,512,16],[477,49,512,47],[477,51,512,49,"competitionId"],[477,64,512,62],[477,66,512,64,"updates"],[477,73,512,71],[477,74,512,72],[478,6,514,4],[478,12,514,10,"storedCompetitions"],[478,30,514,28],[478,33,514,31],[478,39,514,37,"CrossPlatformStorage"],[478,59,514,57],[478,60,514,58,"getItem"],[478,67,514,65],[478,68,514,66],[478,86,514,84],[478,87,514,85],[479,6,515,4],[479,10,515,8,"competitions"],[479,22,515,20],[479,25,515,23,"storedCompetitions"],[479,43,515,41],[479,46,515,44,"JSON"],[479,50,515,48],[479,51,515,49,"parse"],[479,56,515,54],[479,57,515,55,"storedCompetitions"],[479,75,515,73],[479,76,515,74],[479,79,515,77],[479,81,515,79],[480,6,517,4],[480,12,517,10,"competitionIndex"],[480,28,517,26],[480,31,517,29,"competitions"],[480,43,517,41],[480,44,517,42,"findIndex"],[480,53,517,51],[480,54,517,53,"comp"],[480,58,517,62],[480,62,517,67,"comp"],[480,66,517,71],[480,67,517,72,"_id"],[480,70,517,75],[480,75,517,80,"competitionId"],[480,88,517,93],[480,89,517,94],[481,6,518,4],[481,10,518,8,"competitionIndex"],[481,26,518,24],[481,31,518,29],[481,32,518,30],[481,33,518,31],[481,35,518,33],[482,8,519,6],[482,14,519,12],[482,18,519,16,"Error"],[482,23,519,21],[482,24,519,22],[482,47,519,45],[482,48,519,46],[483,6,520,4],[484,6,522,4],[484,12,522,10,"competition"],[484,23,522,21],[484,26,522,24,"competitions"],[484,38,522,36],[484,39,522,37,"competitionIndex"],[484,55,522,53],[484,56,522,54],[486,6,524,4],[487,6,525,4],[487,10,525,8,"competition"],[487,21,525,19],[487,22,525,20,"admin_id"],[487,30,525,28],[487,35,525,33],[487,61,525,59],[487,63,525,61],[488,8,526,6],[488,14,526,12],[488,18,526,16,"Error"],[488,23,526,21],[488,24,526,22],[488,62,526,60],[488,63,526,61],[489,6,527,4],[491,6,529,4],[492,6,530,4,"competitions"],[492,18,530,16],[492,19,530,17,"competitionIndex"],[492,35,530,33],[492,36,530,34],[492,39,530,37],[493,8,531,6],[493,11,531,9,"competition"],[493,22,531,20],[494,8,532,6],[494,11,532,9,"updates"],[494,18,532,16],[495,8,533,6,"updated_at"],[495,18,533,16],[495,20,533,18],[495,24,533,22,"Date"],[495,28,533,26],[495,29,533,27],[495,30,533,28],[495,31,533,29,"toISOString"],[495,42,533,40],[495,43,533,41],[496,6,534,4],[496,7,534,5],[497,6,536,4],[497,12,536,10,"CrossPlatformStorage"],[497,32,536,30],[497,33,536,31,"setItem"],[497,40,536,38],[497,41,536,39],[497,59,536,57],[497,61,536,59,"JSON"],[497,65,536,63],[497,66,536,64,"stringify"],[497,75,536,73],[497,76,536,74,"competitions"],[497,88,536,86],[497,89,536,87],[497,90,536,88],[499,6,538,4],[500,6,539,4],[500,12,539,10,"logAdminAction"],[500,26,539,24],[500,27,539,25],[500,33,539,31],[500,35,539,33,"competition"],[500,46,539,44],[500,47,539,45,"name"],[500,51,539,49],[500,53,539,51],[500,70,539,68],[500,72,539,70,"updates"],[500,79,539,77],[500,80,539,78],[501,6,541,4,"console"],[501,13,541,11],[501,14,541,12,"log"],[501,17,541,15],[501,18,541,16],[501,54,541,52],[501,55,541,53],[502,6,542,4],[502,13,542,11,"competitions"],[502,25,542,23],[502,26,542,24,"competitionIndex"],[502,42,542,40],[502,43,542,41],[503,4,543,2],[503,5,543,3],[504,4,545,2],[505,4,546,2,"awardDailyPrizeMock"],[505,23,546,21],[505,25,546,23],[505,31,546,23,"awardDailyPrizeMock"],[505,32,546,30,"competitionId"],[505,45,546,51],[505,47,546,53,"matchday"],[505,55,546,69],[505,57,546,71,"winnerId"],[505,65,546,87],[505,70,546,92],[506,6,547,4,"console"],[506,13,547,11],[506,14,547,12,"log"],[506,17,547,15],[506,18,547,16],[506,62,547,60],[506,64,547,62,"matchday"],[506,72,547,70],[506,74,547,72],[506,83,547,81],[506,85,547,83,"winnerId"],[506,93,547,91],[506,94,547,92],[507,6,549,4],[507,12,549,10,"storedCompetitions"],[507,30,549,28],[507,33,549,31],[507,39,549,37,"CrossPlatformStorage"],[507,59,549,57],[507,60,549,58,"getItem"],[507,67,549,65],[507,68,549,66],[507,86,549,84],[507,87,549,85],[508,6,550,4],[508,10,550,8,"competitions"],[508,22,550,20],[508,25,550,23,"storedCompetitions"],[508,43,550,41],[508,46,550,44,"JSON"],[508,50,550,48],[508,51,550,49,"parse"],[508,56,550,54],[508,57,550,55,"storedCompetitions"],[508,75,550,73],[508,76,550,74],[508,79,550,77],[508,81,550,79],[509,6,552,4],[509,12,552,10,"competitionIndex"],[509,28,552,26],[509,31,552,29,"competitions"],[509,43,552,41],[509,44,552,42,"findIndex"],[509,53,552,51],[509,54,552,53,"comp"],[509,58,552,62],[509,62,552,67,"comp"],[509,66,552,71],[509,67,552,72,"_id"],[509,70,552,75],[509,75,552,80,"competitionId"],[509,88,552,93],[509,89,552,94],[510,6,553,4],[510,10,553,8,"competitionIndex"],[510,26,553,24],[510,31,553,29],[510,32,553,30],[510,33,553,31],[510,35,553,33],[511,8,554,6],[511,14,554,12],[511,18,554,16,"Error"],[511,23,554,21],[511,24,554,22],[511,47,554,45],[511,48,554,46],[512,6,555,4],[513,6,557,4],[513,12,557,10,"competition"],[513,23,557,21],[513,26,557,24,"competitions"],[513,38,557,36],[513,39,557,37,"competitionIndex"],[513,55,557,53],[513,56,557,54],[515,6,559,4],[516,6,560,4],[516,10,560,8,"competition"],[516,21,560,19],[516,22,560,20,"admin_id"],[516,30,560,28],[516,35,560,33],[516,61,560,59],[516,63,560,61],[517,8,561,6],[517,14,561,12],[517,18,561,16,"Error"],[517,23,561,21],[517,24,561,22],[517,59,561,57],[517,60,561,58],[518,6,562,4],[520,6,564,4],[521,6,565,4],[521,10,565,8],[521,11,565,9,"competition"],[521,22,565,20],[521,23,565,21,"rules"],[521,28,565,26],[521,32,565,30],[521,33,565,31],[521,34,565,32],[521,41,565,39],[521,43,565,41],[521,50,565,48],[521,51,565,49],[521,52,565,50,"includes"],[521,60,565,58],[521,61,565,59,"competition"],[521,72,565,70],[521,73,565,71,"rules"],[521,78,565,76],[521,79,565,77,"type"],[521,83,565,81],[521,84,565,82],[521,86,565,84],[522,8,566,6],[522,14,566,12],[522,18,566,16,"Error"],[522,23,566,21],[522,24,566,22],[522,69,566,67],[522,70,566,68],[523,6,567,4],[524,6,569,4],[524,12,569,10,"dailyPrizeAmount"],[524,28,569,26],[524,31,569,29,"competition"],[524,42,569,40],[524,43,569,41,"rules"],[524,48,569,46],[524,49,569,47,"daily_prize"],[524,60,569,58],[524,64,569,62],[524,65,569,63],[525,6,570,4],[525,12,570,10,"winner"],[525,18,570,16],[525,21,570,19,"competition"],[525,32,570,30],[525,33,570,31,"participants"],[525,45,570,43],[525,46,570,44,"find"],[525,50,570,48],[525,51,570,50,"p"],[525,52,570,56],[525,56,570,61,"p"],[525,57,570,62],[525,58,570,63,"id"],[525,60,570,65],[525,65,570,70,"winnerId"],[525,73,570,78],[525,74,570,79],[526,6,572,4],[526,10,572,8],[526,11,572,9,"winner"],[526,17,572,15],[526,19,572,17],[527,8,573,6],[527,14,573,12],[527,18,573,16,"Error"],[527,23,573,21],[527,24,573,22],[527,57,573,55],[527,58,573,56],[528,6,574,4],[530,6,576,4],[531,6,577,4],[531,10,577,8],[531,11,577,9,"competition"],[531,22,577,20],[531,23,577,21,"daily_winners"],[531,36,577,34],[531,38,577,36],[532,8,578,6,"competition"],[532,19,578,17],[532,20,578,18,"daily_winners"],[532,33,578,31],[532,36,578,34],[532,37,578,35],[532,38,578,36],[533,6,579,4],[535,6,581,4],[536,6,582,4],[536,10,582,8,"competition"],[536,21,582,19],[536,22,582,20,"daily_winners"],[536,35,582,33],[536,36,582,34,"matchday"],[536,44,582,42],[536,45,582,43],[536,47,582,45],[537,8,583,6],[537,14,583,12],[537,18,583,16,"Error"],[537,23,583,21],[537,24,583,22],[537,52,583,50,"matchday"],[537,60,583,58],[537,83,583,81,"competition"],[537,94,583,92],[537,95,583,93,"daily_winners"],[537,108,583,106],[537,109,583,107,"matchday"],[537,117,583,115],[537,118,583,116],[537,119,583,117,"name"],[537,123,583,121],[537,125,583,123],[537,126,583,124],[538,6,584,4],[540,6,586,4],[541,6,587,4,"competition"],[541,17,587,15],[541,18,587,16,"daily_winners"],[541,31,587,29],[541,32,587,30,"matchday"],[541,40,587,38],[541,41,587,39],[541,44,587,42],[542,8,588,6,"user_id"],[542,15,588,13],[542,17,588,15,"winnerId"],[542,25,588,23],[543,8,589,6,"name"],[543,12,589,10],[543,14,589,12,"winner"],[543,20,589,18],[543,21,589,19,"name"],[543,25,589,23],[544,8,590,6,"amount"],[544,14,590,12],[544,16,590,14,"dailyPrizeAmount"],[544,32,590,30],[545,8,591,6,"awarded_at"],[545,18,591,16],[545,20,591,18],[545,24,591,22,"Date"],[545,28,591,26],[545,29,591,27],[545,30,591,28],[545,31,591,29,"toISOString"],[545,42,591,40],[545,43,591,41],[546,6,592,4],[546,7,592,5],[548,6,594,4],[549,6,595,4,"competitions"],[549,18,595,16],[549,19,595,17,"competitionIndex"],[549,35,595,33],[549,36,595,34],[549,39,595,37,"competition"],[549,50,595,48],[550,6,596,4],[550,12,596,10,"CrossPlatformStorage"],[550,32,596,30],[550,33,596,31,"setItem"],[550,40,596,38],[550,41,596,39],[550,59,596,57],[550,61,596,59,"JSON"],[550,65,596,63],[550,66,596,64,"stringify"],[550,75,596,73],[550,76,596,74,"competitions"],[550,88,596,86],[550,89,596,87],[550,90,596,88],[552,6,598,4],[553,6,599,4],[553,12,599,10,"logAdminAction"],[553,26,599,24],[553,27,599,25],[553,46,599,44],[553,48,599,46,"competition"],[553,59,599,57],[553,60,599,58,"name"],[553,64,599,62],[553,66,599,64],[553,83,599,81],[553,85,599,83],[554,8,600,6,"matchday"],[554,16,600,14],[555,8,601,6,"winner"],[555,14,601,12],[555,16,601,14,"winner"],[555,22,601,20],[555,23,601,21,"name"],[555,27,601,25],[556,8,602,6,"amount"],[556,14,602,12],[556,16,602,14,"dailyPrizeAmount"],[557,6,603,4],[557,7,603,5],[557,8,603,6],[559,6,605,4],[560,6,606,4,"console"],[560,13,606,11],[560,14,606,12,"log"],[560,17,606,15],[560,18,606,16],[560,24,606,22,"winner"],[560,30,606,28],[560,31,606,29,"name"],[560,35,606,33],[560,48,606,46,"dailyPrizeAmount"],[560,64,606,62],[560,89,606,87,"matchday"],[560,97,606,95],[560,99,606,97],[560,100,606,98],[561,6,608,4,"console"],[561,13,608,11],[561,14,608,12,"log"],[561,17,608,15],[561,18,608,16],[561,54,608,52],[561,55,608,53],[562,6,609,4],[562,13,609,11],[563,8,610,6,"message"],[563,15,610,13],[563,17,610,15],[563,36,610,34,"dailyPrizeAmount"],[563,52,610,50],[563,67,610,65,"winner"],[563,73,610,71],[563,74,610,72,"name"],[563,78,610,76],[563,95,610,93,"matchday"],[563,103,610,101],[563,105,610,103],[564,8,611,6,"competition"],[564,19,611,17],[564,21,611,19,"competition"],[565,6,612,4],[565,7,612,5],[566,4,613,2],[566,5,613,3],[567,4,615,2],[568,4,616,2,"getAdminLogsMock"],[568,20,616,18],[568,22,616,20],[568,28,616,20,"getAdminLogsMock"],[568,29,616,20],[568,34,616,32],[569,6,617,4,"console"],[569,13,617,11],[569,14,617,12,"log"],[569,17,617,15],[569,18,617,16],[569,47,617,45],[569,48,617,46],[570,6,619,4],[570,10,619,8],[571,8,620,6],[571,14,620,12,"logs"],[571,18,620,16],[571,21,620,19],[571,28,620,25,"CrossPlatformStorage"],[571,48,620,45],[571,49,620,46,"getItem"],[571,56,620,53],[571,57,620,54],[571,68,620,65],[571,69,620,66],[571,74,620,70],[571,78,620,74],[572,8,621,6],[572,14,621,12,"adminLogs"],[572,23,621,21],[572,26,621,24,"JSON"],[572,30,621,28],[572,31,621,29,"parse"],[572,36,621,34],[572,37,621,35,"logs"],[572,41,621,39],[572,42,621,40],[574,8,623,6],[575,8,624,6,"adminLogs"],[575,17,624,15],[575,18,624,16,"sort"],[575,22,624,20],[575,23,624,21],[575,24,624,22,"a"],[575,25,624,28],[575,27,624,30,"b"],[575,28,624,36],[575,33,624,41],[575,37,624,45,"Date"],[575,41,624,49],[575,42,624,50,"b"],[575,43,624,51],[575,44,624,52,"timestamp"],[575,53,624,61],[575,54,624,62],[575,55,624,63,"getTime"],[575,62,624,70],[575,63,624,71],[575,64,624,72],[575,67,624,75],[575,71,624,79,"Date"],[575,75,624,83],[575,76,624,84,"a"],[575,77,624,85],[575,78,624,86,"timestamp"],[575,87,624,95],[575,88,624,96],[575,89,624,97,"getTime"],[575,96,624,104],[575,97,624,105],[575,98,624,106],[575,99,624,107],[576,8,626,6,"console"],[576,15,626,13],[576,16,626,14,"log"],[576,19,626,17],[576,20,626,18],[576,42,626,40],[576,44,626,42,"adminLogs"],[576,53,626,51],[576,54,626,52,"length"],[576,60,626,58],[576,61,626,59],[577,8,627,6],[577,15,627,13,"adminLogs"],[577,24,627,22],[578,6,628,4],[578,7,628,5],[578,8,628,6],[578,15,628,13,"error"],[578,20,628,18],[578,22,628,20],[579,8,629,6,"console"],[579,15,629,13],[579,16,629,14,"error"],[579,21,629,19],[579,22,629,20],[579,52,629,50],[579,54,629,52,"error"],[579,59,629,57],[579,60,629,58],[580,8,630,6],[580,15,630,13],[580,17,630,15],[581,6,631,4],[582,4,632,2],[583,2,633,0],[583,3,633,1],[585,2,635,0],[586,2,636,7],[586,8,636,13,"walletAPI"],[586,17,636,22],[586,20,636,25],[587,4,637,2,"getBalance"],[587,14,637,12],[587,16,637,14,"getBalance"],[587,17,637,14],[587,22,637,20,"apiClient"],[587,31,637,29],[587,32,637,30,"get"],[587,35,637,33],[587,36,637,34],[587,53,637,51],[587,54,637,52],[588,4,639,2,"topUp"],[588,9,639,7],[588,11,639,10,"amount"],[588,17,639,24],[588,21,640,4,"apiClient"],[588,30,640,13],[588,31,640,14,"post"],[588,35,640,18],[588,36,640,19],[588,51,640,34],[588,53,640,36],[588,57,640,40],[588,59,640,42],[589,6,641,6,"params"],[589,12,641,12],[589,14,641,14],[590,8,641,16,"amount"],[591,6,641,23],[592,4,642,4],[592,5,642,5],[592,6,642,6],[593,4,644,2,"withdraw"],[593,12,644,10],[593,14,644,13,"amount"],[593,20,644,27],[593,24,645,4,"apiClient"],[593,33,645,13],[593,34,645,14,"post"],[593,38,645,18],[593,39,645,19],[593,57,645,37],[593,59,645,39],[593,63,645,43],[593,65,645,45],[594,6,646,6,"params"],[594,12,646,12],[594,14,646,14],[595,8,646,16,"amount"],[596,6,646,23],[597,4,647,4],[597,5,647,5],[597,6,647,6],[598,4,649,2,"getTransactions"],[598,19,649,17],[598,21,649,19,"getTransactions"],[598,22,649,19],[598,27,649,25,"apiClient"],[598,36,649,34],[598,37,649,35,"get"],[598,40,649,38],[598,41,649,39],[598,56,649,54],[599,2,650,0],[599,3,650,1],[601,2,652,0],[602,2,653,7],[602,8,653,13,"databaseAPI"],[602,19,653,24],[602,22,653,27],[603,4,654,2,"resetDatabase"],[603,17,654,15],[603,19,654,17],[603,25,654,17,"resetDatabase"],[603,26,654,17],[603,31,654,29],[604,6,655,4,"console"],[604,13,655,11],[604,14,655,12,"log"],[604,17,655,15],[604,18,655,16],[604,69,655,67],[604,70,655,68],[605,6,657,4],[605,10,657,8],[606,8,658,6],[606,14,658,12,"CrossPlatformStorage"],[606,34,658,32],[606,35,658,33,"removeItem"],[606,45,658,43],[606,46,658,44],[606,65,658,63],[606,66,658,64],[607,8,659,6],[607,14,659,12,"CrossPlatformStorage"],[607,34,659,32],[607,35,659,33,"removeItem"],[607,45,659,43],[607,46,659,44],[607,63,659,61],[607,64,659,62],[608,8,660,6],[608,14,660,12,"CrossPlatformStorage"],[608,34,660,32],[608,35,660,33,"removeItem"],[608,45,660,43],[608,46,660,44],[608,87,660,85],[608,88,660,86],[609,8,661,6],[609,14,661,12,"CrossPlatformStorage"],[609,34,661,32],[609,35,661,33,"removeItem"],[609,45,661,43],[609,46,661,44],[609,85,661,83],[609,86,661,84],[610,8,663,6,"console"],[610,15,663,13],[610,16,663,14,"log"],[610,19,663,17],[610,20,663,18],[610,66,663,64],[610,67,663,65],[611,8,664,6],[611,15,664,13],[612,10,664,15,"success"],[612,17,664,22],[612,19,664,24],[612,23,664,28],[613,10,664,30,"message"],[613,17,664,37],[613,19,664,39],[614,8,664,65],[614,9,664,66],[615,6,665,4],[615,7,665,5],[615,8,665,6],[615,15,665,13,"error"],[615,20,665,18],[615,22,665,20],[616,8,666,6,"console"],[616,15,666,13],[616,16,666,14,"error"],[616,21,666,19],[616,22,666,20],[616,48,666,46],[616,50,666,48,"error"],[616,55,666,53],[616,56,666,54],[617,8,667,6],[617,15,667,13],[618,10,667,15,"success"],[618,17,667,22],[618,19,667,24],[618,24,667,29],[619,10,667,31,"message"],[619,17,667,38],[619,19,667,40],[620,8,667,55],[620,9,667,56],[621,6,668,4],[622,4,669,2],[623,2,670,0],[623,3,670,1],[624,2,672,0],[624,6,672,0,"_default"],[624,14,672,0],[624,17,672,15,"apiClient"],[624,26,672,24],[625,0,672,25],[625,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnCgE;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CG;2BCkC;ODE;G3CO;Y6CE;G7CM;c8CG;kDCM,yCD;uCEW,yCF;G9CQ;YiDG;oDCM,yCD;GjD0B;uBmDG;oDDM,yCC;iDCkB,6BD;GnD2C;oBqDG;qBCQ,qFD;GrDQ;cuDK,sCvD;SwDE;MxDG;YyDE;MzDG;mB0DE,oC1D;iB2DK;G3De"},"hasCjsExports":false},"type":"js/module"}]}