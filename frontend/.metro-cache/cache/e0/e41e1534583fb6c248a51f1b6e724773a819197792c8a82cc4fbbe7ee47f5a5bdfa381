{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition created and saved! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":318,"map":[[27,2,323,0,"Object"],[27,8,323,0],[27,9,323,0,"defineProperty"],[27,23,323,0],[27,24,323,0,"exports"],[27,31,323,0],[28,4,323,0,"enumerable"],[28,14,323,0],[29,4,323,0,"get"],[29,7,323,0],[29,18,323,0,"get"],[29,19,323,0],[30,6,323,0],[30,13,323,0,"_default"],[30,21,323,0],[31,4,323,0],[32,2,323,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,156,0,"Object"],[39,8,156,0],[39,9,156,0,"defineProperty"],[39,23,156,0],[39,24,156,0,"exports"],[39,31,156,0],[40,4,156,0,"enumerable"],[40,14,156,0],[41,4,156,0,"get"],[41,7,156,0],[41,18,156,0,"get"],[41,19,156,0],[42,6,156,0],[42,13,156,0,"competitionAPI"],[42,27,156,0],[43,4,156,0],[44,2,156,0],[45,2,307,0,"Object"],[45,8,307,0],[45,9,307,0,"defineProperty"],[45,23,307,0],[45,24,307,0,"exports"],[45,31,307,0],[46,4,307,0,"enumerable"],[46,14,307,0],[47,4,307,0,"get"],[47,7,307,0],[47,18,307,0,"get"],[47,19,307,0],[48,6,307,0],[48,13,307,0,"walletAPI"],[48,22,307,0],[49,4,307,0],[50,2,307,0],[51,2,321,2],[51,6,321,2,"_expoVirtualEnv"],[51,21,321,2],[51,24,321,2,"require"],[51,31,321,2],[51,32,321,2,"_dependencyMap"],[51,46,321,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,172,45,154],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,7],[182,8,156,13,"competitionAPI"],[182,22,156,27],[182,25,156,30],[183,4,157,2,"create"],[183,10,157,8],[183,12,157,11,"data"],[183,16,164,3],[183,20,164,8,"apiClient"],[183,29,164,17],[183,30,164,18,"post"],[183,34,164,22],[183,35,164,23],[183,50,164,38],[183,52,164,40,"data"],[183,56,164,44],[183,57,164,45],[184,4,166,2,"join"],[184,8,166,6],[184,10,166,9,"inviteCode"],[184,20,166,27],[184,24,167,4,"apiClient"],[184,33,167,13],[184,34,167,14,"post"],[184,38,167,18],[184,39,167,19],[184,59,167,39],[184,61,167,41],[185,6,167,43,"invite_code"],[185,17,167,54],[185,19,167,56,"inviteCode"],[186,4,167,67],[186,5,167,68],[186,6,167,69],[187,4,169,2,"getMyCompetitions"],[187,21,169,19],[187,23,169,21,"getMyCompetitions"],[187,24,169,21],[187,29,169,27,"apiClient"],[187,38,169,36],[187,39,169,37,"get"],[187,42,169,40],[187,43,169,41],[187,61,169,59],[187,62,169,60],[188,4,171,2,"getCompetition"],[188,18,171,16],[188,20,171,19,"id"],[188,22,171,29],[188,26,171,34,"apiClient"],[188,35,171,43],[188,36,171,44,"get"],[188,39,171,47],[188,40,171,48],[188,57,171,65,"id"],[188,59,171,67],[188,61,171,69],[188,62,171,70],[189,4,173,2,"updateStandings"],[189,19,173,17],[189,21,173,19,"updateStandings"],[189,22,174,4,"id"],[189,24,174,14],[189,26,175,4,"standings"],[189,35,175,18],[189,37,176,4,"matchday"],[189,45,176,21],[189,50,178,4,"apiClient"],[189,59,178,13],[189,60,178,14,"patch"],[189,65,178,19],[189,66,178,20],[189,83,178,37,"id"],[189,85,178,39],[189,97,178,51],[189,99,178,53],[190,6,179,6,"standings"],[190,15,179,15],[191,6,180,6,"matchday"],[192,4,181,4],[192,5,181,5],[192,6,181,6],[193,4,183,2,"payFee"],[193,10,183,8],[193,12,183,10,"payFee"],[193,13,183,11,"id"],[193,15,183,21],[193,17,183,23,"amount"],[193,23,183,37],[193,28,184,4,"apiClient"],[193,37,184,13],[193,38,184,14,"post"],[193,42,184,18],[193,43,184,19],[193,60,184,36,"id"],[193,62,184,38],[193,68,184,44],[193,70,184,46],[193,74,184,50],[193,76,184,52],[194,6,185,6,"params"],[194,12,185,12],[194,14,185,14],[195,8,185,16,"amount"],[196,6,185,23],[197,4,186,4],[197,5,186,5],[197,6,186,6],[198,4,188,2,"getTransactions"],[198,19,188,17],[198,21,188,20,"id"],[198,23,188,30],[198,27,189,4,"apiClient"],[198,36,189,13],[198,37,189,14,"get"],[198,40,189,17],[198,41,189,18],[198,58,189,35,"id"],[198,60,189,37],[198,75,189,52],[198,76,189,53],[199,4,191,2],[200,4,192,2,"createMock"],[200,14,192,12],[200,16,192,14],[200,22,192,21,"data"],[200,26,199,3],[200,30,199,8],[201,6,200,4,"console"],[201,13,200,11],[201,14,200,12,"log"],[201,17,200,15],[201,18,200,16],[201,50,200,48],[201,52,200,50,"data"],[201,56,200,54],[201,57,200,55,"name"],[201,61,200,59],[201,62,200,60],[203,6,202,4],[204,6,203,4],[204,12,203,10,"storedCompetitions"],[204,30,203,28],[204,33,203,31],[204,39,203,37,"CrossPlatformStorage"],[204,59,203,57],[204,60,203,58,"getItem"],[204,67,203,65],[204,68,203,66],[204,86,203,84],[204,87,203,85],[205,6,204,4],[205,10,204,8,"existingCompetitions"],[205,30,204,28],[205,33,204,31,"storedCompetitions"],[205,51,204,49],[205,54,204,52,"JSON"],[205,58,204,56],[205,59,204,57,"parse"],[205,64,204,62],[205,65,204,63,"storedCompetitions"],[205,83,204,81],[205,84,204,82],[205,87,204,85],[205,89,204,87],[206,6,206,4,"console"],[206,13,206,11],[206,14,206,12,"log"],[206,17,206,15],[206,18,206,16],[206,60,206,58],[206,62,206,60,"existingCompetitions"],[206,82,206,80],[206,83,206,81,"length"],[206,89,206,87],[206,90,206,88],[208,6,208,4],[209,6,209,4],[209,12,209,10,"existingNames"],[209,25,209,23],[209,28,209,26,"existingCompetitions"],[209,48,209,46],[209,49,209,47,"map"],[209,52,209,50],[209,53,209,52,"comp"],[209,57,209,61],[209,61,209,66,"comp"],[209,65,209,70],[209,66,209,71,"name"],[209,70,209,75],[209,71,209,76,"toLowerCase"],[209,82,209,87],[209,83,209,88],[209,84,209,89],[209,85,209,90],[210,6,210,4],[210,10,210,8,"existingNames"],[210,23,210,21],[210,24,210,22,"includes"],[210,32,210,30],[210,33,210,31,"data"],[210,37,210,35],[210,38,210,36,"name"],[210,42,210,40],[210,43,210,41,"toLowerCase"],[210,54,210,52],[210,55,210,53],[210,56,210,54],[210,57,210,55],[210,59,210,57],[211,8,211,6],[211,14,211,12],[211,18,211,16,"Error"],[211,23,211,21],[211,24,211,22],[211,86,211,84],[211,87,211,85],[212,6,212,4],[214,6,214,4],[215,6,215,4],[215,12,215,10,"newCompetition"],[215,26,215,24],[215,29,215,27],[216,8,216,6,"_id"],[216,11,216,9],[216,13,216,11],[216,21,216,19,"Date"],[216,25,216,23],[216,26,216,24,"now"],[216,29,216,27],[216,30,216,28],[216,31,216,29],[216,33,216,31],[217,8,217,6,"name"],[217,12,217,10],[217,14,217,12,"data"],[217,18,217,16],[217,19,217,17,"name"],[217,23,217,21],[218,8,218,6,"rules"],[218,13,218,11],[218,15,218,13,"data"],[218,19,218,17],[218,20,218,18,"rules"],[218,25,218,23],[219,8,219,6,"invite_code"],[219,19,219,17],[219,21,219,19,"Math"],[219,25,219,23],[219,26,219,24,"random"],[219,32,219,30],[219,33,219,31],[219,34,219,32],[219,35,219,33,"toString"],[219,43,219,41],[219,44,219,42],[219,46,219,44],[219,47,219,45],[219,48,219,46,"substr"],[219,54,219,52],[219,55,219,53],[219,56,219,54],[219,58,219,56],[219,59,219,57],[219,60,219,58],[219,61,219,59,"toUpperCase"],[219,72,219,70],[219,73,219,71],[219,74,219,72],[220,8,220,6,"invite_link"],[220,19,220,17],[220,21,220,19],[220,50,220,48,"Math"],[220,54,220,52],[220,55,220,53,"random"],[220,61,220,59],[220,62,220,60],[220,63,220,61],[220,64,220,62,"toString"],[220,72,220,70],[220,73,220,71],[220,75,220,73],[220,76,220,74],[220,77,220,75,"substr"],[220,83,220,81],[220,84,220,82],[220,85,220,83],[220,87,220,85],[220,88,220,86],[220,89,220,87],[220,90,220,88,"toUpperCase"],[220,101,220,99],[220,102,220,100],[220,103,220,101],[220,105,220,103],[221,8,221,6,"admin_id"],[221,16,221,14],[221,18,221,16],[221,44,221,42],[222,8,221,44],[223,8,222,6,"participants"],[223,20,222,18],[223,22,222,20],[223,23,223,8],[224,10,224,10,"id"],[224,12,224,12],[224,14,224,14],[224,40,224,40],[225,10,225,10,"name"],[225,14,225,14],[225,16,225,16],[225,33,225,33],[226,10,226,10,"email"],[226,15,226,15],[226,17,226,17],[226,36,226,36],[227,10,227,10,"is_admin"],[227,18,227,18],[227,20,227,20],[227,24,227,24],[228,10,228,10,"paid_matchdays"],[228,24,228,24],[228,26,228,26],[228,27,228,27],[228,28,228,28],[228,30,228,30],[228,31,228,31],[228,32,228,32],[229,10,228,34],[230,10,229,10,"points"],[230,16,229,16],[230,18,229,18],[231,8,230,8],[231,9,230,9],[231,10,231,7],[232,8,232,6,"wallet_balance"],[232,22,232,20],[232,24,232,22],[232,25,232,23],[233,8,233,6,"is_active"],[233,17,233,15],[233,19,233,17],[233,23,233,21],[234,8,234,6,"current_matchday"],[234,24,234,22],[234,26,234,24],[234,27,234,25],[235,8,234,27],[236,8,235,6,"standings"],[236,17,235,15],[236,19,235,17],[236,20,236,8],[237,10,236,10,"position"],[237,18,236,18],[237,20,236,20],[237,21,236,21],[238,10,236,23,"player_id"],[238,19,236,32],[238,21,236,34],[238,47,236,60],[239,10,236,62,"name"],[239,14,236,66],[239,16,236,68],[239,33,236,85],[240,10,236,87,"points"],[240,16,236,93],[240,18,236,95],[241,8,236,97],[241,9,236,98],[241,10,237,7],[242,8,238,6,"created_at"],[242,18,238,16],[242,20,238,18],[242,24,238,22,"Date"],[242,28,238,26],[242,29,238,27],[242,30,238,28],[242,31,238,29,"toISOString"],[242,42,238,40],[242,43,238,41],[242,44,238,42],[243,8,239,6,"updated_at"],[243,18,239,16],[243,20,239,18],[243,24,239,22,"Date"],[243,28,239,26],[243,29,239,27],[243,30,239,28],[243,31,239,29,"toISOString"],[243,42,239,40],[243,43,239,41],[244,6,240,4],[244,7,240,5],[246,6,242,4],[247,6,243,4,"existingCompetitions"],[247,26,243,24],[247,27,243,25,"push"],[247,31,243,29],[247,32,243,30,"newCompetition"],[247,46,243,44],[247,47,243,45],[248,6,244,4],[248,12,244,10,"CrossPlatformStorage"],[248,32,244,30],[248,33,244,31,"setItem"],[248,40,244,38],[248,41,244,39],[248,59,244,57],[248,61,244,59,"JSON"],[248,65,244,63],[248,66,244,64,"stringify"],[248,75,244,73],[248,76,244,74,"existingCompetitions"],[248,96,244,94],[248,97,244,95],[248,98,244,96],[249,6,246,4,"console"],[249,13,246,11],[249,14,246,12,"log"],[249,17,246,15],[249,18,246,16],[249,63,246,61],[249,65,246,63,"existingCompetitions"],[249,85,246,83],[249,86,246,84,"length"],[249,92,246,90],[249,93,246,91],[250,6,247,4,"console"],[250,13,247,11],[250,14,247,12,"log"],[250,17,247,15],[250,18,247,16],[250,38,247,36],[250,40,247,38,"newCompetition"],[250,54,247,52],[250,55,247,53,"_id"],[250,58,247,56],[250,59,247,57],[251,6,248,4,"console"],[251,13,248,11],[251,14,248,12,"log"],[251,17,248,15],[251,18,248,16],[251,40,248,38],[251,42,248,40,"newCompetition"],[251,56,248,54],[251,57,248,55,"name"],[251,61,248,59],[251,62,248,60],[252,6,250,4],[252,13,250,11,"newCompetition"],[252,27,250,25],[253,4,251,2],[253,5,251,3],[254,4,253,2],[255,4,254,2,"validateNameMock"],[255,20,254,18],[255,22,254,20],[255,28,254,27,"name"],[255,32,254,39],[255,36,254,44],[256,6,255,4,"console"],[256,13,255,11],[256,14,255,12,"log"],[256,17,255,15],[256,18,255,16],[256,57,255,55],[256,59,255,57,"name"],[256,63,255,61],[256,64,255,62],[257,6,257,4],[257,10,257,8],[257,11,257,9,"name"],[257,15,257,13],[257,16,257,14,"trim"],[257,20,257,18],[257,21,257,19],[257,22,257,20],[257,24,257,22],[258,8,258,6],[258,15,258,13],[259,10,258,15,"available"],[259,19,258,24],[259,21,258,26],[259,25,258,30],[260,10,258,32,"message"],[260,17,258,39],[260,19,258,41],[261,8,258,44],[261,9,258,45],[262,6,259,4],[264,6,261,4],[265,6,262,4],[265,12,262,10,"storedCompetitions"],[265,30,262,28],[265,33,262,31],[265,39,262,37,"CrossPlatformStorage"],[265,59,262,57],[265,60,262,58,"getItem"],[265,67,262,65],[265,68,262,66],[265,86,262,84],[265,87,262,85],[266,6,263,4],[266,10,263,8,"existingCompetitions"],[266,30,263,28],[266,33,263,31,"storedCompetitions"],[266,51,263,49],[266,54,263,52,"JSON"],[266,58,263,56],[266,59,263,57,"parse"],[266,64,263,62],[266,65,263,63,"storedCompetitions"],[266,83,263,81],[266,84,263,82],[266,87,263,85],[266,89,263,87],[268,6,265,4],[269,6,266,4],[269,12,266,10,"defaultNames"],[269,24,266,22],[269,27,266,25],[269,28,266,26],[269,50,266,48],[269,52,266,50],[269,78,266,76],[269,80,266,78],[269,96,266,94],[269,97,266,95],[270,6,267,4],[270,12,267,10,"allNames"],[270,20,267,18],[270,23,267,21],[270,24,268,6],[270,27,268,9,"existingCompetitions"],[270,47,268,29],[270,48,268,30,"map"],[270,51,268,33],[270,52,268,35,"comp"],[270,56,268,44],[270,60,268,49,"comp"],[270,64,268,53],[270,65,268,54,"name"],[270,69,268,58],[270,70,268,59,"toLowerCase"],[270,81,268,70],[270,82,268,71],[270,83,268,72],[270,84,268,73],[270,86,269,6],[270,89,269,9,"defaultNames"],[270,101,269,21],[270,102,269,22,"map"],[270,105,269,25],[270,106,269,26,"name"],[270,110,269,30],[270,114,269,34,"name"],[270,118,269,38],[270,119,269,39,"toLowerCase"],[270,130,269,50],[270,131,269,51],[270,132,269,52],[270,133,269,53],[270,134,270,5],[271,6,272,4],[271,12,272,10,"isAvailable"],[271,23,272,21],[271,26,272,24],[271,27,272,25,"allNames"],[271,35,272,33],[271,36,272,34,"includes"],[271,44,272,42],[271,45,272,43,"name"],[271,49,272,47],[271,50,272,48,"toLowerCase"],[271,61,272,59],[271,62,272,60],[271,63,272,61],[271,64,272,62],[272,6,274,4],[272,13,274,11],[273,8,275,6,"available"],[273,17,275,15],[273,19,275,17,"isAvailable"],[273,30,275,28],[274,8,276,6,"message"],[274,15,276,13],[274,17,276,15,"isAvailable"],[274,28,276,26],[274,31,276,29],[274,47,276,45],[274,50,276,48],[275,6,277,4],[275,7,277,5],[276,4,278,2],[276,5,278,3],[277,4,280,2,"getMyCompetitionsMock"],[277,25,280,23],[277,27,280,25],[277,33,280,25,"getMyCompetitionsMock"],[277,34,280,25],[277,39,280,37],[278,6,281,4,"console"],[278,13,281,11],[278,14,281,12,"log"],[278,17,281,15],[278,18,281,16],[278,52,281,50],[278,53,281,51],[280,6,283,4],[281,6,284,4],[281,12,284,10,"storedCompetitions"],[281,30,284,28],[281,33,284,31],[281,39,284,37,"CrossPlatformStorage"],[281,59,284,57],[281,60,284,58,"getItem"],[281,67,284,65],[281,68,284,66],[281,86,284,84],[281,87,284,85],[282,6,285,4],[282,10,285,8,"competitions"],[282,22,285,20],[282,25,285,23,"storedCompetitions"],[282,43,285,41],[282,46,285,44,"JSON"],[282,50,285,48],[282,51,285,49,"parse"],[282,56,285,54],[282,57,285,55,"storedCompetitions"],[282,75,285,73],[282,76,285,74],[282,79,285,77],[282,81,285,79],[283,6,287,4,"console"],[283,13,287,11],[283,14,287,12,"log"],[283,17,287,15],[283,18,287,16],[283,53,287,51],[283,55,287,53,"competitions"],[283,67,287,65],[283,68,287,66,"length"],[283,74,287,72],[283,75,287,73],[285,6,289,4],[286,6,290,4,"competitions"],[286,18,290,16],[286,19,290,17,"forEach"],[286,26,290,24],[286,27,290,25],[286,28,290,26,"comp"],[286,32,290,35],[286,34,290,37,"index"],[286,39,290,50],[286,44,290,55],[287,8,291,6,"console"],[287,15,291,13],[287,16,291,14,"log"],[287,19,291,17],[287,20,291,18],[287,23,291,21,"index"],[287,28,291,26],[287,31,291,29],[287,32,291,30],[287,37,291,35,"comp"],[287,41,291,39],[287,42,291,40,"name"],[287,46,291,44],[287,55,291,53,"comp"],[287,59,291,57],[287,60,291,58,"_id"],[287,63,291,61],[287,66,291,64],[287,67,291,65],[288,6,292,4],[288,7,292,5],[288,8,292,6],[289,6,294,4],[289,13,294,11,"competitions"],[289,25,294,23],[290,4,295,2],[290,5,295,3],[291,4,297,2,"joinMock"],[291,12,297,10],[291,14,297,12],[291,20,297,19,"inviteCode"],[291,30,297,37],[291,34,297,42],[292,6,298,4,"console"],[292,13,298,11],[292,14,298,12,"log"],[292,17,298,15],[292,18,298,16],[292,59,298,57],[292,61,298,59,"inviteCode"],[292,71,298,69],[292,72,298,70],[293,6,299,4],[293,10,299,8,"inviteCode"],[293,20,299,18],[293,21,299,19,"length"],[293,27,299,25],[293,30,299,28],[293,31,299,29],[293,33,299,31],[294,8,300,6],[294,14,300,12],[294,18,300,16,"Error"],[294,23,300,21],[294,24,300,22],[294,45,300,43],[294,46,300,44],[295,6,301,4],[296,6,302,4],[296,13,302,11],[297,8,302,13,"message"],[297,15,302,20],[297,17,302,22],[298,6,302,57],[298,7,302,58],[299,4,303,2],[300,2,304,0],[300,3,304,1],[302,2,306,0],[303,2,307,7],[303,8,307,13,"walletAPI"],[303,17,307,22],[303,20,307,25],[304,4,308,2,"getBalance"],[304,14,308,12],[304,16,308,14,"getBalance"],[304,17,308,14],[304,22,308,20,"apiClient"],[304,31,308,29],[304,32,308,30,"get"],[304,35,308,33],[304,36,308,34],[304,53,308,51],[304,54,308,52],[305,4,310,2,"topUp"],[305,9,310,7],[305,11,310,10,"amount"],[305,17,310,24],[305,21,311,4,"apiClient"],[305,30,311,13],[305,31,311,14,"post"],[305,35,311,18],[305,36,311,19],[305,51,311,34],[305,53,311,36],[305,57,311,40],[305,59,311,42],[306,6,312,6,"params"],[306,12,312,12],[306,14,312,14],[307,8,312,16,"amount"],[308,6,312,23],[309,4,313,4],[309,5,313,5],[309,6,313,6],[310,4,315,2,"withdraw"],[310,12,315,10],[310,14,315,13,"amount"],[310,20,315,27],[310,24,316,4,"apiClient"],[310,33,316,13],[310,34,316,14,"post"],[310,38,316,18],[310,39,316,19],[310,57,316,37],[310,59,316,39],[310,63,316,43],[310,65,316,45],[311,6,317,6,"params"],[311,12,317,12],[311,14,317,14],[312,8,317,16,"amount"],[313,6,317,23],[314,4,318,4],[314,5,318,5],[314,6,318,6],[315,4,320,2,"getTransactions"],[315,19,320,17],[315,21,320,19,"getTransactions"],[315,22,320,19],[315,27,320,25,"apiClient"],[315,36,320,34],[315,37,320,35,"get"],[315,40,320,38],[315,41,320,39],[315,56,320,54],[316,2,321,0],[316,3,321,1],[317,2,323,0],[317,6,323,0,"_default"],[317,14,323,0],[317,17,323,15,"apiClient"],[317,26,323,24],[318,0,323,25],[318,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;UwBK;6CxBO;QyBE;qEzBC;qB0BE,uC1B;kB2BE,oD3B;mB4BE;M5BQ;U6BE;M7BG;mB8BE;qD9BC;c+BG;mDCiB,sCD;G/B0C;oBiCG;kCDc,sCC;0BCC,0BD;GjCS;yBmCE;yBCU;KDE;GnCG;YqCE;GrCM;csCK,sCtC;SuCE;MvCG;YwCE;MxCG;mByCE,oCzC"},"hasCjsExports":false},"type":"js/module"}]}