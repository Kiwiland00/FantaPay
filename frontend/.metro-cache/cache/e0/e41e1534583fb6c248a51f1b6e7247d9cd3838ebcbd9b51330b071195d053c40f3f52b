{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":39,"index":150}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"../utils/CrossPlatformStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":151},"end":{"line":4,"column":65,"index":216}}],"key":"f35s9TWsgQpxKKiCp9CmSar+L+U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _utilsCrossPlatformStorage = require(_dependencyMap[4], \"../utils/CrossPlatformStorage\");\n  var CrossPlatformStorage = _interopDefault(_utilsCrossPlatformStorage);\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantaleague-pay.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.default.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      // Generate truly random unique invite code (not based on name)\n      const generateRandomCode = () => {\n        const chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'; // Exclude confusing chars like O, 0, I, L\n        let result = '';\n        for (let i = 0; i < 8; i++) {\n          result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n      };\n\n      // Ensure invite code is globally unique\n      let inviteCode = generateRandomCode();\n      while (existingCompetitions.some(comp => comp.invite_code === inviteCode)) {\n        inviteCode = generateRandomCode();\n        console.log('🔄 Generated new code due to collision:', inviteCode);\n      }\n      console.log('✅ Generated unique invite code:', inviteCode);\n      const newCompetition = {\n        _id: `comp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: inviteCode,\n        // Random unique code\n        invite_link: `https://fantapay.app/join/${inviteCode}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n\n        // Enhance competitions with demo participants if they don't have enough\n        const enhancedCompetitions = competitions.map(comp => {\n          if (!comp.participants || comp.participants.length < 4) {\n            const demoParticipants = [{\n              id: '650f1f1f1f1f1f1f1f1f1f1f',\n              name: 'FantaPay Tester',\n              email: 'test@fantapay.com',\n              is_admin: true,\n              paid_matchdays: [1, 2, 3],\n              points: 87.5\n            }, {\n              id: 'user_marco_rossi',\n              name: 'Marco Rossi',\n              email: 'marco.rossi@email.com',\n              is_admin: false,\n              paid_matchdays: [1, 2],\n              points: 92.3\n            }, {\n              id: 'user_giulia_bianchi',\n              name: 'Giulia Bianchi',\n              email: 'giulia.bianchi@email.com',\n              is_admin: false,\n              paid_matchdays: [1],\n              points: 78.1\n            }, {\n              id: 'user_luca_ferrari',\n              name: 'Luca Ferrari',\n              email: 'luca.ferrari@email.com',\n              is_admin: false,\n              paid_matchdays: [],\n              points: 45.7\n            }, {\n              id: 'user_sofia_conti',\n              name: 'Sofia Conti',\n              email: 'sofia.conti@email.com',\n              is_admin: false,\n              paid_matchdays: [1, 2, 3],\n              points: 95.2\n            }];\n            return {\n              ...comp,\n              participants: demoParticipants\n            };\n          }\n          return comp;\n        });\n\n        // Save enhanced competitions back to storage\n        await CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(enhancedCompetitions));\n        enhancedCompetitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id}) - ${comp.participants?.length || 0} participants`);\n        });\n        return enhancedCompetitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = {\n        ...competition,\n        ...updates,\n        updated_at: new Date().toISOString()\n      };\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    },\n    // Critical Missing Method: Get ALL competitions for uniqueness validation\n    getAllCompetitions: async () => {\n      console.log('🌐 Mock: Getting ALL competitions for validation');\n      try {\n        // Get competitions from both storage locations \n        const storedCompetitions = await CrossPlatformStorage.default.getItem('competitions_mock');\n        let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Also check the old storage key for backwards compatibility\n        const oldStoredCompetitions = await CrossPlatformStorage.default.getItem('mockCompetitions');\n        const oldCompetitions = oldStoredCompetitions ? JSON.parse(oldStoredCompetitions) : [];\n\n        // Combine both sources and remove duplicates\n        const allCompetitions = [...competitions, ...oldCompetitions];\n        const uniqueCompetitions = allCompetitions.filter((comp, index, self) => index === self.findIndex(c => c._id === comp._id));\n        console.log('📊 Total unique competitions found:', uniqueCompetitions.length);\n        return uniqueCompetitions;\n      } catch (error) {\n        console.error('💥 Error getting all competitions:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  const databaseAPI = {\n    resetDatabase: async () => {\n      console.log('🗑️ Resetting database - clearing all stored data');\n      try {\n        await CrossPlatformStorage.default.removeItem('competitions_mock');\n        await CrossPlatformStorage.default.removeItem('admin_logs_mock');\n        await CrossPlatformStorage.default.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n        await CrossPlatformStorage.default.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n        console.log('✅ Database reset complete - all data cleared');\n        return {\n          success: true,\n          message: 'Database reset complete'\n        };\n      } catch (error) {\n        console.error('❌ Database reset failed:', error);\n        return {\n          success: false,\n          message: 'Reset failed'\n        };\n      }\n    }\n  };\n  var _default = apiClient;\n});","lineCount":661,"map":[[27,2,709,0,"Object"],[27,8,709,0],[27,9,709,0,"defineProperty"],[27,23,709,0],[27,24,709,0,"exports"],[27,31,709,0],[28,4,709,0,"enumerable"],[28,14,709,0],[29,4,709,0,"get"],[29,7,709,0],[29,18,709,0,"get"],[29,19,709,0],[30,6,709,0],[30,13,709,0,"_default"],[30,21,709,0],[31,4,709,0],[32,2,709,0],[33,2,79,0,"Object"],[33,8,79,0],[33,9,79,0,"defineProperty"],[33,23,79,0],[33,24,79,0,"exports"],[33,31,79,0],[34,4,79,0,"enumerable"],[34,14,79,0],[35,4,79,0,"get"],[35,7,79,0],[35,18,79,0,"get"],[35,19,79,0],[36,6,79,0],[36,13,79,0,"authAPI"],[36,20,79,0],[37,4,79,0],[38,2,79,0],[39,2,142,0,"Object"],[39,8,142,0],[39,9,142,0,"defineProperty"],[39,23,142,0],[39,24,142,0,"exports"],[39,31,142,0],[40,4,142,0,"enumerable"],[40,14,142,0],[41,4,142,0,"get"],[41,7,142,0],[41,18,142,0,"get"],[41,19,142,0],[42,6,142,0],[42,13,142,0,"competitionAPI"],[42,27,142,0],[43,4,142,0],[44,2,142,0],[45,2,673,0,"Object"],[45,8,673,0],[45,9,673,0,"defineProperty"],[45,23,673,0],[45,24,673,0,"exports"],[45,31,673,0],[46,4,673,0,"enumerable"],[46,14,673,0],[47,4,673,0,"get"],[47,7,673,0],[47,18,673,0,"get"],[47,19,673,0],[48,6,673,0],[48,13,673,0,"walletAPI"],[48,22,673,0],[49,4,673,0],[50,2,673,0],[51,2,690,0,"Object"],[51,8,690,0],[51,9,690,0,"defineProperty"],[51,23,690,0],[51,24,690,0,"exports"],[51,31,690,0],[52,4,690,0,"enumerable"],[52,14,690,0],[53,4,690,0,"get"],[53,7,690,0],[53,18,690,0,"get"],[53,19,690,0],[54,6,690,0],[54,13,690,0,"databaseAPI"],[54,24,690,0],[55,4,690,0],[56,2,690,0],[57,2,707,2],[57,6,707,2,"_expoVirtualEnv"],[57,21,707,2],[57,24,707,2,"require"],[57,31,707,2],[57,32,707,2,"_dependencyMap"],[57,46,707,2],[58,2,1,0],[58,6,1,0,"_axios"],[58,12,1,0],[58,15,1,0,"require"],[58,22,1,0],[58,23,1,0,"_dependencyMap"],[58,37,1,0],[59,2,1,0],[59,6,1,0,"axios"],[59,11,1,0],[59,14,1,0,"_interopDefault"],[59,29,1,0],[59,30,1,0,"_axios"],[59,36,1,0],[60,2,2,0],[60,6,2,0,"_expoSecureStore"],[60,22,2,0],[60,25,2,0,"require"],[60,32,2,0],[60,33,2,0,"_dependencyMap"],[60,47,2,0],[61,2,2,0],[61,6,2,0,"SecureStore"],[61,17,2,0],[61,20,2,0,"_interopNamespace"],[61,37,2,0],[61,38,2,0,"_expoSecureStore"],[61,54,2,0],[62,2,3,0],[62,6,3,0,"_expoConstants"],[62,20,3,0],[62,23,3,0,"require"],[62,30,3,0],[62,31,3,0,"_dependencyMap"],[62,45,3,0],[63,2,3,0],[63,6,3,0,"Constants"],[63,15,3,0],[63,18,3,0,"_interopDefault"],[63,33,3,0],[63,34,3,0,"_expoConstants"],[63,48,3,0],[64,2,4,0],[64,6,4,0,"_utilsCrossPlatformStorage"],[64,32,4,0],[64,35,4,0,"require"],[64,42,4,0],[64,43,4,0,"_dependencyMap"],[64,57,4,0],[65,2,4,0],[65,6,4,0,"CrossPlatformStorage"],[65,26,4,0],[65,29,4,0,"_interopDefault"],[65,44,4,0],[65,45,4,0,"_utilsCrossPlatformStorage"],[65,71,4,0],[66,2,6,0],[67,2,7,0],[67,8,7,6,"BACKEND_URL"],[67,19,7,17],[67,22,7,20,"Constants"],[67,31,7,29],[67,32,7,29,"default"],[67,39,7,29],[67,40,7,30,"expoConfig"],[67,50,7,40],[67,52,7,42,"extra"],[67,57,7,47],[67,59,7,49,"backendUrl"],[67,69,7,59],[67,73,7,59,"_expoVirtualEnv"],[67,88,7,59],[67,89,7,59,"env"],[67,92,7,59],[67,93,7,59,"EXPO_PUBLIC_BACKEND_URL"],[67,116,7,98],[67,120,7,102],[67,171,7,153],[68,2,9,0],[68,8,9,6,"ApiClient"],[68,17,9,15],[68,18,9,16],[69,4,12,2,"constructor"],[69,15,12,13,"constructor"],[69,16,12,13],[69,18,12,16],[70,6,13,4],[70,10,13,8],[70,11,13,9,"client"],[70,17,13,15],[70,20,13,18,"axios"],[70,25,13,23],[70,26,13,23,"default"],[70,33,13,23],[70,34,13,24,"create"],[70,40,13,30],[70,41,13,31],[71,8,14,6,"baseURL"],[71,15,14,13],[71,17,14,15],[71,20,14,18,"BACKEND_URL"],[71,31,14,29],[71,37,14,35],[72,8,15,6,"timeout"],[72,15,15,13],[72,17,15,15],[72,22,15,20],[73,8,16,6,"headers"],[73,15,16,13],[73,17,16,15],[74,10,17,8],[74,24,17,22],[74,26,17,24],[75,8,18,6],[76,6,19,4],[76,7,19,5],[76,8,19,6],[78,6,21,4],[79,6,22,4],[79,10,22,8],[79,11,22,9,"client"],[79,17,22,15],[79,18,22,16,"interceptors"],[79,30,22,28],[79,31,22,29,"request"],[79,38,22,36],[79,39,22,37,"use"],[79,42,22,40],[79,43,22,41],[79,49,22,48,"config"],[79,55,22,54],[79,59,22,59],[80,8,23,6,"console"],[80,15,23,13],[80,16,23,14,"log"],[80,19,23,17],[80,20,23,18],[80,39,23,37,"config"],[80,45,23,43],[80,46,23,44,"method"],[80,52,23,50],[80,54,23,52,"toUpperCase"],[80,65,23,63],[80,66,23,64],[80,67,23,65],[80,71,23,69,"config"],[80,77,23,75],[80,78,23,76,"url"],[80,81,23,79],[80,83,23,81],[80,85,23,83,"config"],[80,91,23,89],[80,92,23,90,"data"],[80,96,23,94],[80,97,23,95],[81,8,25,6],[81,14,25,12,"token"],[81,19,25,17],[81,22,25,20],[81,28,25,26,"SecureStore"],[81,39,25,37],[81,40,25,38,"getItemAsync"],[81,52,25,50],[81,53,25,51],[81,68,25,66],[81,69,25,67],[82,8,26,6],[82,12,26,10,"token"],[82,17,26,15],[82,19,26,17],[83,10,27,8,"config"],[83,16,27,14],[83,17,27,15,"headers"],[83,24,27,22],[83,25,27,23,"Authorization"],[83,38,27,36],[83,41,27,39],[83,51,27,49,"token"],[83,56,27,54],[83,58,27,56],[84,8,28,6],[85,8,29,6],[85,15,29,13,"config"],[85,21,29,19],[86,6,30,4],[86,7,30,5],[86,8,30,6],[88,6,32,4],[89,6,33,4],[89,10,33,8],[89,11,33,9,"client"],[89,17,33,15],[89,18,33,16,"interceptors"],[89,30,33,28],[89,31,33,29,"response"],[89,39,33,37],[89,40,33,38,"use"],[89,43,33,41],[89,44,34,7,"response"],[89,52,34,15],[89,56,34,20],[90,8,35,8,"console"],[90,15,35,15],[90,16,35,16,"log"],[90,19,35,19],[90,20,35,20],[90,39,35,39,"response"],[90,47,35,47],[90,48,35,48,"status"],[90,54,35,54],[90,56,35,56],[90,58,35,58,"response"],[90,66,35,66],[90,67,35,67,"data"],[90,71,35,71],[90,72,35,72],[91,8,36,8],[91,15,36,15,"response"],[91,23,36,23],[92,6,37,6],[92,7,37,7],[92,9,38,7,"error"],[92,14,38,12],[92,18,38,17],[93,8,39,8,"console"],[93,15,39,15],[93,16,39,16,"log"],[93,19,39,19],[93,20,39,20],[93,36,39,36,"error"],[93,41,39,41],[93,42,39,42,"response"],[93,50,39,50],[93,52,39,52,"status"],[93,58,39,58],[93,62,39,62],[93,71,39,71],[93,73,39,73],[93,75,39,75,"error"],[93,80,39,80],[93,81,39,81,"response"],[93,89,39,89],[93,91,39,91,"data"],[93,95,39,95],[93,99,39,99,"error"],[93,104,39,104],[93,105,39,105,"message"],[93,112,39,112],[93,113,39,113],[94,8,41,8],[94,12,41,12,"error"],[94,17,41,17],[94,18,41,18,"response"],[94,26,41,26],[94,28,41,28,"status"],[94,34,41,34],[94,39,41,39],[94,42,41,42],[94,44,41,44],[95,10,42,10],[96,10,43,10,"SecureStore"],[96,21,43,21],[96,22,43,22,"deleteItemAsync"],[96,37,43,37],[96,38,43,38],[96,53,43,53],[96,54,43,54],[97,8,44,8],[98,8,45,8],[98,15,45,15,"Promise"],[98,22,45,22],[98,23,45,23,"reject"],[98,29,45,29],[98,30,45,30,"error"],[98,35,45,35],[98,36,45,36],[99,6,46,6],[99,7,47,4],[99,8,47,5],[100,4,48,2],[101,4,50,2],[101,10,50,8,"get"],[101,13,50,11,"get"],[101,14,50,21,"url"],[101,17,50,32],[101,19,50,46],[102,6,51,4],[102,12,51,10,"response"],[102,20,51,36],[102,23,51,39],[102,29,51,45],[102,33,51,49],[102,34,51,50,"client"],[102,40,51,56],[102,41,51,57,"get"],[102,44,51,60],[102,45,51,61,"url"],[102,48,51,64],[102,49,51,65],[103,6,52,4],[103,13,52,11,"response"],[103,21,52,19],[103,22,52,20,"data"],[103,26,52,24],[104,4,53,2],[105,4,55,2],[105,10,55,8,"post"],[105,14,55,12,"post"],[105,15,55,22,"url"],[105,18,55,33],[105,20,55,35,"data"],[105,24,55,45],[105,26,55,59],[106,6,56,4],[106,12,56,10,"response"],[106,20,56,36],[106,23,56,39],[106,29,56,45],[106,33,56,49],[106,34,56,50,"client"],[106,40,56,56],[106,41,56,57,"post"],[106,45,56,61],[106,46,56,62,"url"],[106,49,56,65],[106,51,56,67,"data"],[106,55,56,71],[106,56,56,72],[107,6,57,4],[107,13,57,11,"response"],[107,21,57,19],[107,22,57,20,"data"],[107,26,57,24],[108,4,58,2],[109,4,60,2],[109,10,60,8,"patch"],[109,15,60,13,"patch"],[109,16,60,23,"url"],[109,19,60,34],[109,21,60,36,"data"],[109,25,60,46],[109,27,60,60],[110,6,61,4],[110,12,61,10,"response"],[110,20,61,36],[110,23,61,39],[110,29,61,45],[110,33,61,49],[110,34,61,50,"client"],[110,40,61,56],[110,41,61,57,"patch"],[110,46,61,62],[110,47,61,63,"url"],[110,50,61,66],[110,52,61,68,"data"],[110,56,61,72],[110,57,61,73],[111,6,62,4],[111,13,62,11,"response"],[111,21,62,19],[111,22,62,20,"data"],[111,26,62,24],[112,4,63,2],[113,4,65,2],[113,10,65,8,"delete"],[113,16,65,14,"delete"],[113,17,65,24,"url"],[113,20,65,35],[113,22,65,49],[114,6,66,4],[114,12,66,10,"response"],[114,20,66,36],[114,23,66,39],[114,29,66,45],[114,33,66,49],[114,34,66,50,"client"],[114,40,66,56],[114,41,66,57,"delete"],[114,47,66,63],[114,48,66,64,"url"],[114,51,66,67],[114,52,66,68],[115,6,67,4],[115,13,67,11,"response"],[115,21,67,19],[115,22,67,20,"data"],[115,26,67,24],[116,4,68,2],[117,4,70,2],[117,10,70,8,"put"],[117,13,70,11,"put"],[117,14,70,21,"url"],[117,17,70,32],[117,19,70,34,"data"],[117,23,70,44],[117,25,70,58],[118,6,71,4],[118,12,71,10,"response"],[118,20,71,36],[118,23,71,39],[118,29,71,45],[118,33,71,49],[118,34,71,50,"client"],[118,40,71,56],[118,41,71,57,"put"],[118,44,71,60],[118,45,71,61,"url"],[118,48,71,64],[118,50,71,66,"data"],[118,54,71,70],[118,55,71,71],[119,6,72,4],[119,13,72,11,"response"],[119,21,72,19],[119,22,72,20,"data"],[119,26,72,24],[120,4,73,2],[121,2,74,0],[122,2,76,0],[122,8,76,6,"apiClient"],[122,17,76,15],[122,20,76,18],[122,24,76,22,"ApiClient"],[122,33,76,31],[122,34,76,32],[122,35,76,33],[124,2,78,0],[125,2,79,7],[125,8,79,13,"authAPI"],[125,15,79,20],[125,18,79,23],[126,4,80,2,"createSession"],[126,17,80,15],[126,19,80,18,"sessionId"],[126,28,80,35],[126,32,81,4,"apiClient"],[126,41,81,13],[126,42,81,14,"post"],[126,46,81,18],[126,47,81,19],[126,62,81,34],[126,64,81,36],[126,68,81,40],[126,70,81,42],[127,6,82,6,"headers"],[127,13,82,13],[127,15,82,15],[128,8,82,17],[128,22,82,31],[128,24,82,33,"sessionId"],[129,6,82,43],[130,4,83,4],[130,5,83,5],[130,6,83,6],[131,4,85,2,"signup"],[131,10,85,8],[131,12,85,11,"data"],[131,16,91,3],[131,20,91,8,"apiClient"],[131,29,91,17],[131,30,91,18,"post"],[131,34,91,22],[131,35,91,23],[131,49,91,37],[131,51,91,39,"data"],[131,55,91,43],[131,56,91,44],[132,4,93,2,"verifyOTP"],[132,13,93,11],[132,15,93,14,"data"],[132,19,93,55],[132,23,94,4,"apiClient"],[132,32,94,13],[132,33,94,14,"post"],[132,37,94,18],[132,38,94,19],[132,56,94,37],[132,58,94,39,"data"],[132,62,94,43],[132,63,94,44],[133,4,96,2,"login"],[133,9,96,7],[133,11,96,10,"data"],[133,15,96,51],[133,19,97,4,"apiClient"],[133,28,97,13],[133,29,97,14,"post"],[133,33,97,18],[133,34,97,19],[133,47,97,32],[133,49,97,34,"data"],[133,53,97,38],[133,54,97,39],[134,4,99,2,"resendOTP"],[134,13,99,11],[134,15,99,14,"email"],[134,20,99,27],[134,24,100,4,"apiClient"],[134,33,100,13],[134,34,100,14,"post"],[134,38,100,18],[134,39,100,19],[134,57,100,37],[134,59,100,39],[135,6,100,41,"email"],[136,4,100,47],[136,5,100,48],[136,6,100,49],[137,4,102,2,"getCurrentUser"],[137,18,102,16],[137,20,102,18,"getCurrentUser"],[137,21,102,18],[137,26,102,24,"apiClient"],[137,35,102,33],[137,36,102,34,"get"],[137,39,102,37],[137,40,102,38],[137,50,102,48],[137,51,102,49],[138,4,104,2,"logout"],[138,10,104,8],[138,12,104,10,"logout"],[138,13,104,10],[138,18,104,16,"apiClient"],[138,27,104,25],[138,28,104,26,"post"],[138,32,104,30],[138,33,104,31],[138,47,104,45],[138,48,104,46],[139,4,106,2,"updateLanguage"],[139,18,106,16],[139,20,106,19,"language"],[139,28,106,35],[139,32,107,4,"apiClient"],[139,41,107,13],[139,42,107,14,"patch"],[139,47,107,19],[139,48,107,20],[139,64,107,36],[139,66,107,38],[139,70,107,42],[139,72,107,44],[140,6,108,6,"params"],[140,12,108,12],[140,14,108,14],[141,8,108,16,"language"],[142,6,108,25],[143,4,109,4],[143,5,109,5],[143,6,109,6],[144,4,111,2,"toggleBiometric"],[144,19,111,17],[144,21,111,20,"enabled"],[144,28,111,36],[144,32,112,4,"apiClient"],[144,41,112,13],[144,42,112,14,"patch"],[144,47,112,19],[144,48,112,20],[144,65,112,37],[144,67,112,39],[144,71,112,43],[144,73,112,45],[145,6,113,6,"params"],[145,12,113,12],[145,14,113,14],[146,8,113,16,"enabled"],[147,6,113,24],[148,4,114,4],[148,5,114,5],[149,2,115,0],[149,3,115,1],[151,2,117,0],[152,2,118,0],[152,8,118,6,"logAdminAction"],[152,22,118,20],[152,25,118,23],[152,31,118,23,"logAdminAction"],[152,32,118,30,"action"],[152,38,118,44],[152,40,118,46,"competitionName"],[152,55,118,69],[152,57,118,71,"adminName"],[152,66,118,88],[152,68,118,90,"details"],[152,75,118,103],[152,80,118,108],[153,4,119,2],[153,8,119,6],[154,6,120,4],[154,12,120,10,"logs"],[154,16,120,14],[154,19,120,17],[154,26,120,23,"CrossPlatformStorage"],[154,46,120,43],[154,47,120,43,"default"],[154,54,120,43],[154,55,120,44,"getItem"],[154,62,120,51],[154,63,120,52],[154,74,120,63],[154,75,120,64],[154,80,120,68],[154,84,120,72],[155,6,121,4],[155,12,121,10,"adminLogs"],[155,21,121,19],[155,24,121,22,"JSON"],[155,28,121,26],[155,29,121,27,"parse"],[155,34,121,32],[155,35,121,33,"logs"],[155,39,121,37],[155,40,121,38],[156,6,123,4],[156,12,123,10,"logEntry"],[156,20,123,18],[156,23,123,21],[157,8,124,6,"id"],[157,10,124,8],[157,12,124,10],[157,19,124,17,"Date"],[157,23,124,21],[157,24,124,22,"now"],[157,27,124,25],[157,28,124,26],[157,29,124,27],[157,31,124,29],[158,8,125,6,"action"],[158,14,125,12],[159,8,126,6,"competition_name"],[159,24,126,22],[159,26,126,24,"competitionName"],[159,41,126,39],[160,8,127,6,"admin_name"],[160,18,127,16],[160,20,127,18,"adminName"],[160,29,127,27],[161,8,128,6,"details"],[161,15,128,13],[162,8,129,6,"timestamp"],[162,17,129,15],[162,19,129,17],[162,23,129,21,"Date"],[162,27,129,25],[162,28,129,26],[162,29,129,27],[162,30,129,28,"toISOString"],[162,41,129,39],[162,42,129,40],[163,6,130,4],[163,7,130,5],[164,6,132,4,"adminLogs"],[164,15,132,13],[164,16,132,14,"push"],[164,20,132,18],[164,21,132,19,"logEntry"],[164,29,132,27],[164,30,132,28],[165,6,133,4],[165,12,133,10,"CrossPlatformStorage"],[165,32,133,30],[165,33,133,30,"default"],[165,40,133,30],[165,41,133,31,"setItem"],[165,48,133,38],[165,49,133,39],[165,60,133,50],[165,62,133,52,"JSON"],[165,66,133,56],[165,67,133,57,"stringify"],[165,76,133,66],[165,77,133,67,"adminLogs"],[165,86,133,76],[165,87,133,77],[165,88,133,78],[166,6,135,4,"console"],[166,13,135,11],[166,14,135,12,"log"],[166,17,135,15],[166,18,135,16],[166,43,135,41],[166,45,135,43,"action"],[166,51,135,49],[166,53,135,51,"competitionName"],[166,68,135,66],[166,69,135,67],[167,4,136,2],[167,5,136,3],[167,6,136,4],[167,13,136,11,"error"],[167,18,136,16],[167,20,136,18],[168,6,137,4,"console"],[168,13,137,11],[168,14,137,12,"error"],[168,19,137,17],[168,20,137,18],[168,49,137,47],[168,51,137,49,"error"],[168,56,137,54],[168,57,137,55],[169,4,138,2],[170,2,139,0],[170,3,139,1],[172,2,141,0],[173,2,142,7],[173,8,142,13,"competitionAPI"],[173,22,142,27],[173,25,142,30],[174,4,143,2,"create"],[174,10,143,8],[174,12,143,11,"data"],[174,16,158,3],[174,20,158,8,"apiClient"],[174,29,158,17],[174,30,158,18,"post"],[174,34,158,22],[174,35,158,23],[174,50,158,38],[174,52,158,40,"data"],[174,56,158,44],[174,57,158,45],[175,4,160,2,"join"],[175,8,160,6],[175,10,160,9,"inviteCode"],[175,20,160,27],[175,24,161,4,"apiClient"],[175,33,161,13],[175,34,161,14,"post"],[175,38,161,18],[175,39,161,19],[175,59,161,39],[175,61,161,41],[176,6,161,43,"invite_code"],[176,17,161,54],[176,19,161,56,"inviteCode"],[177,4,161,67],[177,5,161,68],[177,6,161,69],[178,4,163,2,"getMyCompetitions"],[178,21,163,19],[178,23,163,21,"getMyCompetitions"],[178,24,163,21],[178,29,163,27,"apiClient"],[178,38,163,36],[178,39,163,37,"get"],[178,42,163,40],[178,43,163,41],[178,61,163,59],[178,62,163,60],[179,4,165,2,"getCompetition"],[179,18,165,16],[179,20,165,19,"id"],[179,22,165,29],[179,26,165,34,"apiClient"],[179,35,165,43],[179,36,165,44,"get"],[179,39,165,47],[179,40,165,48],[179,57,165,65,"id"],[179,59,165,67],[179,61,165,69],[179,62,165,70],[180,4,167,2,"updateStandings"],[180,19,167,17],[180,21,167,19,"updateStandings"],[180,22,168,4,"id"],[180,24,168,14],[180,26,169,4,"standings"],[180,35,169,18],[180,37,170,4,"matchday"],[180,45,170,21],[180,50,172,4,"apiClient"],[180,59,172,13],[180,60,172,14,"patch"],[180,65,172,19],[180,66,172,20],[180,83,172,37,"id"],[180,85,172,39],[180,97,172,51],[180,99,172,53],[181,6,173,6,"standings"],[181,15,173,15],[182,6,174,6,"matchday"],[183,4,175,4],[183,5,175,5],[183,6,175,6],[184,4,177,2,"payFee"],[184,10,177,8],[184,12,177,10,"payFee"],[184,13,177,11,"id"],[184,15,177,21],[184,17,177,23,"amount"],[184,23,177,37],[184,28,178,4,"apiClient"],[184,37,178,13],[184,38,178,14,"post"],[184,42,178,18],[184,43,178,19],[184,60,178,36,"id"],[184,62,178,38],[184,68,178,44],[184,70,178,46],[184,74,178,50],[184,76,178,52],[185,6,179,6,"params"],[185,12,179,12],[185,14,179,14],[186,8,179,16,"amount"],[187,6,179,23],[188,4,180,4],[188,5,180,5],[188,6,180,6],[189,4,182,2,"getTransactions"],[189,19,182,17],[189,21,182,20,"id"],[189,23,182,30],[189,27,183,4,"apiClient"],[189,36,183,13],[189,37,183,14,"get"],[189,40,183,17],[189,41,183,18],[189,58,183,35,"id"],[189,60,183,37],[189,75,183,52],[189,76,183,53],[190,4,185,2],[191,4,186,2,"payMatchdays"],[191,16,186,14],[191,18,186,16,"payMatchdays"],[191,19,186,17,"competitionId"],[191,32,186,38],[191,34,186,40,"matchdays"],[191,43,186,59],[191,48,187,4,"apiClient"],[191,57,187,13],[191,58,187,14,"post"],[191,62,187,18],[191,63,187,19],[191,80,187,36,"competitionId"],[191,93,187,49],[191,113,187,69],[191,115,187,71],[192,6,188,6,"competition_id"],[192,20,188,20],[192,22,188,22,"competitionId"],[192,35,188,35],[193,6,189,6,"matchdays"],[194,4,190,4],[194,5,190,5],[194,6,190,6],[195,4,192,2,"getMatchdayPayments"],[195,23,192,21],[195,25,192,24,"competitionId"],[195,38,192,45],[195,42,193,4,"apiClient"],[195,51,193,13],[195,52,193,14,"get"],[195,55,193,17],[195,56,193,18],[195,73,193,35,"competitionId"],[195,86,193,48],[195,106,193,68],[195,107,193,69],[196,4,195,2,"getPaymentStatusTable"],[196,25,195,23],[196,27,195,26,"competitionId"],[196,40,195,47],[196,44,196,4,"apiClient"],[196,53,196,13],[196,54,196,14,"get"],[196,57,196,17],[196,58,196,18],[196,75,196,35,"competitionId"],[196,88,196,48],[196,111,196,71],[196,112,196,72],[197,4,198,2],[198,4,199,2,"createMock"],[198,14,199,12],[198,16,199,14],[198,22,199,21,"data"],[198,26,212,3],[198,30,212,8],[199,6,213,4,"console"],[199,13,213,11],[199,14,213,12,"log"],[199,17,213,15],[199,18,213,16],[199,50,213,48],[199,52,213,50,"data"],[199,56,213,54],[199,57,213,55,"name"],[199,61,213,59],[199,62,213,60],[200,6,214,4,"console"],[200,13,214,11],[200,14,214,12,"log"],[200,17,214,15],[200,18,214,16],[200,39,214,37],[200,41,214,39,"data"],[200,45,214,43],[200,46,214,44,"total_matchdays"],[200,61,214,59],[200,65,214,63],[200,67,214,65],[200,68,214,66],[202,6,216,4],[203,6,217,4],[203,12,217,10,"storedCompetitions"],[203,30,217,28],[203,33,217,31],[203,39,217,37,"CrossPlatformStorage"],[203,59,217,57],[203,60,217,57,"default"],[203,67,217,57],[203,68,217,58,"getItem"],[203,75,217,65],[203,76,217,66],[203,95,217,85],[203,96,217,86],[204,6,218,4],[204,10,218,8,"existingCompetitions"],[204,30,218,28],[204,33,218,31,"storedCompetitions"],[204,51,218,49],[204,54,218,52,"JSON"],[204,58,218,56],[204,59,218,57,"parse"],[204,64,218,62],[204,65,218,63,"storedCompetitions"],[204,83,218,81],[204,84,218,82],[204,87,218,85],[204,89,218,87],[205,6,220,4,"console"],[205,13,220,11],[205,14,220,12,"log"],[205,17,220,15],[205,18,220,16],[205,60,220,58],[205,62,220,60,"existingCompetitions"],[205,82,220,80],[205,83,220,81,"length"],[205,89,220,87],[205,90,220,88],[207,6,222,4],[208,6,223,4],[208,12,223,10,"existingNames"],[208,25,223,23],[208,28,223,26,"existingCompetitions"],[208,48,223,46],[208,49,223,47,"map"],[208,52,223,50],[208,53,223,52,"comp"],[208,57,223,61],[208,61,223,66,"comp"],[208,65,223,70],[208,66,223,71,"name"],[208,70,223,75],[208,71,223,76,"toLowerCase"],[208,82,223,87],[208,83,223,88],[208,84,223,89],[208,85,223,90],[209,6,224,4],[209,10,224,8,"existingNames"],[209,23,224,21],[209,24,224,22,"includes"],[209,32,224,30],[209,33,224,31,"data"],[209,37,224,35],[209,38,224,36,"name"],[209,42,224,40],[209,43,224,41,"toLowerCase"],[209,54,224,52],[209,55,224,53],[209,56,224,54],[209,57,224,55],[209,59,224,57],[210,8,225,6],[210,14,225,12],[210,18,225,16,"Error"],[210,23,225,21],[210,24,225,22],[210,86,225,84],[210,87,225,85],[211,6,226,4],[213,6,228,4],[214,6,229,4],[215,6,230,4],[215,12,230,10,"generateRandomCode"],[215,30,230,28],[215,33,230,31,"generateRandomCode"],[215,34,230,31],[215,39,230,37],[216,8,231,6],[216,14,231,12,"chars"],[216,19,231,17],[216,22,231,20],[216,58,231,56],[216,59,231,57],[216,60,231,58],[217,8,232,6],[217,12,232,10,"result"],[217,18,232,16],[217,21,232,19],[217,23,232,21],[218,8,233,6],[218,13,233,11],[218,17,233,15,"i"],[218,18,233,16],[218,21,233,19],[218,22,233,20],[218,24,233,22,"i"],[218,25,233,23],[218,28,233,26],[218,29,233,27],[218,31,233,29,"i"],[218,32,233,30],[218,34,233,32],[218,36,233,34],[219,10,234,8,"result"],[219,16,234,14],[219,20,234,18,"chars"],[219,25,234,23],[219,26,234,24,"charAt"],[219,32,234,30],[219,33,234,31,"Math"],[219,37,234,35],[219,38,234,36,"floor"],[219,43,234,41],[219,44,234,42,"Math"],[219,48,234,46],[219,49,234,47,"random"],[219,55,234,53],[219,56,234,54],[219,57,234,55],[219,60,234,58,"chars"],[219,65,234,63],[219,66,234,64,"length"],[219,72,234,70],[219,73,234,71],[219,74,234,72],[220,8,235,6],[221,8,236,6],[221,15,236,13,"result"],[221,21,236,19],[222,6,237,4],[222,7,237,5],[224,6,239,4],[225,6,240,4],[225,10,240,8,"inviteCode"],[225,20,240,18],[225,23,240,21,"generateRandomCode"],[225,41,240,39],[225,42,240,40],[225,43,240,41],[226,6,241,4],[226,13,241,11,"existingCompetitions"],[226,33,241,31],[226,34,241,32,"some"],[226,38,241,36],[226,39,241,38,"comp"],[226,43,241,47],[226,47,241,52,"comp"],[226,51,241,56],[226,52,241,57,"invite_code"],[226,63,241,68],[226,68,241,73,"inviteCode"],[226,78,241,83],[226,79,241,84],[226,81,241,86],[227,8,242,6,"inviteCode"],[227,18,242,16],[227,21,242,19,"generateRandomCode"],[227,39,242,37],[227,40,242,38],[227,41,242,39],[228,8,243,6,"console"],[228,15,243,13],[228,16,243,14,"log"],[228,19,243,17],[228,20,243,18],[228,61,243,59],[228,63,243,61,"inviteCode"],[228,73,243,71],[228,74,243,72],[229,6,244,4],[230,6,246,4,"console"],[230,13,246,11],[230,14,246,12,"log"],[230,17,246,15],[230,18,246,16],[230,51,246,49],[230,53,246,51,"inviteCode"],[230,63,246,61],[230,64,246,62],[231,6,248,4],[231,12,248,10,"newCompetition"],[231,26,248,24],[231,29,248,27],[232,8,249,6,"_id"],[232,11,249,9],[232,13,249,11],[232,21,249,19,"Date"],[232,25,249,23],[232,26,249,24,"now"],[232,29,249,27],[232,30,249,28],[232,31,249,29],[232,35,249,33,"Math"],[232,39,249,37],[232,40,249,38,"random"],[232,46,249,44],[232,47,249,45],[232,48,249,46],[232,49,249,47,"toString"],[232,57,249,55],[232,58,249,56],[232,60,249,58],[232,61,249,59],[232,62,249,60,"substr"],[232,68,249,66],[232,69,249,67],[232,70,249,68],[232,72,249,70],[232,73,249,71],[232,74,249,72],[232,76,249,74],[233,8,250,6,"name"],[233,12,250,10],[233,14,250,12,"data"],[233,18,250,16],[233,19,250,17,"name"],[233,23,250,21],[234,8,251,6,"total_matchdays"],[234,23,251,21],[234,25,251,23,"data"],[234,29,251,27],[234,30,251,28,"total_matchdays"],[234,45,251,43],[234,49,251,47],[234,51,251,49],[235,8,252,6,"participation_cost_per_team"],[235,35,252,33],[235,37,252,35,"data"],[235,41,252,39],[235,42,252,40,"participation_cost_per_team"],[235,69,252,67],[235,73,252,71],[235,78,252,76],[236,8,253,6,"expected_teams"],[236,22,253,20],[236,24,253,22,"data"],[236,28,253,26],[236,29,253,27,"expected_teams"],[236,43,253,41],[236,47,253,45],[236,48,253,46],[237,8,254,6,"total_prize_pool"],[237,24,254,22],[237,26,254,24,"data"],[237,30,254,28],[237,31,254,29,"total_prize_pool"],[237,47,254,45],[237,51,254,49],[237,57,254,55],[238,8,255,6,"daily_payment_enabled"],[238,29,255,27],[238,31,255,29,"data"],[238,35,255,33],[238,36,255,34,"daily_payment_enabled"],[238,57,255,55],[238,61,255,59],[238,66,255,64],[239,8,256,6,"daily_payment_amount"],[239,28,256,26],[239,30,256,28,"data"],[239,34,256,32],[239,35,256,33,"daily_payment_amount"],[239,55,256,53],[239,59,256,57],[239,62,256,60],[240,8,257,6,"rules"],[240,13,257,11],[240,15,257,13,"data"],[240,19,257,17],[240,20,257,18,"rules"],[240,25,257,23],[241,8,258,6,"invite_code"],[241,19,258,17],[241,21,258,19,"inviteCode"],[241,31,258,29],[242,8,258,31],[243,8,259,6,"invite_link"],[243,19,259,17],[243,21,259,19],[243,50,259,48,"inviteCode"],[243,60,259,58],[243,62,259,60],[244,8,260,6,"admin_id"],[244,16,260,14],[244,18,260,16],[244,44,260,42],[245,8,260,44],[246,8,261,6,"participants"],[246,20,261,18],[246,22,261,20],[246,23,262,8],[247,10,263,10,"id"],[247,12,263,12],[247,14,263,14],[247,40,263,40],[248,10,264,10,"name"],[248,14,264,14],[248,16,264,16],[248,33,264,33],[249,10,265,10,"email"],[249,15,265,15],[249,17,265,17],[249,36,265,36],[250,10,266,10,"is_admin"],[250,18,266,18],[250,20,266,20],[250,24,266,24],[251,10,267,10,"paid_matchdays"],[251,24,267,24],[251,26,267,26],[251,27,267,27],[251,28,267,28],[251,30,267,30],[251,31,267,31],[251,32,267,32],[252,10,267,34],[253,10,268,10,"points"],[253,16,268,16],[253,18,268,18],[254,8,269,8],[254,9,269,9],[254,10,270,7],[255,8,271,6,"wallet_balance"],[255,22,271,20],[255,24,271,22],[255,25,271,23],[256,8,272,6,"is_active"],[256,17,272,15],[256,19,272,17],[256,23,272,21],[257,8,273,6,"current_matchday"],[257,24,273,22],[257,26,273,24],[257,27,273,25],[258,8,273,27],[259,8,274,6,"standings"],[259,17,274,15],[259,19,274,17],[259,20,275,8],[260,10,275,10,"position"],[260,18,275,18],[260,20,275,20],[260,21,275,21],[261,10,275,23,"player_id"],[261,19,275,32],[261,21,275,34],[261,47,275,60],[262,10,275,62,"name"],[262,14,275,66],[262,16,275,68],[262,33,275,85],[263,10,275,87,"points"],[263,16,275,93],[263,18,275,95],[264,8,275,97],[264,9,275,98],[264,10,276,7],[265,8,277,6,"created_at"],[265,18,277,16],[265,20,277,18],[265,24,277,22,"Date"],[265,28,277,26],[265,29,277,27],[265,30,277,28],[265,31,277,29,"toISOString"],[265,42,277,40],[265,43,277,41],[265,44,277,42],[266,8,278,6,"updated_at"],[266,18,278,16],[266,20,278,18],[266,24,278,22,"Date"],[266,28,278,26],[266,29,278,27],[266,30,278,28],[266,31,278,29,"toISOString"],[266,42,278,40],[266,43,278,41],[267,6,279,4],[267,7,279,5],[269,6,281,4],[270,6,282,4,"existingCompetitions"],[270,26,282,24],[270,27,282,25,"push"],[270,31,282,29],[270,32,282,30,"newCompetition"],[270,46,282,44],[270,47,282,45],[271,6,283,4],[271,12,283,10,"CrossPlatformStorage"],[271,32,283,30],[271,33,283,30,"default"],[271,40,283,30],[271,41,283,31,"setItem"],[271,48,283,38],[271,49,283,39],[271,68,283,58],[271,70,283,60,"JSON"],[271,74,283,64],[271,75,283,65,"stringify"],[271,84,283,74],[271,85,283,75,"existingCompetitions"],[271,105,283,95],[271,106,283,96],[271,107,283,97],[272,6,285,4,"console"],[272,13,285,11],[272,14,285,12,"log"],[272,17,285,15],[272,18,285,16],[272,71,285,69],[272,73,285,71,"existingCompetitions"],[272,93,285,91],[272,94,285,92,"length"],[272,100,285,98],[272,101,285,99],[274,6,287,4],[275,6,288,4],[275,12,288,10,"logAdminAction"],[275,26,288,24],[275,27,288,25],[275,35,288,33],[275,37,288,35,"newCompetition"],[275,51,288,49],[275,52,288,50,"name"],[275,56,288,54],[275,58,288,56],[275,75,288,73],[275,77,288,75],[276,8,289,6,"competition_id"],[276,22,289,20],[276,24,289,22,"newCompetition"],[276,38,289,36],[276,39,289,37,"_id"],[276,42,289,40],[277,8,290,6,"rules"],[277,13,290,11],[277,15,290,13,"newCompetition"],[277,29,290,27],[277,30,290,28,"rules"],[277,35,290,33],[278,8,291,6,"total_matchdays"],[278,23,291,21],[278,25,291,23,"newCompetition"],[278,39,291,37],[278,40,291,38,"total_matchdays"],[278,55,291,53],[279,8,292,6,"participation_cost_per_team"],[279,35,292,33],[279,37,292,35,"newCompetition"],[279,51,292,49],[279,52,292,50,"participation_cost_per_team"],[279,79,292,77],[280,8,293,6,"expected_teams"],[280,22,293,20],[280,24,293,22,"newCompetition"],[280,38,293,36],[280,39,293,37,"expected_teams"],[280,53,293,51],[281,8,294,6,"total_prize_pool"],[281,24,294,22],[281,26,294,24,"newCompetition"],[281,40,294,38],[281,41,294,39,"total_prize_pool"],[281,57,294,55],[282,8,295,6,"daily_payment_enabled"],[282,29,295,27],[282,31,295,29,"newCompetition"],[282,45,295,43],[282,46,295,44,"daily_payment_enabled"],[282,67,295,65],[283,8,296,6,"daily_payment_amount"],[283,28,296,26],[283,30,296,28,"newCompetition"],[283,44,296,42],[283,45,296,43,"daily_payment_amount"],[284,6,297,4],[284,7,297,5],[284,8,297,6],[285,6,299,4,"console"],[285,13,299,11],[285,14,299,12,"log"],[285,17,299,15],[285,18,299,16],[285,47,299,45],[285,49,299,47,"newCompetition"],[285,63,299,61],[285,64,299,62,"name"],[285,68,299,66],[285,69,299,67],[286,6,300,4,"console"],[286,13,300,11],[286,14,300,12,"log"],[286,17,300,15],[286,18,300,16],[286,40,300,38],[286,42,300,40,"newCompetition"],[286,56,300,54],[286,57,300,55,"name"],[286,61,300,59],[286,62,300,60],[287,6,301,4,"console"],[287,13,301,11],[287,14,301,12,"log"],[287,17,301,15],[287,18,301,16],[287,37,301,35],[287,39,301,37,"newCompetition"],[287,53,301,51],[287,54,301,52,"daily_payment_enabled"],[287,75,301,73],[287,78,301,76],[287,82,301,80,"newCompetition"],[287,96,301,94],[287,97,301,95,"daily_payment_amount"],[287,117,301,115],[287,132,301,130],[287,135,301,133],[287,145,301,143],[287,146,301,144],[288,6,302,4,"console"],[288,13,302,11],[288,14,302,12,"log"],[288,17,302,15],[288,18,302,16],[288,40,302,38],[288,42,302,40],[288,46,302,44,"newCompetition"],[288,60,302,58],[288,61,302,59,"total_prize_pool"],[288,77,302,75],[288,79,302,77],[288,80,302,78],[289,6,303,4,"console"],[289,13,303,11],[289,14,303,12,"log"],[289,17,303,15],[289,18,303,16],[289,35,303,33],[289,37,303,35,"newCompetition"],[289,51,303,49],[289,52,303,50,"invite_code"],[289,63,303,61],[289,64,303,62],[290,6,305,4],[290,13,305,11],[291,8,305,13,"data"],[291,12,305,17],[291,14,305,19,"newCompetition"],[292,6,305,34],[292,7,305,35],[293,4,306,2],[293,5,306,3],[294,4,308,2],[295,4,309,2,"payMatchdaysMock"],[295,20,309,18],[295,22,309,20],[295,28,309,20,"payMatchdaysMock"],[295,29,309,27,"competitionId"],[295,42,309,48],[295,44,309,50,"matchdays"],[295,53,309,69],[295,58,309,74],[296,6,310,4,"console"],[296,13,310,11],[296,14,310,12,"log"],[296,17,310,15],[296,18,310,16],[296,49,310,47],[296,51,310,49,"matchdays"],[296,60,310,58],[296,62,310,60],[296,78,310,76],[296,80,310,78,"competitionId"],[296,93,310,91],[296,94,310,92],[298,6,312,4],[299,6,313,4],[299,12,313,10,"totalCost"],[299,21,313,19],[299,24,313,22,"matchdays"],[299,33,313,31],[299,34,313,32,"length"],[299,40,313,38],[299,43,313,41],[299,44,313,42],[299,45,313,43],[299,46,313,44],[301,6,315,4],[302,6,316,4],[302,13,316,11],[303,8,317,6,"data"],[303,12,317,10],[303,14,317,12],[304,10,318,8,"message"],[304,17,318,15],[304,19,318,17],[304,44,318,42,"matchdays"],[304,53,318,51],[304,54,318,52,"length"],[304,60,318,58],[304,72,318,70],[305,10,319,8,"paid_matchdays"],[305,24,319,22],[305,26,319,24,"matchdays"],[305,35,319,33],[306,10,320,8,"total_cost"],[306,20,320,18],[306,22,320,20,"totalCost"],[306,31,320,29],[307,10,321,8,"new_user_balance"],[307,26,321,24],[307,28,321,26],[307,31,321,29],[307,34,321,32,"totalCost"],[307,43,321,41],[307,44,321,42],[308,8,322,6],[309,6,323,4],[309,7,323,5],[310,4,324,2],[310,5,324,3],[311,4,326,2,"getMatchdayPaymentsMock"],[311,27,326,25],[311,29,326,27],[311,35,326,34,"competitionId"],[311,48,326,55],[311,52,326,60],[312,6,327,4,"console"],[312,13,327,11],[312,14,327,12,"log"],[312,17,327,15],[312,18,327,16],[312,70,327,68],[312,72,327,70,"competitionId"],[312,85,327,83],[312,86,327,84],[314,6,329,4],[315,6,330,4],[315,12,330,10,"mockPayments"],[315,24,330,22],[315,27,330,25],[315,29,330,27],[316,6,331,4],[316,11,331,9],[316,15,331,13,"i"],[316,16,331,14],[316,19,331,17],[316,20,331,18],[316,22,331,20,"i"],[316,23,331,21],[316,27,331,25],[316,29,331,27],[316,31,331,29,"i"],[316,32,331,30],[316,34,331,32],[316,36,331,34],[317,8,332,6,"mockPayments"],[317,20,332,18],[317,21,332,19,"push"],[317,25,332,23],[317,26,332,24],[318,10,333,8,"_id"],[318,13,333,11],[318,15,333,13],[318,26,333,24,"i"],[318,27,333,25],[318,29,333,27],[319,10,334,8,"user_id"],[319,17,334,15],[319,19,334,17],[319,45,334,43],[320,10,335,8,"competition_id"],[320,24,335,22],[320,26,335,24,"competitionId"],[320,39,335,37],[321,10,336,8,"matchday"],[321,18,336,16],[321,20,336,18,"i"],[321,21,336,19],[322,10,337,8,"amount"],[322,16,337,14],[322,18,337,16],[322,19,337,17],[323,10,338,8,"status"],[323,16,338,14],[323,18,338,16,"i"],[323,19,338,17],[323,23,338,21],[323,24,338,22],[323,27,338,25],[323,33,338,31],[323,36,338,34],[323,45,338,43],[324,10,339,8,"paid_at"],[324,17,339,15],[324,19,339,17,"i"],[324,20,339,18],[324,24,339,22],[324,25,339,23],[324,28,339,26],[324,32,339,30,"Date"],[324,36,339,34],[324,37,339,35],[324,38,339,36],[324,39,339,37,"toISOString"],[324,50,339,48],[324,51,339,49],[324,52,339,50],[324,55,339,53],[324,59,339,57],[325,10,340,8,"created_at"],[325,20,340,18],[325,22,340,20],[325,26,340,24,"Date"],[325,30,340,28],[325,31,340,29],[325,32,340,30],[325,33,340,31,"toISOString"],[325,44,340,42],[325,45,340,43],[326,8,341,6],[326,9,341,7],[326,10,341,8],[327,6,342,4],[328,6,344,4],[328,13,344,11],[329,8,345,6,"data"],[329,12,345,10],[329,14,345,12],[330,10,346,8,"competition_id"],[330,24,346,22],[330,26,346,24,"competitionId"],[330,39,346,37],[331,10,347,8,"daily_payment_enabled"],[331,31,347,29],[331,33,347,31],[331,37,347,35],[332,10,348,8,"daily_payment_amount"],[332,30,348,28],[332,32,348,30],[332,33,348,31],[333,10,349,8,"total_matchdays"],[333,25,349,23],[333,27,349,25],[333,29,349,27],[334,10,350,8,"payments"],[334,18,350,16],[334,20,350,18,"mockPayments"],[335,8,351,6],[336,6,352,4],[336,7,352,5],[337,4,353,2],[337,5,353,3],[338,4,355,2,"getPaymentStatusTableMock"],[338,29,355,27],[338,31,355,29],[338,37,355,36,"competitionId"],[338,50,355,57],[338,54,355,62],[339,6,356,4,"console"],[339,13,356,11],[339,14,356,12,"log"],[339,17,356,15],[339,18,356,16],[339,73,356,71],[339,75,356,73,"competitionId"],[339,88,356,86],[339,89,356,87],[341,6,358,4],[342,6,359,4],[342,12,359,10,"mockTable"],[342,21,359,19],[342,24,359,22],[342,25,359,23],[343,8,360,6,"user_id"],[343,15,360,13],[343,17,360,15],[343,43,360,41],[344,8,361,6,"username"],[344,16,361,14],[344,18,361,16],[344,35,361,33],[345,8,362,6,"name"],[345,12,362,10],[345,14,362,12],[345,31,362,29],[346,8,363,6,"email"],[346,13,363,11],[346,15,363,13],[346,34,363,32],[347,8,364,6,"matchday_payments"],[347,25,364,23],[347,27,364,25,"Array"],[347,32,364,30],[347,33,364,31,"from"],[347,37,364,35],[347,38,364,36],[348,10,364,37,"length"],[348,16,364,43],[348,18,364,45],[349,8,364,47],[349,9,364,48],[349,11,364,50],[349,12,364,51,"_"],[349,13,364,52],[349,15,364,54,"i"],[349,16,364,55],[349,22,364,61],[350,10,365,8,"matchday"],[350,18,365,16],[350,20,365,18,"i"],[350,21,365,19],[350,24,365,22],[350,25,365,23],[351,10,366,8,"status"],[351,16,366,14],[351,18,366,17,"i"],[351,19,366,18],[351,22,366,21],[351,23,366,22],[351,26,366,25],[351,32,366,31],[351,35,366,34],[351,44,366,44],[352,10,367,8,"amount"],[352,16,367,14],[352,18,367,16],[352,19,367,17],[353,10,368,8,"paid_at"],[353,17,368,15],[353,19,368,17,"i"],[353,20,368,18],[353,23,368,21],[353,24,368,22],[353,27,368,25],[353,31,368,29,"Date"],[353,35,368,33],[353,36,368,34],[353,37,368,35],[353,38,368,36,"toISOString"],[353,49,368,47],[353,50,368,48],[353,51,368,49],[353,54,368,52],[354,8,369,6],[354,9,369,7],[354,10,369,8],[355,6,370,4],[355,7,370,5],[355,8,370,6],[356,6,372,4],[356,13,372,11],[357,8,373,6,"data"],[357,12,373,10],[357,14,373,12],[358,10,374,8,"competition_name"],[358,26,374,24],[358,28,374,26],[358,49,374,47],[359,10,375,8,"total_matchdays"],[359,25,375,23],[359,27,375,25],[359,29,375,27],[360,10,376,8,"daily_payment_amount"],[360,30,376,28],[360,32,376,30],[360,33,376,31],[361,10,377,8,"participants"],[361,22,377,20],[361,24,377,22,"mockTable"],[362,8,378,6],[363,6,379,4],[363,7,379,5],[364,4,380,2],[364,5,380,3],[365,4,382,2],[366,4,383,2,"validateNameMock"],[366,20,383,18],[366,22,383,20],[366,28,383,27,"name"],[366,32,383,39],[366,36,383,44],[367,6,384,4,"console"],[367,13,384,11],[367,14,384,12,"log"],[367,17,384,15],[367,18,384,16],[367,57,384,55],[367,59,384,57,"name"],[367,63,384,61],[367,64,384,62],[368,6,386,4],[368,10,386,8],[368,11,386,9,"name"],[368,15,386,13],[368,16,386,14,"trim"],[368,20,386,18],[368,21,386,19],[368,22,386,20],[368,24,386,22],[369,8,387,6],[369,15,387,13],[370,10,387,15,"available"],[370,19,387,24],[370,21,387,26],[370,25,387,30],[371,10,387,32,"message"],[371,17,387,39],[371,19,387,41],[372,8,387,44],[372,9,387,45],[373,6,388,4],[375,6,390,4],[376,6,391,4],[376,12,391,10,"storedCompetitions"],[376,30,391,28],[376,33,391,31],[376,39,391,37,"CrossPlatformStorage"],[376,59,391,57],[376,60,391,57,"default"],[376,67,391,57],[376,68,391,58,"getItem"],[376,75,391,65],[376,76,391,66],[376,94,391,84],[376,95,391,85],[377,6,392,4],[377,10,392,8,"existingCompetitions"],[377,30,392,28],[377,33,392,31,"storedCompetitions"],[377,51,392,49],[377,54,392,52,"JSON"],[377,58,392,56],[377,59,392,57,"parse"],[377,64,392,62],[377,65,392,63,"storedCompetitions"],[377,83,392,81],[377,84,392,82],[377,87,392,85],[377,89,392,87],[379,6,394,4],[380,6,395,4],[380,12,395,10,"defaultNames"],[380,24,395,22],[380,27,395,25],[380,28,395,26],[380,50,395,48],[380,52,395,50],[380,78,395,76],[380,80,395,78],[380,96,395,94],[380,97,395,95],[381,6,396,4],[381,12,396,10,"allNames"],[381,20,396,18],[381,23,396,21],[381,24,397,6],[381,27,397,9,"existingCompetitions"],[381,47,397,29],[381,48,397,30,"map"],[381,51,397,33],[381,52,397,35,"comp"],[381,56,397,44],[381,60,397,49,"comp"],[381,64,397,53],[381,65,397,54,"name"],[381,69,397,58],[381,70,397,59,"toLowerCase"],[381,81,397,70],[381,82,397,71],[381,83,397,72],[381,84,397,73],[381,86,398,6],[381,89,398,9,"defaultNames"],[381,101,398,21],[381,102,398,22,"map"],[381,105,398,25],[381,106,398,26,"name"],[381,110,398,30],[381,114,398,34,"name"],[381,118,398,38],[381,119,398,39,"toLowerCase"],[381,130,398,50],[381,131,398,51],[381,132,398,52],[381,133,398,53],[381,134,399,5],[382,6,401,4],[382,12,401,10,"isAvailable"],[382,23,401,21],[382,26,401,24],[382,27,401,25,"allNames"],[382,35,401,33],[382,36,401,34,"includes"],[382,44,401,42],[382,45,401,43,"name"],[382,49,401,47],[382,50,401,48,"toLowerCase"],[382,61,401,59],[382,62,401,60],[382,63,401,61],[382,64,401,62],[383,6,403,4],[383,13,403,11],[384,8,404,6,"available"],[384,17,404,15],[384,19,404,17,"isAvailable"],[384,30,404,28],[385,8,405,6,"message"],[385,15,405,13],[385,17,405,15,"isAvailable"],[385,28,405,26],[385,31,405,29],[385,47,405,45],[385,50,405,48],[386,6,406,4],[386,7,406,5],[387,4,407,2],[387,5,407,3],[388,4,409,2],[389,4,410,2,"getMyCompetitionsMock"],[389,25,410,23],[389,27,410,25],[389,33,410,25,"getMyCompetitionsMock"],[389,34,410,25],[389,39,410,37],[390,6,411,4,"console"],[390,13,411,11],[390,14,411,12,"log"],[390,17,411,15],[390,18,411,16],[390,52,411,50],[390,53,411,51],[391,6,412,4],[391,12,412,10,"storedCompetitions"],[391,30,412,28],[391,33,412,31],[391,39,412,37,"CrossPlatformStorage"],[391,59,412,57],[391,60,412,57,"default"],[391,67,412,57],[391,68,412,58,"getItem"],[391,75,412,65],[391,76,412,66],[391,95,412,85],[391,96,412,86],[392,6,414,4],[392,10,414,8,"storedCompetitions"],[392,28,414,26],[392,30,414,28],[393,8,415,6],[393,14,415,12,"competitions"],[393,26,415,24],[393,29,415,27,"JSON"],[393,33,415,31],[393,34,415,32,"parse"],[393,39,415,37],[393,40,415,38,"storedCompetitions"],[393,58,415,56],[393,59,415,57],[394,8,416,6,"console"],[394,15,416,13],[394,16,416,14,"log"],[394,19,416,17],[394,20,416,18],[394,55,416,53],[394,57,416,55,"competitions"],[394,69,416,67],[394,70,416,68,"length"],[394,76,416,74],[394,77,416,75],[396,8,418,6],[397,8,419,6],[397,14,419,12,"enhancedCompetitions"],[397,34,419,32],[397,37,419,35,"competitions"],[397,49,419,47],[397,50,419,48,"map"],[397,53,419,51],[397,54,419,53,"comp"],[397,58,419,62],[397,62,419,67],[398,10,420,8],[398,14,420,12],[398,15,420,13,"comp"],[398,19,420,17],[398,20,420,18,"participants"],[398,32,420,30],[398,36,420,34,"comp"],[398,40,420,38],[398,41,420,39,"participants"],[398,53,420,51],[398,54,420,52,"length"],[398,60,420,58],[398,63,420,61],[398,64,420,62],[398,66,420,64],[399,12,421,10],[399,18,421,16,"demoParticipants"],[399,34,421,32],[399,37,421,35],[399,38,422,12],[400,14,423,14,"id"],[400,16,423,16],[400,18,423,18],[400,44,423,44],[401,14,424,14,"name"],[401,18,424,18],[401,20,424,20],[401,37,424,37],[402,14,425,14,"email"],[402,19,425,19],[402,21,425,21],[402,40,425,40],[403,14,426,14,"is_admin"],[403,22,426,22],[403,24,426,24],[403,28,426,28],[404,14,427,14,"paid_matchdays"],[404,28,427,28],[404,30,427,30],[404,31,427,31],[404,32,427,32],[404,34,427,34],[404,35,427,35],[404,37,427,37],[404,38,427,38],[404,39,427,39],[405,14,428,14,"points"],[405,20,428,20],[405,22,428,22],[406,12,429,12],[406,13,429,13],[406,15,430,12],[407,14,431,14,"id"],[407,16,431,16],[407,18,431,18],[407,36,431,36],[408,14,432,14,"name"],[408,18,432,18],[408,20,432,20],[408,33,432,33],[409,14,433,14,"email"],[409,19,433,19],[409,21,433,21],[409,44,433,44],[410,14,434,14,"is_admin"],[410,22,434,22],[410,24,434,24],[410,29,434,29],[411,14,435,14,"paid_matchdays"],[411,28,435,28],[411,30,435,30],[411,31,435,31],[411,32,435,32],[411,34,435,34],[411,35,435,35],[411,36,435,36],[412,14,436,14,"points"],[412,20,436,20],[412,22,436,22],[413,12,437,12],[413,13,437,13],[413,15,438,12],[414,14,439,14,"id"],[414,16,439,16],[414,18,439,18],[414,39,439,39],[415,14,440,14,"name"],[415,18,440,18],[415,20,440,20],[415,36,440,36],[416,14,441,14,"email"],[416,19,441,19],[416,21,441,21],[416,47,441,47],[417,14,442,14,"is_admin"],[417,22,442,22],[417,24,442,24],[417,29,442,29],[418,14,443,14,"paid_matchdays"],[418,28,443,28],[418,30,443,30],[418,31,443,31],[418,32,443,32],[418,33,443,33],[419,14,444,14,"points"],[419,20,444,20],[419,22,444,22],[420,12,445,12],[420,13,445,13],[420,15,446,12],[421,14,447,14,"id"],[421,16,447,16],[421,18,447,18],[421,37,447,37],[422,14,448,14,"name"],[422,18,448,18],[422,20,448,20],[422,34,448,34],[423,14,449,14,"email"],[423,19,449,19],[423,21,449,21],[423,45,449,45],[424,14,450,14,"is_admin"],[424,22,450,22],[424,24,450,24],[424,29,450,29],[425,14,451,14,"paid_matchdays"],[425,28,451,28],[425,30,451,30],[425,32,451,32],[426,14,452,14,"points"],[426,20,452,20],[426,22,452,22],[427,12,453,12],[427,13,453,13],[427,15,454,12],[428,14,455,14,"id"],[428,16,455,16],[428,18,455,18],[428,36,455,36],[429,14,456,14,"name"],[429,18,456,18],[429,20,456,20],[429,33,456,33],[430,14,457,14,"email"],[430,19,457,19],[430,21,457,21],[430,44,457,44],[431,14,458,14,"is_admin"],[431,22,458,22],[431,24,458,24],[431,29,458,29],[432,14,459,14,"paid_matchdays"],[432,28,459,28],[432,30,459,30],[432,31,459,31],[432,32,459,32],[432,34,459,34],[432,35,459,35],[432,37,459,37],[432,38,459,38],[432,39,459,39],[433,14,460,14,"points"],[433,20,460,20],[433,22,460,22],[434,12,461,12],[434,13,461,13],[434,14,462,11],[435,12,464,10],[435,19,464,17],[436,14,464,19],[436,17,464,22,"comp"],[436,21,464,26],[437,14,464,28,"participants"],[437,26,464,40],[437,28,464,42,"demoParticipants"],[438,12,464,59],[438,13,464,60],[439,10,465,8],[440,10,466,8],[440,17,466,15,"comp"],[440,21,466,19],[441,8,467,6],[441,9,467,7],[441,10,467,8],[443,8,469,6],[444,8,470,6],[444,14,470,12,"CrossPlatformStorage"],[444,34,470,32],[444,35,470,32,"default"],[444,42,470,32],[444,43,470,33,"setItem"],[444,50,470,40],[444,51,470,41],[444,70,470,60],[444,72,470,62,"JSON"],[444,76,470,66],[444,77,470,67,"stringify"],[444,86,470,76],[444,87,470,77,"enhancedCompetitions"],[444,107,470,97],[444,108,470,98],[444,109,470,99],[445,8,472,6,"enhancedCompetitions"],[445,28,472,26],[445,29,472,27,"forEach"],[445,36,472,34],[445,37,472,35],[445,38,472,36,"comp"],[445,42,472,45],[445,44,472,47,"index"],[445,49,472,60],[445,54,472,65],[446,10,473,8,"console"],[446,17,473,15],[446,18,473,16,"log"],[446,21,473,19],[446,22,473,20],[446,25,473,23,"index"],[446,30,473,28],[446,33,473,31],[446,34,473,32],[446,39,473,37,"comp"],[446,43,473,41],[446,44,473,42,"name"],[446,48,473,46],[446,57,473,55,"comp"],[446,61,473,59],[446,62,473,60,"_id"],[446,65,473,63],[446,72,473,70,"comp"],[446,76,473,74],[446,77,473,75,"participants"],[446,89,473,87],[446,91,473,89,"length"],[446,97,473,95],[446,101,473,99],[446,102,473,100],[446,117,473,115],[446,118,473,116],[447,8,474,6],[447,9,474,7],[447,10,474,8],[448,8,476,6],[448,15,476,13,"enhancedCompetitions"],[448,35,476,33],[449,6,477,4],[449,7,477,5],[449,13,477,11],[450,8,478,6,"console"],[450,15,478,13],[450,16,478,14,"log"],[450,19,478,17],[450,20,478,18],[450,80,478,78],[450,81,478,79],[451,8,479,6],[451,15,479,13],[451,17,479,15],[452,6,480,4],[453,4,481,2],[453,5,481,3],[454,4,483,2,"joinMock"],[454,12,483,10],[454,14,483,12],[454,20,483,19,"inviteCode"],[454,30,483,37],[454,34,483,42],[455,6,484,4,"console"],[455,13,484,11],[455,14,484,12,"log"],[455,17,484,15],[455,18,484,16],[455,59,484,57],[455,61,484,59,"inviteCode"],[455,71,484,69],[455,72,484,70],[456,6,485,4],[456,10,485,8,"inviteCode"],[456,20,485,18],[456,21,485,19,"length"],[456,27,485,25],[456,30,485,28],[456,31,485,29],[456,33,485,31],[457,8,486,6],[457,14,486,12],[457,18,486,16,"Error"],[457,23,486,21],[457,24,486,22],[457,45,486,43],[457,46,486,44],[458,6,487,4],[459,6,488,4],[459,13,488,11],[460,8,488,13,"message"],[460,15,488,20],[460,17,488,22],[461,6,488,57],[461,7,488,58],[462,4,489,2],[462,5,489,3],[463,4,491,2],[464,4,492,2,"deleteMock"],[464,14,492,12],[464,16,492,14],[464,22,492,21,"competitionId"],[464,35,492,42],[464,39,492,47],[465,6,493,4,"console"],[465,13,493,11],[465,14,493,12,"log"],[465,17,493,15],[465,18,493,16],[465,51,493,49],[465,53,493,51,"competitionId"],[465,66,493,64],[465,67,493,65],[466,6,495,4],[466,12,495,10,"storedCompetitions"],[466,30,495,28],[466,33,495,31],[466,39,495,37,"CrossPlatformStorage"],[466,59,495,57],[466,60,495,57,"default"],[466,67,495,57],[466,68,495,58,"getItem"],[466,75,495,65],[466,76,495,66],[466,94,495,84],[466,95,495,85],[467,6,496,4],[467,10,496,8,"competitions"],[467,22,496,20],[467,25,496,23,"storedCompetitions"],[467,43,496,41],[467,46,496,44,"JSON"],[467,50,496,48],[467,51,496,49,"parse"],[467,56,496,54],[467,57,496,55,"storedCompetitions"],[467,75,496,73],[467,76,496,74],[467,79,496,77],[467,81,496,79],[468,6,498,4],[468,12,498,10,"competitionToDelete"],[468,31,498,29],[468,34,498,32,"competitions"],[468,46,498,44],[468,47,498,45,"find"],[468,51,498,49],[468,52,498,51,"comp"],[468,56,498,60],[468,60,498,65,"comp"],[468,64,498,69],[468,65,498,70,"_id"],[468,68,498,73],[468,73,498,78,"competitionId"],[468,86,498,91],[468,87,498,92],[469,6,499,4],[469,10,499,8],[469,11,499,9,"competitionToDelete"],[469,30,499,28],[469,32,499,30],[470,8,500,6],[470,14,500,12],[470,18,500,16,"Error"],[470,23,500,21],[470,24,500,22],[470,47,500,45],[470,48,500,46],[471,6,501,4],[473,6,503,4],[474,6,504,4],[474,10,504,8,"competitionToDelete"],[474,29,504,27],[474,30,504,28,"admin_id"],[474,38,504,36],[474,43,504,41],[474,69,504,67],[474,71,504,69],[475,8,505,6],[475,14,505,12],[475,18,505,16,"Error"],[475,23,505,21],[475,24,505,22],[475,64,505,62],[475,65,505,63],[476,6,506,4],[478,6,508,4],[479,6,509,4,"competitions"],[479,18,509,16],[479,21,509,19,"competitions"],[479,33,509,31],[479,34,509,32,"filter"],[479,40,509,38],[479,41,509,40,"comp"],[479,45,509,49],[479,49,509,54,"comp"],[479,53,509,58],[479,54,509,59,"_id"],[479,57,509,62],[479,62,509,67,"competitionId"],[479,75,509,80],[479,76,509,81],[480,6,510,4],[480,12,510,10,"CrossPlatformStorage"],[480,32,510,30],[480,33,510,30,"default"],[480,40,510,30],[480,41,510,31,"setItem"],[480,48,510,38],[480,49,510,39],[480,67,510,57],[480,69,510,59,"JSON"],[480,73,510,63],[480,74,510,64,"stringify"],[480,83,510,73],[480,84,510,74,"competitions"],[480,96,510,86],[480,97,510,87],[480,98,510,88],[482,6,512,4],[483,6,513,4],[483,12,513,10,"logAdminAction"],[483,26,513,24],[483,27,513,25],[483,35,513,33],[483,37,513,35,"competitionToDelete"],[483,56,513,54],[483,57,513,55,"name"],[483,61,513,59],[483,63,513,61],[483,80,513,78],[483,81,513,79],[484,6,515,4,"console"],[484,13,515,11],[484,14,515,12,"log"],[484,17,515,15],[484,18,515,16],[484,54,515,52],[484,55,515,53],[485,6,516,4],[485,13,516,11],[486,8,516,13,"message"],[486,15,516,20],[486,17,516,22],[487,6,516,57],[487,7,516,58],[488,4,517,2],[488,5,517,3],[489,4,519,2],[490,4,520,2,"editMock"],[490,12,520,10],[490,14,520,12],[490,20,520,12,"editMock"],[490,21,520,19,"competitionId"],[490,34,520,40],[490,36,520,42,"updates"],[490,43,520,54],[490,48,520,59],[491,6,521,4,"console"],[491,13,521,11],[491,14,521,12,"log"],[491,17,521,15],[491,18,521,16],[491,49,521,47],[491,51,521,49,"competitionId"],[491,64,521,62],[491,66,521,64,"updates"],[491,73,521,71],[491,74,521,72],[492,6,523,4],[492,12,523,10,"storedCompetitions"],[492,30,523,28],[492,33,523,31],[492,39,523,37,"CrossPlatformStorage"],[492,59,523,57],[492,60,523,57,"default"],[492,67,523,57],[492,68,523,58,"getItem"],[492,75,523,65],[492,76,523,66],[492,94,523,84],[492,95,523,85],[493,6,524,4],[493,10,524,8,"competitions"],[493,22,524,20],[493,25,524,23,"storedCompetitions"],[493,43,524,41],[493,46,524,44,"JSON"],[493,50,524,48],[493,51,524,49,"parse"],[493,56,524,54],[493,57,524,55,"storedCompetitions"],[493,75,524,73],[493,76,524,74],[493,79,524,77],[493,81,524,79],[494,6,526,4],[494,12,526,10,"competitionIndex"],[494,28,526,26],[494,31,526,29,"competitions"],[494,43,526,41],[494,44,526,42,"findIndex"],[494,53,526,51],[494,54,526,53,"comp"],[494,58,526,62],[494,62,526,67,"comp"],[494,66,526,71],[494,67,526,72,"_id"],[494,70,526,75],[494,75,526,80,"competitionId"],[494,88,526,93],[494,89,526,94],[495,6,527,4],[495,10,527,8,"competitionIndex"],[495,26,527,24],[495,31,527,29],[495,32,527,30],[495,33,527,31],[495,35,527,33],[496,8,528,6],[496,14,528,12],[496,18,528,16,"Error"],[496,23,528,21],[496,24,528,22],[496,47,528,45],[496,48,528,46],[497,6,529,4],[498,6,531,4],[498,12,531,10,"competition"],[498,23,531,21],[498,26,531,24,"competitions"],[498,38,531,36],[498,39,531,37,"competitionIndex"],[498,55,531,53],[498,56,531,54],[500,6,533,4],[501,6,534,4],[501,10,534,8,"competition"],[501,21,534,19],[501,22,534,20,"admin_id"],[501,30,534,28],[501,35,534,33],[501,61,534,59],[501,63,534,61],[502,8,535,6],[502,14,535,12],[502,18,535,16,"Error"],[502,23,535,21],[502,24,535,22],[502,62,535,60],[502,63,535,61],[503,6,536,4],[505,6,538,4],[506,6,539,4,"competitions"],[506,18,539,16],[506,19,539,17,"competitionIndex"],[506,35,539,33],[506,36,539,34],[506,39,539,37],[507,8,540,6],[507,11,540,9,"competition"],[507,22,540,20],[508,8,541,6],[508,11,541,9,"updates"],[508,18,541,16],[509,8,542,6,"updated_at"],[509,18,542,16],[509,20,542,18],[509,24,542,22,"Date"],[509,28,542,26],[509,29,542,27],[509,30,542,28],[509,31,542,29,"toISOString"],[509,42,542,40],[509,43,542,41],[510,6,543,4],[510,7,543,5],[511,6,545,4],[511,12,545,10,"CrossPlatformStorage"],[511,32,545,30],[511,33,545,30,"default"],[511,40,545,30],[511,41,545,31,"setItem"],[511,48,545,38],[511,49,545,39],[511,67,545,57],[511,69,545,59,"JSON"],[511,73,545,63],[511,74,545,64,"stringify"],[511,83,545,73],[511,84,545,74,"competitions"],[511,96,545,86],[511,97,545,87],[511,98,545,88],[513,6,547,4],[514,6,548,4],[514,12,548,10,"logAdminAction"],[514,26,548,24],[514,27,548,25],[514,33,548,31],[514,35,548,33,"competition"],[514,46,548,44],[514,47,548,45,"name"],[514,51,548,49],[514,53,548,51],[514,70,548,68],[514,72,548,70,"updates"],[514,79,548,77],[514,80,548,78],[515,6,550,4,"console"],[515,13,550,11],[515,14,550,12,"log"],[515,17,550,15],[515,18,550,16],[515,54,550,52],[515,55,550,53],[516,6,551,4],[516,13,551,11,"competitions"],[516,25,551,23],[516,26,551,24,"competitionIndex"],[516,42,551,40],[516,43,551,41],[517,4,552,2],[517,5,552,3],[518,4,554,2],[519,4,555,2,"awardDailyPrizeMock"],[519,23,555,21],[519,25,555,23],[519,31,555,23,"awardDailyPrizeMock"],[519,32,555,30,"competitionId"],[519,45,555,51],[519,47,555,53,"matchday"],[519,55,555,69],[519,57,555,71,"winnerId"],[519,65,555,87],[519,70,555,92],[520,6,556,4,"console"],[520,13,556,11],[520,14,556,12,"log"],[520,17,556,15],[520,18,556,16],[520,62,556,60],[520,64,556,62,"matchday"],[520,72,556,70],[520,74,556,72],[520,83,556,81],[520,85,556,83,"winnerId"],[520,93,556,91],[520,94,556,92],[521,6,558,4],[521,12,558,10,"storedCompetitions"],[521,30,558,28],[521,33,558,31],[521,39,558,37,"CrossPlatformStorage"],[521,59,558,57],[521,60,558,57,"default"],[521,67,558,57],[521,68,558,58,"getItem"],[521,75,558,65],[521,76,558,66],[521,94,558,84],[521,95,558,85],[522,6,559,4],[522,10,559,8,"competitions"],[522,22,559,20],[522,25,559,23,"storedCompetitions"],[522,43,559,41],[522,46,559,44,"JSON"],[522,50,559,48],[522,51,559,49,"parse"],[522,56,559,54],[522,57,559,55,"storedCompetitions"],[522,75,559,73],[522,76,559,74],[522,79,559,77],[522,81,559,79],[523,6,561,4],[523,12,561,10,"competitionIndex"],[523,28,561,26],[523,31,561,29,"competitions"],[523,43,561,41],[523,44,561,42,"findIndex"],[523,53,561,51],[523,54,561,53,"comp"],[523,58,561,62],[523,62,561,67,"comp"],[523,66,561,71],[523,67,561,72,"_id"],[523,70,561,75],[523,75,561,80,"competitionId"],[523,88,561,93],[523,89,561,94],[524,6,562,4],[524,10,562,8,"competitionIndex"],[524,26,562,24],[524,31,562,29],[524,32,562,30],[524,33,562,31],[524,35,562,33],[525,8,563,6],[525,14,563,12],[525,18,563,16,"Error"],[525,23,563,21],[525,24,563,22],[525,47,563,45],[525,48,563,46],[526,6,564,4],[527,6,566,4],[527,12,566,10,"competition"],[527,23,566,21],[527,26,566,24,"competitions"],[527,38,566,36],[527,39,566,37,"competitionIndex"],[527,55,566,53],[527,56,566,54],[529,6,568,4],[530,6,569,4],[530,10,569,8,"competition"],[530,21,569,19],[530,22,569,20,"admin_id"],[530,30,569,28],[530,35,569,33],[530,61,569,59],[530,63,569,61],[531,8,570,6],[531,14,570,12],[531,18,570,16,"Error"],[531,23,570,21],[531,24,570,22],[531,59,570,57],[531,60,570,58],[532,6,571,4],[534,6,573,4],[535,6,574,4],[535,10,574,8],[535,11,574,9,"competition"],[535,22,574,20],[535,23,574,21,"rules"],[535,28,574,26],[535,32,574,30],[535,33,574,31],[535,34,574,32],[535,41,574,39],[535,43,574,41],[535,50,574,48],[535,51,574,49],[535,52,574,50,"includes"],[535,60,574,58],[535,61,574,59,"competition"],[535,72,574,70],[535,73,574,71,"rules"],[535,78,574,76],[535,79,574,77,"type"],[535,83,574,81],[535,84,574,82],[535,86,574,84],[536,8,575,6],[536,14,575,12],[536,18,575,16,"Error"],[536,23,575,21],[536,24,575,22],[536,69,575,67],[536,70,575,68],[537,6,576,4],[538,6,578,4],[538,12,578,10,"dailyPrizeAmount"],[538,28,578,26],[538,31,578,29,"competition"],[538,42,578,40],[538,43,578,41,"rules"],[538,48,578,46],[538,49,578,47,"daily_prize"],[538,60,578,58],[538,64,578,62],[538,65,578,63],[539,6,579,4],[539,12,579,10,"winner"],[539,18,579,16],[539,21,579,19,"competition"],[539,32,579,30],[539,33,579,31,"participants"],[539,45,579,43],[539,46,579,44,"find"],[539,50,579,48],[539,51,579,50,"p"],[539,52,579,56],[539,56,579,61,"p"],[539,57,579,62],[539,58,579,63,"id"],[539,60,579,65],[539,65,579,70,"winnerId"],[539,73,579,78],[539,74,579,79],[540,6,581,4],[540,10,581,8],[540,11,581,9,"winner"],[540,17,581,15],[540,19,581,17],[541,8,582,6],[541,14,582,12],[541,18,582,16,"Error"],[541,23,582,21],[541,24,582,22],[541,57,582,55],[541,58,582,56],[542,6,583,4],[544,6,585,4],[545,6,586,4],[545,10,586,8],[545,11,586,9,"competition"],[545,22,586,20],[545,23,586,21,"daily_winners"],[545,36,586,34],[545,38,586,36],[546,8,587,6,"competition"],[546,19,587,17],[546,20,587,18,"daily_winners"],[546,33,587,31],[546,36,587,34],[546,37,587,35],[546,38,587,36],[547,6,588,4],[549,6,590,4],[550,6,591,4],[550,10,591,8,"competition"],[550,21,591,19],[550,22,591,20,"daily_winners"],[550,35,591,33],[550,36,591,34,"matchday"],[550,44,591,42],[550,45,591,43],[550,47,591,45],[551,8,592,6],[551,14,592,12],[551,18,592,16,"Error"],[551,23,592,21],[551,24,592,22],[551,52,592,50,"matchday"],[551,60,592,58],[551,83,592,81,"competition"],[551,94,592,92],[551,95,592,93,"daily_winners"],[551,108,592,106],[551,109,592,107,"matchday"],[551,117,592,115],[551,118,592,116],[551,119,592,117,"name"],[551,123,592,121],[551,125,592,123],[551,126,592,124],[552,6,593,4],[554,6,595,4],[555,6,596,4,"competition"],[555,17,596,15],[555,18,596,16,"daily_winners"],[555,31,596,29],[555,32,596,30,"matchday"],[555,40,596,38],[555,41,596,39],[555,44,596,42],[556,8,597,6,"user_id"],[556,15,597,13],[556,17,597,15,"winnerId"],[556,25,597,23],[557,8,598,6,"name"],[557,12,598,10],[557,14,598,12,"winner"],[557,20,598,18],[557,21,598,19,"name"],[557,25,598,23],[558,8,599,6,"amount"],[558,14,599,12],[558,16,599,14,"dailyPrizeAmount"],[558,32,599,30],[559,8,600,6,"awarded_at"],[559,18,600,16],[559,20,600,18],[559,24,600,22,"Date"],[559,28,600,26],[559,29,600,27],[559,30,600,28],[559,31,600,29,"toISOString"],[559,42,600,40],[559,43,600,41],[560,6,601,4],[560,7,601,5],[562,6,603,4],[563,6,604,4,"competitions"],[563,18,604,16],[563,19,604,17,"competitionIndex"],[563,35,604,33],[563,36,604,34],[563,39,604,37,"competition"],[563,50,604,48],[564,6,605,4],[564,12,605,10,"CrossPlatformStorage"],[564,32,605,30],[564,33,605,30,"default"],[564,40,605,30],[564,41,605,31,"setItem"],[564,48,605,38],[564,49,605,39],[564,67,605,57],[564,69,605,59,"JSON"],[564,73,605,63],[564,74,605,64,"stringify"],[564,83,605,73],[564,84,605,74,"competitions"],[564,96,605,86],[564,97,605,87],[564,98,605,88],[566,6,607,4],[567,6,608,4],[567,12,608,10,"logAdminAction"],[567,26,608,24],[567,27,608,25],[567,46,608,44],[567,48,608,46,"competition"],[567,59,608,57],[567,60,608,58,"name"],[567,64,608,62],[567,66,608,64],[567,83,608,81],[567,85,608,83],[568,8,609,6,"matchday"],[568,16,609,14],[569,8,610,6,"winner"],[569,14,610,12],[569,16,610,14,"winner"],[569,22,610,20],[569,23,610,21,"name"],[569,27,610,25],[570,8,611,6,"amount"],[570,14,611,12],[570,16,611,14,"dailyPrizeAmount"],[571,6,612,4],[571,7,612,5],[571,8,612,6],[573,6,614,4],[574,6,615,4,"console"],[574,13,615,11],[574,14,615,12,"log"],[574,17,615,15],[574,18,615,16],[574,24,615,22,"winner"],[574,30,615,28],[574,31,615,29,"name"],[574,35,615,33],[574,48,615,46,"dailyPrizeAmount"],[574,64,615,62],[574,89,615,87,"matchday"],[574,97,615,95],[574,99,615,97],[574,100,615,98],[575,6,617,4,"console"],[575,13,617,11],[575,14,617,12,"log"],[575,17,617,15],[575,18,617,16],[575,54,617,52],[575,55,617,53],[576,6,618,4],[576,13,618,11],[577,8,619,6,"message"],[577,15,619,13],[577,17,619,15],[577,36,619,34,"dailyPrizeAmount"],[577,52,619,50],[577,67,619,65,"winner"],[577,73,619,71],[577,74,619,72,"name"],[577,78,619,76],[577,95,619,93,"matchday"],[577,103,619,101],[577,105,619,103],[578,8,620,6,"competition"],[578,19,620,17],[578,21,620,19,"competition"],[579,6,621,4],[579,7,621,5],[580,4,622,2],[580,5,622,3],[581,4,624,2],[582,4,625,2,"getAdminLogsMock"],[582,20,625,18],[582,22,625,20],[582,28,625,20,"getAdminLogsMock"],[582,29,625,20],[582,34,625,32],[583,6,626,4,"console"],[583,13,626,11],[583,14,626,12,"log"],[583,17,626,15],[583,18,626,16],[583,47,626,45],[583,48,626,46],[584,6,628,4],[584,10,628,8],[585,8,629,6],[585,14,629,12,"logs"],[585,18,629,16],[585,21,629,19],[585,28,629,25,"CrossPlatformStorage"],[585,48,629,45],[585,49,629,45,"default"],[585,56,629,45],[585,57,629,46,"getItem"],[585,64,629,53],[585,65,629,54],[585,76,629,65],[585,77,629,66],[585,82,629,70],[585,86,629,74],[586,8,630,6],[586,14,630,12,"adminLogs"],[586,23,630,21],[586,26,630,24,"JSON"],[586,30,630,28],[586,31,630,29,"parse"],[586,36,630,34],[586,37,630,35,"logs"],[586,41,630,39],[586,42,630,40],[588,8,632,6],[589,8,633,6,"adminLogs"],[589,17,633,15],[589,18,633,16,"sort"],[589,22,633,20],[589,23,633,21],[589,24,633,22,"a"],[589,25,633,28],[589,27,633,30,"b"],[589,28,633,36],[589,33,633,41],[589,37,633,45,"Date"],[589,41,633,49],[589,42,633,50,"b"],[589,43,633,51],[589,44,633,52,"timestamp"],[589,53,633,61],[589,54,633,62],[589,55,633,63,"getTime"],[589,62,633,70],[589,63,633,71],[589,64,633,72],[589,67,633,75],[589,71,633,79,"Date"],[589,75,633,83],[589,76,633,84,"a"],[589,77,633,85],[589,78,633,86,"timestamp"],[589,87,633,95],[589,88,633,96],[589,89,633,97,"getTime"],[589,96,633,104],[589,97,633,105],[589,98,633,106],[589,99,633,107],[590,8,635,6,"console"],[590,15,635,13],[590,16,635,14,"log"],[590,19,635,17],[590,20,635,18],[590,42,635,40],[590,44,635,42,"adminLogs"],[590,53,635,51],[590,54,635,52,"length"],[590,60,635,58],[590,61,635,59],[591,8,636,6],[591,15,636,13,"adminLogs"],[591,24,636,22],[592,6,637,4],[592,7,637,5],[592,8,637,6],[592,15,637,13,"error"],[592,20,637,18],[592,22,637,20],[593,8,638,6,"console"],[593,15,638,13],[593,16,638,14,"error"],[593,21,638,19],[593,22,638,20],[593,52,638,50],[593,54,638,52,"error"],[593,59,638,57],[593,60,638,58],[594,8,639,6],[594,15,639,13],[594,17,639,15],[595,6,640,4],[596,4,641,2],[596,5,641,3],[597,4,643,2],[598,4,644,2,"getAllCompetitions"],[598,22,644,20],[598,24,644,22],[598,30,644,22,"getAllCompetitions"],[598,31,644,22],[598,36,644,34],[599,6,645,4,"console"],[599,13,645,11],[599,14,645,12,"log"],[599,17,645,15],[599,18,645,16],[599,68,645,66],[599,69,645,67],[600,6,647,4],[600,10,647,8],[601,8,648,6],[602,8,649,6],[602,14,649,12,"storedCompetitions"],[602,32,649,30],[602,35,649,33],[602,41,649,39,"CrossPlatformStorage"],[602,61,649,59],[602,62,649,59,"default"],[602,69,649,59],[602,70,649,60,"getItem"],[602,77,649,67],[602,78,649,68],[602,97,649,87],[602,98,649,88],[603,8,650,6],[603,12,650,10,"competitions"],[603,24,650,22],[603,27,650,25,"storedCompetitions"],[603,45,650,43],[603,48,650,46,"JSON"],[603,52,650,50],[603,53,650,51,"parse"],[603,58,650,56],[603,59,650,57,"storedCompetitions"],[603,77,650,75],[603,78,650,76],[603,81,650,79],[603,83,650,81],[605,8,652,6],[606,8,653,6],[606,14,653,12,"oldStoredCompetitions"],[606,35,653,33],[606,38,653,36],[606,44,653,42,"CrossPlatformStorage"],[606,64,653,62],[606,65,653,62,"default"],[606,72,653,62],[606,73,653,63,"getItem"],[606,80,653,70],[606,81,653,71],[606,99,653,89],[606,100,653,90],[607,8,654,6],[607,14,654,12,"oldCompetitions"],[607,29,654,27],[607,32,654,30,"oldStoredCompetitions"],[607,53,654,51],[607,56,654,54,"JSON"],[607,60,654,58],[607,61,654,59,"parse"],[607,66,654,64],[607,67,654,65,"oldStoredCompetitions"],[607,88,654,86],[607,89,654,87],[607,92,654,90],[607,94,654,92],[609,8,656,6],[610,8,657,6],[610,14,657,12,"allCompetitions"],[610,29,657,27],[610,32,657,30],[610,33,657,31],[610,36,657,34,"competitions"],[610,48,657,46],[610,50,657,48],[610,53,657,51,"oldCompetitions"],[610,68,657,66],[610,69,657,67],[611,8,658,6],[611,14,658,12,"uniqueCompetitions"],[611,32,658,30],[611,35,658,33,"allCompetitions"],[611,50,658,48],[611,51,658,49,"filter"],[611,57,658,55],[611,58,658,56],[611,59,658,57,"comp"],[611,63,658,61],[611,65,658,63,"index"],[611,70,658,68],[611,72,658,70,"self"],[611,76,658,74],[611,81,659,8,"index"],[611,86,659,13],[611,91,659,18,"self"],[611,95,659,22],[611,96,659,23,"findIndex"],[611,105,659,32],[611,106,659,33,"c"],[611,107,659,34],[611,111,659,38,"c"],[611,112,659,39],[611,113,659,40,"_id"],[611,116,659,43],[611,121,659,48,"comp"],[611,125,659,52],[611,126,659,53,"_id"],[611,129,659,56],[611,130,660,6],[611,131,660,7],[612,8,662,6,"console"],[612,15,662,13],[612,16,662,14,"log"],[612,19,662,17],[612,20,662,18],[612,57,662,55],[612,59,662,57,"uniqueCompetitions"],[612,77,662,75],[612,78,662,76,"length"],[612,84,662,82],[612,85,662,83],[613,8,663,6],[613,15,663,13,"uniqueCompetitions"],[613,33,663,31],[614,6,665,4],[614,7,665,5],[614,8,665,6],[614,15,665,13,"error"],[614,20,665,18],[614,22,665,20],[615,8,666,6,"console"],[615,15,666,13],[615,16,666,14,"error"],[615,21,666,19],[615,22,666,20],[615,58,666,56],[615,60,666,58,"error"],[615,65,666,63],[615,66,666,64],[616,8,667,6],[616,15,667,13],[616,17,667,15],[617,6,668,4],[618,4,669,2],[619,2,670,0],[619,3,670,1],[621,2,672,0],[622,2,673,7],[622,8,673,13,"walletAPI"],[622,17,673,22],[622,20,673,25],[623,4,674,2,"getBalance"],[623,14,674,12],[623,16,674,14,"getBalance"],[623,17,674,14],[623,22,674,20,"apiClient"],[623,31,674,29],[623,32,674,30,"get"],[623,35,674,33],[623,36,674,34],[623,53,674,51],[623,54,674,52],[624,4,676,2,"topUp"],[624,9,676,7],[624,11,676,10,"amount"],[624,17,676,24],[624,21,677,4,"apiClient"],[624,30,677,13],[624,31,677,14,"post"],[624,35,677,18],[624,36,677,19],[624,51,677,34],[624,53,677,36],[624,57,677,40],[624,59,677,42],[625,6,678,6,"params"],[625,12,678,12],[625,14,678,14],[626,8,678,16,"amount"],[627,6,678,23],[628,4,679,4],[628,5,679,5],[628,6,679,6],[629,4,681,2,"withdraw"],[629,12,681,10],[629,14,681,13,"amount"],[629,20,681,27],[629,24,682,4,"apiClient"],[629,33,682,13],[629,34,682,14,"post"],[629,38,682,18],[629,39,682,19],[629,57,682,37],[629,59,682,39],[629,63,682,43],[629,65,682,45],[630,6,683,6,"params"],[630,12,683,12],[630,14,683,14],[631,8,683,16,"amount"],[632,6,683,23],[633,4,684,4],[633,5,684,5],[633,6,684,6],[634,4,686,2,"getTransactions"],[634,19,686,17],[634,21,686,19,"getTransactions"],[634,22,686,19],[634,27,686,25,"apiClient"],[634,36,686,34],[634,37,686,35,"get"],[634,40,686,38],[634,41,686,39],[634,56,686,54],[635,2,687,0],[635,3,687,1],[637,2,689,0],[638,2,690,7],[638,8,690,13,"databaseAPI"],[638,19,690,24],[638,22,690,27],[639,4,691,2,"resetDatabase"],[639,17,691,15],[639,19,691,17],[639,25,691,17,"resetDatabase"],[639,26,691,17],[639,31,691,29],[640,6,692,4,"console"],[640,13,692,11],[640,14,692,12,"log"],[640,17,692,15],[640,18,692,16],[640,69,692,67],[640,70,692,68],[641,6,694,4],[641,10,694,8],[642,8,695,6],[642,14,695,12,"CrossPlatformStorage"],[642,34,695,32],[642,35,695,32,"default"],[642,42,695,32],[642,43,695,33,"removeItem"],[642,53,695,43],[642,54,695,44],[642,73,695,63],[642,74,695,64],[643,8,696,6],[643,14,696,12,"CrossPlatformStorage"],[643,34,696,32],[643,35,696,32,"default"],[643,42,696,32],[643,43,696,33,"removeItem"],[643,53,696,43],[643,54,696,44],[643,71,696,61],[643,72,696,62],[644,8,697,6],[644,14,697,12,"CrossPlatformStorage"],[644,34,697,32],[644,35,697,32,"default"],[644,42,697,32],[644,43,697,33,"removeItem"],[644,53,697,43],[644,54,697,44],[644,95,697,85],[644,96,697,86],[645,8,698,6],[645,14,698,12,"CrossPlatformStorage"],[645,34,698,32],[645,35,698,32,"default"],[645,42,698,32],[645,43,698,33,"removeItem"],[645,53,698,43],[645,54,698,44],[645,93,698,83],[645,94,698,84],[646,8,700,6,"console"],[646,15,700,13],[646,16,700,14,"log"],[646,19,700,17],[646,20,700,18],[646,66,700,64],[646,67,700,65],[647,8,701,6],[647,15,701,13],[648,10,701,15,"success"],[648,17,701,22],[648,19,701,24],[648,23,701,28],[649,10,701,30,"message"],[649,17,701,37],[649,19,701,39],[650,8,701,65],[650,9,701,66],[651,6,702,4],[651,7,702,5],[651,8,702,6],[651,15,702,13,"error"],[651,20,702,18],[651,22,702,20],[652,8,703,6,"console"],[652,15,703,13],[652,16,703,14,"error"],[652,21,703,19],[652,22,703,20],[652,48,703,46],[652,50,703,48,"error"],[652,55,703,53],[652,56,703,54],[653,8,704,6],[653,15,704,13],[654,10,704,15,"success"],[654,17,704,22],[654,19,704,24],[654,24,704,29],[655,10,704,31,"message"],[655,17,704,38],[655,19,704,40],[656,8,704,55],[656,9,704,56],[657,6,705,4],[658,4,706,2],[659,2,707,0],[659,3,707,1],[660,2,709,0],[660,6,709,0,"_default"],[660,14,709,0],[660,17,709,15,"apiClient"],[660,26,709,24],[661,0,709,25],[661,3]],"functionMap":{"names":["<global>","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","generateRandomCode","existingCompetitions.some$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.map$argument_0","enhancedCompetitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","competitionAPI.getAllCompetitions","allCompetitions.filter$argument_0","self.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACQ;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CDC;iBWM;MXG;UYE;4CZM;aaE;4CbC;ScE;uCdC;aeE;iDfC;kBgBE,+BhB;UiBE,oCjB;kBkBE;MlBG;mBmBE;MnBG;uBoBI;CpBqB;UqBI;6CrBe;QsBE;qEtBC;qBuBE,uCvB;kBwBE,oDxB;mByBE;MzBQ;U0BE;M1BG;mB2BE;qD3BC;gB4BG;M5BI;uB6BE;qE7BC;yB8BE;wE9BC;c+BG;mDCwB,sCD;+BEO;KFO;qCGI,8CH;G/BiE;oBmCG;GnCe;2BoCE;GpC2B;6BqCE;kDCS;QDK;GrCW;oBuCG;kCPc,sCO;0BCC,0BD;GvCS;yByCG;oDCS;ODgD;mCEK;OFE;GzCO;Y4CE;G5CM;c6CG;kDCM,yCD;uCEW,yCF;G7CQ;YgDG;oDCM,yCD;GhD0B;uBkDG;oDDM,yCC;iDCkB,6BD;GlD2C;oBoDG;qBCQ,qFD;GpDQ;sBsDG;wDCc;iCCC,uBD,CD;GtDU;cyDK,sCzD;S0DE;M1DG;Y2DE;M3DG;mB4DE,oC5D;iB6DK;G7De"},"hasCjsExports":false},"type":"js/module"}]}