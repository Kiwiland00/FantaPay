{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fintech-fantapay.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n      console.log('✅ Competition created and saved! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = Object.assign({}, competition, updates, {\n        updated_at: new Date().toISOString()\n      });\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":458,"map":[[27,2,484,0,"Object"],[27,8,484,0],[27,9,484,0,"defineProperty"],[27,23,484,0],[27,24,484,0,"exports"],[27,31,484,0],[28,4,484,0,"enumerable"],[28,14,484,0],[29,4,484,0,"get"],[29,7,484,0],[29,18,484,0,"get"],[29,19,484,0],[30,6,484,0],[30,13,484,0,"_default"],[30,21,484,0],[31,4,484,0],[32,2,484,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,468,0,"Object"],[45,8,468,0],[45,9,468,0,"defineProperty"],[45,23,468,0],[45,24,468,0,"exports"],[45,31,468,0],[46,4,468,0,"enumerable"],[46,14,468,0],[47,4,468,0,"get"],[47,7,468,0],[47,18,468,0,"get"],[47,19,468,0],[48,6,468,0],[48,13,468,0,"walletAPI"],[48,22,468,0],[49,4,468,0],[50,2,468,0],[51,2,482,2],[51,6,482,2,"_expoVirtualEnv"],[51,21,482,2],[51,24,482,2,"require"],[51,31,482,2],[51,32,482,2,"_dependencyMap"],[51,46,482,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,172,45,154],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,0],[182,8,156,6,"logAdminAction"],[182,22,156,20],[182,25,156,23],[182,31,156,23,"logAdminAction"],[182,32,156,30,"action"],[182,38,156,44],[182,40,156,46,"competitionName"],[182,55,156,69],[182,57,156,71,"adminName"],[182,66,156,88],[182,68,156,90,"details"],[182,75,156,103],[182,80,156,108],[183,4,157,2],[183,8,157,6],[184,6,158,4],[184,12,158,10,"logs"],[184,16,158,14],[184,19,158,17],[184,26,158,23,"CrossPlatformStorage"],[184,46,158,43],[184,47,158,44,"getItem"],[184,54,158,51],[184,55,158,52],[184,66,158,63],[184,67,158,64],[184,72,158,68],[184,76,158,72],[185,6,159,4],[185,12,159,10,"adminLogs"],[185,21,159,19],[185,24,159,22,"JSON"],[185,28,159,26],[185,29,159,27,"parse"],[185,34,159,32],[185,35,159,33,"logs"],[185,39,159,37],[185,40,159,38],[186,6,161,4],[186,12,161,10,"logEntry"],[186,20,161,18],[186,23,161,21],[187,8,162,6,"id"],[187,10,162,8],[187,12,162,10],[187,19,162,17,"Date"],[187,23,162,21],[187,24,162,22,"now"],[187,27,162,25],[187,28,162,26],[187,29,162,27],[187,31,162,29],[188,8,163,6,"action"],[188,14,163,12],[189,8,164,6,"competition_name"],[189,24,164,22],[189,26,164,24,"competitionName"],[189,41,164,39],[190,8,165,6,"admin_name"],[190,18,165,16],[190,20,165,18,"adminName"],[190,29,165,27],[191,8,166,6,"details"],[191,15,166,13],[192,8,167,6,"timestamp"],[192,17,167,15],[192,19,167,17],[192,23,167,21,"Date"],[192,27,167,25],[192,28,167,26],[192,29,167,27],[192,30,167,28,"toISOString"],[192,41,167,39],[192,42,167,40],[193,6,168,4],[193,7,168,5],[194,6,170,4,"adminLogs"],[194,15,170,13],[194,16,170,14,"push"],[194,20,170,18],[194,21,170,19,"logEntry"],[194,29,170,27],[194,30,170,28],[195,6,171,4],[195,12,171,10,"CrossPlatformStorage"],[195,32,171,30],[195,33,171,31,"setItem"],[195,40,171,38],[195,41,171,39],[195,52,171,50],[195,54,171,52,"JSON"],[195,58,171,56],[195,59,171,57,"stringify"],[195,68,171,66],[195,69,171,67,"adminLogs"],[195,78,171,76],[195,79,171,77],[195,80,171,78],[196,6,173,4,"console"],[196,13,173,11],[196,14,173,12,"log"],[196,17,173,15],[196,18,173,16],[196,43,173,41],[196,45,173,43,"action"],[196,51,173,49],[196,53,173,51,"competitionName"],[196,68,173,66],[196,69,173,67],[197,4,174,2],[197,5,174,3],[197,6,174,4],[197,13,174,11,"error"],[197,18,174,16],[197,20,174,18],[198,6,175,4,"console"],[198,13,175,11],[198,14,175,12,"error"],[198,19,175,17],[198,20,175,18],[198,49,175,47],[198,51,175,49,"error"],[198,56,175,54],[198,57,175,55],[199,4,176,2],[200,2,177,0],[200,3,177,1],[202,2,179,0],[203,2,180,7],[203,8,180,13,"competitionAPI"],[203,22,180,27],[203,25,180,30],[204,4,181,2,"create"],[204,10,181,8],[204,12,181,11,"data"],[204,16,188,3],[204,20,188,8,"apiClient"],[204,29,188,17],[204,30,188,18,"post"],[204,34,188,22],[204,35,188,23],[204,50,188,38],[204,52,188,40,"data"],[204,56,188,44],[204,57,188,45],[205,4,190,2,"join"],[205,8,190,6],[205,10,190,9,"inviteCode"],[205,20,190,27],[205,24,191,4,"apiClient"],[205,33,191,13],[205,34,191,14,"post"],[205,38,191,18],[205,39,191,19],[205,59,191,39],[205,61,191,41],[206,6,191,43,"invite_code"],[206,17,191,54],[206,19,191,56,"inviteCode"],[207,4,191,67],[207,5,191,68],[207,6,191,69],[208,4,193,2,"getMyCompetitions"],[208,21,193,19],[208,23,193,21,"getMyCompetitions"],[208,24,193,21],[208,29,193,27,"apiClient"],[208,38,193,36],[208,39,193,37,"get"],[208,42,193,40],[208,43,193,41],[208,61,193,59],[208,62,193,60],[209,4,195,2,"getCompetition"],[209,18,195,16],[209,20,195,19,"id"],[209,22,195,29],[209,26,195,34,"apiClient"],[209,35,195,43],[209,36,195,44,"get"],[209,39,195,47],[209,40,195,48],[209,57,195,65,"id"],[209,59,195,67],[209,61,195,69],[209,62,195,70],[210,4,197,2,"updateStandings"],[210,19,197,17],[210,21,197,19,"updateStandings"],[210,22,198,4,"id"],[210,24,198,14],[210,26,199,4,"standings"],[210,35,199,18],[210,37,200,4,"matchday"],[210,45,200,21],[210,50,202,4,"apiClient"],[210,59,202,13],[210,60,202,14,"patch"],[210,65,202,19],[210,66,202,20],[210,83,202,37,"id"],[210,85,202,39],[210,97,202,51],[210,99,202,53],[211,6,203,6,"standings"],[211,15,203,15],[212,6,204,6,"matchday"],[213,4,205,4],[213,5,205,5],[213,6,205,6],[214,4,207,2,"payFee"],[214,10,207,8],[214,12,207,10,"payFee"],[214,13,207,11,"id"],[214,15,207,21],[214,17,207,23,"amount"],[214,23,207,37],[214,28,208,4,"apiClient"],[214,37,208,13],[214,38,208,14,"post"],[214,42,208,18],[214,43,208,19],[214,60,208,36,"id"],[214,62,208,38],[214,68,208,44],[214,70,208,46],[214,74,208,50],[214,76,208,52],[215,6,209,6,"params"],[215,12,209,12],[215,14,209,14],[216,8,209,16,"amount"],[217,6,209,23],[218,4,210,4],[218,5,210,5],[218,6,210,6],[219,4,212,2,"getTransactions"],[219,19,212,17],[219,21,212,20,"id"],[219,23,212,30],[219,27,213,4,"apiClient"],[219,36,213,13],[219,37,213,14,"get"],[219,40,213,17],[219,41,213,18],[219,58,213,35,"id"],[219,60,213,37],[219,75,213,52],[219,76,213,53],[220,4,215,2],[221,4,216,2,"createMock"],[221,14,216,12],[221,16,216,14],[221,22,216,21,"data"],[221,26,224,3],[221,30,224,8],[222,6,225,4,"console"],[222,13,225,11],[222,14,225,12,"log"],[222,17,225,15],[222,18,225,16],[222,50,225,48],[222,52,225,50,"data"],[222,56,225,54],[222,57,225,55,"name"],[222,61,225,59],[222,62,225,60],[223,6,226,4,"console"],[223,13,226,11],[223,14,226,12,"log"],[223,17,226,15],[223,18,226,16],[223,39,226,37],[223,41,226,39,"data"],[223,45,226,43],[223,46,226,44,"total_matchdays"],[223,61,226,59],[223,65,226,63],[223,67,226,65],[223,68,226,66],[225,6,228,4],[226,6,229,4],[226,12,229,10,"storedCompetitions"],[226,30,229,28],[226,33,229,31],[226,39,229,37,"CrossPlatformStorage"],[226,59,229,57],[226,60,229,58,"getItem"],[226,67,229,65],[226,68,229,66],[226,86,229,84],[226,87,229,85],[227,6,230,4],[227,10,230,8,"existingCompetitions"],[227,30,230,28],[227,33,230,31,"storedCompetitions"],[227,51,230,49],[227,54,230,52,"JSON"],[227,58,230,56],[227,59,230,57,"parse"],[227,64,230,62],[227,65,230,63,"storedCompetitions"],[227,83,230,81],[227,84,230,82],[227,87,230,85],[227,89,230,87],[228,6,232,4,"console"],[228,13,232,11],[228,14,232,12,"log"],[228,17,232,15],[228,18,232,16],[228,60,232,58],[228,62,232,60,"existingCompetitions"],[228,82,232,80],[228,83,232,81,"length"],[228,89,232,87],[228,90,232,88],[230,6,234,4],[231,6,235,4],[231,12,235,10,"existingNames"],[231,25,235,23],[231,28,235,26,"existingCompetitions"],[231,48,235,46],[231,49,235,47,"map"],[231,52,235,50],[231,53,235,52,"comp"],[231,57,235,61],[231,61,235,66,"comp"],[231,65,235,70],[231,66,235,71,"name"],[231,70,235,75],[231,71,235,76,"toLowerCase"],[231,82,235,87],[231,83,235,88],[231,84,235,89],[231,85,235,90],[232,6,236,4],[232,10,236,8,"existingNames"],[232,23,236,21],[232,24,236,22,"includes"],[232,32,236,30],[232,33,236,31,"data"],[232,37,236,35],[232,38,236,36,"name"],[232,42,236,40],[232,43,236,41,"toLowerCase"],[232,54,236,52],[232,55,236,53],[232,56,236,54],[232,57,236,55],[232,59,236,57],[233,8,237,6],[233,14,237,12],[233,18,237,16,"Error"],[233,23,237,21],[233,24,237,22],[233,86,237,84],[233,87,237,85],[234,6,238,4],[236,6,240,4],[237,6,241,4],[237,12,241,10,"newCompetition"],[237,26,241,24],[237,29,241,27],[238,8,242,6,"_id"],[238,11,242,9],[238,13,242,11],[238,21,242,19,"Date"],[238,25,242,23],[238,26,242,24,"now"],[238,29,242,27],[238,30,242,28],[238,31,242,29],[238,33,242,31],[239,8,243,6,"name"],[239,12,243,10],[239,14,243,12,"data"],[239,18,243,16],[239,19,243,17,"name"],[239,23,243,21],[240,8,244,6,"total_matchdays"],[240,23,244,21],[240,25,244,23,"data"],[240,29,244,27],[240,30,244,28,"total_matchdays"],[240,45,244,43],[240,49,244,47],[240,51,244,49],[241,8,245,6,"rules"],[241,13,245,11],[241,15,245,13,"data"],[241,19,245,17],[241,20,245,18,"rules"],[241,25,245,23],[242,8,246,6,"invite_code"],[242,19,246,17],[242,21,246,19,"Math"],[242,25,246,23],[242,26,246,24,"random"],[242,32,246,30],[242,33,246,31],[242,34,246,32],[242,35,246,33,"toString"],[242,43,246,41],[242,44,246,42],[242,46,246,44],[242,47,246,45],[242,48,246,46,"substr"],[242,54,246,52],[242,55,246,53],[242,56,246,54],[242,58,246,56],[242,59,246,57],[242,60,246,58],[242,61,246,59,"toUpperCase"],[242,72,246,70],[242,73,246,71],[242,74,246,72],[243,8,247,6,"invite_link"],[243,19,247,17],[243,21,247,19],[243,50,247,48,"Math"],[243,54,247,52],[243,55,247,53,"random"],[243,61,247,59],[243,62,247,60],[243,63,247,61],[243,64,247,62,"toString"],[243,72,247,70],[243,73,247,71],[243,75,247,73],[243,76,247,74],[243,77,247,75,"substr"],[243,83,247,81],[243,84,247,82],[243,85,247,83],[243,87,247,85],[243,88,247,86],[243,89,247,87],[243,90,247,88,"toUpperCase"],[243,101,247,99],[243,102,247,100],[243,103,247,101],[243,105,247,103],[244,8,248,6,"admin_id"],[244,16,248,14],[244,18,248,16],[244,44,248,42],[245,8,248,44],[246,8,249,6,"participants"],[246,20,249,18],[246,22,249,20],[246,23,250,8],[247,10,251,10,"id"],[247,12,251,12],[247,14,251,14],[247,40,251,40],[248,10,252,10,"name"],[248,14,252,14],[248,16,252,16],[248,33,252,33],[249,10,253,10,"email"],[249,15,253,15],[249,17,253,17],[249,36,253,36],[250,10,254,10,"is_admin"],[250,18,254,18],[250,20,254,20],[250,24,254,24],[251,10,255,10,"paid_matchdays"],[251,24,255,24],[251,26,255,26],[251,27,255,27],[251,28,255,28],[251,30,255,30],[251,31,255,31],[251,32,255,32],[252,10,255,34],[253,10,256,10,"points"],[253,16,256,16],[253,18,256,18],[254,8,257,8],[254,9,257,9],[254,10,258,7],[255,8,259,6,"wallet_balance"],[255,22,259,20],[255,24,259,22],[255,25,259,23],[256,8,260,6,"is_active"],[256,17,260,15],[256,19,260,17],[256,23,260,21],[257,8,261,6,"current_matchday"],[257,24,261,22],[257,26,261,24],[257,27,261,25],[258,8,261,27],[259,8,262,6,"standings"],[259,17,262,15],[259,19,262,17],[259,20,263,8],[260,10,263,10,"position"],[260,18,263,18],[260,20,263,20],[260,21,263,21],[261,10,263,23,"player_id"],[261,19,263,32],[261,21,263,34],[261,47,263,60],[262,10,263,62,"name"],[262,14,263,66],[262,16,263,68],[262,33,263,85],[263,10,263,87,"points"],[263,16,263,93],[263,18,263,95],[264,8,263,97],[264,9,263,98],[264,10,264,7],[265,8,265,6,"created_at"],[265,18,265,16],[265,20,265,18],[265,24,265,22,"Date"],[265,28,265,26],[265,29,265,27],[265,30,265,28],[265,31,265,29,"toISOString"],[265,42,265,40],[265,43,265,41],[265,44,265,42],[266,8,266,6,"updated_at"],[266,18,266,16],[266,20,266,18],[266,24,266,22,"Date"],[266,28,266,26],[266,29,266,27],[266,30,266,28],[266,31,266,29,"toISOString"],[266,42,266,40],[266,43,266,41],[267,6,267,4],[267,7,267,5],[269,6,269,4],[270,6,270,4,"existingCompetitions"],[270,26,270,24],[270,27,270,25,"push"],[270,31,270,29],[270,32,270,30,"newCompetition"],[270,46,270,44],[270,47,270,45],[271,6,271,4],[271,12,271,10,"CrossPlatformStorage"],[271,32,271,30],[271,33,271,31,"setItem"],[271,40,271,38],[271,41,271,39],[271,59,271,57],[271,61,271,59,"JSON"],[271,65,271,63],[271,66,271,64,"stringify"],[271,75,271,73],[271,76,271,74,"existingCompetitions"],[271,96,271,94],[271,97,271,95],[271,98,271,96],[272,6,273,4,"console"],[272,13,273,11],[272,14,273,12,"log"],[272,17,273,15],[272,18,273,16],[272,63,273,61],[272,65,273,63,"existingCompetitions"],[272,85,273,83],[272,86,273,84,"length"],[272,92,273,90],[272,93,273,91],[273,6,274,4,"console"],[273,13,274,11],[273,14,274,12,"log"],[273,17,274,15],[273,18,274,16],[273,38,274,36],[273,40,274,38,"newCompetition"],[273,54,274,52],[273,55,274,53,"_id"],[273,58,274,56],[273,59,274,57],[274,6,275,4,"console"],[274,13,275,11],[274,14,275,12,"log"],[274,17,275,15],[274,18,275,16],[274,40,275,38],[274,42,275,40,"newCompetition"],[274,56,275,54],[274,57,275,55,"name"],[274,61,275,59],[274,62,275,60],[275,6,276,4,"console"],[275,13,276,11],[275,14,276,12,"log"],[275,17,276,15],[275,18,276,16],[275,44,276,42],[275,46,276,44,"newCompetition"],[275,60,276,58],[275,61,276,59,"total_matchdays"],[275,76,276,74],[275,77,276,75],[276,6,278,4],[276,13,278,11,"newCompetition"],[276,27,278,25],[277,4,279,2],[277,5,279,3],[278,4,281,2],[279,4,282,2,"validateNameMock"],[279,20,282,18],[279,22,282,20],[279,28,282,27,"name"],[279,32,282,39],[279,36,282,44],[280,6,283,4,"console"],[280,13,283,11],[280,14,283,12,"log"],[280,17,283,15],[280,18,283,16],[280,57,283,55],[280,59,283,57,"name"],[280,63,283,61],[280,64,283,62],[281,6,285,4],[281,10,285,8],[281,11,285,9,"name"],[281,15,285,13],[281,16,285,14,"trim"],[281,20,285,18],[281,21,285,19],[281,22,285,20],[281,24,285,22],[282,8,286,6],[282,15,286,13],[283,10,286,15,"available"],[283,19,286,24],[283,21,286,26],[283,25,286,30],[284,10,286,32,"message"],[284,17,286,39],[284,19,286,41],[285,8,286,44],[285,9,286,45],[286,6,287,4],[288,6,289,4],[289,6,290,4],[289,12,290,10,"storedCompetitions"],[289,30,290,28],[289,33,290,31],[289,39,290,37,"CrossPlatformStorage"],[289,59,290,57],[289,60,290,58,"getItem"],[289,67,290,65],[289,68,290,66],[289,86,290,84],[289,87,290,85],[290,6,291,4],[290,10,291,8,"existingCompetitions"],[290,30,291,28],[290,33,291,31,"storedCompetitions"],[290,51,291,49],[290,54,291,52,"JSON"],[290,58,291,56],[290,59,291,57,"parse"],[290,64,291,62],[290,65,291,63,"storedCompetitions"],[290,83,291,81],[290,84,291,82],[290,87,291,85],[290,89,291,87],[292,6,293,4],[293,6,294,4],[293,12,294,10,"defaultNames"],[293,24,294,22],[293,27,294,25],[293,28,294,26],[293,50,294,48],[293,52,294,50],[293,78,294,76],[293,80,294,78],[293,96,294,94],[293,97,294,95],[294,6,295,4],[294,12,295,10,"allNames"],[294,20,295,18],[294,23,295,21],[294,24,296,6],[294,27,296,9,"existingCompetitions"],[294,47,296,29],[294,48,296,30,"map"],[294,51,296,33],[294,52,296,35,"comp"],[294,56,296,44],[294,60,296,49,"comp"],[294,64,296,53],[294,65,296,54,"name"],[294,69,296,58],[294,70,296,59,"toLowerCase"],[294,81,296,70],[294,82,296,71],[294,83,296,72],[294,84,296,73],[294,86,297,6],[294,89,297,9,"defaultNames"],[294,101,297,21],[294,102,297,22,"map"],[294,105,297,25],[294,106,297,26,"name"],[294,110,297,30],[294,114,297,34,"name"],[294,118,297,38],[294,119,297,39,"toLowerCase"],[294,130,297,50],[294,131,297,51],[294,132,297,52],[294,133,297,53],[294,134,298,5],[295,6,300,4],[295,12,300,10,"isAvailable"],[295,23,300,21],[295,26,300,24],[295,27,300,25,"allNames"],[295,35,300,33],[295,36,300,34,"includes"],[295,44,300,42],[295,45,300,43,"name"],[295,49,300,47],[295,50,300,48,"toLowerCase"],[295,61,300,59],[295,62,300,60],[295,63,300,61],[295,64,300,62],[296,6,302,4],[296,13,302,11],[297,8,303,6,"available"],[297,17,303,15],[297,19,303,17,"isAvailable"],[297,30,303,28],[298,8,304,6,"message"],[298,15,304,13],[298,17,304,15,"isAvailable"],[298,28,304,26],[298,31,304,29],[298,47,304,45],[298,50,304,48],[299,6,305,4],[299,7,305,5],[300,4,306,2],[300,5,306,3],[301,4,308,2,"getMyCompetitionsMock"],[301,25,308,23],[301,27,308,25],[301,33,308,25,"getMyCompetitionsMock"],[301,34,308,25],[301,39,308,37],[302,6,309,4,"console"],[302,13,309,11],[302,14,309,12,"log"],[302,17,309,15],[302,18,309,16],[302,52,309,50],[302,53,309,51],[304,6,311,4],[305,6,312,4],[305,12,312,10,"storedCompetitions"],[305,30,312,28],[305,33,312,31],[305,39,312,37,"CrossPlatformStorage"],[305,59,312,57],[305,60,312,58,"getItem"],[305,67,312,65],[305,68,312,66],[305,86,312,84],[305,87,312,85],[306,6,313,4],[306,10,313,8,"competitions"],[306,22,313,20],[306,25,313,23,"storedCompetitions"],[306,43,313,41],[306,46,313,44,"JSON"],[306,50,313,48],[306,51,313,49,"parse"],[306,56,313,54],[306,57,313,55,"storedCompetitions"],[306,75,313,73],[306,76,313,74],[306,79,313,77],[306,81,313,79],[307,6,315,4,"console"],[307,13,315,11],[307,14,315,12,"log"],[307,17,315,15],[307,18,315,16],[307,53,315,51],[307,55,315,53,"competitions"],[307,67,315,65],[307,68,315,66,"length"],[307,74,315,72],[307,75,315,73],[309,6,317,4],[310,6,318,4,"competitions"],[310,18,318,16],[310,19,318,17,"forEach"],[310,26,318,24],[310,27,318,25],[310,28,318,26,"comp"],[310,32,318,35],[310,34,318,37,"index"],[310,39,318,50],[310,44,318,55],[311,8,319,6,"console"],[311,15,319,13],[311,16,319,14,"log"],[311,19,319,17],[311,20,319,18],[311,23,319,21,"index"],[311,28,319,26],[311,31,319,29],[311,32,319,30],[311,37,319,35,"comp"],[311,41,319,39],[311,42,319,40,"name"],[311,46,319,44],[311,55,319,53,"comp"],[311,59,319,57],[311,60,319,58,"_id"],[311,63,319,61],[311,66,319,64],[311,67,319,65],[312,6,320,4],[312,7,320,5],[312,8,320,6],[313,6,322,4],[313,13,322,11,"competitions"],[313,25,322,23],[314,4,323,2],[314,5,323,3],[315,4,325,2,"joinMock"],[315,12,325,10],[315,14,325,12],[315,20,325,19,"inviteCode"],[315,30,325,37],[315,34,325,42],[316,6,326,4,"console"],[316,13,326,11],[316,14,326,12,"log"],[316,17,326,15],[316,18,326,16],[316,59,326,57],[316,61,326,59,"inviteCode"],[316,71,326,69],[316,72,326,70],[317,6,327,4],[317,10,327,8,"inviteCode"],[317,20,327,18],[317,21,327,19,"length"],[317,27,327,25],[317,30,327,28],[317,31,327,29],[317,33,327,31],[318,8,328,6],[318,14,328,12],[318,18,328,16,"Error"],[318,23,328,21],[318,24,328,22],[318,45,328,43],[318,46,328,44],[319,6,329,4],[320,6,330,4],[320,13,330,11],[321,8,330,13,"message"],[321,15,330,20],[321,17,330,22],[322,6,330,57],[322,7,330,58],[323,4,331,2],[323,5,331,3],[324,4,333,2],[325,4,334,2,"deleteMock"],[325,14,334,12],[325,16,334,14],[325,22,334,21,"competitionId"],[325,35,334,42],[325,39,334,47],[326,6,335,4,"console"],[326,13,335,11],[326,14,335,12,"log"],[326,17,335,15],[326,18,335,16],[326,51,335,49],[326,53,335,51,"competitionId"],[326,66,335,64],[326,67,335,65],[327,6,337,4],[327,12,337,10,"storedCompetitions"],[327,30,337,28],[327,33,337,31],[327,39,337,37,"CrossPlatformStorage"],[327,59,337,57],[327,60,337,58,"getItem"],[327,67,337,65],[327,68,337,66],[327,86,337,84],[327,87,337,85],[328,6,338,4],[328,10,338,8,"competitions"],[328,22,338,20],[328,25,338,23,"storedCompetitions"],[328,43,338,41],[328,46,338,44,"JSON"],[328,50,338,48],[328,51,338,49,"parse"],[328,56,338,54],[328,57,338,55,"storedCompetitions"],[328,75,338,73],[328,76,338,74],[328,79,338,77],[328,81,338,79],[329,6,340,4],[329,12,340,10,"competitionToDelete"],[329,31,340,29],[329,34,340,32,"competitions"],[329,46,340,44],[329,47,340,45,"find"],[329,51,340,49],[329,52,340,51,"comp"],[329,56,340,60],[329,60,340,65,"comp"],[329,64,340,69],[329,65,340,70,"_id"],[329,68,340,73],[329,73,340,78,"competitionId"],[329,86,340,91],[329,87,340,92],[330,6,341,4],[330,10,341,8],[330,11,341,9,"competitionToDelete"],[330,30,341,28],[330,32,341,30],[331,8,342,6],[331,14,342,12],[331,18,342,16,"Error"],[331,23,342,21],[331,24,342,22],[331,47,342,45],[331,48,342,46],[332,6,343,4],[334,6,345,4],[335,6,346,4],[335,10,346,8,"competitionToDelete"],[335,29,346,27],[335,30,346,28,"admin_id"],[335,38,346,36],[335,43,346,41],[335,69,346,67],[335,71,346,69],[336,8,347,6],[336,14,347,12],[336,18,347,16,"Error"],[336,23,347,21],[336,24,347,22],[336,64,347,62],[336,65,347,63],[337,6,348,4],[339,6,350,4],[340,6,351,4,"competitions"],[340,18,351,16],[340,21,351,19,"competitions"],[340,33,351,31],[340,34,351,32,"filter"],[340,40,351,38],[340,41,351,40,"comp"],[340,45,351,49],[340,49,351,54,"comp"],[340,53,351,58],[340,54,351,59,"_id"],[340,57,351,62],[340,62,351,67,"competitionId"],[340,75,351,80],[340,76,351,81],[341,6,352,4],[341,12,352,10,"CrossPlatformStorage"],[341,32,352,30],[341,33,352,31,"setItem"],[341,40,352,38],[341,41,352,39],[341,59,352,57],[341,61,352,59,"JSON"],[341,65,352,63],[341,66,352,64,"stringify"],[341,75,352,73],[341,76,352,74,"competitions"],[341,88,352,86],[341,89,352,87],[341,90,352,88],[343,6,354,4],[344,6,355,4],[344,12,355,10,"logAdminAction"],[344,26,355,24],[344,27,355,25],[344,35,355,33],[344,37,355,35,"competitionToDelete"],[344,56,355,54],[344,57,355,55,"name"],[344,61,355,59],[344,63,355,61],[344,80,355,78],[344,81,355,79],[345,6,357,4,"console"],[345,13,357,11],[345,14,357,12,"log"],[345,17,357,15],[345,18,357,16],[345,54,357,52],[345,55,357,53],[346,6,358,4],[346,13,358,11],[347,8,358,13,"message"],[347,15,358,20],[347,17,358,22],[348,6,358,57],[348,7,358,58],[349,4,359,2],[349,5,359,3],[350,4,361,2],[351,4,362,2,"editMock"],[351,12,362,10],[351,14,362,12],[351,20,362,12,"editMock"],[351,21,362,19,"competitionId"],[351,34,362,40],[351,36,362,42,"updates"],[351,43,362,54],[351,48,362,59],[352,6,363,4,"console"],[352,13,363,11],[352,14,363,12,"log"],[352,17,363,15],[352,18,363,16],[352,49,363,47],[352,51,363,49,"competitionId"],[352,64,363,62],[352,66,363,64,"updates"],[352,73,363,71],[352,74,363,72],[353,6,365,4],[353,12,365,10,"storedCompetitions"],[353,30,365,28],[353,33,365,31],[353,39,365,37,"CrossPlatformStorage"],[353,59,365,57],[353,60,365,58,"getItem"],[353,67,365,65],[353,68,365,66],[353,86,365,84],[353,87,365,85],[354,6,366,4],[354,10,366,8,"competitions"],[354,22,366,20],[354,25,366,23,"storedCompetitions"],[354,43,366,41],[354,46,366,44,"JSON"],[354,50,366,48],[354,51,366,49,"parse"],[354,56,366,54],[354,57,366,55,"storedCompetitions"],[354,75,366,73],[354,76,366,74],[354,79,366,77],[354,81,366,79],[355,6,368,4],[355,12,368,10,"competitionIndex"],[355,28,368,26],[355,31,368,29,"competitions"],[355,43,368,41],[355,44,368,42,"findIndex"],[355,53,368,51],[355,54,368,53,"comp"],[355,58,368,62],[355,62,368,67,"comp"],[355,66,368,71],[355,67,368,72,"_id"],[355,70,368,75],[355,75,368,80,"competitionId"],[355,88,368,93],[355,89,368,94],[356,6,369,4],[356,10,369,8,"competitionIndex"],[356,26,369,24],[356,31,369,29],[356,32,369,30],[356,33,369,31],[356,35,369,33],[357,8,370,6],[357,14,370,12],[357,18,370,16,"Error"],[357,23,370,21],[357,24,370,22],[357,47,370,45],[357,48,370,46],[358,6,371,4],[359,6,373,4],[359,12,373,10,"competition"],[359,23,373,21],[359,26,373,24,"competitions"],[359,38,373,36],[359,39,373,37,"competitionIndex"],[359,55,373,53],[359,56,373,54],[361,6,375,4],[362,6,376,4],[362,10,376,8,"competition"],[362,21,376,19],[362,22,376,20,"admin_id"],[362,30,376,28],[362,35,376,33],[362,61,376,59],[362,63,376,61],[363,8,377,6],[363,14,377,12],[363,18,377,16,"Error"],[363,23,377,21],[363,24,377,22],[363,62,377,60],[363,63,377,61],[364,6,378,4],[366,6,380,4],[367,6,381,4,"competitions"],[367,18,381,16],[367,19,381,17,"competitionIndex"],[367,35,381,33],[367,36,381,34],[367,39,381,34,"Object"],[367,45,381,34],[367,46,381,34,"assign"],[367,52,381,34],[367,57,382,9,"competition"],[367,68,382,20],[367,70,383,9,"updates"],[367,77,383,16],[368,8,384,6,"updated_at"],[368,18,384,16],[368,20,384,18],[368,24,384,22,"Date"],[368,28,384,26],[368,29,384,27],[368,30,384,28],[368,31,384,29,"toISOString"],[368,42,384,40],[368,43,384,41],[369,6,384,42],[369,8,385,5],[370,6,387,4],[370,12,387,10,"CrossPlatformStorage"],[370,32,387,30],[370,33,387,31,"setItem"],[370,40,387,38],[370,41,387,39],[370,59,387,57],[370,61,387,59,"JSON"],[370,65,387,63],[370,66,387,64,"stringify"],[370,75,387,73],[370,76,387,74,"competitions"],[370,88,387,86],[370,89,387,87],[370,90,387,88],[372,6,389,4],[373,6,390,4],[373,12,390,10,"logAdminAction"],[373,26,390,24],[373,27,390,25],[373,33,390,31],[373,35,390,33,"competition"],[373,46,390,44],[373,47,390,45,"name"],[373,51,390,49],[373,53,390,51],[373,70,390,68],[373,72,390,70,"updates"],[373,79,390,77],[373,80,390,78],[374,6,392,4,"console"],[374,13,392,11],[374,14,392,12,"log"],[374,17,392,15],[374,18,392,16],[374,54,392,52],[374,55,392,53],[375,6,393,4],[375,13,393,11,"competitions"],[375,25,393,23],[375,26,393,24,"competitionIndex"],[375,42,393,40],[375,43,393,41],[376,4,394,2],[376,5,394,3],[377,4,396,2],[378,4,397,2,"awardDailyPrizeMock"],[378,23,397,21],[378,25,397,23],[378,31,397,23,"awardDailyPrizeMock"],[378,32,397,30,"competitionId"],[378,45,397,51],[378,47,397,53,"matchday"],[378,55,397,69],[378,57,397,71,"winnerId"],[378,65,397,87],[378,70,397,92],[379,6,398,4,"console"],[379,13,398,11],[379,14,398,12,"log"],[379,17,398,15],[379,18,398,16],[379,62,398,60],[379,64,398,62,"matchday"],[379,72,398,70],[379,74,398,72],[379,83,398,81],[379,85,398,83,"winnerId"],[379,93,398,91],[379,94,398,92],[380,6,400,4],[380,12,400,10,"storedCompetitions"],[380,30,400,28],[380,33,400,31],[380,39,400,37,"CrossPlatformStorage"],[380,59,400,57],[380,60,400,58,"getItem"],[380,67,400,65],[380,68,400,66],[380,86,400,84],[380,87,400,85],[381,6,401,4],[381,10,401,8,"competitions"],[381,22,401,20],[381,25,401,23,"storedCompetitions"],[381,43,401,41],[381,46,401,44,"JSON"],[381,50,401,48],[381,51,401,49,"parse"],[381,56,401,54],[381,57,401,55,"storedCompetitions"],[381,75,401,73],[381,76,401,74],[381,79,401,77],[381,81,401,79],[382,6,403,4],[382,12,403,10,"competitionIndex"],[382,28,403,26],[382,31,403,29,"competitions"],[382,43,403,41],[382,44,403,42,"findIndex"],[382,53,403,51],[382,54,403,53,"comp"],[382,58,403,62],[382,62,403,67,"comp"],[382,66,403,71],[382,67,403,72,"_id"],[382,70,403,75],[382,75,403,80,"competitionId"],[382,88,403,93],[382,89,403,94],[383,6,404,4],[383,10,404,8,"competitionIndex"],[383,26,404,24],[383,31,404,29],[383,32,404,30],[383,33,404,31],[383,35,404,33],[384,8,405,6],[384,14,405,12],[384,18,405,16,"Error"],[384,23,405,21],[384,24,405,22],[384,47,405,45],[384,48,405,46],[385,6,406,4],[386,6,408,4],[386,12,408,10,"competition"],[386,23,408,21],[386,26,408,24,"competitions"],[386,38,408,36],[386,39,408,37,"competitionIndex"],[386,55,408,53],[386,56,408,54],[388,6,410,4],[389,6,411,4],[389,10,411,8,"competition"],[389,21,411,19],[389,22,411,20,"admin_id"],[389,30,411,28],[389,35,411,33],[389,61,411,59],[389,63,411,61],[390,8,412,6],[390,14,412,12],[390,18,412,16,"Error"],[390,23,412,21],[390,24,412,22],[390,59,412,57],[390,60,412,58],[391,6,413,4],[393,6,415,4],[394,6,416,4],[394,10,416,8],[394,11,416,9,"competition"],[394,22,416,20],[394,23,416,21,"rules"],[394,28,416,26],[394,32,416,30],[394,33,416,31],[394,34,416,32],[394,41,416,39],[394,43,416,41],[394,50,416,48],[394,51,416,49],[394,52,416,50,"includes"],[394,60,416,58],[394,61,416,59,"competition"],[394,72,416,70],[394,73,416,71,"rules"],[394,78,416,76],[394,79,416,77,"type"],[394,83,416,81],[394,84,416,82],[394,86,416,84],[395,8,417,6],[395,14,417,12],[395,18,417,16,"Error"],[395,23,417,21],[395,24,417,22],[395,69,417,67],[395,70,417,68],[396,6,418,4],[397,6,420,4],[397,12,420,10,"dailyPrizeAmount"],[397,28,420,26],[397,31,420,29,"competition"],[397,42,420,40],[397,43,420,41,"rules"],[397,48,420,46],[397,49,420,47,"daily_prize"],[397,60,420,58],[397,64,420,62],[397,65,420,63],[398,6,421,4],[398,12,421,10,"winner"],[398,18,421,16],[398,21,421,19,"competition"],[398,32,421,30],[398,33,421,31,"participants"],[398,45,421,43],[398,46,421,44,"find"],[398,50,421,48],[398,51,421,50,"p"],[398,52,421,56],[398,56,421,61,"p"],[398,57,421,62],[398,58,421,63,"id"],[398,60,421,65],[398,65,421,70,"winnerId"],[398,73,421,78],[398,74,421,79],[399,6,423,4],[399,10,423,8],[399,11,423,9,"winner"],[399,17,423,15],[399,19,423,17],[400,8,424,6],[400,14,424,12],[400,18,424,16,"Error"],[400,23,424,21],[400,24,424,22],[400,57,424,55],[400,58,424,56],[401,6,425,4],[403,6,427,4],[404,6,428,4],[404,10,428,8],[404,11,428,9,"competition"],[404,22,428,20],[404,23,428,21,"daily_winners"],[404,36,428,34],[404,38,428,36],[405,8,429,6,"competition"],[405,19,429,17],[405,20,429,18,"daily_winners"],[405,33,429,31],[405,36,429,34],[405,37,429,35],[405,38,429,36],[406,6,430,4],[408,6,432,4],[409,6,433,4],[409,10,433,8,"competition"],[409,21,433,19],[409,22,433,20,"daily_winners"],[409,35,433,33],[409,36,433,34,"matchday"],[409,44,433,42],[409,45,433,43],[409,47,433,45],[410,8,434,6],[410,14,434,12],[410,18,434,16,"Error"],[410,23,434,21],[410,24,434,22],[410,52,434,50,"matchday"],[410,60,434,58],[410,83,434,81,"competition"],[410,94,434,92],[410,95,434,93,"daily_winners"],[410,108,434,106],[410,109,434,107,"matchday"],[410,117,434,115],[410,118,434,116],[410,119,434,117,"name"],[410,123,434,121],[410,125,434,123],[410,126,434,124],[411,6,435,4],[413,6,437,4],[414,6,438,4,"competition"],[414,17,438,15],[414,18,438,16,"daily_winners"],[414,31,438,29],[414,32,438,30,"matchday"],[414,40,438,38],[414,41,438,39],[414,44,438,42],[415,8,439,6,"user_id"],[415,15,439,13],[415,17,439,15,"winnerId"],[415,25,439,23],[416,8,440,6,"name"],[416,12,440,10],[416,14,440,12,"winner"],[416,20,440,18],[416,21,440,19,"name"],[416,25,440,23],[417,8,441,6,"amount"],[417,14,441,12],[417,16,441,14,"dailyPrizeAmount"],[417,32,441,30],[418,8,442,6,"awarded_at"],[418,18,442,16],[418,20,442,18],[418,24,442,22,"Date"],[418,28,442,26],[418,29,442,27],[418,30,442,28],[418,31,442,29,"toISOString"],[418,42,442,40],[418,43,442,41],[419,6,443,4],[419,7,443,5],[421,6,445,4],[422,6,446,4,"competitions"],[422,18,446,16],[422,19,446,17,"competitionIndex"],[422,35,446,33],[422,36,446,34],[422,39,446,37,"competition"],[422,50,446,48],[423,6,447,4],[423,12,447,10,"CrossPlatformStorage"],[423,32,447,30],[423,33,447,31,"setItem"],[423,40,447,38],[423,41,447,39],[423,59,447,57],[423,61,447,59,"JSON"],[423,65,447,63],[423,66,447,64,"stringify"],[423,75,447,73],[423,76,447,74,"competitions"],[423,88,447,86],[423,89,447,87],[423,90,447,88],[425,6,449,4],[426,6,450,4],[426,12,450,10,"logAdminAction"],[426,26,450,24],[426,27,450,25],[426,46,450,44],[426,48,450,46,"competition"],[426,59,450,57],[426,60,450,58,"name"],[426,64,450,62],[426,66,450,64],[426,83,450,81],[426,85,450,83],[427,8,451,6,"matchday"],[427,16,451,14],[428,8,452,6,"winner"],[428,14,452,12],[428,16,452,14,"winner"],[428,22,452,20],[428,23,452,21,"name"],[428,27,452,25],[429,8,453,6,"amount"],[429,14,453,12],[429,16,453,14,"dailyPrizeAmount"],[430,6,454,4],[430,7,454,5],[430,8,454,6],[432,6,456,4],[433,6,457,4,"console"],[433,13,457,11],[433,14,457,12,"log"],[433,17,457,15],[433,18,457,16],[433,24,457,22,"winner"],[433,30,457,28],[433,31,457,29,"name"],[433,35,457,33],[433,48,457,46,"dailyPrizeAmount"],[433,64,457,62],[433,89,457,87,"matchday"],[433,97,457,95],[433,99,457,97],[433,100,457,98],[434,6,459,4,"console"],[434,13,459,11],[434,14,459,12,"log"],[434,17,459,15],[434,18,459,16],[434,54,459,52],[434,55,459,53],[435,6,460,4],[435,13,460,11],[436,8,461,6,"message"],[436,15,461,13],[436,17,461,15],[436,36,461,34,"dailyPrizeAmount"],[436,52,461,50],[436,67,461,65,"winner"],[436,73,461,71],[436,74,461,72,"name"],[436,78,461,76],[436,95,461,93,"matchday"],[436,103,461,101],[436,105,461,103],[437,8,462,6,"competition"],[437,19,462,17],[437,21,462,19,"competition"],[438,6,463,4],[438,7,463,5],[439,4,464,2],[440,2,465,0],[440,3,465,1],[442,2,467,0],[443,2,468,7],[443,8,468,13,"walletAPI"],[443,17,468,22],[443,20,468,25],[444,4,469,2,"getBalance"],[444,14,469,12],[444,16,469,14,"getBalance"],[444,17,469,14],[444,22,469,20,"apiClient"],[444,31,469,29],[444,32,469,30,"get"],[444,35,469,33],[444,36,469,34],[444,53,469,51],[444,54,469,52],[445,4,471,2,"topUp"],[445,9,471,7],[445,11,471,10,"amount"],[445,17,471,24],[445,21,472,4,"apiClient"],[445,30,472,13],[445,31,472,14,"post"],[445,35,472,18],[445,36,472,19],[445,51,472,34],[445,53,472,36],[445,57,472,40],[445,59,472,42],[446,6,473,6,"params"],[446,12,473,12],[446,14,473,14],[447,8,473,16,"amount"],[448,6,473,23],[449,4,474,4],[449,5,474,5],[449,6,474,6],[450,4,476,2,"withdraw"],[450,12,476,10],[450,14,476,13,"amount"],[450,20,476,27],[450,24,477,4,"apiClient"],[450,33,477,13],[450,34,477,14,"post"],[450,38,477,18],[450,39,477,19],[450,57,477,37],[450,59,477,39],[450,63,477,43],[450,65,477,45],[451,6,478,6,"params"],[451,12,478,12],[451,14,478,14],[452,8,478,16,"amount"],[453,6,478,23],[454,4,479,4],[454,5,479,5],[454,6,479,6],[455,4,481,2,"getTransactions"],[455,19,481,17],[455,21,481,19,"getTransactions"],[455,22,481,19],[455,27,481,25,"apiClient"],[455,36,481,34],[455,37,481,35,"get"],[455,40,481,38],[455,41,481,39],[455,56,481,54],[456,2,482,0],[456,3,482,1],[457,2,484,0],[457,6,484,0,"_default"],[457,14,484,0],[457,17,484,15,"apiClient"],[457,26,484,24],[458,0,484,25],[458,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBO;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;cgCG;mDCmB,sCD;GhC4C;oBkCG;kCDc,sCC;0BCC,0BD;GlCS;yBoCE;yBCU;KDE;GpCG;YsCE;GtCM;cuCG;kDCM,yCD;uCEW,yCF;GvCQ;Y0CG;oDCM,yCD;G1C0B;uB4CG;oDDM,yCC;iDCkB,6BD;G5C2C;c8CK,sC9C;S+CE;M/CG;YgDE;MhDG;mBiDE,oCjD"},"hasCjsExports":false},"type":"js/module"}]}