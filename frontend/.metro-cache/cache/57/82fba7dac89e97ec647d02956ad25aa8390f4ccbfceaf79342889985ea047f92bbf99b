{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = Object.assign({}, competition, updates, {\n        updated_at: new Date().toISOString()\n      });\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":572,"map":[[27,2,621,0,"Object"],[27,8,621,0],[27,9,621,0,"defineProperty"],[27,23,621,0],[27,24,621,0,"exports"],[27,31,621,0],[28,4,621,0,"enumerable"],[28,14,621,0],[29,4,621,0,"get"],[29,7,621,0],[29,18,621,0,"get"],[29,19,621,0],[30,6,621,0],[30,13,621,0,"_default"],[30,21,621,0],[31,4,621,0],[32,2,621,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,605,0,"Object"],[45,8,605,0],[45,9,605,0,"defineProperty"],[45,23,605,0],[45,24,605,0,"exports"],[45,31,605,0],[46,4,605,0,"enumerable"],[46,14,605,0],[47,4,605,0,"get"],[47,7,605,0],[47,18,605,0,"get"],[47,19,605,0],[48,6,605,0],[48,13,605,0,"walletAPI"],[48,22,605,0],[49,4,605,0],[50,2,605,0],[51,2,619,2],[51,6,619,2,"_expoVirtualEnv"],[51,21,619,2],[51,24,619,2,"require"],[51,31,619,2],[51,32,619,2,"_dependencyMap"],[51,46,619,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,171,45,153],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,0],[182,8,156,6,"logAdminAction"],[182,22,156,20],[182,25,156,23],[182,31,156,23,"logAdminAction"],[182,32,156,30,"action"],[182,38,156,44],[182,40,156,46,"competitionName"],[182,55,156,69],[182,57,156,71,"adminName"],[182,66,156,88],[182,68,156,90,"details"],[182,75,156,103],[182,80,156,108],[183,4,157,2],[183,8,157,6],[184,6,158,4],[184,12,158,10,"logs"],[184,16,158,14],[184,19,158,17],[184,26,158,23,"CrossPlatformStorage"],[184,46,158,43],[184,47,158,44,"getItem"],[184,54,158,51],[184,55,158,52],[184,66,158,63],[184,67,158,64],[184,72,158,68],[184,76,158,72],[185,6,159,4],[185,12,159,10,"adminLogs"],[185,21,159,19],[185,24,159,22,"JSON"],[185,28,159,26],[185,29,159,27,"parse"],[185,34,159,32],[185,35,159,33,"logs"],[185,39,159,37],[185,40,159,38],[186,6,161,4],[186,12,161,10,"logEntry"],[186,20,161,18],[186,23,161,21],[187,8,162,6,"id"],[187,10,162,8],[187,12,162,10],[187,19,162,17,"Date"],[187,23,162,21],[187,24,162,22,"now"],[187,27,162,25],[187,28,162,26],[187,29,162,27],[187,31,162,29],[188,8,163,6,"action"],[188,14,163,12],[189,8,164,6,"competition_name"],[189,24,164,22],[189,26,164,24,"competitionName"],[189,41,164,39],[190,8,165,6,"admin_name"],[190,18,165,16],[190,20,165,18,"adminName"],[190,29,165,27],[191,8,166,6,"details"],[191,15,166,13],[192,8,167,6,"timestamp"],[192,17,167,15],[192,19,167,17],[192,23,167,21,"Date"],[192,27,167,25],[192,28,167,26],[192,29,167,27],[192,30,167,28,"toISOString"],[192,41,167,39],[192,42,167,40],[193,6,168,4],[193,7,168,5],[194,6,170,4,"adminLogs"],[194,15,170,13],[194,16,170,14,"push"],[194,20,170,18],[194,21,170,19,"logEntry"],[194,29,170,27],[194,30,170,28],[195,6,171,4],[195,12,171,10,"CrossPlatformStorage"],[195,32,171,30],[195,33,171,31,"setItem"],[195,40,171,38],[195,41,171,39],[195,52,171,50],[195,54,171,52,"JSON"],[195,58,171,56],[195,59,171,57,"stringify"],[195,68,171,66],[195,69,171,67,"adminLogs"],[195,78,171,76],[195,79,171,77],[195,80,171,78],[196,6,173,4,"console"],[196,13,173,11],[196,14,173,12,"log"],[196,17,173,15],[196,18,173,16],[196,43,173,41],[196,45,173,43,"action"],[196,51,173,49],[196,53,173,51,"competitionName"],[196,68,173,66],[196,69,173,67],[197,4,174,2],[197,5,174,3],[197,6,174,4],[197,13,174,11,"error"],[197,18,174,16],[197,20,174,18],[198,6,175,4,"console"],[198,13,175,11],[198,14,175,12,"error"],[198,19,175,17],[198,20,175,18],[198,49,175,47],[198,51,175,49,"error"],[198,56,175,54],[198,57,175,55],[199,4,176,2],[200,2,177,0],[200,3,177,1],[202,2,179,0],[203,2,180,7],[203,8,180,13,"competitionAPI"],[203,22,180,27],[203,25,180,30],[204,4,181,2,"create"],[204,10,181,8],[204,12,181,11,"data"],[204,16,196,3],[204,20,196,8,"apiClient"],[204,29,196,17],[204,30,196,18,"post"],[204,34,196,22],[204,35,196,23],[204,50,196,38],[204,52,196,40,"data"],[204,56,196,44],[204,57,196,45],[205,4,198,2,"join"],[205,8,198,6],[205,10,198,9,"inviteCode"],[205,20,198,27],[205,24,199,4,"apiClient"],[205,33,199,13],[205,34,199,14,"post"],[205,38,199,18],[205,39,199,19],[205,59,199,39],[205,61,199,41],[206,6,199,43,"invite_code"],[206,17,199,54],[206,19,199,56,"inviteCode"],[207,4,199,67],[207,5,199,68],[207,6,199,69],[208,4,201,2,"getMyCompetitions"],[208,21,201,19],[208,23,201,21,"getMyCompetitions"],[208,24,201,21],[208,29,201,27,"apiClient"],[208,38,201,36],[208,39,201,37,"get"],[208,42,201,40],[208,43,201,41],[208,61,201,59],[208,62,201,60],[209,4,203,2,"getCompetition"],[209,18,203,16],[209,20,203,19,"id"],[209,22,203,29],[209,26,203,34,"apiClient"],[209,35,203,43],[209,36,203,44,"get"],[209,39,203,47],[209,40,203,48],[209,57,203,65,"id"],[209,59,203,67],[209,61,203,69],[209,62,203,70],[210,4,205,2,"updateStandings"],[210,19,205,17],[210,21,205,19,"updateStandings"],[210,22,206,4,"id"],[210,24,206,14],[210,26,207,4,"standings"],[210,35,207,18],[210,37,208,4,"matchday"],[210,45,208,21],[210,50,210,4,"apiClient"],[210,59,210,13],[210,60,210,14,"patch"],[210,65,210,19],[210,66,210,20],[210,83,210,37,"id"],[210,85,210,39],[210,97,210,51],[210,99,210,53],[211,6,211,6,"standings"],[211,15,211,15],[212,6,212,6,"matchday"],[213,4,213,4],[213,5,213,5],[213,6,213,6],[214,4,215,2,"payFee"],[214,10,215,8],[214,12,215,10,"payFee"],[214,13,215,11,"id"],[214,15,215,21],[214,17,215,23,"amount"],[214,23,215,37],[214,28,216,4,"apiClient"],[214,37,216,13],[214,38,216,14,"post"],[214,42,216,18],[214,43,216,19],[214,60,216,36,"id"],[214,62,216,38],[214,68,216,44],[214,70,216,46],[214,74,216,50],[214,76,216,52],[215,6,217,6,"params"],[215,12,217,12],[215,14,217,14],[216,8,217,16,"amount"],[217,6,217,23],[218,4,218,4],[218,5,218,5],[218,6,218,6],[219,4,220,2,"getTransactions"],[219,19,220,17],[219,21,220,20,"id"],[219,23,220,30],[219,27,221,4,"apiClient"],[219,36,221,13],[219,37,221,14,"get"],[219,40,221,17],[219,41,221,18],[219,58,221,35,"id"],[219,60,221,37],[219,75,221,52],[219,76,221,53],[220,4,223,2],[221,4,224,2,"payMatchdays"],[221,16,224,14],[221,18,224,16,"payMatchdays"],[221,19,224,17,"competitionId"],[221,32,224,38],[221,34,224,40,"matchdays"],[221,43,224,59],[221,48,225,4,"apiClient"],[221,57,225,13],[221,58,225,14,"post"],[221,62,225,18],[221,63,225,19],[221,80,225,36,"competitionId"],[221,93,225,49],[221,113,225,69],[221,115,225,71],[222,6,226,6,"competition_id"],[222,20,226,20],[222,22,226,22,"competitionId"],[222,35,226,35],[223,6,227,6,"matchdays"],[224,4,228,4],[224,5,228,5],[224,6,228,6],[225,4,230,2,"getMatchdayPayments"],[225,23,230,21],[225,25,230,24,"competitionId"],[225,38,230,45],[225,42,231,4,"apiClient"],[225,51,231,13],[225,52,231,14,"get"],[225,55,231,17],[225,56,231,18],[225,73,231,35,"competitionId"],[225,86,231,48],[225,106,231,68],[225,107,231,69],[226,4,233,2,"getPaymentStatusTable"],[226,25,233,23],[226,27,233,26,"competitionId"],[226,40,233,47],[226,44,234,4,"apiClient"],[226,53,234,13],[226,54,234,14,"get"],[226,57,234,17],[226,58,234,18],[226,75,234,35,"competitionId"],[226,88,234,48],[226,111,234,71],[226,112,234,72],[227,4,236,2],[228,4,237,2,"createMock"],[228,14,237,12],[228,16,237,14],[228,22,237,21,"data"],[228,26,250,3],[228,30,250,8],[229,6,251,4,"console"],[229,13,251,11],[229,14,251,12,"log"],[229,17,251,15],[229,18,251,16],[229,50,251,48],[229,52,251,50,"data"],[229,56,251,54],[229,57,251,55,"name"],[229,61,251,59],[229,62,251,60],[230,6,252,4,"console"],[230,13,252,11],[230,14,252,12,"log"],[230,17,252,15],[230,18,252,16],[230,39,252,37],[230,41,252,39,"data"],[230,45,252,43],[230,46,252,44,"total_matchdays"],[230,61,252,59],[230,65,252,63],[230,67,252,65],[230,68,252,66],[232,6,254,4],[233,6,255,4],[233,12,255,10,"storedCompetitions"],[233,30,255,28],[233,33,255,31],[233,39,255,37,"CrossPlatformStorage"],[233,59,255,57],[233,60,255,58,"getItem"],[233,67,255,65],[233,68,255,66],[233,86,255,84],[233,87,255,85],[234,6,256,4],[234,10,256,8,"existingCompetitions"],[234,30,256,28],[234,33,256,31,"storedCompetitions"],[234,51,256,49],[234,54,256,52,"JSON"],[234,58,256,56],[234,59,256,57,"parse"],[234,64,256,62],[234,65,256,63,"storedCompetitions"],[234,83,256,81],[234,84,256,82],[234,87,256,85],[234,89,256,87],[235,6,258,4,"console"],[235,13,258,11],[235,14,258,12,"log"],[235,17,258,15],[235,18,258,16],[235,60,258,58],[235,62,258,60,"existingCompetitions"],[235,82,258,80],[235,83,258,81,"length"],[235,89,258,87],[235,90,258,88],[237,6,260,4],[238,6,261,4],[238,12,261,10,"existingNames"],[238,25,261,23],[238,28,261,26,"existingCompetitions"],[238,48,261,46],[238,49,261,47,"map"],[238,52,261,50],[238,53,261,52,"comp"],[238,57,261,61],[238,61,261,66,"comp"],[238,65,261,70],[238,66,261,71,"name"],[238,70,261,75],[238,71,261,76,"toLowerCase"],[238,82,261,87],[238,83,261,88],[238,84,261,89],[238,85,261,90],[239,6,262,4],[239,10,262,8,"existingNames"],[239,23,262,21],[239,24,262,22,"includes"],[239,32,262,30],[239,33,262,31,"data"],[239,37,262,35],[239,38,262,36,"name"],[239,42,262,40],[239,43,262,41,"toLowerCase"],[239,54,262,52],[239,55,262,53],[239,56,262,54],[239,57,262,55],[239,59,262,57],[240,8,263,6],[240,14,263,12],[240,18,263,16,"Error"],[240,23,263,21],[240,24,263,22],[240,86,263,84],[240,87,263,85],[241,6,264,4],[243,6,266,4],[244,6,267,4],[244,12,267,10,"newCompetition"],[244,26,267,24],[244,29,267,27],[245,8,268,6,"_id"],[245,11,268,9],[245,13,268,11],[245,21,268,19,"Date"],[245,25,268,23],[245,26,268,24,"now"],[245,29,268,27],[245,30,268,28],[245,31,268,29],[245,33,268,31],[246,8,269,6,"name"],[246,12,269,10],[246,14,269,12,"data"],[246,18,269,16],[246,19,269,17,"name"],[246,23,269,21],[247,8,270,6,"total_matchdays"],[247,23,270,21],[247,25,270,23,"data"],[247,29,270,27],[247,30,270,28,"total_matchdays"],[247,45,270,43],[247,49,270,47],[247,51,270,49],[248,8,271,6,"participation_cost_per_team"],[248,35,271,33],[248,37,271,35,"data"],[248,41,271,39],[248,42,271,40,"participation_cost_per_team"],[248,69,271,67],[248,73,271,71],[248,78,271,76],[249,8,272,6,"expected_teams"],[249,22,272,20],[249,24,272,22,"data"],[249,28,272,26],[249,29,272,27,"expected_teams"],[249,43,272,41],[249,47,272,45],[249,48,272,46],[250,8,273,6,"total_prize_pool"],[250,24,273,22],[250,26,273,24,"data"],[250,30,273,28],[250,31,273,29,"total_prize_pool"],[250,47,273,45],[250,51,273,49],[250,57,273,55],[251,8,274,6,"daily_payment_enabled"],[251,29,274,27],[251,31,274,29,"data"],[251,35,274,33],[251,36,274,34,"daily_payment_enabled"],[251,57,274,55],[251,61,274,59],[251,66,274,64],[252,8,275,6,"daily_payment_amount"],[252,28,275,26],[252,30,275,28,"data"],[252,34,275,32],[252,35,275,33,"daily_payment_amount"],[252,55,275,53],[252,59,275,57],[252,62,275,60],[253,8,276,6,"rules"],[253,13,276,11],[253,15,276,13,"data"],[253,19,276,17],[253,20,276,18,"rules"],[253,25,276,23],[254,8,277,6,"invite_code"],[254,19,277,17],[254,21,277,19,"Math"],[254,25,277,23],[254,26,277,24,"random"],[254,32,277,30],[254,33,277,31],[254,34,277,32],[254,35,277,33,"toString"],[254,43,277,41],[254,44,277,42],[254,46,277,44],[254,47,277,45],[254,48,277,46,"substr"],[254,54,277,52],[254,55,277,53],[254,56,277,54],[254,58,277,56],[254,59,277,57],[254,60,277,58],[254,61,277,59,"toUpperCase"],[254,72,277,70],[254,73,277,71],[254,74,277,72],[255,8,278,6,"invite_link"],[255,19,278,17],[255,21,278,19],[255,50,278,48,"Math"],[255,54,278,52],[255,55,278,53,"random"],[255,61,278,59],[255,62,278,60],[255,63,278,61],[255,64,278,62,"toString"],[255,72,278,70],[255,73,278,71],[255,75,278,73],[255,76,278,74],[255,77,278,75,"substr"],[255,83,278,81],[255,84,278,82],[255,85,278,83],[255,87,278,85],[255,88,278,86],[255,89,278,87],[255,90,278,88,"toUpperCase"],[255,101,278,99],[255,102,278,100],[255,103,278,101],[255,105,278,103],[256,8,279,6,"admin_id"],[256,16,279,14],[256,18,279,16],[256,44,279,42],[257,8,279,44],[258,8,280,6,"participants"],[258,20,280,18],[258,22,280,20],[258,23,281,8],[259,10,282,10,"id"],[259,12,282,12],[259,14,282,14],[259,40,282,40],[260,10,283,10,"name"],[260,14,283,14],[260,16,283,16],[260,33,283,33],[261,10,284,10,"email"],[261,15,284,15],[261,17,284,17],[261,36,284,36],[262,10,285,10,"is_admin"],[262,18,285,18],[262,20,285,20],[262,24,285,24],[263,10,286,10,"paid_matchdays"],[263,24,286,24],[263,26,286,26],[263,27,286,27],[263,28,286,28],[263,30,286,30],[263,31,286,31],[263,32,286,32],[264,10,286,34],[265,10,287,10,"points"],[265,16,287,16],[265,18,287,18],[266,8,288,8],[266,9,288,9],[266,10,289,7],[267,8,290,6,"wallet_balance"],[267,22,290,20],[267,24,290,22],[267,25,290,23],[268,8,291,6,"is_active"],[268,17,291,15],[268,19,291,17],[268,23,291,21],[269,8,292,6,"current_matchday"],[269,24,292,22],[269,26,292,24],[269,27,292,25],[270,8,292,27],[271,8,293,6,"standings"],[271,17,293,15],[271,19,293,17],[271,20,294,8],[272,10,294,10,"position"],[272,18,294,18],[272,20,294,20],[272,21,294,21],[273,10,294,23,"player_id"],[273,19,294,32],[273,21,294,34],[273,47,294,60],[274,10,294,62,"name"],[274,14,294,66],[274,16,294,68],[274,33,294,85],[275,10,294,87,"points"],[275,16,294,93],[275,18,294,95],[276,8,294,97],[276,9,294,98],[276,10,295,7],[277,8,296,6,"created_at"],[277,18,296,16],[277,20,296,18],[277,24,296,22,"Date"],[277,28,296,26],[277,29,296,27],[277,30,296,28],[277,31,296,29,"toISOString"],[277,42,296,40],[277,43,296,41],[277,44,296,42],[278,8,297,6,"updated_at"],[278,18,297,16],[278,20,297,18],[278,24,297,22,"Date"],[278,28,297,26],[278,29,297,27],[278,30,297,28],[278,31,297,29,"toISOString"],[278,42,297,40],[278,43,297,41],[279,6,298,4],[279,7,298,5],[281,6,300,4],[282,6,301,4,"existingCompetitions"],[282,26,301,24],[282,27,301,25,"push"],[282,31,301,29],[282,32,301,30,"newCompetition"],[282,46,301,44],[282,47,301,45],[283,6,302,4],[283,12,302,10,"CrossPlatformStorage"],[283,32,302,30],[283,33,302,31,"setItem"],[283,40,302,38],[283,41,302,39],[283,59,302,57],[283,61,302,59,"JSON"],[283,65,302,63],[283,66,302,64,"stringify"],[283,75,302,73],[283,76,302,74,"existingCompetitions"],[283,96,302,94],[283,97,302,95],[283,98,302,96],[285,6,304,4],[286,6,305,4],[286,12,305,10,"logAdminAction"],[286,26,305,24],[286,27,305,25],[286,35,305,33],[286,37,305,35,"newCompetition"],[286,51,305,49],[286,52,305,50,"name"],[286,56,305,54],[286,58,305,56],[286,75,305,73],[286,77,305,75],[287,8,306,6,"competition_id"],[287,22,306,20],[287,24,306,22,"newCompetition"],[287,38,306,36],[287,39,306,37,"_id"],[287,42,306,40],[288,8,307,6,"rules"],[288,13,307,11],[288,15,307,13,"newCompetition"],[288,29,307,27],[288,30,307,28,"rules"],[288,35,307,33],[289,8,308,6,"total_matchdays"],[289,23,308,21],[289,25,308,23,"newCompetition"],[289,39,308,37],[289,40,308,38,"total_matchdays"],[289,55,308,53],[290,8,309,6,"participation_cost_per_team"],[290,35,309,33],[290,37,309,35,"newCompetition"],[290,51,309,49],[290,52,309,50,"participation_cost_per_team"],[290,79,309,77],[291,8,310,6,"expected_teams"],[291,22,310,20],[291,24,310,22,"newCompetition"],[291,38,310,36],[291,39,310,37,"expected_teams"],[291,53,310,51],[292,8,311,6,"total_prize_pool"],[292,24,311,22],[292,26,311,24,"newCompetition"],[292,40,311,38],[292,41,311,39,"total_prize_pool"],[292,57,311,55],[293,8,312,6,"daily_payment_enabled"],[293,29,312,27],[293,31,312,29,"newCompetition"],[293,45,312,43],[293,46,312,44,"daily_payment_enabled"],[293,67,312,65],[294,8,313,6,"daily_payment_amount"],[294,28,313,26],[294,30,313,28,"newCompetition"],[294,44,313,42],[294,45,313,43,"daily_payment_amount"],[295,6,314,4],[295,7,314,5],[295,8,314,6],[296,6,316,4,"console"],[296,13,316,11],[296,14,316,12,"log"],[296,17,316,15],[296,18,316,16],[296,47,316,45],[296,49,316,47,"newCompetition"],[296,63,316,61],[296,64,316,62,"name"],[296,68,316,66],[296,69,316,67],[297,6,317,4,"console"],[297,13,317,11],[297,14,317,12,"log"],[297,17,317,15],[297,18,317,16],[297,40,317,38],[297,42,317,40,"newCompetition"],[297,56,317,54],[297,57,317,55,"name"],[297,61,317,59],[297,62,317,60],[298,6,318,4,"console"],[298,13,318,11],[298,14,318,12,"log"],[298,17,318,15],[298,18,318,16],[298,37,318,35],[298,39,318,37,"newCompetition"],[298,53,318,51],[298,54,318,52,"daily_payment_enabled"],[298,75,318,73],[298,78,318,76],[298,82,318,80,"newCompetition"],[298,96,318,94],[298,97,318,95,"daily_payment_amount"],[298,117,318,115],[298,132,318,130],[298,135,318,133],[298,145,318,143],[298,146,318,144],[299,6,319,4,"console"],[299,13,319,11],[299,14,319,12,"log"],[299,17,319,15],[299,18,319,16],[299,40,319,38],[299,42,319,40],[299,46,319,44,"newCompetition"],[299,60,319,58],[299,61,319,59,"total_prize_pool"],[299,77,319,75],[299,79,319,77],[299,80,319,78],[300,6,320,4,"console"],[300,13,320,11],[300,14,320,12,"log"],[300,17,320,15],[300,18,320,16],[300,35,320,33],[300,37,320,35,"newCompetition"],[300,51,320,49],[300,52,320,50,"invite_code"],[300,63,320,61],[300,64,320,62],[301,6,322,4],[301,13,322,11],[302,8,322,13,"data"],[302,12,322,17],[302,14,322,19,"newCompetition"],[303,6,322,34],[303,7,322,35],[304,4,323,2],[304,5,323,3],[305,4,325,2],[306,4,326,2,"payMatchdaysMock"],[306,20,326,18],[306,22,326,20],[306,28,326,20,"payMatchdaysMock"],[306,29,326,27,"competitionId"],[306,42,326,48],[306,44,326,50,"matchdays"],[306,53,326,69],[306,58,326,74],[307,6,327,4,"console"],[307,13,327,11],[307,14,327,12,"log"],[307,17,327,15],[307,18,327,16],[307,49,327,47],[307,51,327,49,"matchdays"],[307,60,327,58],[307,62,327,60],[307,78,327,76],[307,80,327,78,"competitionId"],[307,93,327,91],[307,94,327,92],[309,6,329,4],[310,6,330,4],[310,12,330,10,"totalCost"],[310,21,330,19],[310,24,330,22,"matchdays"],[310,33,330,31],[310,34,330,32,"length"],[310,40,330,38],[310,43,330,41],[310,44,330,42],[310,45,330,43],[310,46,330,44],[312,6,332,4],[313,6,333,4],[313,13,333,11],[314,8,334,6,"data"],[314,12,334,10],[314,14,334,12],[315,10,335,8,"message"],[315,17,335,15],[315,19,335,17],[315,44,335,42,"matchdays"],[315,53,335,51],[315,54,335,52,"length"],[315,60,335,58],[315,72,335,70],[316,10,336,8,"paid_matchdays"],[316,24,336,22],[316,26,336,24,"matchdays"],[316,35,336,33],[317,10,337,8,"total_cost"],[317,20,337,18],[317,22,337,20,"totalCost"],[317,31,337,29],[318,10,338,8,"new_user_balance"],[318,26,338,24],[318,28,338,26],[318,31,338,29],[318,34,338,32,"totalCost"],[318,43,338,41],[318,44,338,42],[319,8,339,6],[320,6,340,4],[320,7,340,5],[321,4,341,2],[321,5,341,3],[322,4,343,2,"getMatchdayPaymentsMock"],[322,27,343,25],[322,29,343,27],[322,35,343,34,"competitionId"],[322,48,343,55],[322,52,343,60],[323,6,344,4,"console"],[323,13,344,11],[323,14,344,12,"log"],[323,17,344,15],[323,18,344,16],[323,70,344,68],[323,72,344,70,"competitionId"],[323,85,344,83],[323,86,344,84],[325,6,346,4],[326,6,347,4],[326,12,347,10,"mockPayments"],[326,24,347,22],[326,27,347,25],[326,29,347,27],[327,6,348,4],[327,11,348,9],[327,15,348,13,"i"],[327,16,348,14],[327,19,348,17],[327,20,348,18],[327,22,348,20,"i"],[327,23,348,21],[327,27,348,25],[327,29,348,27],[327,31,348,29,"i"],[327,32,348,30],[327,34,348,32],[327,36,348,34],[328,8,349,6,"mockPayments"],[328,20,349,18],[328,21,349,19,"push"],[328,25,349,23],[328,26,349,24],[329,10,350,8,"_id"],[329,13,350,11],[329,15,350,13],[329,26,350,24,"i"],[329,27,350,25],[329,29,350,27],[330,10,351,8,"user_id"],[330,17,351,15],[330,19,351,17],[330,45,351,43],[331,10,352,8,"competition_id"],[331,24,352,22],[331,26,352,24,"competitionId"],[331,39,352,37],[332,10,353,8,"matchday"],[332,18,353,16],[332,20,353,18,"i"],[332,21,353,19],[333,10,354,8,"amount"],[333,16,354,14],[333,18,354,16],[333,19,354,17],[334,10,355,8,"status"],[334,16,355,14],[334,18,355,16,"i"],[334,19,355,17],[334,23,355,21],[334,24,355,22],[334,27,355,25],[334,33,355,31],[334,36,355,34],[334,45,355,43],[335,10,356,8,"paid_at"],[335,17,356,15],[335,19,356,17,"i"],[335,20,356,18],[335,24,356,22],[335,25,356,23],[335,28,356,26],[335,32,356,30,"Date"],[335,36,356,34],[335,37,356,35],[335,38,356,36],[335,39,356,37,"toISOString"],[335,50,356,48],[335,51,356,49],[335,52,356,50],[335,55,356,53],[335,59,356,57],[336,10,357,8,"created_at"],[336,20,357,18],[336,22,357,20],[336,26,357,24,"Date"],[336,30,357,28],[336,31,357,29],[336,32,357,30],[336,33,357,31,"toISOString"],[336,44,357,42],[336,45,357,43],[337,8,358,6],[337,9,358,7],[337,10,358,8],[338,6,359,4],[339,6,361,4],[339,13,361,11],[340,8,362,6,"data"],[340,12,362,10],[340,14,362,12],[341,10,363,8,"competition_id"],[341,24,363,22],[341,26,363,24,"competitionId"],[341,39,363,37],[342,10,364,8,"daily_payment_enabled"],[342,31,364,29],[342,33,364,31],[342,37,364,35],[343,10,365,8,"daily_payment_amount"],[343,30,365,28],[343,32,365,30],[343,33,365,31],[344,10,366,8,"total_matchdays"],[344,25,366,23],[344,27,366,25],[344,29,366,27],[345,10,367,8,"payments"],[345,18,367,16],[345,20,367,18,"mockPayments"],[346,8,368,6],[347,6,369,4],[347,7,369,5],[348,4,370,2],[348,5,370,3],[349,4,372,2,"getPaymentStatusTableMock"],[349,29,372,27],[349,31,372,29],[349,37,372,36,"competitionId"],[349,50,372,57],[349,54,372,62],[350,6,373,4,"console"],[350,13,373,11],[350,14,373,12,"log"],[350,17,373,15],[350,18,373,16],[350,73,373,71],[350,75,373,73,"competitionId"],[350,88,373,86],[350,89,373,87],[352,6,375,4],[353,6,376,4],[353,12,376,10,"mockTable"],[353,21,376,19],[353,24,376,22],[353,25,376,23],[354,8,377,6,"user_id"],[354,15,377,13],[354,17,377,15],[354,43,377,41],[355,8,378,6,"username"],[355,16,378,14],[355,18,378,16],[355,35,378,33],[356,8,379,6,"name"],[356,12,379,10],[356,14,379,12],[356,31,379,29],[357,8,380,6,"email"],[357,13,380,11],[357,15,380,13],[357,34,380,32],[358,8,381,6,"matchday_payments"],[358,25,381,23],[358,27,381,25,"Array"],[358,32,381,30],[358,33,381,31,"from"],[358,37,381,35],[358,38,381,36],[359,10,381,37,"length"],[359,16,381,43],[359,18,381,45],[360,8,381,47],[360,9,381,48],[360,11,381,50],[360,12,381,51,"_"],[360,13,381,52],[360,15,381,54,"i"],[360,16,381,55],[360,22,381,61],[361,10,382,8,"matchday"],[361,18,382,16],[361,20,382,18,"i"],[361,21,382,19],[361,24,382,22],[361,25,382,23],[362,10,383,8,"status"],[362,16,383,14],[362,18,383,17,"i"],[362,19,383,18],[362,22,383,21],[362,23,383,22],[362,26,383,25],[362,32,383,31],[362,35,383,34],[362,44,383,44],[363,10,384,8,"amount"],[363,16,384,14],[363,18,384,16],[363,19,384,17],[364,10,385,8,"paid_at"],[364,17,385,15],[364,19,385,17,"i"],[364,20,385,18],[364,23,385,21],[364,24,385,22],[364,27,385,25],[364,31,385,29,"Date"],[364,35,385,33],[364,36,385,34],[364,37,385,35],[364,38,385,36,"toISOString"],[364,49,385,47],[364,50,385,48],[364,51,385,49],[364,54,385,52],[365,8,386,6],[365,9,386,7],[365,10,386,8],[366,6,387,4],[366,7,387,5],[366,8,387,6],[367,6,389,4],[367,13,389,11],[368,8,390,6,"data"],[368,12,390,10],[368,14,390,12],[369,10,391,8,"competition_name"],[369,26,391,24],[369,28,391,26],[369,49,391,47],[370,10,392,8,"total_matchdays"],[370,25,392,23],[370,27,392,25],[370,29,392,27],[371,10,393,8,"daily_payment_amount"],[371,30,393,28],[371,32,393,30],[371,33,393,31],[372,10,394,8,"participants"],[372,22,394,20],[372,24,394,22,"mockTable"],[373,8,395,6],[374,6,396,4],[374,7,396,5],[375,4,397,2],[375,5,397,3],[376,4,399,2],[377,4,400,2,"validateNameMock"],[377,20,400,18],[377,22,400,20],[377,28,400,27,"name"],[377,32,400,39],[377,36,400,44],[378,6,401,4,"console"],[378,13,401,11],[378,14,401,12,"log"],[378,17,401,15],[378,18,401,16],[378,57,401,55],[378,59,401,57,"name"],[378,63,401,61],[378,64,401,62],[379,6,403,4],[379,10,403,8],[379,11,403,9,"name"],[379,15,403,13],[379,16,403,14,"trim"],[379,20,403,18],[379,21,403,19],[379,22,403,20],[379,24,403,22],[380,8,404,6],[380,15,404,13],[381,10,404,15,"available"],[381,19,404,24],[381,21,404,26],[381,25,404,30],[382,10,404,32,"message"],[382,17,404,39],[382,19,404,41],[383,8,404,44],[383,9,404,45],[384,6,405,4],[386,6,407,4],[387,6,408,4],[387,12,408,10,"storedCompetitions"],[387,30,408,28],[387,33,408,31],[387,39,408,37,"CrossPlatformStorage"],[387,59,408,57],[387,60,408,58,"getItem"],[387,67,408,65],[387,68,408,66],[387,86,408,84],[387,87,408,85],[388,6,409,4],[388,10,409,8,"existingCompetitions"],[388,30,409,28],[388,33,409,31,"storedCompetitions"],[388,51,409,49],[388,54,409,52,"JSON"],[388,58,409,56],[388,59,409,57,"parse"],[388,64,409,62],[388,65,409,63,"storedCompetitions"],[388,83,409,81],[388,84,409,82],[388,87,409,85],[388,89,409,87],[390,6,411,4],[391,6,412,4],[391,12,412,10,"defaultNames"],[391,24,412,22],[391,27,412,25],[391,28,412,26],[391,50,412,48],[391,52,412,50],[391,78,412,76],[391,80,412,78],[391,96,412,94],[391,97,412,95],[392,6,413,4],[392,12,413,10,"allNames"],[392,20,413,18],[392,23,413,21],[392,24,414,6],[392,27,414,9,"existingCompetitions"],[392,47,414,29],[392,48,414,30,"map"],[392,51,414,33],[392,52,414,35,"comp"],[392,56,414,44],[392,60,414,49,"comp"],[392,64,414,53],[392,65,414,54,"name"],[392,69,414,58],[392,70,414,59,"toLowerCase"],[392,81,414,70],[392,82,414,71],[392,83,414,72],[392,84,414,73],[392,86,415,6],[392,89,415,9,"defaultNames"],[392,101,415,21],[392,102,415,22,"map"],[392,105,415,25],[392,106,415,26,"name"],[392,110,415,30],[392,114,415,34,"name"],[392,118,415,38],[392,119,415,39,"toLowerCase"],[392,130,415,50],[392,131,415,51],[392,132,415,52],[392,133,415,53],[392,134,416,5],[393,6,418,4],[393,12,418,10,"isAvailable"],[393,23,418,21],[393,26,418,24],[393,27,418,25,"allNames"],[393,35,418,33],[393,36,418,34,"includes"],[393,44,418,42],[393,45,418,43,"name"],[393,49,418,47],[393,50,418,48,"toLowerCase"],[393,61,418,59],[393,62,418,60],[393,63,418,61],[393,64,418,62],[394,6,420,4],[394,13,420,11],[395,8,421,6,"available"],[395,17,421,15],[395,19,421,17,"isAvailable"],[395,30,421,28],[396,8,422,6,"message"],[396,15,422,13],[396,17,422,15,"isAvailable"],[396,28,422,26],[396,31,422,29],[396,47,422,45],[396,50,422,48],[397,6,423,4],[397,7,423,5],[398,4,424,2],[398,5,424,3],[399,4,426,2,"getMyCompetitionsMock"],[399,25,426,23],[399,27,426,25],[399,33,426,25,"getMyCompetitionsMock"],[399,34,426,25],[399,39,426,37],[400,6,427,4,"console"],[400,13,427,11],[400,14,427,12,"log"],[400,17,427,15],[400,18,427,16],[400,52,427,50],[400,53,427,51],[402,6,429,4],[403,6,430,4],[403,12,430,10,"storedCompetitions"],[403,30,430,28],[403,33,430,31],[403,39,430,37,"CrossPlatformStorage"],[403,59,430,57],[403,60,430,58,"getItem"],[403,67,430,65],[403,68,430,66],[403,86,430,84],[403,87,430,85],[404,6,431,4],[404,10,431,8,"competitions"],[404,22,431,20],[404,25,431,23,"storedCompetitions"],[404,43,431,41],[404,46,431,44,"JSON"],[404,50,431,48],[404,51,431,49,"parse"],[404,56,431,54],[404,57,431,55,"storedCompetitions"],[404,75,431,73],[404,76,431,74],[404,79,431,77],[404,81,431,79],[405,6,433,4,"console"],[405,13,433,11],[405,14,433,12,"log"],[405,17,433,15],[405,18,433,16],[405,53,433,51],[405,55,433,53,"competitions"],[405,67,433,65],[405,68,433,66,"length"],[405,74,433,72],[405,75,433,73],[407,6,435,4],[408,6,436,4,"competitions"],[408,18,436,16],[408,19,436,17,"forEach"],[408,26,436,24],[408,27,436,25],[408,28,436,26,"comp"],[408,32,436,35],[408,34,436,37,"index"],[408,39,436,50],[408,44,436,55],[409,8,437,6,"console"],[409,15,437,13],[409,16,437,14,"log"],[409,19,437,17],[409,20,437,18],[409,23,437,21,"index"],[409,28,437,26],[409,31,437,29],[409,32,437,30],[409,37,437,35,"comp"],[409,41,437,39],[409,42,437,40,"name"],[409,46,437,44],[409,55,437,53,"comp"],[409,59,437,57],[409,60,437,58,"_id"],[409,63,437,61],[409,66,437,64],[409,67,437,65],[410,6,438,4],[410,7,438,5],[410,8,438,6],[411,6,440,4],[411,13,440,11,"competitions"],[411,25,440,23],[412,4,441,2],[412,5,441,3],[413,4,443,2,"joinMock"],[413,12,443,10],[413,14,443,12],[413,20,443,19,"inviteCode"],[413,30,443,37],[413,34,443,42],[414,6,444,4,"console"],[414,13,444,11],[414,14,444,12,"log"],[414,17,444,15],[414,18,444,16],[414,59,444,57],[414,61,444,59,"inviteCode"],[414,71,444,69],[414,72,444,70],[415,6,445,4],[415,10,445,8,"inviteCode"],[415,20,445,18],[415,21,445,19,"length"],[415,27,445,25],[415,30,445,28],[415,31,445,29],[415,33,445,31],[416,8,446,6],[416,14,446,12],[416,18,446,16,"Error"],[416,23,446,21],[416,24,446,22],[416,45,446,43],[416,46,446,44],[417,6,447,4],[418,6,448,4],[418,13,448,11],[419,8,448,13,"message"],[419,15,448,20],[419,17,448,22],[420,6,448,57],[420,7,448,58],[421,4,449,2],[421,5,449,3],[422,4,451,2],[423,4,452,2,"deleteMock"],[423,14,452,12],[423,16,452,14],[423,22,452,21,"competitionId"],[423,35,452,42],[423,39,452,47],[424,6,453,4,"console"],[424,13,453,11],[424,14,453,12,"log"],[424,17,453,15],[424,18,453,16],[424,51,453,49],[424,53,453,51,"competitionId"],[424,66,453,64],[424,67,453,65],[425,6,455,4],[425,12,455,10,"storedCompetitions"],[425,30,455,28],[425,33,455,31],[425,39,455,37,"CrossPlatformStorage"],[425,59,455,57],[425,60,455,58,"getItem"],[425,67,455,65],[425,68,455,66],[425,86,455,84],[425,87,455,85],[426,6,456,4],[426,10,456,8,"competitions"],[426,22,456,20],[426,25,456,23,"storedCompetitions"],[426,43,456,41],[426,46,456,44,"JSON"],[426,50,456,48],[426,51,456,49,"parse"],[426,56,456,54],[426,57,456,55,"storedCompetitions"],[426,75,456,73],[426,76,456,74],[426,79,456,77],[426,81,456,79],[427,6,458,4],[427,12,458,10,"competitionToDelete"],[427,31,458,29],[427,34,458,32,"competitions"],[427,46,458,44],[427,47,458,45,"find"],[427,51,458,49],[427,52,458,51,"comp"],[427,56,458,60],[427,60,458,65,"comp"],[427,64,458,69],[427,65,458,70,"_id"],[427,68,458,73],[427,73,458,78,"competitionId"],[427,86,458,91],[427,87,458,92],[428,6,459,4],[428,10,459,8],[428,11,459,9,"competitionToDelete"],[428,30,459,28],[428,32,459,30],[429,8,460,6],[429,14,460,12],[429,18,460,16,"Error"],[429,23,460,21],[429,24,460,22],[429,47,460,45],[429,48,460,46],[430,6,461,4],[432,6,463,4],[433,6,464,4],[433,10,464,8,"competitionToDelete"],[433,29,464,27],[433,30,464,28,"admin_id"],[433,38,464,36],[433,43,464,41],[433,69,464,67],[433,71,464,69],[434,8,465,6],[434,14,465,12],[434,18,465,16,"Error"],[434,23,465,21],[434,24,465,22],[434,64,465,62],[434,65,465,63],[435,6,466,4],[437,6,468,4],[438,6,469,4,"competitions"],[438,18,469,16],[438,21,469,19,"competitions"],[438,33,469,31],[438,34,469,32,"filter"],[438,40,469,38],[438,41,469,40,"comp"],[438,45,469,49],[438,49,469,54,"comp"],[438,53,469,58],[438,54,469,59,"_id"],[438,57,469,62],[438,62,469,67,"competitionId"],[438,75,469,80],[438,76,469,81],[439,6,470,4],[439,12,470,10,"CrossPlatformStorage"],[439,32,470,30],[439,33,470,31,"setItem"],[439,40,470,38],[439,41,470,39],[439,59,470,57],[439,61,470,59,"JSON"],[439,65,470,63],[439,66,470,64,"stringify"],[439,75,470,73],[439,76,470,74,"competitions"],[439,88,470,86],[439,89,470,87],[439,90,470,88],[441,6,472,4],[442,6,473,4],[442,12,473,10,"logAdminAction"],[442,26,473,24],[442,27,473,25],[442,35,473,33],[442,37,473,35,"competitionToDelete"],[442,56,473,54],[442,57,473,55,"name"],[442,61,473,59],[442,63,473,61],[442,80,473,78],[442,81,473,79],[443,6,475,4,"console"],[443,13,475,11],[443,14,475,12,"log"],[443,17,475,15],[443,18,475,16],[443,54,475,52],[443,55,475,53],[444,6,476,4],[444,13,476,11],[445,8,476,13,"message"],[445,15,476,20],[445,17,476,22],[446,6,476,57],[446,7,476,58],[447,4,477,2],[447,5,477,3],[448,4,479,2],[449,4,480,2,"editMock"],[449,12,480,10],[449,14,480,12],[449,20,480,12,"editMock"],[449,21,480,19,"competitionId"],[449,34,480,40],[449,36,480,42,"updates"],[449,43,480,54],[449,48,480,59],[450,6,481,4,"console"],[450,13,481,11],[450,14,481,12,"log"],[450,17,481,15],[450,18,481,16],[450,49,481,47],[450,51,481,49,"competitionId"],[450,64,481,62],[450,66,481,64,"updates"],[450,73,481,71],[450,74,481,72],[451,6,483,4],[451,12,483,10,"storedCompetitions"],[451,30,483,28],[451,33,483,31],[451,39,483,37,"CrossPlatformStorage"],[451,59,483,57],[451,60,483,58,"getItem"],[451,67,483,65],[451,68,483,66],[451,86,483,84],[451,87,483,85],[452,6,484,4],[452,10,484,8,"competitions"],[452,22,484,20],[452,25,484,23,"storedCompetitions"],[452,43,484,41],[452,46,484,44,"JSON"],[452,50,484,48],[452,51,484,49,"parse"],[452,56,484,54],[452,57,484,55,"storedCompetitions"],[452,75,484,73],[452,76,484,74],[452,79,484,77],[452,81,484,79],[453,6,486,4],[453,12,486,10,"competitionIndex"],[453,28,486,26],[453,31,486,29,"competitions"],[453,43,486,41],[453,44,486,42,"findIndex"],[453,53,486,51],[453,54,486,53,"comp"],[453,58,486,62],[453,62,486,67,"comp"],[453,66,486,71],[453,67,486,72,"_id"],[453,70,486,75],[453,75,486,80,"competitionId"],[453,88,486,93],[453,89,486,94],[454,6,487,4],[454,10,487,8,"competitionIndex"],[454,26,487,24],[454,31,487,29],[454,32,487,30],[454,33,487,31],[454,35,487,33],[455,8,488,6],[455,14,488,12],[455,18,488,16,"Error"],[455,23,488,21],[455,24,488,22],[455,47,488,45],[455,48,488,46],[456,6,489,4],[457,6,491,4],[457,12,491,10,"competition"],[457,23,491,21],[457,26,491,24,"competitions"],[457,38,491,36],[457,39,491,37,"competitionIndex"],[457,55,491,53],[457,56,491,54],[459,6,493,4],[460,6,494,4],[460,10,494,8,"competition"],[460,21,494,19],[460,22,494,20,"admin_id"],[460,30,494,28],[460,35,494,33],[460,61,494,59],[460,63,494,61],[461,8,495,6],[461,14,495,12],[461,18,495,16,"Error"],[461,23,495,21],[461,24,495,22],[461,62,495,60],[461,63,495,61],[462,6,496,4],[464,6,498,4],[465,6,499,4,"competitions"],[465,18,499,16],[465,19,499,17,"competitionIndex"],[465,35,499,33],[465,36,499,34],[465,39,499,34,"Object"],[465,45,499,34],[465,46,499,34,"assign"],[465,52,499,34],[465,57,500,9,"competition"],[465,68,500,20],[465,70,501,9,"updates"],[465,77,501,16],[466,8,502,6,"updated_at"],[466,18,502,16],[466,20,502,18],[466,24,502,22,"Date"],[466,28,502,26],[466,29,502,27],[466,30,502,28],[466,31,502,29,"toISOString"],[466,42,502,40],[466,43,502,41],[467,6,502,42],[467,8,503,5],[468,6,505,4],[468,12,505,10,"CrossPlatformStorage"],[468,32,505,30],[468,33,505,31,"setItem"],[468,40,505,38],[468,41,505,39],[468,59,505,57],[468,61,505,59,"JSON"],[468,65,505,63],[468,66,505,64,"stringify"],[468,75,505,73],[468,76,505,74,"competitions"],[468,88,505,86],[468,89,505,87],[468,90,505,88],[470,6,507,4],[471,6,508,4],[471,12,508,10,"logAdminAction"],[471,26,508,24],[471,27,508,25],[471,33,508,31],[471,35,508,33,"competition"],[471,46,508,44],[471,47,508,45,"name"],[471,51,508,49],[471,53,508,51],[471,70,508,68],[471,72,508,70,"updates"],[471,79,508,77],[471,80,508,78],[472,6,510,4,"console"],[472,13,510,11],[472,14,510,12,"log"],[472,17,510,15],[472,18,510,16],[472,54,510,52],[472,55,510,53],[473,6,511,4],[473,13,511,11,"competitions"],[473,25,511,23],[473,26,511,24,"competitionIndex"],[473,42,511,40],[473,43,511,41],[474,4,512,2],[474,5,512,3],[475,4,514,2],[476,4,515,2,"awardDailyPrizeMock"],[476,23,515,21],[476,25,515,23],[476,31,515,23,"awardDailyPrizeMock"],[476,32,515,30,"competitionId"],[476,45,515,51],[476,47,515,53,"matchday"],[476,55,515,69],[476,57,515,71,"winnerId"],[476,65,515,87],[476,70,515,92],[477,6,516,4,"console"],[477,13,516,11],[477,14,516,12,"log"],[477,17,516,15],[477,18,516,16],[477,62,516,60],[477,64,516,62,"matchday"],[477,72,516,70],[477,74,516,72],[477,83,516,81],[477,85,516,83,"winnerId"],[477,93,516,91],[477,94,516,92],[478,6,518,4],[478,12,518,10,"storedCompetitions"],[478,30,518,28],[478,33,518,31],[478,39,518,37,"CrossPlatformStorage"],[478,59,518,57],[478,60,518,58,"getItem"],[478,67,518,65],[478,68,518,66],[478,86,518,84],[478,87,518,85],[479,6,519,4],[479,10,519,8,"competitions"],[479,22,519,20],[479,25,519,23,"storedCompetitions"],[479,43,519,41],[479,46,519,44,"JSON"],[479,50,519,48],[479,51,519,49,"parse"],[479,56,519,54],[479,57,519,55,"storedCompetitions"],[479,75,519,73],[479,76,519,74],[479,79,519,77],[479,81,519,79],[480,6,521,4],[480,12,521,10,"competitionIndex"],[480,28,521,26],[480,31,521,29,"competitions"],[480,43,521,41],[480,44,521,42,"findIndex"],[480,53,521,51],[480,54,521,53,"comp"],[480,58,521,62],[480,62,521,67,"comp"],[480,66,521,71],[480,67,521,72,"_id"],[480,70,521,75],[480,75,521,80,"competitionId"],[480,88,521,93],[480,89,521,94],[481,6,522,4],[481,10,522,8,"competitionIndex"],[481,26,522,24],[481,31,522,29],[481,32,522,30],[481,33,522,31],[481,35,522,33],[482,8,523,6],[482,14,523,12],[482,18,523,16,"Error"],[482,23,523,21],[482,24,523,22],[482,47,523,45],[482,48,523,46],[483,6,524,4],[484,6,526,4],[484,12,526,10,"competition"],[484,23,526,21],[484,26,526,24,"competitions"],[484,38,526,36],[484,39,526,37,"competitionIndex"],[484,55,526,53],[484,56,526,54],[486,6,528,4],[487,6,529,4],[487,10,529,8,"competition"],[487,21,529,19],[487,22,529,20,"admin_id"],[487,30,529,28],[487,35,529,33],[487,61,529,59],[487,63,529,61],[488,8,530,6],[488,14,530,12],[488,18,530,16,"Error"],[488,23,530,21],[488,24,530,22],[488,59,530,57],[488,60,530,58],[489,6,531,4],[491,6,533,4],[492,6,534,4],[492,10,534,8],[492,11,534,9,"competition"],[492,22,534,20],[492,23,534,21,"rules"],[492,28,534,26],[492,32,534,30],[492,33,534,31],[492,34,534,32],[492,41,534,39],[492,43,534,41],[492,50,534,48],[492,51,534,49],[492,52,534,50,"includes"],[492,60,534,58],[492,61,534,59,"competition"],[492,72,534,70],[492,73,534,71,"rules"],[492,78,534,76],[492,79,534,77,"type"],[492,83,534,81],[492,84,534,82],[492,86,534,84],[493,8,535,6],[493,14,535,12],[493,18,535,16,"Error"],[493,23,535,21],[493,24,535,22],[493,69,535,67],[493,70,535,68],[494,6,536,4],[495,6,538,4],[495,12,538,10,"dailyPrizeAmount"],[495,28,538,26],[495,31,538,29,"competition"],[495,42,538,40],[495,43,538,41,"rules"],[495,48,538,46],[495,49,538,47,"daily_prize"],[495,60,538,58],[495,64,538,62],[495,65,538,63],[496,6,539,4],[496,12,539,10,"winner"],[496,18,539,16],[496,21,539,19,"competition"],[496,32,539,30],[496,33,539,31,"participants"],[496,45,539,43],[496,46,539,44,"find"],[496,50,539,48],[496,51,539,50,"p"],[496,52,539,56],[496,56,539,61,"p"],[496,57,539,62],[496,58,539,63,"id"],[496,60,539,65],[496,65,539,70,"winnerId"],[496,73,539,78],[496,74,539,79],[497,6,541,4],[497,10,541,8],[497,11,541,9,"winner"],[497,17,541,15],[497,19,541,17],[498,8,542,6],[498,14,542,12],[498,18,542,16,"Error"],[498,23,542,21],[498,24,542,22],[498,57,542,55],[498,58,542,56],[499,6,543,4],[501,6,545,4],[502,6,546,4],[502,10,546,8],[502,11,546,9,"competition"],[502,22,546,20],[502,23,546,21,"daily_winners"],[502,36,546,34],[502,38,546,36],[503,8,547,6,"competition"],[503,19,547,17],[503,20,547,18,"daily_winners"],[503,33,547,31],[503,36,547,34],[503,37,547,35],[503,38,547,36],[504,6,548,4],[506,6,550,4],[507,6,551,4],[507,10,551,8,"competition"],[507,21,551,19],[507,22,551,20,"daily_winners"],[507,35,551,33],[507,36,551,34,"matchday"],[507,44,551,42],[507,45,551,43],[507,47,551,45],[508,8,552,6],[508,14,552,12],[508,18,552,16,"Error"],[508,23,552,21],[508,24,552,22],[508,52,552,50,"matchday"],[508,60,552,58],[508,83,552,81,"competition"],[508,94,552,92],[508,95,552,93,"daily_winners"],[508,108,552,106],[508,109,552,107,"matchday"],[508,117,552,115],[508,118,552,116],[508,119,552,117,"name"],[508,123,552,121],[508,125,552,123],[508,126,552,124],[509,6,553,4],[511,6,555,4],[512,6,556,4,"competition"],[512,17,556,15],[512,18,556,16,"daily_winners"],[512,31,556,29],[512,32,556,30,"matchday"],[512,40,556,38],[512,41,556,39],[512,44,556,42],[513,8,557,6,"user_id"],[513,15,557,13],[513,17,557,15,"winnerId"],[513,25,557,23],[514,8,558,6,"name"],[514,12,558,10],[514,14,558,12,"winner"],[514,20,558,18],[514,21,558,19,"name"],[514,25,558,23],[515,8,559,6,"amount"],[515,14,559,12],[515,16,559,14,"dailyPrizeAmount"],[515,32,559,30],[516,8,560,6,"awarded_at"],[516,18,560,16],[516,20,560,18],[516,24,560,22,"Date"],[516,28,560,26],[516,29,560,27],[516,30,560,28],[516,31,560,29,"toISOString"],[516,42,560,40],[516,43,560,41],[517,6,561,4],[517,7,561,5],[519,6,563,4],[520,6,564,4,"competitions"],[520,18,564,16],[520,19,564,17,"competitionIndex"],[520,35,564,33],[520,36,564,34],[520,39,564,37,"competition"],[520,50,564,48],[521,6,565,4],[521,12,565,10,"CrossPlatformStorage"],[521,32,565,30],[521,33,565,31,"setItem"],[521,40,565,38],[521,41,565,39],[521,59,565,57],[521,61,565,59,"JSON"],[521,65,565,63],[521,66,565,64,"stringify"],[521,75,565,73],[521,76,565,74,"competitions"],[521,88,565,86],[521,89,565,87],[521,90,565,88],[523,6,567,4],[524,6,568,4],[524,12,568,10,"logAdminAction"],[524,26,568,24],[524,27,568,25],[524,46,568,44],[524,48,568,46,"competition"],[524,59,568,57],[524,60,568,58,"name"],[524,64,568,62],[524,66,568,64],[524,83,568,81],[524,85,568,83],[525,8,569,6,"matchday"],[525,16,569,14],[526,8,570,6,"winner"],[526,14,570,12],[526,16,570,14,"winner"],[526,22,570,20],[526,23,570,21,"name"],[526,27,570,25],[527,8,571,6,"amount"],[527,14,571,12],[527,16,571,14,"dailyPrizeAmount"],[528,6,572,4],[528,7,572,5],[528,8,572,6],[530,6,574,4],[531,6,575,4,"console"],[531,13,575,11],[531,14,575,12,"log"],[531,17,575,15],[531,18,575,16],[531,24,575,22,"winner"],[531,30,575,28],[531,31,575,29,"name"],[531,35,575,33],[531,48,575,46,"dailyPrizeAmount"],[531,64,575,62],[531,89,575,87,"matchday"],[531,97,575,95],[531,99,575,97],[531,100,575,98],[532,6,577,4,"console"],[532,13,577,11],[532,14,577,12,"log"],[532,17,577,15],[532,18,577,16],[532,54,577,52],[532,55,577,53],[533,6,578,4],[533,13,578,11],[534,8,579,6,"message"],[534,15,579,13],[534,17,579,15],[534,36,579,34,"dailyPrizeAmount"],[534,52,579,50],[534,67,579,65,"winner"],[534,73,579,71],[534,74,579,72,"name"],[534,78,579,76],[534,95,579,93,"matchday"],[534,103,579,101],[534,105,579,103],[535,8,580,6,"competition"],[535,19,580,17],[535,21,580,19,"competition"],[536,6,581,4],[536,7,581,5],[537,4,582,2],[537,5,582,3],[538,4,584,2],[539,4,585,2,"getAdminLogsMock"],[539,20,585,18],[539,22,585,20],[539,28,585,20,"getAdminLogsMock"],[539,29,585,20],[539,34,585,32],[540,6,586,4,"console"],[540,13,586,11],[540,14,586,12,"log"],[540,17,586,15],[540,18,586,16],[540,47,586,45],[540,48,586,46],[541,6,588,4],[541,10,588,8],[542,8,589,6],[542,14,589,12,"logs"],[542,18,589,16],[542,21,589,19],[542,28,589,25,"CrossPlatformStorage"],[542,48,589,45],[542,49,589,46,"getItem"],[542,56,589,53],[542,57,589,54],[542,68,589,65],[542,69,589,66],[542,74,589,70],[542,78,589,74],[543,8,590,6],[543,14,590,12,"adminLogs"],[543,23,590,21],[543,26,590,24,"JSON"],[543,30,590,28],[543,31,590,29,"parse"],[543,36,590,34],[543,37,590,35,"logs"],[543,41,590,39],[543,42,590,40],[545,8,592,6],[546,8,593,6,"adminLogs"],[546,17,593,15],[546,18,593,16,"sort"],[546,22,593,20],[546,23,593,21],[546,24,593,22,"a"],[546,25,593,28],[546,27,593,30,"b"],[546,28,593,36],[546,33,593,41],[546,37,593,45,"Date"],[546,41,593,49],[546,42,593,50,"b"],[546,43,593,51],[546,44,593,52,"timestamp"],[546,53,593,61],[546,54,593,62],[546,55,593,63,"getTime"],[546,62,593,70],[546,63,593,71],[546,64,593,72],[546,67,593,75],[546,71,593,79,"Date"],[546,75,593,83],[546,76,593,84,"a"],[546,77,593,85],[546,78,593,86,"timestamp"],[546,87,593,95],[546,88,593,96],[546,89,593,97,"getTime"],[546,96,593,104],[546,97,593,105],[546,98,593,106],[546,99,593,107],[547,8,595,6,"console"],[547,15,595,13],[547,16,595,14,"log"],[547,19,595,17],[547,20,595,18],[547,42,595,40],[547,44,595,42,"adminLogs"],[547,53,595,51],[547,54,595,52,"length"],[547,60,595,58],[547,61,595,59],[548,8,596,6],[548,15,596,13,"adminLogs"],[548,24,596,22],[549,6,597,4],[549,7,597,5],[549,8,597,6],[549,15,597,13,"error"],[549,20,597,18],[549,22,597,20],[550,8,598,6,"console"],[550,15,598,13],[550,16,598,14,"error"],[550,21,598,19],[550,22,598,20],[550,52,598,50],[550,54,598,52,"error"],[550,59,598,57],[550,60,598,58],[551,8,599,6],[551,15,599,13],[551,17,599,15],[552,6,600,4],[553,4,601,2],[554,2,602,0],[554,3,602,1],[556,2,604,0],[557,2,605,7],[557,8,605,13,"walletAPI"],[557,17,605,22],[557,20,605,25],[558,4,606,2,"getBalance"],[558,14,606,12],[558,16,606,14,"getBalance"],[558,17,606,14],[558,22,606,20,"apiClient"],[558,31,606,29],[558,32,606,30,"get"],[558,35,606,33],[558,36,606,34],[558,53,606,51],[558,54,606,52],[559,4,608,2,"topUp"],[559,9,608,7],[559,11,608,10,"amount"],[559,17,608,24],[559,21,609,4,"apiClient"],[559,30,609,13],[559,31,609,14,"post"],[559,35,609,18],[559,36,609,19],[559,51,609,34],[559,53,609,36],[559,57,609,40],[559,59,609,42],[560,6,610,6,"params"],[560,12,610,12],[560,14,610,14],[561,8,610,16,"amount"],[562,6,610,23],[563,4,611,4],[563,5,611,5],[563,6,611,6],[564,4,613,2,"withdraw"],[564,12,613,10],[564,14,613,13,"amount"],[564,20,613,27],[564,24,614,4,"apiClient"],[564,33,614,13],[564,34,614,14,"post"],[564,38,614,18],[564,39,614,19],[564,57,614,37],[564,59,614,39],[564,63,614,43],[564,65,614,45],[565,6,615,6,"params"],[565,12,615,12],[565,14,615,14],[566,8,615,16,"amount"],[567,6,615,23],[568,4,616,4],[568,5,616,5],[568,6,616,6],[569,4,618,2,"getTransactions"],[569,19,618,17],[569,21,618,19,"getTransactions"],[569,22,618,19],[569,27,618,25,"apiClient"],[569,36,618,34],[569,37,618,35,"get"],[569,40,618,38],[569,41,618,39],[569,56,618,54],[570,2,619,0],[570,3,619,1],[571,2,621,0],[571,6,621,0,"_default"],[571,14,621,0],[571,17,621,15,"apiClient"],[571,26,621,24],[572,0,621,25],[572,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnC8D;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CE;yBCU;KDE;G3CG;Y6CE;G7CM;c8CG;kDCM,yCD;uCEW,yCF;G9CQ;YiDG;oDCM,yCD;GjD0B;uBmDG;oDDM,yCC;iDCkB,6BD;GnD2C;oBqDG;qBCQ,qFD;GrDQ;cuDK,sCvD;SwDE;MxDG;YyDE;MzDG;mB0DE,oC1D"},"hasCjsExports":false},"type":"js/module"}]}