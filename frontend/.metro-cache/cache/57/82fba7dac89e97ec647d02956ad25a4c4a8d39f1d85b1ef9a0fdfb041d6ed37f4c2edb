{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool,\n        daily_payment_enabled: newCompetition.daily_payment_enabled,\n        daily_payment_amount: newCompetition.daily_payment_amount\n      });\n      console.log('✅ Mock Competition Created:', newCompetition.name);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n      console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n      console.log('🔑 Invite Code:', newCompetition.invite_code);\n      return {\n        data: newCompetition\n      };\n    },\n    // Mock matchday payment methods\n    payMatchdaysMock: async (competitionId, matchdays) => {\n      console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n      // Simulate payment processing\n      const totalCost = matchdays.length * 5; // €5 per matchday\n\n      // Mock payment success\n      return {\n        data: {\n          message: `Successfully paid for ${matchdays.length} matchdays`,\n          paid_matchdays: matchdays,\n          total_cost: totalCost,\n          new_user_balance: 150 - totalCost // Mock remaining balance\n        }\n      };\n    },\n    getMatchdayPaymentsMock: async competitionId => {\n      console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n      // Mock payment data\n      const mockPayments = [];\n      for (let i = 1; i <= 36; i++) {\n        mockPayments.push({\n          _id: `payment_${i}`,\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          competition_id: competitionId,\n          matchday: i,\n          amount: 5,\n          status: i <= 3 ? 'paid' : 'pending',\n          paid_at: i <= 3 ? new Date().toISOString() : null,\n          created_at: new Date().toISOString()\n        });\n      }\n      return {\n        data: {\n          competition_id: competitionId,\n          daily_payment_enabled: true,\n          daily_payment_amount: 5,\n          total_matchdays: 36,\n          payments: mockPayments\n        }\n      };\n    },\n    getPaymentStatusTableMock: async competitionId => {\n      console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n      // Mock admin payment table\n      const mockTable = [{\n        user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        username: 'FantaPay Tester',\n        name: 'FantaPay Tester',\n        email: 'test@fantapay.com',\n        matchday_payments: Array.from({\n          length: 36\n        }, (_, i) => ({\n          matchday: i + 1,\n          status: i < 3 ? 'paid' : 'pending',\n          amount: 5,\n          paid_at: i < 3 ? new Date().toISOString() : null\n        }))\n      }];\n      return {\n        data: {\n          competition_name: 'Mock Fantasy League',\n          total_matchdays: 36,\n          daily_payment_amount: 5,\n          participants: mockTable\n        }\n      };\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n      const storedCompetitions = await CrossPlatformStorage.getItem('competitions_mock');\n      if (storedCompetitions) {\n        const competitions = JSON.parse(storedCompetitions);\n        console.log('📋 Competitions found in storage:', competitions.length);\n        competitions.forEach((comp, index) => {\n          console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n        });\n        return competitions;\n      } else {\n        console.log('📋 No competitions found in storage, returning empty array');\n        return [];\n      }\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = Object.assign({}, competition, updates, {\n        updated_at: new Date().toISOString()\n      });\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":574,"map":[[27,2,624,0,"Object"],[27,8,624,0],[27,9,624,0,"defineProperty"],[27,23,624,0],[27,24,624,0,"exports"],[27,31,624,0],[28,4,624,0,"enumerable"],[28,14,624,0],[29,4,624,0,"get"],[29,7,624,0],[29,18,624,0,"get"],[29,19,624,0],[30,6,624,0],[30,13,624,0,"_default"],[30,21,624,0],[31,4,624,0],[32,2,624,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,608,0,"Object"],[45,8,608,0],[45,9,608,0,"defineProperty"],[45,23,608,0],[45,24,608,0,"exports"],[45,31,608,0],[46,4,608,0,"enumerable"],[46,14,608,0],[47,4,608,0,"get"],[47,7,608,0],[47,18,608,0,"get"],[47,19,608,0],[48,6,608,0],[48,13,608,0,"walletAPI"],[48,22,608,0],[49,4,608,0],[50,2,608,0],[51,2,622,2],[51,6,622,2,"_expoVirtualEnv"],[51,21,622,2],[51,24,622,2,"require"],[51,31,622,2],[51,32,622,2,"_dependencyMap"],[51,46,622,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,171,45,153],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,0],[182,8,156,6,"logAdminAction"],[182,22,156,20],[182,25,156,23],[182,31,156,23,"logAdminAction"],[182,32,156,30,"action"],[182,38,156,44],[182,40,156,46,"competitionName"],[182,55,156,69],[182,57,156,71,"adminName"],[182,66,156,88],[182,68,156,90,"details"],[182,75,156,103],[182,80,156,108],[183,4,157,2],[183,8,157,6],[184,6,158,4],[184,12,158,10,"logs"],[184,16,158,14],[184,19,158,17],[184,26,158,23,"CrossPlatformStorage"],[184,46,158,43],[184,47,158,44,"getItem"],[184,54,158,51],[184,55,158,52],[184,66,158,63],[184,67,158,64],[184,72,158,68],[184,76,158,72],[185,6,159,4],[185,12,159,10,"adminLogs"],[185,21,159,19],[185,24,159,22,"JSON"],[185,28,159,26],[185,29,159,27,"parse"],[185,34,159,32],[185,35,159,33,"logs"],[185,39,159,37],[185,40,159,38],[186,6,161,4],[186,12,161,10,"logEntry"],[186,20,161,18],[186,23,161,21],[187,8,162,6,"id"],[187,10,162,8],[187,12,162,10],[187,19,162,17,"Date"],[187,23,162,21],[187,24,162,22,"now"],[187,27,162,25],[187,28,162,26],[187,29,162,27],[187,31,162,29],[188,8,163,6,"action"],[188,14,163,12],[189,8,164,6,"competition_name"],[189,24,164,22],[189,26,164,24,"competitionName"],[189,41,164,39],[190,8,165,6,"admin_name"],[190,18,165,16],[190,20,165,18,"adminName"],[190,29,165,27],[191,8,166,6,"details"],[191,15,166,13],[192,8,167,6,"timestamp"],[192,17,167,15],[192,19,167,17],[192,23,167,21,"Date"],[192,27,167,25],[192,28,167,26],[192,29,167,27],[192,30,167,28,"toISOString"],[192,41,167,39],[192,42,167,40],[193,6,168,4],[193,7,168,5],[194,6,170,4,"adminLogs"],[194,15,170,13],[194,16,170,14,"push"],[194,20,170,18],[194,21,170,19,"logEntry"],[194,29,170,27],[194,30,170,28],[195,6,171,4],[195,12,171,10,"CrossPlatformStorage"],[195,32,171,30],[195,33,171,31,"setItem"],[195,40,171,38],[195,41,171,39],[195,52,171,50],[195,54,171,52,"JSON"],[195,58,171,56],[195,59,171,57,"stringify"],[195,68,171,66],[195,69,171,67,"adminLogs"],[195,78,171,76],[195,79,171,77],[195,80,171,78],[196,6,173,4,"console"],[196,13,173,11],[196,14,173,12,"log"],[196,17,173,15],[196,18,173,16],[196,43,173,41],[196,45,173,43,"action"],[196,51,173,49],[196,53,173,51,"competitionName"],[196,68,173,66],[196,69,173,67],[197,4,174,2],[197,5,174,3],[197,6,174,4],[197,13,174,11,"error"],[197,18,174,16],[197,20,174,18],[198,6,175,4,"console"],[198,13,175,11],[198,14,175,12,"error"],[198,19,175,17],[198,20,175,18],[198,49,175,47],[198,51,175,49,"error"],[198,56,175,54],[198,57,175,55],[199,4,176,2],[200,2,177,0],[200,3,177,1],[202,2,179,0],[203,2,180,7],[203,8,180,13,"competitionAPI"],[203,22,180,27],[203,25,180,30],[204,4,181,2,"create"],[204,10,181,8],[204,12,181,11,"data"],[204,16,196,3],[204,20,196,8,"apiClient"],[204,29,196,17],[204,30,196,18,"post"],[204,34,196,22],[204,35,196,23],[204,50,196,38],[204,52,196,40,"data"],[204,56,196,44],[204,57,196,45],[205,4,198,2,"join"],[205,8,198,6],[205,10,198,9,"inviteCode"],[205,20,198,27],[205,24,199,4,"apiClient"],[205,33,199,13],[205,34,199,14,"post"],[205,38,199,18],[205,39,199,19],[205,59,199,39],[205,61,199,41],[206,6,199,43,"invite_code"],[206,17,199,54],[206,19,199,56,"inviteCode"],[207,4,199,67],[207,5,199,68],[207,6,199,69],[208,4,201,2,"getMyCompetitions"],[208,21,201,19],[208,23,201,21,"getMyCompetitions"],[208,24,201,21],[208,29,201,27,"apiClient"],[208,38,201,36],[208,39,201,37,"get"],[208,42,201,40],[208,43,201,41],[208,61,201,59],[208,62,201,60],[209,4,203,2,"getCompetition"],[209,18,203,16],[209,20,203,19,"id"],[209,22,203,29],[209,26,203,34,"apiClient"],[209,35,203,43],[209,36,203,44,"get"],[209,39,203,47],[209,40,203,48],[209,57,203,65,"id"],[209,59,203,67],[209,61,203,69],[209,62,203,70],[210,4,205,2,"updateStandings"],[210,19,205,17],[210,21,205,19,"updateStandings"],[210,22,206,4,"id"],[210,24,206,14],[210,26,207,4,"standings"],[210,35,207,18],[210,37,208,4,"matchday"],[210,45,208,21],[210,50,210,4,"apiClient"],[210,59,210,13],[210,60,210,14,"patch"],[210,65,210,19],[210,66,210,20],[210,83,210,37,"id"],[210,85,210,39],[210,97,210,51],[210,99,210,53],[211,6,211,6,"standings"],[211,15,211,15],[212,6,212,6,"matchday"],[213,4,213,4],[213,5,213,5],[213,6,213,6],[214,4,215,2,"payFee"],[214,10,215,8],[214,12,215,10,"payFee"],[214,13,215,11,"id"],[214,15,215,21],[214,17,215,23,"amount"],[214,23,215,37],[214,28,216,4,"apiClient"],[214,37,216,13],[214,38,216,14,"post"],[214,42,216,18],[214,43,216,19],[214,60,216,36,"id"],[214,62,216,38],[214,68,216,44],[214,70,216,46],[214,74,216,50],[214,76,216,52],[215,6,217,6,"params"],[215,12,217,12],[215,14,217,14],[216,8,217,16,"amount"],[217,6,217,23],[218,4,218,4],[218,5,218,5],[218,6,218,6],[219,4,220,2,"getTransactions"],[219,19,220,17],[219,21,220,20,"id"],[219,23,220,30],[219,27,221,4,"apiClient"],[219,36,221,13],[219,37,221,14,"get"],[219,40,221,17],[219,41,221,18],[219,58,221,35,"id"],[219,60,221,37],[219,75,221,52],[219,76,221,53],[220,4,223,2],[221,4,224,2,"payMatchdays"],[221,16,224,14],[221,18,224,16,"payMatchdays"],[221,19,224,17,"competitionId"],[221,32,224,38],[221,34,224,40,"matchdays"],[221,43,224,59],[221,48,225,4,"apiClient"],[221,57,225,13],[221,58,225,14,"post"],[221,62,225,18],[221,63,225,19],[221,80,225,36,"competitionId"],[221,93,225,49],[221,113,225,69],[221,115,225,71],[222,6,226,6,"competition_id"],[222,20,226,20],[222,22,226,22,"competitionId"],[222,35,226,35],[223,6,227,6,"matchdays"],[224,4,228,4],[224,5,228,5],[224,6,228,6],[225,4,230,2,"getMatchdayPayments"],[225,23,230,21],[225,25,230,24,"competitionId"],[225,38,230,45],[225,42,231,4,"apiClient"],[225,51,231,13],[225,52,231,14,"get"],[225,55,231,17],[225,56,231,18],[225,73,231,35,"competitionId"],[225,86,231,48],[225,106,231,68],[225,107,231,69],[226,4,233,2,"getPaymentStatusTable"],[226,25,233,23],[226,27,233,26,"competitionId"],[226,40,233,47],[226,44,234,4,"apiClient"],[226,53,234,13],[226,54,234,14,"get"],[226,57,234,17],[226,58,234,18],[226,75,234,35,"competitionId"],[226,88,234,48],[226,111,234,71],[226,112,234,72],[227,4,236,2],[228,4,237,2,"createMock"],[228,14,237,12],[228,16,237,14],[228,22,237,21,"data"],[228,26,250,3],[228,30,250,8],[229,6,251,4,"console"],[229,13,251,11],[229,14,251,12,"log"],[229,17,251,15],[229,18,251,16],[229,50,251,48],[229,52,251,50,"data"],[229,56,251,54],[229,57,251,55,"name"],[229,61,251,59],[229,62,251,60],[230,6,252,4,"console"],[230,13,252,11],[230,14,252,12,"log"],[230,17,252,15],[230,18,252,16],[230,39,252,37],[230,41,252,39,"data"],[230,45,252,43],[230,46,252,44,"total_matchdays"],[230,61,252,59],[230,65,252,63],[230,67,252,65],[230,68,252,66],[232,6,254,4],[233,6,255,4],[233,12,255,10,"storedCompetitions"],[233,30,255,28],[233,33,255,31],[233,39,255,37,"CrossPlatformStorage"],[233,59,255,57],[233,60,255,58,"getItem"],[233,67,255,65],[233,68,255,66],[233,86,255,84],[233,87,255,85],[234,6,256,4],[234,10,256,8,"existingCompetitions"],[234,30,256,28],[234,33,256,31,"storedCompetitions"],[234,51,256,49],[234,54,256,52,"JSON"],[234,58,256,56],[234,59,256,57,"parse"],[234,64,256,62],[234,65,256,63,"storedCompetitions"],[234,83,256,81],[234,84,256,82],[234,87,256,85],[234,89,256,87],[235,6,258,4,"console"],[235,13,258,11],[235,14,258,12,"log"],[235,17,258,15],[235,18,258,16],[235,60,258,58],[235,62,258,60,"existingCompetitions"],[235,82,258,80],[235,83,258,81,"length"],[235,89,258,87],[235,90,258,88],[237,6,260,4],[238,6,261,4],[238,12,261,10,"existingNames"],[238,25,261,23],[238,28,261,26,"existingCompetitions"],[238,48,261,46],[238,49,261,47,"map"],[238,52,261,50],[238,53,261,52,"comp"],[238,57,261,61],[238,61,261,66,"comp"],[238,65,261,70],[238,66,261,71,"name"],[238,70,261,75],[238,71,261,76,"toLowerCase"],[238,82,261,87],[238,83,261,88],[238,84,261,89],[238,85,261,90],[239,6,262,4],[239,10,262,8,"existingNames"],[239,23,262,21],[239,24,262,22,"includes"],[239,32,262,30],[239,33,262,31,"data"],[239,37,262,35],[239,38,262,36,"name"],[239,42,262,40],[239,43,262,41,"toLowerCase"],[239,54,262,52],[239,55,262,53],[239,56,262,54],[239,57,262,55],[239,59,262,57],[240,8,263,6],[240,14,263,12],[240,18,263,16,"Error"],[240,23,263,21],[240,24,263,22],[240,86,263,84],[240,87,263,85],[241,6,264,4],[243,6,266,4],[244,6,267,4],[244,12,267,10,"newCompetition"],[244,26,267,24],[244,29,267,27],[245,8,268,6,"_id"],[245,11,268,9],[245,13,268,11],[245,21,268,19,"Date"],[245,25,268,23],[245,26,268,24,"now"],[245,29,268,27],[245,30,268,28],[245,31,268,29],[245,33,268,31],[246,8,269,6,"name"],[246,12,269,10],[246,14,269,12,"data"],[246,18,269,16],[246,19,269,17,"name"],[246,23,269,21],[247,8,270,6,"total_matchdays"],[247,23,270,21],[247,25,270,23,"data"],[247,29,270,27],[247,30,270,28,"total_matchdays"],[247,45,270,43],[247,49,270,47],[247,51,270,49],[248,8,271,6,"participation_cost_per_team"],[248,35,271,33],[248,37,271,35,"data"],[248,41,271,39],[248,42,271,40,"participation_cost_per_team"],[248,69,271,67],[248,73,271,71],[248,78,271,76],[249,8,272,6,"expected_teams"],[249,22,272,20],[249,24,272,22,"data"],[249,28,272,26],[249,29,272,27,"expected_teams"],[249,43,272,41],[249,47,272,45],[249,48,272,46],[250,8,273,6,"total_prize_pool"],[250,24,273,22],[250,26,273,24,"data"],[250,30,273,28],[250,31,273,29,"total_prize_pool"],[250,47,273,45],[250,51,273,49],[250,57,273,55],[251,8,274,6,"daily_payment_enabled"],[251,29,274,27],[251,31,274,29,"data"],[251,35,274,33],[251,36,274,34,"daily_payment_enabled"],[251,57,274,55],[251,61,274,59],[251,66,274,64],[252,8,275,6,"daily_payment_amount"],[252,28,275,26],[252,30,275,28,"data"],[252,34,275,32],[252,35,275,33,"daily_payment_amount"],[252,55,275,53],[252,59,275,57],[252,62,275,60],[253,8,276,6,"rules"],[253,13,276,11],[253,15,276,13,"data"],[253,19,276,17],[253,20,276,18,"rules"],[253,25,276,23],[254,8,277,6,"invite_code"],[254,19,277,17],[254,21,277,19,"Math"],[254,25,277,23],[254,26,277,24,"random"],[254,32,277,30],[254,33,277,31],[254,34,277,32],[254,35,277,33,"toString"],[254,43,277,41],[254,44,277,42],[254,46,277,44],[254,47,277,45],[254,48,277,46,"substr"],[254,54,277,52],[254,55,277,53],[254,56,277,54],[254,58,277,56],[254,59,277,57],[254,60,277,58],[254,61,277,59,"toUpperCase"],[254,72,277,70],[254,73,277,71],[254,74,277,72],[255,8,278,6,"invite_link"],[255,19,278,17],[255,21,278,19],[255,50,278,48,"Math"],[255,54,278,52],[255,55,278,53,"random"],[255,61,278,59],[255,62,278,60],[255,63,278,61],[255,64,278,62,"toString"],[255,72,278,70],[255,73,278,71],[255,75,278,73],[255,76,278,74],[255,77,278,75,"substr"],[255,83,278,81],[255,84,278,82],[255,85,278,83],[255,87,278,85],[255,88,278,86],[255,89,278,87],[255,90,278,88,"toUpperCase"],[255,101,278,99],[255,102,278,100],[255,103,278,101],[255,105,278,103],[256,8,279,6,"admin_id"],[256,16,279,14],[256,18,279,16],[256,44,279,42],[257,8,279,44],[258,8,280,6,"participants"],[258,20,280,18],[258,22,280,20],[258,23,281,8],[259,10,282,10,"id"],[259,12,282,12],[259,14,282,14],[259,40,282,40],[260,10,283,10,"name"],[260,14,283,14],[260,16,283,16],[260,33,283,33],[261,10,284,10,"email"],[261,15,284,15],[261,17,284,17],[261,36,284,36],[262,10,285,10,"is_admin"],[262,18,285,18],[262,20,285,20],[262,24,285,24],[263,10,286,10,"paid_matchdays"],[263,24,286,24],[263,26,286,26],[263,27,286,27],[263,28,286,28],[263,30,286,30],[263,31,286,31],[263,32,286,32],[264,10,286,34],[265,10,287,10,"points"],[265,16,287,16],[265,18,287,18],[266,8,288,8],[266,9,288,9],[266,10,289,7],[267,8,290,6,"wallet_balance"],[267,22,290,20],[267,24,290,22],[267,25,290,23],[268,8,291,6,"is_active"],[268,17,291,15],[268,19,291,17],[268,23,291,21],[269,8,292,6,"current_matchday"],[269,24,292,22],[269,26,292,24],[269,27,292,25],[270,8,292,27],[271,8,293,6,"standings"],[271,17,293,15],[271,19,293,17],[271,20,294,8],[272,10,294,10,"position"],[272,18,294,18],[272,20,294,20],[272,21,294,21],[273,10,294,23,"player_id"],[273,19,294,32],[273,21,294,34],[273,47,294,60],[274,10,294,62,"name"],[274,14,294,66],[274,16,294,68],[274,33,294,85],[275,10,294,87,"points"],[275,16,294,93],[275,18,294,95],[276,8,294,97],[276,9,294,98],[276,10,295,7],[277,8,296,6,"created_at"],[277,18,296,16],[277,20,296,18],[277,24,296,22,"Date"],[277,28,296,26],[277,29,296,27],[277,30,296,28],[277,31,296,29,"toISOString"],[277,42,296,40],[277,43,296,41],[277,44,296,42],[278,8,297,6,"updated_at"],[278,18,297,16],[278,20,297,18],[278,24,297,22,"Date"],[278,28,297,26],[278,29,297,27],[278,30,297,28],[278,31,297,29,"toISOString"],[278,42,297,40],[278,43,297,41],[279,6,298,4],[279,7,298,5],[281,6,300,4],[282,6,301,4,"existingCompetitions"],[282,26,301,24],[282,27,301,25,"push"],[282,31,301,29],[282,32,301,30,"newCompetition"],[282,46,301,44],[282,47,301,45],[283,6,302,4],[283,12,302,10,"CrossPlatformStorage"],[283,32,302,30],[283,33,302,31,"setItem"],[283,40,302,38],[283,41,302,39],[283,59,302,57],[283,61,302,59,"JSON"],[283,65,302,63],[283,66,302,64,"stringify"],[283,75,302,73],[283,76,302,74,"existingCompetitions"],[283,96,302,94],[283,97,302,95],[283,98,302,96],[285,6,304,4],[286,6,305,4],[286,12,305,10,"logAdminAction"],[286,26,305,24],[286,27,305,25],[286,35,305,33],[286,37,305,35,"newCompetition"],[286,51,305,49],[286,52,305,50,"name"],[286,56,305,54],[286,58,305,56],[286,75,305,73],[286,77,305,75],[287,8,306,6,"competition_id"],[287,22,306,20],[287,24,306,22,"newCompetition"],[287,38,306,36],[287,39,306,37,"_id"],[287,42,306,40],[288,8,307,6,"rules"],[288,13,307,11],[288,15,307,13,"newCompetition"],[288,29,307,27],[288,30,307,28,"rules"],[288,35,307,33],[289,8,308,6,"total_matchdays"],[289,23,308,21],[289,25,308,23,"newCompetition"],[289,39,308,37],[289,40,308,38,"total_matchdays"],[289,55,308,53],[290,8,309,6,"participation_cost_per_team"],[290,35,309,33],[290,37,309,35,"newCompetition"],[290,51,309,49],[290,52,309,50,"participation_cost_per_team"],[290,79,309,77],[291,8,310,6,"expected_teams"],[291,22,310,20],[291,24,310,22,"newCompetition"],[291,38,310,36],[291,39,310,37,"expected_teams"],[291,53,310,51],[292,8,311,6,"total_prize_pool"],[292,24,311,22],[292,26,311,24,"newCompetition"],[292,40,311,38],[292,41,311,39,"total_prize_pool"],[292,57,311,55],[293,8,312,6,"daily_payment_enabled"],[293,29,312,27],[293,31,312,29,"newCompetition"],[293,45,312,43],[293,46,312,44,"daily_payment_enabled"],[293,67,312,65],[294,8,313,6,"daily_payment_amount"],[294,28,313,26],[294,30,313,28,"newCompetition"],[294,44,313,42],[294,45,313,43,"daily_payment_amount"],[295,6,314,4],[295,7,314,5],[295,8,314,6],[296,6,316,4,"console"],[296,13,316,11],[296,14,316,12,"log"],[296,17,316,15],[296,18,316,16],[296,47,316,45],[296,49,316,47,"newCompetition"],[296,63,316,61],[296,64,316,62,"name"],[296,68,316,66],[296,69,316,67],[297,6,317,4,"console"],[297,13,317,11],[297,14,317,12,"log"],[297,17,317,15],[297,18,317,16],[297,40,317,38],[297,42,317,40,"newCompetition"],[297,56,317,54],[297,57,317,55,"name"],[297,61,317,59],[297,62,317,60],[298,6,318,4,"console"],[298,13,318,11],[298,14,318,12,"log"],[298,17,318,15],[298,18,318,16],[298,37,318,35],[298,39,318,37,"newCompetition"],[298,53,318,51],[298,54,318,52,"daily_payment_enabled"],[298,75,318,73],[298,78,318,76],[298,82,318,80,"newCompetition"],[298,96,318,94],[298,97,318,95,"daily_payment_amount"],[298,117,318,115],[298,132,318,130],[298,135,318,133],[298,145,318,143],[298,146,318,144],[299,6,319,4,"console"],[299,13,319,11],[299,14,319,12,"log"],[299,17,319,15],[299,18,319,16],[299,40,319,38],[299,42,319,40],[299,46,319,44,"newCompetition"],[299,60,319,58],[299,61,319,59,"total_prize_pool"],[299,77,319,75],[299,79,319,77],[299,80,319,78],[300,6,320,4,"console"],[300,13,320,11],[300,14,320,12,"log"],[300,17,320,15],[300,18,320,16],[300,35,320,33],[300,37,320,35,"newCompetition"],[300,51,320,49],[300,52,320,50,"invite_code"],[300,63,320,61],[300,64,320,62],[301,6,322,4],[301,13,322,11],[302,8,322,13,"data"],[302,12,322,17],[302,14,322,19,"newCompetition"],[303,6,322,34],[303,7,322,35],[304,4,323,2],[304,5,323,3],[305,4,325,2],[306,4,326,2,"payMatchdaysMock"],[306,20,326,18],[306,22,326,20],[306,28,326,20,"payMatchdaysMock"],[306,29,326,27,"competitionId"],[306,42,326,48],[306,44,326,50,"matchdays"],[306,53,326,69],[306,58,326,74],[307,6,327,4,"console"],[307,13,327,11],[307,14,327,12,"log"],[307,17,327,15],[307,18,327,16],[307,49,327,47],[307,51,327,49,"matchdays"],[307,60,327,58],[307,62,327,60],[307,78,327,76],[307,80,327,78,"competitionId"],[307,93,327,91],[307,94,327,92],[309,6,329,4],[310,6,330,4],[310,12,330,10,"totalCost"],[310,21,330,19],[310,24,330,22,"matchdays"],[310,33,330,31],[310,34,330,32,"length"],[310,40,330,38],[310,43,330,41],[310,44,330,42],[310,45,330,43],[310,46,330,44],[312,6,332,4],[313,6,333,4],[313,13,333,11],[314,8,334,6,"data"],[314,12,334,10],[314,14,334,12],[315,10,335,8,"message"],[315,17,335,15],[315,19,335,17],[315,44,335,42,"matchdays"],[315,53,335,51],[315,54,335,52,"length"],[315,60,335,58],[315,72,335,70],[316,10,336,8,"paid_matchdays"],[316,24,336,22],[316,26,336,24,"matchdays"],[316,35,336,33],[317,10,337,8,"total_cost"],[317,20,337,18],[317,22,337,20,"totalCost"],[317,31,337,29],[318,10,338,8,"new_user_balance"],[318,26,338,24],[318,28,338,26],[318,31,338,29],[318,34,338,32,"totalCost"],[318,43,338,41],[318,44,338,42],[319,8,339,6],[320,6,340,4],[320,7,340,5],[321,4,341,2],[321,5,341,3],[322,4,343,2,"getMatchdayPaymentsMock"],[322,27,343,25],[322,29,343,27],[322,35,343,34,"competitionId"],[322,48,343,55],[322,52,343,60],[323,6,344,4,"console"],[323,13,344,11],[323,14,344,12,"log"],[323,17,344,15],[323,18,344,16],[323,70,344,68],[323,72,344,70,"competitionId"],[323,85,344,83],[323,86,344,84],[325,6,346,4],[326,6,347,4],[326,12,347,10,"mockPayments"],[326,24,347,22],[326,27,347,25],[326,29,347,27],[327,6,348,4],[327,11,348,9],[327,15,348,13,"i"],[327,16,348,14],[327,19,348,17],[327,20,348,18],[327,22,348,20,"i"],[327,23,348,21],[327,27,348,25],[327,29,348,27],[327,31,348,29,"i"],[327,32,348,30],[327,34,348,32],[327,36,348,34],[328,8,349,6,"mockPayments"],[328,20,349,18],[328,21,349,19,"push"],[328,25,349,23],[328,26,349,24],[329,10,350,8,"_id"],[329,13,350,11],[329,15,350,13],[329,26,350,24,"i"],[329,27,350,25],[329,29,350,27],[330,10,351,8,"user_id"],[330,17,351,15],[330,19,351,17],[330,45,351,43],[331,10,352,8,"competition_id"],[331,24,352,22],[331,26,352,24,"competitionId"],[331,39,352,37],[332,10,353,8,"matchday"],[332,18,353,16],[332,20,353,18,"i"],[332,21,353,19],[333,10,354,8,"amount"],[333,16,354,14],[333,18,354,16],[333,19,354,17],[334,10,355,8,"status"],[334,16,355,14],[334,18,355,16,"i"],[334,19,355,17],[334,23,355,21],[334,24,355,22],[334,27,355,25],[334,33,355,31],[334,36,355,34],[334,45,355,43],[335,10,356,8,"paid_at"],[335,17,356,15],[335,19,356,17,"i"],[335,20,356,18],[335,24,356,22],[335,25,356,23],[335,28,356,26],[335,32,356,30,"Date"],[335,36,356,34],[335,37,356,35],[335,38,356,36],[335,39,356,37,"toISOString"],[335,50,356,48],[335,51,356,49],[335,52,356,50],[335,55,356,53],[335,59,356,57],[336,10,357,8,"created_at"],[336,20,357,18],[336,22,357,20],[336,26,357,24,"Date"],[336,30,357,28],[336,31,357,29],[336,32,357,30],[336,33,357,31,"toISOString"],[336,44,357,42],[336,45,357,43],[337,8,358,6],[337,9,358,7],[337,10,358,8],[338,6,359,4],[339,6,361,4],[339,13,361,11],[340,8,362,6,"data"],[340,12,362,10],[340,14,362,12],[341,10,363,8,"competition_id"],[341,24,363,22],[341,26,363,24,"competitionId"],[341,39,363,37],[342,10,364,8,"daily_payment_enabled"],[342,31,364,29],[342,33,364,31],[342,37,364,35],[343,10,365,8,"daily_payment_amount"],[343,30,365,28],[343,32,365,30],[343,33,365,31],[344,10,366,8,"total_matchdays"],[344,25,366,23],[344,27,366,25],[344,29,366,27],[345,10,367,8,"payments"],[345,18,367,16],[345,20,367,18,"mockPayments"],[346,8,368,6],[347,6,369,4],[347,7,369,5],[348,4,370,2],[348,5,370,3],[349,4,372,2,"getPaymentStatusTableMock"],[349,29,372,27],[349,31,372,29],[349,37,372,36,"competitionId"],[349,50,372,57],[349,54,372,62],[350,6,373,4,"console"],[350,13,373,11],[350,14,373,12,"log"],[350,17,373,15],[350,18,373,16],[350,73,373,71],[350,75,373,73,"competitionId"],[350,88,373,86],[350,89,373,87],[352,6,375,4],[353,6,376,4],[353,12,376,10,"mockTable"],[353,21,376,19],[353,24,376,22],[353,25,376,23],[354,8,377,6,"user_id"],[354,15,377,13],[354,17,377,15],[354,43,377,41],[355,8,378,6,"username"],[355,16,378,14],[355,18,378,16],[355,35,378,33],[356,8,379,6,"name"],[356,12,379,10],[356,14,379,12],[356,31,379,29],[357,8,380,6,"email"],[357,13,380,11],[357,15,380,13],[357,34,380,32],[358,8,381,6,"matchday_payments"],[358,25,381,23],[358,27,381,25,"Array"],[358,32,381,30],[358,33,381,31,"from"],[358,37,381,35],[358,38,381,36],[359,10,381,37,"length"],[359,16,381,43],[359,18,381,45],[360,8,381,47],[360,9,381,48],[360,11,381,50],[360,12,381,51,"_"],[360,13,381,52],[360,15,381,54,"i"],[360,16,381,55],[360,22,381,61],[361,10,382,8,"matchday"],[361,18,382,16],[361,20,382,18,"i"],[361,21,382,19],[361,24,382,22],[361,25,382,23],[362,10,383,8,"status"],[362,16,383,14],[362,18,383,17,"i"],[362,19,383,18],[362,22,383,21],[362,23,383,22],[362,26,383,25],[362,32,383,31],[362,35,383,34],[362,44,383,44],[363,10,384,8,"amount"],[363,16,384,14],[363,18,384,16],[363,19,384,17],[364,10,385,8,"paid_at"],[364,17,385,15],[364,19,385,17,"i"],[364,20,385,18],[364,23,385,21],[364,24,385,22],[364,27,385,25],[364,31,385,29,"Date"],[364,35,385,33],[364,36,385,34],[364,37,385,35],[364,38,385,36,"toISOString"],[364,49,385,47],[364,50,385,48],[364,51,385,49],[364,54,385,52],[365,8,386,6],[365,9,386,7],[365,10,386,8],[366,6,387,4],[366,7,387,5],[366,8,387,6],[367,6,389,4],[367,13,389,11],[368,8,390,6,"data"],[368,12,390,10],[368,14,390,12],[369,10,391,8,"competition_name"],[369,26,391,24],[369,28,391,26],[369,49,391,47],[370,10,392,8,"total_matchdays"],[370,25,392,23],[370,27,392,25],[370,29,392,27],[371,10,393,8,"daily_payment_amount"],[371,30,393,28],[371,32,393,30],[371,33,393,31],[372,10,394,8,"participants"],[372,22,394,20],[372,24,394,22,"mockTable"],[373,8,395,6],[374,6,396,4],[374,7,396,5],[375,4,397,2],[375,5,397,3],[376,4,399,2],[377,4,400,2,"validateNameMock"],[377,20,400,18],[377,22,400,20],[377,28,400,27,"name"],[377,32,400,39],[377,36,400,44],[378,6,401,4,"console"],[378,13,401,11],[378,14,401,12,"log"],[378,17,401,15],[378,18,401,16],[378,57,401,55],[378,59,401,57,"name"],[378,63,401,61],[378,64,401,62],[379,6,403,4],[379,10,403,8],[379,11,403,9,"name"],[379,15,403,13],[379,16,403,14,"trim"],[379,20,403,18],[379,21,403,19],[379,22,403,20],[379,24,403,22],[380,8,404,6],[380,15,404,13],[381,10,404,15,"available"],[381,19,404,24],[381,21,404,26],[381,25,404,30],[382,10,404,32,"message"],[382,17,404,39],[382,19,404,41],[383,8,404,44],[383,9,404,45],[384,6,405,4],[386,6,407,4],[387,6,408,4],[387,12,408,10,"storedCompetitions"],[387,30,408,28],[387,33,408,31],[387,39,408,37,"CrossPlatformStorage"],[387,59,408,57],[387,60,408,58,"getItem"],[387,67,408,65],[387,68,408,66],[387,86,408,84],[387,87,408,85],[388,6,409,4],[388,10,409,8,"existingCompetitions"],[388,30,409,28],[388,33,409,31,"storedCompetitions"],[388,51,409,49],[388,54,409,52,"JSON"],[388,58,409,56],[388,59,409,57,"parse"],[388,64,409,62],[388,65,409,63,"storedCompetitions"],[388,83,409,81],[388,84,409,82],[388,87,409,85],[388,89,409,87],[390,6,411,4],[391,6,412,4],[391,12,412,10,"defaultNames"],[391,24,412,22],[391,27,412,25],[391,28,412,26],[391,50,412,48],[391,52,412,50],[391,78,412,76],[391,80,412,78],[391,96,412,94],[391,97,412,95],[392,6,413,4],[392,12,413,10,"allNames"],[392,20,413,18],[392,23,413,21],[392,24,414,6],[392,27,414,9,"existingCompetitions"],[392,47,414,29],[392,48,414,30,"map"],[392,51,414,33],[392,52,414,35,"comp"],[392,56,414,44],[392,60,414,49,"comp"],[392,64,414,53],[392,65,414,54,"name"],[392,69,414,58],[392,70,414,59,"toLowerCase"],[392,81,414,70],[392,82,414,71],[392,83,414,72],[392,84,414,73],[392,86,415,6],[392,89,415,9,"defaultNames"],[392,101,415,21],[392,102,415,22,"map"],[392,105,415,25],[392,106,415,26,"name"],[392,110,415,30],[392,114,415,34,"name"],[392,118,415,38],[392,119,415,39,"toLowerCase"],[392,130,415,50],[392,131,415,51],[392,132,415,52],[392,133,415,53],[392,134,416,5],[393,6,418,4],[393,12,418,10,"isAvailable"],[393,23,418,21],[393,26,418,24],[393,27,418,25,"allNames"],[393,35,418,33],[393,36,418,34,"includes"],[393,44,418,42],[393,45,418,43,"name"],[393,49,418,47],[393,50,418,48,"toLowerCase"],[393,61,418,59],[393,62,418,60],[393,63,418,61],[393,64,418,62],[394,6,420,4],[394,13,420,11],[395,8,421,6,"available"],[395,17,421,15],[395,19,421,17,"isAvailable"],[395,30,421,28],[396,8,422,6,"message"],[396,15,422,13],[396,17,422,15,"isAvailable"],[396,28,422,26],[396,31,422,29],[396,47,422,45],[396,50,422,48],[397,6,423,4],[397,7,423,5],[398,4,424,2],[398,5,424,3],[399,4,426,2],[400,4,427,2,"getMyCompetitionsMock"],[400,25,427,23],[400,27,427,25],[400,33,427,25,"getMyCompetitionsMock"],[400,34,427,25],[400,39,427,37],[401,6,428,4,"console"],[401,13,428,11],[401,14,428,12,"log"],[401,17,428,15],[401,18,428,16],[401,52,428,50],[401,53,428,51],[402,6,429,4],[402,12,429,10,"storedCompetitions"],[402,30,429,28],[402,33,429,31],[402,39,429,37,"CrossPlatformStorage"],[402,59,429,57],[402,60,429,58,"getItem"],[402,67,429,65],[402,68,429,66],[402,87,429,85],[402,88,429,86],[403,6,431,4],[403,10,431,8,"storedCompetitions"],[403,28,431,26],[403,30,431,28],[404,8,432,6],[404,14,432,12,"competitions"],[404,26,432,24],[404,29,432,27,"JSON"],[404,33,432,31],[404,34,432,32,"parse"],[404,39,432,37],[404,40,432,38,"storedCompetitions"],[404,58,432,56],[404,59,432,57],[405,8,433,6,"console"],[405,15,433,13],[405,16,433,14,"log"],[405,19,433,17],[405,20,433,18],[405,55,433,53],[405,57,433,55,"competitions"],[405,69,433,67],[405,70,433,68,"length"],[405,76,433,74],[405,77,433,75],[406,8,435,6,"competitions"],[406,20,435,18],[406,21,435,19,"forEach"],[406,28,435,26],[406,29,435,27],[406,30,435,28,"comp"],[406,34,435,37],[406,36,435,39,"index"],[406,41,435,52],[406,46,435,57],[407,10,436,8,"console"],[407,17,436,15],[407,18,436,16,"log"],[407,21,436,19],[407,22,436,20],[407,25,436,23,"index"],[407,30,436,28],[407,33,436,31],[407,34,436,32],[407,39,436,37,"comp"],[407,43,436,41],[407,44,436,42,"name"],[407,48,436,46],[407,57,436,55,"comp"],[407,61,436,59],[407,62,436,60,"_id"],[407,65,436,63],[407,68,436,66],[407,69,436,67],[408,8,437,6],[408,9,437,7],[408,10,437,8],[409,8,439,6],[409,15,439,13,"competitions"],[409,27,439,25],[410,6,440,4],[410,7,440,5],[410,13,440,11],[411,8,441,6,"console"],[411,15,441,13],[411,16,441,14,"log"],[411,19,441,17],[411,20,441,18],[411,80,441,78],[411,81,441,79],[412,8,442,6],[412,15,442,13],[412,17,442,15],[413,6,443,4],[414,4,444,2],[414,5,444,3],[415,4,446,2,"joinMock"],[415,12,446,10],[415,14,446,12],[415,20,446,19,"inviteCode"],[415,30,446,37],[415,34,446,42],[416,6,447,4,"console"],[416,13,447,11],[416,14,447,12,"log"],[416,17,447,15],[416,18,447,16],[416,59,447,57],[416,61,447,59,"inviteCode"],[416,71,447,69],[416,72,447,70],[417,6,448,4],[417,10,448,8,"inviteCode"],[417,20,448,18],[417,21,448,19,"length"],[417,27,448,25],[417,30,448,28],[417,31,448,29],[417,33,448,31],[418,8,449,6],[418,14,449,12],[418,18,449,16,"Error"],[418,23,449,21],[418,24,449,22],[418,45,449,43],[418,46,449,44],[419,6,450,4],[420,6,451,4],[420,13,451,11],[421,8,451,13,"message"],[421,15,451,20],[421,17,451,22],[422,6,451,57],[422,7,451,58],[423,4,452,2],[423,5,452,3],[424,4,454,2],[425,4,455,2,"deleteMock"],[425,14,455,12],[425,16,455,14],[425,22,455,21,"competitionId"],[425,35,455,42],[425,39,455,47],[426,6,456,4,"console"],[426,13,456,11],[426,14,456,12,"log"],[426,17,456,15],[426,18,456,16],[426,51,456,49],[426,53,456,51,"competitionId"],[426,66,456,64],[426,67,456,65],[427,6,458,4],[427,12,458,10,"storedCompetitions"],[427,30,458,28],[427,33,458,31],[427,39,458,37,"CrossPlatformStorage"],[427,59,458,57],[427,60,458,58,"getItem"],[427,67,458,65],[427,68,458,66],[427,86,458,84],[427,87,458,85],[428,6,459,4],[428,10,459,8,"competitions"],[428,22,459,20],[428,25,459,23,"storedCompetitions"],[428,43,459,41],[428,46,459,44,"JSON"],[428,50,459,48],[428,51,459,49,"parse"],[428,56,459,54],[428,57,459,55,"storedCompetitions"],[428,75,459,73],[428,76,459,74],[428,79,459,77],[428,81,459,79],[429,6,461,4],[429,12,461,10,"competitionToDelete"],[429,31,461,29],[429,34,461,32,"competitions"],[429,46,461,44],[429,47,461,45,"find"],[429,51,461,49],[429,52,461,51,"comp"],[429,56,461,60],[429,60,461,65,"comp"],[429,64,461,69],[429,65,461,70,"_id"],[429,68,461,73],[429,73,461,78,"competitionId"],[429,86,461,91],[429,87,461,92],[430,6,462,4],[430,10,462,8],[430,11,462,9,"competitionToDelete"],[430,30,462,28],[430,32,462,30],[431,8,463,6],[431,14,463,12],[431,18,463,16,"Error"],[431,23,463,21],[431,24,463,22],[431,47,463,45],[431,48,463,46],[432,6,464,4],[434,6,466,4],[435,6,467,4],[435,10,467,8,"competitionToDelete"],[435,29,467,27],[435,30,467,28,"admin_id"],[435,38,467,36],[435,43,467,41],[435,69,467,67],[435,71,467,69],[436,8,468,6],[436,14,468,12],[436,18,468,16,"Error"],[436,23,468,21],[436,24,468,22],[436,64,468,62],[436,65,468,63],[437,6,469,4],[439,6,471,4],[440,6,472,4,"competitions"],[440,18,472,16],[440,21,472,19,"competitions"],[440,33,472,31],[440,34,472,32,"filter"],[440,40,472,38],[440,41,472,40,"comp"],[440,45,472,49],[440,49,472,54,"comp"],[440,53,472,58],[440,54,472,59,"_id"],[440,57,472,62],[440,62,472,67,"competitionId"],[440,75,472,80],[440,76,472,81],[441,6,473,4],[441,12,473,10,"CrossPlatformStorage"],[441,32,473,30],[441,33,473,31,"setItem"],[441,40,473,38],[441,41,473,39],[441,59,473,57],[441,61,473,59,"JSON"],[441,65,473,63],[441,66,473,64,"stringify"],[441,75,473,73],[441,76,473,74,"competitions"],[441,88,473,86],[441,89,473,87],[441,90,473,88],[443,6,475,4],[444,6,476,4],[444,12,476,10,"logAdminAction"],[444,26,476,24],[444,27,476,25],[444,35,476,33],[444,37,476,35,"competitionToDelete"],[444,56,476,54],[444,57,476,55,"name"],[444,61,476,59],[444,63,476,61],[444,80,476,78],[444,81,476,79],[445,6,478,4,"console"],[445,13,478,11],[445,14,478,12,"log"],[445,17,478,15],[445,18,478,16],[445,54,478,52],[445,55,478,53],[446,6,479,4],[446,13,479,11],[447,8,479,13,"message"],[447,15,479,20],[447,17,479,22],[448,6,479,57],[448,7,479,58],[449,4,480,2],[449,5,480,3],[450,4,482,2],[451,4,483,2,"editMock"],[451,12,483,10],[451,14,483,12],[451,20,483,12,"editMock"],[451,21,483,19,"competitionId"],[451,34,483,40],[451,36,483,42,"updates"],[451,43,483,54],[451,48,483,59],[452,6,484,4,"console"],[452,13,484,11],[452,14,484,12,"log"],[452,17,484,15],[452,18,484,16],[452,49,484,47],[452,51,484,49,"competitionId"],[452,64,484,62],[452,66,484,64,"updates"],[452,73,484,71],[452,74,484,72],[453,6,486,4],[453,12,486,10,"storedCompetitions"],[453,30,486,28],[453,33,486,31],[453,39,486,37,"CrossPlatformStorage"],[453,59,486,57],[453,60,486,58,"getItem"],[453,67,486,65],[453,68,486,66],[453,86,486,84],[453,87,486,85],[454,6,487,4],[454,10,487,8,"competitions"],[454,22,487,20],[454,25,487,23,"storedCompetitions"],[454,43,487,41],[454,46,487,44,"JSON"],[454,50,487,48],[454,51,487,49,"parse"],[454,56,487,54],[454,57,487,55,"storedCompetitions"],[454,75,487,73],[454,76,487,74],[454,79,487,77],[454,81,487,79],[455,6,489,4],[455,12,489,10,"competitionIndex"],[455,28,489,26],[455,31,489,29,"competitions"],[455,43,489,41],[455,44,489,42,"findIndex"],[455,53,489,51],[455,54,489,53,"comp"],[455,58,489,62],[455,62,489,67,"comp"],[455,66,489,71],[455,67,489,72,"_id"],[455,70,489,75],[455,75,489,80,"competitionId"],[455,88,489,93],[455,89,489,94],[456,6,490,4],[456,10,490,8,"competitionIndex"],[456,26,490,24],[456,31,490,29],[456,32,490,30],[456,33,490,31],[456,35,490,33],[457,8,491,6],[457,14,491,12],[457,18,491,16,"Error"],[457,23,491,21],[457,24,491,22],[457,47,491,45],[457,48,491,46],[458,6,492,4],[459,6,494,4],[459,12,494,10,"competition"],[459,23,494,21],[459,26,494,24,"competitions"],[459,38,494,36],[459,39,494,37,"competitionIndex"],[459,55,494,53],[459,56,494,54],[461,6,496,4],[462,6,497,4],[462,10,497,8,"competition"],[462,21,497,19],[462,22,497,20,"admin_id"],[462,30,497,28],[462,35,497,33],[462,61,497,59],[462,63,497,61],[463,8,498,6],[463,14,498,12],[463,18,498,16,"Error"],[463,23,498,21],[463,24,498,22],[463,62,498,60],[463,63,498,61],[464,6,499,4],[466,6,501,4],[467,6,502,4,"competitions"],[467,18,502,16],[467,19,502,17,"competitionIndex"],[467,35,502,33],[467,36,502,34],[467,39,502,34,"Object"],[467,45,502,34],[467,46,502,34,"assign"],[467,52,502,34],[467,57,503,9,"competition"],[467,68,503,20],[467,70,504,9,"updates"],[467,77,504,16],[468,8,505,6,"updated_at"],[468,18,505,16],[468,20,505,18],[468,24,505,22,"Date"],[468,28,505,26],[468,29,505,27],[468,30,505,28],[468,31,505,29,"toISOString"],[468,42,505,40],[468,43,505,41],[469,6,505,42],[469,8,506,5],[470,6,508,4],[470,12,508,10,"CrossPlatformStorage"],[470,32,508,30],[470,33,508,31,"setItem"],[470,40,508,38],[470,41,508,39],[470,59,508,57],[470,61,508,59,"JSON"],[470,65,508,63],[470,66,508,64,"stringify"],[470,75,508,73],[470,76,508,74,"competitions"],[470,88,508,86],[470,89,508,87],[470,90,508,88],[472,6,510,4],[473,6,511,4],[473,12,511,10,"logAdminAction"],[473,26,511,24],[473,27,511,25],[473,33,511,31],[473,35,511,33,"competition"],[473,46,511,44],[473,47,511,45,"name"],[473,51,511,49],[473,53,511,51],[473,70,511,68],[473,72,511,70,"updates"],[473,79,511,77],[473,80,511,78],[474,6,513,4,"console"],[474,13,513,11],[474,14,513,12,"log"],[474,17,513,15],[474,18,513,16],[474,54,513,52],[474,55,513,53],[475,6,514,4],[475,13,514,11,"competitions"],[475,25,514,23],[475,26,514,24,"competitionIndex"],[475,42,514,40],[475,43,514,41],[476,4,515,2],[476,5,515,3],[477,4,517,2],[478,4,518,2,"awardDailyPrizeMock"],[478,23,518,21],[478,25,518,23],[478,31,518,23,"awardDailyPrizeMock"],[478,32,518,30,"competitionId"],[478,45,518,51],[478,47,518,53,"matchday"],[478,55,518,69],[478,57,518,71,"winnerId"],[478,65,518,87],[478,70,518,92],[479,6,519,4,"console"],[479,13,519,11],[479,14,519,12,"log"],[479,17,519,15],[479,18,519,16],[479,62,519,60],[479,64,519,62,"matchday"],[479,72,519,70],[479,74,519,72],[479,83,519,81],[479,85,519,83,"winnerId"],[479,93,519,91],[479,94,519,92],[480,6,521,4],[480,12,521,10,"storedCompetitions"],[480,30,521,28],[480,33,521,31],[480,39,521,37,"CrossPlatformStorage"],[480,59,521,57],[480,60,521,58,"getItem"],[480,67,521,65],[480,68,521,66],[480,86,521,84],[480,87,521,85],[481,6,522,4],[481,10,522,8,"competitions"],[481,22,522,20],[481,25,522,23,"storedCompetitions"],[481,43,522,41],[481,46,522,44,"JSON"],[481,50,522,48],[481,51,522,49,"parse"],[481,56,522,54],[481,57,522,55,"storedCompetitions"],[481,75,522,73],[481,76,522,74],[481,79,522,77],[481,81,522,79],[482,6,524,4],[482,12,524,10,"competitionIndex"],[482,28,524,26],[482,31,524,29,"competitions"],[482,43,524,41],[482,44,524,42,"findIndex"],[482,53,524,51],[482,54,524,53,"comp"],[482,58,524,62],[482,62,524,67,"comp"],[482,66,524,71],[482,67,524,72,"_id"],[482,70,524,75],[482,75,524,80,"competitionId"],[482,88,524,93],[482,89,524,94],[483,6,525,4],[483,10,525,8,"competitionIndex"],[483,26,525,24],[483,31,525,29],[483,32,525,30],[483,33,525,31],[483,35,525,33],[484,8,526,6],[484,14,526,12],[484,18,526,16,"Error"],[484,23,526,21],[484,24,526,22],[484,47,526,45],[484,48,526,46],[485,6,527,4],[486,6,529,4],[486,12,529,10,"competition"],[486,23,529,21],[486,26,529,24,"competitions"],[486,38,529,36],[486,39,529,37,"competitionIndex"],[486,55,529,53],[486,56,529,54],[488,6,531,4],[489,6,532,4],[489,10,532,8,"competition"],[489,21,532,19],[489,22,532,20,"admin_id"],[489,30,532,28],[489,35,532,33],[489,61,532,59],[489,63,532,61],[490,8,533,6],[490,14,533,12],[490,18,533,16,"Error"],[490,23,533,21],[490,24,533,22],[490,59,533,57],[490,60,533,58],[491,6,534,4],[493,6,536,4],[494,6,537,4],[494,10,537,8],[494,11,537,9,"competition"],[494,22,537,20],[494,23,537,21,"rules"],[494,28,537,26],[494,32,537,30],[494,33,537,31],[494,34,537,32],[494,41,537,39],[494,43,537,41],[494,50,537,48],[494,51,537,49],[494,52,537,50,"includes"],[494,60,537,58],[494,61,537,59,"competition"],[494,72,537,70],[494,73,537,71,"rules"],[494,78,537,76],[494,79,537,77,"type"],[494,83,537,81],[494,84,537,82],[494,86,537,84],[495,8,538,6],[495,14,538,12],[495,18,538,16,"Error"],[495,23,538,21],[495,24,538,22],[495,69,538,67],[495,70,538,68],[496,6,539,4],[497,6,541,4],[497,12,541,10,"dailyPrizeAmount"],[497,28,541,26],[497,31,541,29,"competition"],[497,42,541,40],[497,43,541,41,"rules"],[497,48,541,46],[497,49,541,47,"daily_prize"],[497,60,541,58],[497,64,541,62],[497,65,541,63],[498,6,542,4],[498,12,542,10,"winner"],[498,18,542,16],[498,21,542,19,"competition"],[498,32,542,30],[498,33,542,31,"participants"],[498,45,542,43],[498,46,542,44,"find"],[498,50,542,48],[498,51,542,50,"p"],[498,52,542,56],[498,56,542,61,"p"],[498,57,542,62],[498,58,542,63,"id"],[498,60,542,65],[498,65,542,70,"winnerId"],[498,73,542,78],[498,74,542,79],[499,6,544,4],[499,10,544,8],[499,11,544,9,"winner"],[499,17,544,15],[499,19,544,17],[500,8,545,6],[500,14,545,12],[500,18,545,16,"Error"],[500,23,545,21],[500,24,545,22],[500,57,545,55],[500,58,545,56],[501,6,546,4],[503,6,548,4],[504,6,549,4],[504,10,549,8],[504,11,549,9,"competition"],[504,22,549,20],[504,23,549,21,"daily_winners"],[504,36,549,34],[504,38,549,36],[505,8,550,6,"competition"],[505,19,550,17],[505,20,550,18,"daily_winners"],[505,33,550,31],[505,36,550,34],[505,37,550,35],[505,38,550,36],[506,6,551,4],[508,6,553,4],[509,6,554,4],[509,10,554,8,"competition"],[509,21,554,19],[509,22,554,20,"daily_winners"],[509,35,554,33],[509,36,554,34,"matchday"],[509,44,554,42],[509,45,554,43],[509,47,554,45],[510,8,555,6],[510,14,555,12],[510,18,555,16,"Error"],[510,23,555,21],[510,24,555,22],[510,52,555,50,"matchday"],[510,60,555,58],[510,83,555,81,"competition"],[510,94,555,92],[510,95,555,93,"daily_winners"],[510,108,555,106],[510,109,555,107,"matchday"],[510,117,555,115],[510,118,555,116],[510,119,555,117,"name"],[510,123,555,121],[510,125,555,123],[510,126,555,124],[511,6,556,4],[513,6,558,4],[514,6,559,4,"competition"],[514,17,559,15],[514,18,559,16,"daily_winners"],[514,31,559,29],[514,32,559,30,"matchday"],[514,40,559,38],[514,41,559,39],[514,44,559,42],[515,8,560,6,"user_id"],[515,15,560,13],[515,17,560,15,"winnerId"],[515,25,560,23],[516,8,561,6,"name"],[516,12,561,10],[516,14,561,12,"winner"],[516,20,561,18],[516,21,561,19,"name"],[516,25,561,23],[517,8,562,6,"amount"],[517,14,562,12],[517,16,562,14,"dailyPrizeAmount"],[517,32,562,30],[518,8,563,6,"awarded_at"],[518,18,563,16],[518,20,563,18],[518,24,563,22,"Date"],[518,28,563,26],[518,29,563,27],[518,30,563,28],[518,31,563,29,"toISOString"],[518,42,563,40],[518,43,563,41],[519,6,564,4],[519,7,564,5],[521,6,566,4],[522,6,567,4,"competitions"],[522,18,567,16],[522,19,567,17,"competitionIndex"],[522,35,567,33],[522,36,567,34],[522,39,567,37,"competition"],[522,50,567,48],[523,6,568,4],[523,12,568,10,"CrossPlatformStorage"],[523,32,568,30],[523,33,568,31,"setItem"],[523,40,568,38],[523,41,568,39],[523,59,568,57],[523,61,568,59,"JSON"],[523,65,568,63],[523,66,568,64,"stringify"],[523,75,568,73],[523,76,568,74,"competitions"],[523,88,568,86],[523,89,568,87],[523,90,568,88],[525,6,570,4],[526,6,571,4],[526,12,571,10,"logAdminAction"],[526,26,571,24],[526,27,571,25],[526,46,571,44],[526,48,571,46,"competition"],[526,59,571,57],[526,60,571,58,"name"],[526,64,571,62],[526,66,571,64],[526,83,571,81],[526,85,571,83],[527,8,572,6,"matchday"],[527,16,572,14],[528,8,573,6,"winner"],[528,14,573,12],[528,16,573,14,"winner"],[528,22,573,20],[528,23,573,21,"name"],[528,27,573,25],[529,8,574,6,"amount"],[529,14,574,12],[529,16,574,14,"dailyPrizeAmount"],[530,6,575,4],[530,7,575,5],[530,8,575,6],[532,6,577,4],[533,6,578,4,"console"],[533,13,578,11],[533,14,578,12,"log"],[533,17,578,15],[533,18,578,16],[533,24,578,22,"winner"],[533,30,578,28],[533,31,578,29,"name"],[533,35,578,33],[533,48,578,46,"dailyPrizeAmount"],[533,64,578,62],[533,89,578,87,"matchday"],[533,97,578,95],[533,99,578,97],[533,100,578,98],[534,6,580,4,"console"],[534,13,580,11],[534,14,580,12,"log"],[534,17,580,15],[534,18,580,16],[534,54,580,52],[534,55,580,53],[535,6,581,4],[535,13,581,11],[536,8,582,6,"message"],[536,15,582,13],[536,17,582,15],[536,36,582,34,"dailyPrizeAmount"],[536,52,582,50],[536,67,582,65,"winner"],[536,73,582,71],[536,74,582,72,"name"],[536,78,582,76],[536,95,582,93,"matchday"],[536,103,582,101],[536,105,582,103],[537,8,583,6,"competition"],[537,19,583,17],[537,21,583,19,"competition"],[538,6,584,4],[538,7,584,5],[539,4,585,2],[539,5,585,3],[540,4,587,2],[541,4,588,2,"getAdminLogsMock"],[541,20,588,18],[541,22,588,20],[541,28,588,20,"getAdminLogsMock"],[541,29,588,20],[541,34,588,32],[542,6,589,4,"console"],[542,13,589,11],[542,14,589,12,"log"],[542,17,589,15],[542,18,589,16],[542,47,589,45],[542,48,589,46],[543,6,591,4],[543,10,591,8],[544,8,592,6],[544,14,592,12,"logs"],[544,18,592,16],[544,21,592,19],[544,28,592,25,"CrossPlatformStorage"],[544,48,592,45],[544,49,592,46,"getItem"],[544,56,592,53],[544,57,592,54],[544,68,592,65],[544,69,592,66],[544,74,592,70],[544,78,592,74],[545,8,593,6],[545,14,593,12,"adminLogs"],[545,23,593,21],[545,26,593,24,"JSON"],[545,30,593,28],[545,31,593,29,"parse"],[545,36,593,34],[545,37,593,35,"logs"],[545,41,593,39],[545,42,593,40],[547,8,595,6],[548,8,596,6,"adminLogs"],[548,17,596,15],[548,18,596,16,"sort"],[548,22,596,20],[548,23,596,21],[548,24,596,22,"a"],[548,25,596,28],[548,27,596,30,"b"],[548,28,596,36],[548,33,596,41],[548,37,596,45,"Date"],[548,41,596,49],[548,42,596,50,"b"],[548,43,596,51],[548,44,596,52,"timestamp"],[548,53,596,61],[548,54,596,62],[548,55,596,63,"getTime"],[548,62,596,70],[548,63,596,71],[548,64,596,72],[548,67,596,75],[548,71,596,79,"Date"],[548,75,596,83],[548,76,596,84,"a"],[548,77,596,85],[548,78,596,86,"timestamp"],[548,87,596,95],[548,88,596,96],[548,89,596,97,"getTime"],[548,96,596,104],[548,97,596,105],[548,98,596,106],[548,99,596,107],[549,8,598,6,"console"],[549,15,598,13],[549,16,598,14,"log"],[549,19,598,17],[549,20,598,18],[549,42,598,40],[549,44,598,42,"adminLogs"],[549,53,598,51],[549,54,598,52,"length"],[549,60,598,58],[549,61,598,59],[550,8,599,6],[550,15,599,13,"adminLogs"],[550,24,599,22],[551,6,600,4],[551,7,600,5],[551,8,600,6],[551,15,600,13,"error"],[551,20,600,18],[551,22,600,20],[552,8,601,6,"console"],[552,15,601,13],[552,16,601,14,"error"],[552,21,601,19],[552,22,601,20],[552,52,601,50],[552,54,601,52,"error"],[552,59,601,57],[552,60,601,58],[553,8,602,6],[553,15,602,13],[553,17,602,15],[554,6,603,4],[555,4,604,2],[556,2,605,0],[556,3,605,1],[558,2,607,0],[559,2,608,7],[559,8,608,13,"walletAPI"],[559,17,608,22],[559,20,608,25],[560,4,609,2,"getBalance"],[560,14,609,12],[560,16,609,14,"getBalance"],[560,17,609,14],[560,22,609,20,"apiClient"],[560,31,609,29],[560,32,609,30,"get"],[560,35,609,33],[560,36,609,34],[560,53,609,51],[560,54,609,52],[561,4,611,2,"topUp"],[561,9,611,7],[561,11,611,10,"amount"],[561,17,611,24],[561,21,612,4,"apiClient"],[561,30,612,13],[561,31,612,14,"post"],[561,35,612,18],[561,36,612,19],[561,51,612,34],[561,53,612,36],[561,57,612,40],[561,59,612,42],[562,6,613,6,"params"],[562,12,613,12],[562,14,613,14],[563,8,613,16,"amount"],[564,6,613,23],[565,4,614,4],[565,5,614,5],[565,6,614,6],[566,4,616,2,"withdraw"],[566,12,616,10],[566,14,616,13,"amount"],[566,20,616,27],[566,24,617,4,"apiClient"],[566,33,617,13],[566,34,617,14,"post"],[566,38,617,18],[566,39,617,19],[566,57,617,37],[566,59,617,39],[566,63,617,43],[566,65,617,45],[567,6,618,6,"params"],[567,12,618,12],[567,14,618,14],[568,8,618,16,"amount"],[569,6,618,23],[570,4,619,4],[570,5,619,5],[570,6,619,6],[571,4,621,2,"getTransactions"],[571,19,621,17],[571,21,621,19,"getTransactions"],[571,22,621,19],[571,27,621,25,"apiClient"],[571,36,621,34],[571,37,621,35,"get"],[571,40,621,38],[571,41,621,39],[571,56,621,54],[572,2,622,0],[572,3,622,1],[573,2,624,0],[573,6,624,0,"_default"],[573,14,624,0],[573,17,624,15,"apiClient"],[573,26,624,24],[574,0,624,25],[574,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnC8D;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CG;2BCQ;ODE;G3CO;Y6CE;G7CM;c8CG;kDCM,yCD;uCEW,yCF;G9CQ;YiDG;oDCM,yCD;GjD0B;uBmDG;oDDM,yCC;iDCkB,6BD;GnD2C;oBqDG;qBCQ,qFD;GrDQ;cuDK,sCvD;SwDE;MxDG;YyDE;MzDG;mB0DE,oC1D"},"hasCjsExports":false},"type":"js/module"}]}