{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[1], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[2], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[4], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  class CrossPlatformStorage {\n    static async getItem(key) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        return await AsyncStorage.default.getItem(key);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          return window.localStorage.getItem(key);\n        }\n        return null;\n      }\n    }\n    static async setItem(key, value) {\n      try {\n        // Try AsyncStorage first (works on both platforms)\n        await AsyncStorage.default.setItem(key, value);\n      } catch (error) {\n        // Fallback to localStorage on web if AsyncStorage fails\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.setItem(key, value);\n        }\n      }\n    }\n    static async removeItem(key) {\n      try {\n        await AsyncStorage.default.removeItem(key);\n      } catch (error) {\n        if (typeof window !== 'undefined' && window.localStorage) {\n          window.localStorage.removeItem(key);\n        }\n      }\n    }\n  }\n\n  // Get backend URL from environment\n  const BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  class ApiClient {\n    constructor() {\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(async config => {\n        console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n        const token = await SecureStore.getItemAsync('session_token');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      });\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    async get(url) {\n      const response = await this.client.get(url);\n      return response.data;\n    }\n    async post(url, data) {\n      const response = await this.client.post(url, data);\n      return response.data;\n    }\n    async patch(url, data) {\n      const response = await this.client.patch(url, data);\n      return response.data;\n    }\n    async delete(url) {\n      const response = await this.client.delete(url);\n      return response.data;\n    }\n    async put(url, data) {\n      const response = await this.client.put(url, data);\n      return response.data;\n    }\n  }\n  const apiClient = new ApiClient();\n\n  // Auth API\n  const authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  const logAdminAction = async (action, competitionName, adminName, details) => {\n    try {\n      const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n      const adminLogs = JSON.parse(logs);\n      const logEntry = {\n        id: `log_${Date.now()}`,\n        action,\n        competition_name: competitionName,\n        admin_name: adminName,\n        details,\n        timestamp: new Date().toISOString()\n      };\n      adminLogs.push(logEntry);\n      await CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n      console.log('📝 Admin action logged:', action, competitionName);\n    } catch (error) {\n      console.error('Failed to log admin action:', error);\n    }\n  };\n\n  // Competition API\n  const competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: async data => {\n      console.log('🏆 Mock: Creating competition:', data.name);\n      console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n      // Get existing competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n      // Check for unique name validation\n      const existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n      if (existingNames.includes(data.name.toLowerCase())) {\n        throw new Error('Competition name already exists. Please choose another name.');\n      }\n\n      // Create new competition\n      const newCompetition = {\n        _id: `comp_${Date.now()}`,\n        name: data.name,\n        total_matchdays: data.total_matchdays || 36,\n        participation_cost_per_team: data.participation_cost_per_team || 210.0,\n        expected_teams: data.expected_teams || 8,\n        total_prize_pool: data.total_prize_pool || 1680.0,\n        daily_payment_enabled: data.daily_payment_enabled || false,\n        daily_payment_amount: data.daily_payment_amount || 0.0,\n        rules: data.rules,\n        invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n        invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n        admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n        // Current mock user ID\n        participants: [{\n          id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          is_admin: true,\n          paid_matchdays: [1, 2],\n          // Mock paid matchdays\n          points: 0\n        }],\n        wallet_balance: 0,\n        is_active: true,\n        current_matchday: 1,\n        // Start at matchday 1\n        standings: [{\n          position: 1,\n          player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          name: 'FantaPay Tester',\n          points: 0\n        }],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Add to competitions list and save to storage\n      existingCompetitions.push(newCompetition);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(existingCompetitions));\n\n      // Log the creation action\n      await logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n        competition_id: newCompetition._id,\n        rules: newCompetition.rules,\n        total_matchdays: newCompetition.total_matchdays,\n        participation_cost_per_team: newCompetition.participation_cost_per_team,\n        expected_teams: newCompetition.expected_teams,\n        total_prize_pool: newCompetition.total_prize_pool\n      });\n      console.log('✅ Competition created and logged! New total:', existingCompetitions.length);\n      console.log('🆔 Competition ID:', newCompetition._id);\n      console.log('📝 Competition Name:', newCompetition.name);\n      console.log('📅 Matchdays configured:', newCompetition.total_matchdays);\n      return newCompetition;\n    },\n    // Real-time name validation\n    validateNameMock: async name => {\n      console.log('🏆 Mock: Validating competition name:', name);\n      if (!name.trim()) {\n        return {\n          available: true,\n          message: ''\n        };\n      }\n\n      // Get existing competitions\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n      // Add some default competition names to check against\n      const defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n      const allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n      const isAvailable = !allNames.includes(name.toLowerCase());\n      return {\n        available: isAvailable,\n        message: isAvailable ? 'Name available' : 'Name already exists'\n      };\n    },\n    getMyCompetitionsMock: async () => {\n      console.log('🏆 Mock: Getting my competitions');\n\n      // Get stored competitions from cross-platform storage\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      console.log('📋 Competitions found in storage:', competitions.length);\n\n      // Log each competition for debugging\n      competitions.forEach((comp, index) => {\n        console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n      });\n      return competitions;\n    },\n    joinMock: async inviteCode => {\n      console.log('🏆 Mock: Joining competition with code:', inviteCode);\n      if (inviteCode.length < 6) {\n        throw new Error('Invalid invite code');\n      }\n      return {\n        message: 'Successfully joined competition!'\n      };\n    },\n    // Delete competition (admin only)\n    deleteMock: async competitionId => {\n      console.log('🗑️ Mock: Deleting competition:', competitionId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionToDelete = competitions.find(comp => comp._id === competitionId);\n      if (!competitionToDelete) {\n        throw new Error('Competition not found');\n      }\n\n      // Check if user is admin\n      if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can delete this competition');\n      }\n\n      // Remove competition from storage\n      competitions = competitions.filter(comp => comp._id !== competitionId);\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n      console.log('✅ Competition deleted successfully');\n      return {\n        message: 'Competition deleted successfully'\n      };\n    },\n    // Edit competition (admin only)\n    editMock: async (competitionId, updates) => {\n      console.log('✏️ Mock: Editing competition:', competitionId, updates);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can edit this competition');\n      }\n\n      // Update competition\n      competitions[competitionIndex] = Object.assign({}, competition, updates, {\n        updated_at: new Date().toISOString()\n      });\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n      console.log('✅ Competition updated successfully');\n      return competitions[competitionIndex];\n    },\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: async (competitionId, matchday, winnerId) => {\n      console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n      const storedCompetitions = await CrossPlatformStorage.getItem('mockCompetitions');\n      let competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n      const competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n      if (competitionIndex === -1) {\n        throw new Error('Competition not found');\n      }\n      const competition = competitions[competitionIndex];\n\n      // Check if user is admin\n      if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n        throw new Error('Only admin can award daily prizes');\n      }\n\n      // Check if competition has daily prizes\n      if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n        throw new Error('This competition does not have daily prizes');\n      }\n      const dailyPrizeAmount = competition.rules.daily_prize || 5;\n      const winner = competition.participants.find(p => p.id === winnerId);\n      if (!winner) {\n        throw new Error('Winner not found in competition');\n      }\n\n      // Initialize daily winners if not exists\n      if (!competition.daily_winners) {\n        competition.daily_winners = {};\n      }\n\n      // Check if prize already awarded for this matchday\n      if (competition.daily_winners[matchday]) {\n        throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n      }\n\n      // Award the prize\n      competition.daily_winners[matchday] = {\n        user_id: winnerId,\n        name: winner.name,\n        amount: dailyPrizeAmount,\n        awarded_at: new Date().toISOString()\n      };\n\n      // Update competition\n      competitions[competitionIndex] = competition;\n      await CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n      // Log the action\n      await logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n        matchday,\n        winner: winner.name,\n        amount: dailyPrizeAmount\n      });\n\n      // Simulate wallet credit (in a real app, this would update the user's wallet)\n      console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n      console.log('✅ Daily prize awarded successfully');\n      return {\n        message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n        competition: competition\n      };\n    },\n    // Get admin logs\n    getAdminLogsMock: async () => {\n      console.log('📝 Mock: Getting admin logs');\n      try {\n        const logs = (await CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        const adminLogs = JSON.parse(logs);\n\n        // Sort by timestamp (newest first)\n        adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n        console.log('📋 Admin logs found:', adminLogs.length);\n        return adminLogs;\n      } catch (error) {\n        console.error('💥 Error getting admin logs:', error);\n        return [];\n      }\n    }\n  };\n\n  // Wallet API\n  const walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n  var _default = apiClient;\n});","lineCount":496,"map":[[27,2,544,0,"Object"],[27,8,544,0],[27,9,544,0,"defineProperty"],[27,23,544,0],[27,24,544,0,"exports"],[27,31,544,0],[28,4,544,0,"enumerable"],[28,14,544,0],[29,4,544,0,"get"],[29,7,544,0],[29,18,544,0,"get"],[29,19,544,0],[30,6,544,0],[30,13,544,0,"_default"],[30,21,544,0],[31,4,544,0],[32,2,544,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,528,0,"Object"],[45,8,528,0],[45,9,528,0,"defineProperty"],[45,23,528,0],[45,24,528,0,"exports"],[45,31,528,0],[46,4,528,0,"enumerable"],[46,14,528,0],[47,4,528,0,"get"],[47,7,528,0],[47,18,528,0,"get"],[47,19,528,0],[48,6,528,0],[48,13,528,0,"walletAPI"],[48,22,528,0],[49,4,528,0],[50,2,528,0],[51,2,542,2],[51,6,542,2,"_expoVirtualEnv"],[51,21,542,2],[51,24,542,2,"require"],[51,31,542,2],[51,32,542,2,"_dependencyMap"],[51,46,542,2],[52,2,1,0],[52,6,1,0,"_axios"],[52,12,1,0],[52,15,1,0,"require"],[52,22,1,0],[52,23,1,0,"_dependencyMap"],[52,37,1,0],[53,2,1,0],[53,6,1,0,"axios"],[53,11,1,0],[53,14,1,0,"_interopDefault"],[53,29,1,0],[53,30,1,0,"_axios"],[53,36,1,0],[54,2,2,0],[54,6,2,0,"_expoSecureStore"],[54,22,2,0],[54,25,2,0,"require"],[54,32,2,0],[54,33,2,0,"_dependencyMap"],[54,47,2,0],[55,2,2,0],[55,6,2,0,"SecureStore"],[55,17,2,0],[55,20,2,0,"_interopNamespace"],[55,37,2,0],[55,38,2,0,"_expoSecureStore"],[55,54,2,0],[56,2,3,0],[56,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[56,42,3,0],[56,45,3,0,"require"],[56,52,3,0],[56,53,3,0,"_dependencyMap"],[56,67,3,0],[57,2,3,0],[57,6,3,0,"AsyncStorage"],[57,18,3,0],[57,21,3,0,"_interopDefault"],[57,36,3,0],[57,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[57,73,3,0],[58,2,4,0],[58,6,4,0,"_expoConstants"],[58,20,4,0],[58,23,4,0,"require"],[58,30,4,0],[58,31,4,0,"_dependencyMap"],[58,45,4,0],[59,2,4,0],[59,6,4,0,"Constants"],[59,15,4,0],[59,18,4,0,"_interopDefault"],[59,33,4,0],[59,34,4,0,"_expoConstants"],[59,48,4,0],[60,2,6,0],[61,2,7,0],[61,8,7,6,"CrossPlatformStorage"],[61,28,7,26],[61,29,7,27],[62,4,8,2],[62,17,8,15,"getItem"],[62,24,8,22,"getItem"],[62,25,8,23,"key"],[62,28,8,34],[62,30,8,60],[63,6,9,4],[63,10,9,8],[64,8,10,6],[65,8,11,6],[65,15,11,13],[65,21,11,19,"AsyncStorage"],[65,33,11,31],[65,34,11,31,"default"],[65,41,11,31],[65,42,11,32,"getItem"],[65,49,11,39],[65,50,11,40,"key"],[65,53,11,43],[65,54,11,44],[66,6,12,4],[66,7,12,5],[66,8,12,6],[66,15,12,13,"error"],[66,20,12,18],[66,22,12,20],[67,8,13,6],[68,8,14,6],[68,12,14,10],[68,19,14,17,"window"],[68,25,14,23],[68,30,14,28],[68,41,14,39],[68,45,14,43,"window"],[68,51,14,49],[68,52,14,50,"localStorage"],[68,64,14,62],[68,66,14,64],[69,10,15,8],[69,17,15,15,"window"],[69,23,15,21],[69,24,15,22,"localStorage"],[69,36,15,34],[69,37,15,35,"getItem"],[69,44,15,42],[69,45,15,43,"key"],[69,48,15,46],[69,49,15,47],[70,8,16,6],[71,8,17,6],[71,15,17,13],[71,19,17,17],[72,6,18,4],[73,4,19,2],[74,4,21,2],[74,17,21,15,"setItem"],[74,24,21,22,"setItem"],[74,25,21,23,"key"],[74,28,21,34],[74,30,21,36,"value"],[74,35,21,49],[74,37,21,66],[75,6,22,4],[75,10,22,8],[76,8,23,6],[77,8,24,6],[77,14,24,12,"AsyncStorage"],[77,26,24,24],[77,27,24,24,"default"],[77,34,24,24],[77,35,24,25,"setItem"],[77,42,24,32],[77,43,24,33,"key"],[77,46,24,36],[77,48,24,38,"value"],[77,53,24,43],[77,54,24,44],[78,6,25,4],[78,7,25,5],[78,8,25,6],[78,15,25,13,"error"],[78,20,25,18],[78,22,25,20],[79,8,26,6],[80,8,27,6],[80,12,27,10],[80,19,27,17,"window"],[80,25,27,23],[80,30,27,28],[80,41,27,39],[80,45,27,43,"window"],[80,51,27,49],[80,52,27,50,"localStorage"],[80,64,27,62],[80,66,27,64],[81,10,28,8,"window"],[81,16,28,14],[81,17,28,15,"localStorage"],[81,29,28,27],[81,30,28,28,"setItem"],[81,37,28,35],[81,38,28,36,"key"],[81,41,28,39],[81,43,28,41,"value"],[81,48,28,46],[81,49,28,47],[82,8,29,6],[83,6,30,4],[84,4,31,2],[85,4,33,2],[85,17,33,15,"removeItem"],[85,27,33,25,"removeItem"],[85,28,33,26,"key"],[85,31,33,37],[85,33,33,54],[86,6,34,4],[86,10,34,8],[87,8,35,6],[87,14,35,12,"AsyncStorage"],[87,26,35,24],[87,27,35,24,"default"],[87,34,35,24],[87,35,35,25,"removeItem"],[87,45,35,35],[87,46,35,36,"key"],[87,49,35,39],[87,50,35,40],[88,6,36,4],[88,7,36,5],[88,8,36,6],[88,15,36,13,"error"],[88,20,36,18],[88,22,36,20],[89,8,37,6],[89,12,37,10],[89,19,37,17,"window"],[89,25,37,23],[89,30,37,28],[89,41,37,39],[89,45,37,43,"window"],[89,51,37,49],[89,52,37,50,"localStorage"],[89,64,37,62],[89,66,37,64],[90,10,38,8,"window"],[90,16,38,14],[90,17,38,15,"localStorage"],[90,29,38,27],[90,30,38,28,"removeItem"],[90,40,38,38],[90,41,38,39,"key"],[90,44,38,42],[90,45,38,43],[91,8,39,6],[92,6,40,4],[93,4,41,2],[94,2,42,0],[96,2,44,0],[97,2,45,0],[97,8,45,6,"BACKEND_URL"],[97,19,45,17],[97,22,45,20,"Constants"],[97,31,45,29],[97,32,45,29,"default"],[97,39,45,29],[97,40,45,30,"expoConfig"],[97,50,45,40],[97,52,45,42,"extra"],[97,57,45,47],[97,59,45,49,"backendUrl"],[97,69,45,59],[97,73,45,59,"_expoVirtualEnv"],[97,88,45,59],[97,89,45,59,"env"],[97,92,45,59],[97,93,45,59,"EXPO_PUBLIC_BACKEND_URL"],[97,116,45,98],[97,120,45,102],[97,171,45,153],[98,2,47,0],[98,8,47,6,"ApiClient"],[98,17,47,15],[98,18,47,16],[99,4,50,2,"constructor"],[99,15,50,13,"constructor"],[99,16,50,13],[99,18,50,16],[100,6,51,4],[100,10,51,8],[100,11,51,9,"client"],[100,17,51,15],[100,20,51,18,"axios"],[100,25,51,23],[100,26,51,23,"default"],[100,33,51,23],[100,34,51,24,"create"],[100,40,51,30],[100,41,51,31],[101,8,52,6,"baseURL"],[101,15,52,13],[101,17,52,15],[101,20,52,18,"BACKEND_URL"],[101,31,52,29],[101,37,52,35],[102,8,53,6,"timeout"],[102,15,53,13],[102,17,53,15],[102,22,53,20],[103,8,54,6,"headers"],[103,15,54,13],[103,17,54,15],[104,10,55,8],[104,24,55,22],[104,26,55,24],[105,8,56,6],[106,6,57,4],[106,7,57,5],[106,8,57,6],[108,6,59,4],[109,6,60,4],[109,10,60,8],[109,11,60,9,"client"],[109,17,60,15],[109,18,60,16,"interceptors"],[109,30,60,28],[109,31,60,29,"request"],[109,38,60,36],[109,39,60,37,"use"],[109,42,60,40],[109,43,60,41],[109,49,60,48,"config"],[109,55,60,54],[109,59,60,59],[110,8,61,6,"console"],[110,15,61,13],[110,16,61,14,"log"],[110,19,61,17],[110,20,61,18],[110,39,61,37,"config"],[110,45,61,43],[110,46,61,44,"method"],[110,52,61,50],[110,54,61,52,"toUpperCase"],[110,65,61,63],[110,66,61,64],[110,67,61,65],[110,71,61,69,"config"],[110,77,61,75],[110,78,61,76,"url"],[110,81,61,79],[110,83,61,81],[110,85,61,83,"config"],[110,91,61,89],[110,92,61,90,"data"],[110,96,61,94],[110,97,61,95],[111,8,63,6],[111,14,63,12,"token"],[111,19,63,17],[111,22,63,20],[111,28,63,26,"SecureStore"],[111,39,63,37],[111,40,63,38,"getItemAsync"],[111,52,63,50],[111,53,63,51],[111,68,63,66],[111,69,63,67],[112,8,64,6],[112,12,64,10,"token"],[112,17,64,15],[112,19,64,17],[113,10,65,8,"config"],[113,16,65,14],[113,17,65,15,"headers"],[113,24,65,22],[113,25,65,23,"Authorization"],[113,38,65,36],[113,41,65,39],[113,51,65,49,"token"],[113,56,65,54],[113,58,65,56],[114,8,66,6],[115,8,67,6],[115,15,67,13,"config"],[115,21,67,19],[116,6,68,4],[116,7,68,5],[116,8,68,6],[118,6,70,4],[119,6,71,4],[119,10,71,8],[119,11,71,9,"client"],[119,17,71,15],[119,18,71,16,"interceptors"],[119,30,71,28],[119,31,71,29,"response"],[119,39,71,37],[119,40,71,38,"use"],[119,43,71,41],[119,44,72,7,"response"],[119,52,72,15],[119,56,72,20],[120,8,73,8,"console"],[120,15,73,15],[120,16,73,16,"log"],[120,19,73,19],[120,20,73,20],[120,39,73,39,"response"],[120,47,73,47],[120,48,73,48,"status"],[120,54,73,54],[120,56,73,56],[120,58,73,58,"response"],[120,66,73,66],[120,67,73,67,"data"],[120,71,73,71],[120,72,73,72],[121,8,74,8],[121,15,74,15,"response"],[121,23,74,23],[122,6,75,6],[122,7,75,7],[122,9,76,7,"error"],[122,14,76,12],[122,18,76,17],[123,8,77,8,"console"],[123,15,77,15],[123,16,77,16,"log"],[123,19,77,19],[123,20,77,20],[123,36,77,36,"error"],[123,41,77,41],[123,42,77,42,"response"],[123,50,77,50],[123,52,77,52,"status"],[123,58,77,58],[123,62,77,62],[123,71,77,71],[123,73,77,73],[123,75,77,75,"error"],[123,80,77,80],[123,81,77,81,"response"],[123,89,77,89],[123,91,77,91,"data"],[123,95,77,95],[123,99,77,99,"error"],[123,104,77,104],[123,105,77,105,"message"],[123,112,77,112],[123,113,77,113],[124,8,79,8],[124,12,79,12,"error"],[124,17,79,17],[124,18,79,18,"response"],[124,26,79,26],[124,28,79,28,"status"],[124,34,79,34],[124,39,79,39],[124,42,79,42],[124,44,79,44],[125,10,80,10],[126,10,81,10,"SecureStore"],[126,21,81,21],[126,22,81,22,"deleteItemAsync"],[126,37,81,37],[126,38,81,38],[126,53,81,53],[126,54,81,54],[127,8,82,8],[128,8,83,8],[128,15,83,15,"Promise"],[128,22,83,22],[128,23,83,23,"reject"],[128,29,83,29],[128,30,83,30,"error"],[128,35,83,35],[128,36,83,36],[129,6,84,6],[129,7,85,4],[129,8,85,5],[130,4,86,2],[131,4,88,2],[131,10,88,8,"get"],[131,13,88,11,"get"],[131,14,88,21,"url"],[131,17,88,32],[131,19,88,46],[132,6,89,4],[132,12,89,10,"response"],[132,20,89,36],[132,23,89,39],[132,29,89,45],[132,33,89,49],[132,34,89,50,"client"],[132,40,89,56],[132,41,89,57,"get"],[132,44,89,60],[132,45,89,61,"url"],[132,48,89,64],[132,49,89,65],[133,6,90,4],[133,13,90,11,"response"],[133,21,90,19],[133,22,90,20,"data"],[133,26,90,24],[134,4,91,2],[135,4,93,2],[135,10,93,8,"post"],[135,14,93,12,"post"],[135,15,93,22,"url"],[135,18,93,33],[135,20,93,35,"data"],[135,24,93,45],[135,26,93,59],[136,6,94,4],[136,12,94,10,"response"],[136,20,94,36],[136,23,94,39],[136,29,94,45],[136,33,94,49],[136,34,94,50,"client"],[136,40,94,56],[136,41,94,57,"post"],[136,45,94,61],[136,46,94,62,"url"],[136,49,94,65],[136,51,94,67,"data"],[136,55,94,71],[136,56,94,72],[137,6,95,4],[137,13,95,11,"response"],[137,21,95,19],[137,22,95,20,"data"],[137,26,95,24],[138,4,96,2],[139,4,98,2],[139,10,98,8,"patch"],[139,15,98,13,"patch"],[139,16,98,23,"url"],[139,19,98,34],[139,21,98,36,"data"],[139,25,98,46],[139,27,98,60],[140,6,99,4],[140,12,99,10,"response"],[140,20,99,36],[140,23,99,39],[140,29,99,45],[140,33,99,49],[140,34,99,50,"client"],[140,40,99,56],[140,41,99,57,"patch"],[140,46,99,62],[140,47,99,63,"url"],[140,50,99,66],[140,52,99,68,"data"],[140,56,99,72],[140,57,99,73],[141,6,100,4],[141,13,100,11,"response"],[141,21,100,19],[141,22,100,20,"data"],[141,26,100,24],[142,4,101,2],[143,4,103,2],[143,10,103,8,"delete"],[143,16,103,14,"delete"],[143,17,103,24,"url"],[143,20,103,35],[143,22,103,49],[144,6,104,4],[144,12,104,10,"response"],[144,20,104,36],[144,23,104,39],[144,29,104,45],[144,33,104,49],[144,34,104,50,"client"],[144,40,104,56],[144,41,104,57,"delete"],[144,47,104,63],[144,48,104,64,"url"],[144,51,104,67],[144,52,104,68],[145,6,105,4],[145,13,105,11,"response"],[145,21,105,19],[145,22,105,20,"data"],[145,26,105,24],[146,4,106,2],[147,4,108,2],[147,10,108,8,"put"],[147,13,108,11,"put"],[147,14,108,21,"url"],[147,17,108,32],[147,19,108,34,"data"],[147,23,108,44],[147,25,108,58],[148,6,109,4],[148,12,109,10,"response"],[148,20,109,36],[148,23,109,39],[148,29,109,45],[148,33,109,49],[148,34,109,50,"client"],[148,40,109,56],[148,41,109,57,"put"],[148,44,109,60],[148,45,109,61,"url"],[148,48,109,64],[148,50,109,66,"data"],[148,54,109,70],[148,55,109,71],[149,6,110,4],[149,13,110,11,"response"],[149,21,110,19],[149,22,110,20,"data"],[149,26,110,24],[150,4,111,2],[151,2,112,0],[152,2,114,0],[152,8,114,6,"apiClient"],[152,17,114,15],[152,20,114,18],[152,24,114,22,"ApiClient"],[152,33,114,31],[152,34,114,32],[152,35,114,33],[154,2,116,0],[155,2,117,7],[155,8,117,13,"authAPI"],[155,15,117,20],[155,18,117,23],[156,4,118,2,"createSession"],[156,17,118,15],[156,19,118,18,"sessionId"],[156,28,118,35],[156,32,119,4,"apiClient"],[156,41,119,13],[156,42,119,14,"post"],[156,46,119,18],[156,47,119,19],[156,62,119,34],[156,64,119,36],[156,68,119,40],[156,70,119,42],[157,6,120,6,"headers"],[157,13,120,13],[157,15,120,15],[158,8,120,17],[158,22,120,31],[158,24,120,33,"sessionId"],[159,6,120,43],[160,4,121,4],[160,5,121,5],[160,6,121,6],[161,4,123,2,"signup"],[161,10,123,8],[161,12,123,11,"data"],[161,16,129,3],[161,20,129,8,"apiClient"],[161,29,129,17],[161,30,129,18,"post"],[161,34,129,22],[161,35,129,23],[161,49,129,37],[161,51,129,39,"data"],[161,55,129,43],[161,56,129,44],[162,4,131,2,"verifyOTP"],[162,13,131,11],[162,15,131,14,"data"],[162,19,131,55],[162,23,132,4,"apiClient"],[162,32,132,13],[162,33,132,14,"post"],[162,37,132,18],[162,38,132,19],[162,56,132,37],[162,58,132,39,"data"],[162,62,132,43],[162,63,132,44],[163,4,134,2,"login"],[163,9,134,7],[163,11,134,10,"data"],[163,15,134,51],[163,19,135,4,"apiClient"],[163,28,135,13],[163,29,135,14,"post"],[163,33,135,18],[163,34,135,19],[163,47,135,32],[163,49,135,34,"data"],[163,53,135,38],[163,54,135,39],[164,4,137,2,"resendOTP"],[164,13,137,11],[164,15,137,14,"email"],[164,20,137,27],[164,24,138,4,"apiClient"],[164,33,138,13],[164,34,138,14,"post"],[164,38,138,18],[164,39,138,19],[164,57,138,37],[164,59,138,39],[165,6,138,41,"email"],[166,4,138,47],[166,5,138,48],[166,6,138,49],[167,4,140,2,"getCurrentUser"],[167,18,140,16],[167,20,140,18,"getCurrentUser"],[167,21,140,18],[167,26,140,24,"apiClient"],[167,35,140,33],[167,36,140,34,"get"],[167,39,140,37],[167,40,140,38],[167,50,140,48],[167,51,140,49],[168,4,142,2,"logout"],[168,10,142,8],[168,12,142,10,"logout"],[168,13,142,10],[168,18,142,16,"apiClient"],[168,27,142,25],[168,28,142,26,"post"],[168,32,142,30],[168,33,142,31],[168,47,142,45],[168,48,142,46],[169,4,144,2,"updateLanguage"],[169,18,144,16],[169,20,144,19,"language"],[169,28,144,35],[169,32,145,4,"apiClient"],[169,41,145,13],[169,42,145,14,"patch"],[169,47,145,19],[169,48,145,20],[169,64,145,36],[169,66,145,38],[169,70,145,42],[169,72,145,44],[170,6,146,6,"params"],[170,12,146,12],[170,14,146,14],[171,8,146,16,"language"],[172,6,146,25],[173,4,147,4],[173,5,147,5],[173,6,147,6],[174,4,149,2,"toggleBiometric"],[174,19,149,17],[174,21,149,20,"enabled"],[174,28,149,36],[174,32,150,4,"apiClient"],[174,41,150,13],[174,42,150,14,"patch"],[174,47,150,19],[174,48,150,20],[174,65,150,37],[174,67,150,39],[174,71,150,43],[174,73,150,45],[175,6,151,6,"params"],[175,12,151,12],[175,14,151,14],[176,8,151,16,"enabled"],[177,6,151,24],[178,4,152,4],[178,5,152,5],[179,2,153,0],[179,3,153,1],[181,2,155,0],[182,2,156,0],[182,8,156,6,"logAdminAction"],[182,22,156,20],[182,25,156,23],[182,31,156,23,"logAdminAction"],[182,32,156,30,"action"],[182,38,156,44],[182,40,156,46,"competitionName"],[182,55,156,69],[182,57,156,71,"adminName"],[182,66,156,88],[182,68,156,90,"details"],[182,75,156,103],[182,80,156,108],[183,4,157,2],[183,8,157,6],[184,6,158,4],[184,12,158,10,"logs"],[184,16,158,14],[184,19,158,17],[184,26,158,23,"CrossPlatformStorage"],[184,46,158,43],[184,47,158,44,"getItem"],[184,54,158,51],[184,55,158,52],[184,66,158,63],[184,67,158,64],[184,72,158,68],[184,76,158,72],[185,6,159,4],[185,12,159,10,"adminLogs"],[185,21,159,19],[185,24,159,22,"JSON"],[185,28,159,26],[185,29,159,27,"parse"],[185,34,159,32],[185,35,159,33,"logs"],[185,39,159,37],[185,40,159,38],[186,6,161,4],[186,12,161,10,"logEntry"],[186,20,161,18],[186,23,161,21],[187,8,162,6,"id"],[187,10,162,8],[187,12,162,10],[187,19,162,17,"Date"],[187,23,162,21],[187,24,162,22,"now"],[187,27,162,25],[187,28,162,26],[187,29,162,27],[187,31,162,29],[188,8,163,6,"action"],[188,14,163,12],[189,8,164,6,"competition_name"],[189,24,164,22],[189,26,164,24,"competitionName"],[189,41,164,39],[190,8,165,6,"admin_name"],[190,18,165,16],[190,20,165,18,"adminName"],[190,29,165,27],[191,8,166,6,"details"],[191,15,166,13],[192,8,167,6,"timestamp"],[192,17,167,15],[192,19,167,17],[192,23,167,21,"Date"],[192,27,167,25],[192,28,167,26],[192,29,167,27],[192,30,167,28,"toISOString"],[192,41,167,39],[192,42,167,40],[193,6,168,4],[193,7,168,5],[194,6,170,4,"adminLogs"],[194,15,170,13],[194,16,170,14,"push"],[194,20,170,18],[194,21,170,19,"logEntry"],[194,29,170,27],[194,30,170,28],[195,6,171,4],[195,12,171,10,"CrossPlatformStorage"],[195,32,171,30],[195,33,171,31,"setItem"],[195,40,171,38],[195,41,171,39],[195,52,171,50],[195,54,171,52,"JSON"],[195,58,171,56],[195,59,171,57,"stringify"],[195,68,171,66],[195,69,171,67,"adminLogs"],[195,78,171,76],[195,79,171,77],[195,80,171,78],[196,6,173,4,"console"],[196,13,173,11],[196,14,173,12,"log"],[196,17,173,15],[196,18,173,16],[196,43,173,41],[196,45,173,43,"action"],[196,51,173,49],[196,53,173,51,"competitionName"],[196,68,173,66],[196,69,173,67],[197,4,174,2],[197,5,174,3],[197,6,174,4],[197,13,174,11,"error"],[197,18,174,16],[197,20,174,18],[198,6,175,4,"console"],[198,13,175,11],[198,14,175,12,"error"],[198,19,175,17],[198,20,175,18],[198,49,175,47],[198,51,175,49,"error"],[198,56,175,54],[198,57,175,55],[199,4,176,2],[200,2,177,0],[200,3,177,1],[202,2,179,0],[203,2,180,7],[203,8,180,13,"competitionAPI"],[203,22,180,27],[203,25,180,30],[204,4,181,2,"create"],[204,10,181,8],[204,12,181,11,"data"],[204,16,196,3],[204,20,196,8,"apiClient"],[204,29,196,17],[204,30,196,18,"post"],[204,34,196,22],[204,35,196,23],[204,50,196,38],[204,52,196,40,"data"],[204,56,196,44],[204,57,196,45],[205,4,198,2,"join"],[205,8,198,6],[205,10,198,9,"inviteCode"],[205,20,198,27],[205,24,199,4,"apiClient"],[205,33,199,13],[205,34,199,14,"post"],[205,38,199,18],[205,39,199,19],[205,59,199,39],[205,61,199,41],[206,6,199,43,"invite_code"],[206,17,199,54],[206,19,199,56,"inviteCode"],[207,4,199,67],[207,5,199,68],[207,6,199,69],[208,4,201,2,"getMyCompetitions"],[208,21,201,19],[208,23,201,21,"getMyCompetitions"],[208,24,201,21],[208,29,201,27,"apiClient"],[208,38,201,36],[208,39,201,37,"get"],[208,42,201,40],[208,43,201,41],[208,61,201,59],[208,62,201,60],[209,4,203,2,"getCompetition"],[209,18,203,16],[209,20,203,19,"id"],[209,22,203,29],[209,26,203,34,"apiClient"],[209,35,203,43],[209,36,203,44,"get"],[209,39,203,47],[209,40,203,48],[209,57,203,65,"id"],[209,59,203,67],[209,61,203,69],[209,62,203,70],[210,4,205,2,"updateStandings"],[210,19,205,17],[210,21,205,19,"updateStandings"],[210,22,206,4,"id"],[210,24,206,14],[210,26,207,4,"standings"],[210,35,207,18],[210,37,208,4,"matchday"],[210,45,208,21],[210,50,210,4,"apiClient"],[210,59,210,13],[210,60,210,14,"patch"],[210,65,210,19],[210,66,210,20],[210,83,210,37,"id"],[210,85,210,39],[210,97,210,51],[210,99,210,53],[211,6,211,6,"standings"],[211,15,211,15],[212,6,212,6,"matchday"],[213,4,213,4],[213,5,213,5],[213,6,213,6],[214,4,215,2,"payFee"],[214,10,215,8],[214,12,215,10,"payFee"],[214,13,215,11,"id"],[214,15,215,21],[214,17,215,23,"amount"],[214,23,215,37],[214,28,216,4,"apiClient"],[214,37,216,13],[214,38,216,14,"post"],[214,42,216,18],[214,43,216,19],[214,60,216,36,"id"],[214,62,216,38],[214,68,216,44],[214,70,216,46],[214,74,216,50],[214,76,216,52],[215,6,217,6,"params"],[215,12,217,12],[215,14,217,14],[216,8,217,16,"amount"],[217,6,217,23],[218,4,218,4],[218,5,218,5],[218,6,218,6],[219,4,220,2,"getTransactions"],[219,19,220,17],[219,21,220,20,"id"],[219,23,220,30],[219,27,221,4,"apiClient"],[219,36,221,13],[219,37,221,14,"get"],[219,40,221,17],[219,41,221,18],[219,58,221,35,"id"],[219,60,221,37],[219,75,221,52],[219,76,221,53],[220,4,223,2],[221,4,224,2,"payMatchdays"],[221,16,224,14],[221,18,224,16,"payMatchdays"],[221,19,224,17,"competitionId"],[221,32,224,38],[221,34,224,40,"matchdays"],[221,43,224,59],[221,48,225,4,"apiClient"],[221,57,225,13],[221,58,225,14,"post"],[221,62,225,18],[221,63,225,19],[221,80,225,36,"competitionId"],[221,93,225,49],[221,113,225,69],[221,115,225,71],[222,6,226,6,"competition_id"],[222,20,226,20],[222,22,226,22,"competitionId"],[222,35,226,35],[223,6,227,6,"matchdays"],[224,4,228,4],[224,5,228,5],[224,6,228,6],[225,4,230,2,"getMatchdayPayments"],[225,23,230,21],[225,25,230,24,"competitionId"],[225,38,230,45],[225,42,231,4,"apiClient"],[225,51,231,13],[225,52,231,14,"get"],[225,55,231,17],[225,56,231,18],[225,73,231,35,"competitionId"],[225,86,231,48],[225,106,231,68],[225,107,231,69],[226,4,233,2,"getPaymentStatusTable"],[226,25,233,23],[226,27,233,26,"competitionId"],[226,40,233,47],[226,44,234,4,"apiClient"],[226,53,234,13],[226,54,234,14,"get"],[226,57,234,17],[226,58,234,18],[226,75,234,35,"competitionId"],[226,88,234,48],[226,111,234,71],[226,112,234,72],[227,4,236,2],[228,4,237,2,"createMock"],[228,14,237,12],[228,16,237,14],[228,22,237,21,"data"],[228,26,250,3],[228,30,250,8],[229,6,251,4,"console"],[229,13,251,11],[229,14,251,12,"log"],[229,17,251,15],[229,18,251,16],[229,50,251,48],[229,52,251,50,"data"],[229,56,251,54],[229,57,251,55,"name"],[229,61,251,59],[229,62,251,60],[230,6,252,4,"console"],[230,13,252,11],[230,14,252,12,"log"],[230,17,252,15],[230,18,252,16],[230,39,252,37],[230,41,252,39,"data"],[230,45,252,43],[230,46,252,44,"total_matchdays"],[230,61,252,59],[230,65,252,63],[230,67,252,65],[230,68,252,66],[232,6,254,4],[233,6,255,4],[233,12,255,10,"storedCompetitions"],[233,30,255,28],[233,33,255,31],[233,39,255,37,"CrossPlatformStorage"],[233,59,255,57],[233,60,255,58,"getItem"],[233,67,255,65],[233,68,255,66],[233,86,255,84],[233,87,255,85],[234,6,256,4],[234,10,256,8,"existingCompetitions"],[234,30,256,28],[234,33,256,31,"storedCompetitions"],[234,51,256,49],[234,54,256,52,"JSON"],[234,58,256,56],[234,59,256,57,"parse"],[234,64,256,62],[234,65,256,63,"storedCompetitions"],[234,83,256,81],[234,84,256,82],[234,87,256,85],[234,89,256,87],[235,6,258,4,"console"],[235,13,258,11],[235,14,258,12,"log"],[235,17,258,15],[235,18,258,16],[235,60,258,58],[235,62,258,60,"existingCompetitions"],[235,82,258,80],[235,83,258,81,"length"],[235,89,258,87],[235,90,258,88],[237,6,260,4],[238,6,261,4],[238,12,261,10,"existingNames"],[238,25,261,23],[238,28,261,26,"existingCompetitions"],[238,48,261,46],[238,49,261,47,"map"],[238,52,261,50],[238,53,261,52,"comp"],[238,57,261,61],[238,61,261,66,"comp"],[238,65,261,70],[238,66,261,71,"name"],[238,70,261,75],[238,71,261,76,"toLowerCase"],[238,82,261,87],[238,83,261,88],[238,84,261,89],[238,85,261,90],[239,6,262,4],[239,10,262,8,"existingNames"],[239,23,262,21],[239,24,262,22,"includes"],[239,32,262,30],[239,33,262,31,"data"],[239,37,262,35],[239,38,262,36,"name"],[239,42,262,40],[239,43,262,41,"toLowerCase"],[239,54,262,52],[239,55,262,53],[239,56,262,54],[239,57,262,55],[239,59,262,57],[240,8,263,6],[240,14,263,12],[240,18,263,16,"Error"],[240,23,263,21],[240,24,263,22],[240,86,263,84],[240,87,263,85],[241,6,264,4],[243,6,266,4],[244,6,267,4],[244,12,267,10,"newCompetition"],[244,26,267,24],[244,29,267,27],[245,8,268,6,"_id"],[245,11,268,9],[245,13,268,11],[245,21,268,19,"Date"],[245,25,268,23],[245,26,268,24,"now"],[245,29,268,27],[245,30,268,28],[245,31,268,29],[245,33,268,31],[246,8,269,6,"name"],[246,12,269,10],[246,14,269,12,"data"],[246,18,269,16],[246,19,269,17,"name"],[246,23,269,21],[247,8,270,6,"total_matchdays"],[247,23,270,21],[247,25,270,23,"data"],[247,29,270,27],[247,30,270,28,"total_matchdays"],[247,45,270,43],[247,49,270,47],[247,51,270,49],[248,8,271,6,"participation_cost_per_team"],[248,35,271,33],[248,37,271,35,"data"],[248,41,271,39],[248,42,271,40,"participation_cost_per_team"],[248,69,271,67],[248,73,271,71],[248,78,271,76],[249,8,272,6,"expected_teams"],[249,22,272,20],[249,24,272,22,"data"],[249,28,272,26],[249,29,272,27,"expected_teams"],[249,43,272,41],[249,47,272,45],[249,48,272,46],[250,8,273,6,"total_prize_pool"],[250,24,273,22],[250,26,273,24,"data"],[250,30,273,28],[250,31,273,29,"total_prize_pool"],[250,47,273,45],[250,51,273,49],[250,57,273,55],[251,8,274,6,"daily_payment_enabled"],[251,29,274,27],[251,31,274,29,"data"],[251,35,274,33],[251,36,274,34,"daily_payment_enabled"],[251,57,274,55],[251,61,274,59],[251,66,274,64],[252,8,275,6,"daily_payment_amount"],[252,28,275,26],[252,30,275,28,"data"],[252,34,275,32],[252,35,275,33,"daily_payment_amount"],[252,55,275,53],[252,59,275,57],[252,62,275,60],[253,8,276,6,"rules"],[253,13,276,11],[253,15,276,13,"data"],[253,19,276,17],[253,20,276,18,"rules"],[253,25,276,23],[254,8,277,6,"invite_code"],[254,19,277,17],[254,21,277,19,"Math"],[254,25,277,23],[254,26,277,24,"random"],[254,32,277,30],[254,33,277,31],[254,34,277,32],[254,35,277,33,"toString"],[254,43,277,41],[254,44,277,42],[254,46,277,44],[254,47,277,45],[254,48,277,46,"substr"],[254,54,277,52],[254,55,277,53],[254,56,277,54],[254,58,277,56],[254,59,277,57],[254,60,277,58],[254,61,277,59,"toUpperCase"],[254,72,277,70],[254,73,277,71],[254,74,277,72],[255,8,278,6,"invite_link"],[255,19,278,17],[255,21,278,19],[255,50,278,48,"Math"],[255,54,278,52],[255,55,278,53,"random"],[255,61,278,59],[255,62,278,60],[255,63,278,61],[255,64,278,62,"toString"],[255,72,278,70],[255,73,278,71],[255,75,278,73],[255,76,278,74],[255,77,278,75,"substr"],[255,83,278,81],[255,84,278,82],[255,85,278,83],[255,87,278,85],[255,88,278,86],[255,89,278,87],[255,90,278,88,"toUpperCase"],[255,101,278,99],[255,102,278,100],[255,103,278,101],[255,105,278,103],[256,8,279,6,"admin_id"],[256,16,279,14],[256,18,279,16],[256,44,279,42],[257,8,279,44],[258,8,280,6,"participants"],[258,20,280,18],[258,22,280,20],[258,23,281,8],[259,10,282,10,"id"],[259,12,282,12],[259,14,282,14],[259,40,282,40],[260,10,283,10,"name"],[260,14,283,14],[260,16,283,16],[260,33,283,33],[261,10,284,10,"email"],[261,15,284,15],[261,17,284,17],[261,36,284,36],[262,10,285,10,"is_admin"],[262,18,285,18],[262,20,285,20],[262,24,285,24],[263,10,286,10,"paid_matchdays"],[263,24,286,24],[263,26,286,26],[263,27,286,27],[263,28,286,28],[263,30,286,30],[263,31,286,31],[263,32,286,32],[264,10,286,34],[265,10,287,10,"points"],[265,16,287,16],[265,18,287,18],[266,8,288,8],[266,9,288,9],[266,10,289,7],[267,8,290,6,"wallet_balance"],[267,22,290,20],[267,24,290,22],[267,25,290,23],[268,8,291,6,"is_active"],[268,17,291,15],[268,19,291,17],[268,23,291,21],[269,8,292,6,"current_matchday"],[269,24,292,22],[269,26,292,24],[269,27,292,25],[270,8,292,27],[271,8,293,6,"standings"],[271,17,293,15],[271,19,293,17],[271,20,294,8],[272,10,294,10,"position"],[272,18,294,18],[272,20,294,20],[272,21,294,21],[273,10,294,23,"player_id"],[273,19,294,32],[273,21,294,34],[273,47,294,60],[274,10,294,62,"name"],[274,14,294,66],[274,16,294,68],[274,33,294,85],[275,10,294,87,"points"],[275,16,294,93],[275,18,294,95],[276,8,294,97],[276,9,294,98],[276,10,295,7],[277,8,296,6,"created_at"],[277,18,296,16],[277,20,296,18],[277,24,296,22,"Date"],[277,28,296,26],[277,29,296,27],[277,30,296,28],[277,31,296,29,"toISOString"],[277,42,296,40],[277,43,296,41],[277,44,296,42],[278,8,297,6,"updated_at"],[278,18,297,16],[278,20,297,18],[278,24,297,22,"Date"],[278,28,297,26],[278,29,297,27],[278,30,297,28],[278,31,297,29,"toISOString"],[278,42,297,40],[278,43,297,41],[279,6,298,4],[279,7,298,5],[281,6,300,4],[282,6,301,4,"existingCompetitions"],[282,26,301,24],[282,27,301,25,"push"],[282,31,301,29],[282,32,301,30,"newCompetition"],[282,46,301,44],[282,47,301,45],[283,6,302,4],[283,12,302,10,"CrossPlatformStorage"],[283,32,302,30],[283,33,302,31,"setItem"],[283,40,302,38],[283,41,302,39],[283,59,302,57],[283,61,302,59,"JSON"],[283,65,302,63],[283,66,302,64,"stringify"],[283,75,302,73],[283,76,302,74,"existingCompetitions"],[283,96,302,94],[283,97,302,95],[283,98,302,96],[285,6,304,4],[286,6,305,4],[286,12,305,10,"logAdminAction"],[286,26,305,24],[286,27,305,25],[286,35,305,33],[286,37,305,35,"newCompetition"],[286,51,305,49],[286,52,305,50,"name"],[286,56,305,54],[286,58,305,56],[286,75,305,73],[286,77,305,75],[287,8,306,6,"competition_id"],[287,22,306,20],[287,24,306,22,"newCompetition"],[287,38,306,36],[287,39,306,37,"_id"],[287,42,306,40],[288,8,307,6,"rules"],[288,13,307,11],[288,15,307,13,"newCompetition"],[288,29,307,27],[288,30,307,28,"rules"],[288,35,307,33],[289,8,308,6,"total_matchdays"],[289,23,308,21],[289,25,308,23,"newCompetition"],[289,39,308,37],[289,40,308,38,"total_matchdays"],[289,55,308,53],[290,8,309,6,"participation_cost_per_team"],[290,35,309,33],[290,37,309,35,"newCompetition"],[290,51,309,49],[290,52,309,50,"participation_cost_per_team"],[290,79,309,77],[291,8,310,6,"expected_teams"],[291,22,310,20],[291,24,310,22,"newCompetition"],[291,38,310,36],[291,39,310,37,"expected_teams"],[291,53,310,51],[292,8,311,6,"total_prize_pool"],[292,24,311,22],[292,26,311,24,"newCompetition"],[292,40,311,38],[292,41,311,39,"total_prize_pool"],[293,6,312,4],[293,7,312,5],[293,8,312,6],[294,6,314,4,"console"],[294,13,314,11],[294,14,314,12,"log"],[294,17,314,15],[294,18,314,16],[294,64,314,62],[294,66,314,64,"existingCompetitions"],[294,86,314,84],[294,87,314,85,"length"],[294,93,314,91],[294,94,314,92],[295,6,315,4,"console"],[295,13,315,11],[295,14,315,12,"log"],[295,17,315,15],[295,18,315,16],[295,38,315,36],[295,40,315,38,"newCompetition"],[295,54,315,52],[295,55,315,53,"_id"],[295,58,315,56],[295,59,315,57],[296,6,316,4,"console"],[296,13,316,11],[296,14,316,12,"log"],[296,17,316,15],[296,18,316,16],[296,40,316,38],[296,42,316,40,"newCompetition"],[296,56,316,54],[296,57,316,55,"name"],[296,61,316,59],[296,62,316,60],[297,6,317,4,"console"],[297,13,317,11],[297,14,317,12,"log"],[297,17,317,15],[297,18,317,16],[297,44,317,42],[297,46,317,44,"newCompetition"],[297,60,317,58],[297,61,317,59,"total_matchdays"],[297,76,317,74],[297,77,317,75],[298,6,319,4],[298,13,319,11,"newCompetition"],[298,27,319,25],[299,4,320,2],[299,5,320,3],[300,4,322,2],[301,4,323,2,"validateNameMock"],[301,20,323,18],[301,22,323,20],[301,28,323,27,"name"],[301,32,323,39],[301,36,323,44],[302,6,324,4,"console"],[302,13,324,11],[302,14,324,12,"log"],[302,17,324,15],[302,18,324,16],[302,57,324,55],[302,59,324,57,"name"],[302,63,324,61],[302,64,324,62],[303,6,326,4],[303,10,326,8],[303,11,326,9,"name"],[303,15,326,13],[303,16,326,14,"trim"],[303,20,326,18],[303,21,326,19],[303,22,326,20],[303,24,326,22],[304,8,327,6],[304,15,327,13],[305,10,327,15,"available"],[305,19,327,24],[305,21,327,26],[305,25,327,30],[306,10,327,32,"message"],[306,17,327,39],[306,19,327,41],[307,8,327,44],[307,9,327,45],[308,6,328,4],[310,6,330,4],[311,6,331,4],[311,12,331,10,"storedCompetitions"],[311,30,331,28],[311,33,331,31],[311,39,331,37,"CrossPlatformStorage"],[311,59,331,57],[311,60,331,58,"getItem"],[311,67,331,65],[311,68,331,66],[311,86,331,84],[311,87,331,85],[312,6,332,4],[312,10,332,8,"existingCompetitions"],[312,30,332,28],[312,33,332,31,"storedCompetitions"],[312,51,332,49],[312,54,332,52,"JSON"],[312,58,332,56],[312,59,332,57,"parse"],[312,64,332,62],[312,65,332,63,"storedCompetitions"],[312,83,332,81],[312,84,332,82],[312,87,332,85],[312,89,332,87],[314,6,334,4],[315,6,335,4],[315,12,335,10,"defaultNames"],[315,24,335,22],[315,27,335,25],[315,28,335,26],[315,50,335,48],[315,52,335,50],[315,78,335,76],[315,80,335,78],[315,96,335,94],[315,97,335,95],[316,6,336,4],[316,12,336,10,"allNames"],[316,20,336,18],[316,23,336,21],[316,24,337,6],[316,27,337,9,"existingCompetitions"],[316,47,337,29],[316,48,337,30,"map"],[316,51,337,33],[316,52,337,35,"comp"],[316,56,337,44],[316,60,337,49,"comp"],[316,64,337,53],[316,65,337,54,"name"],[316,69,337,58],[316,70,337,59,"toLowerCase"],[316,81,337,70],[316,82,337,71],[316,83,337,72],[316,84,337,73],[316,86,338,6],[316,89,338,9,"defaultNames"],[316,101,338,21],[316,102,338,22,"map"],[316,105,338,25],[316,106,338,26,"name"],[316,110,338,30],[316,114,338,34,"name"],[316,118,338,38],[316,119,338,39,"toLowerCase"],[316,130,338,50],[316,131,338,51],[316,132,338,52],[316,133,338,53],[316,134,339,5],[317,6,341,4],[317,12,341,10,"isAvailable"],[317,23,341,21],[317,26,341,24],[317,27,341,25,"allNames"],[317,35,341,33],[317,36,341,34,"includes"],[317,44,341,42],[317,45,341,43,"name"],[317,49,341,47],[317,50,341,48,"toLowerCase"],[317,61,341,59],[317,62,341,60],[317,63,341,61],[317,64,341,62],[318,6,343,4],[318,13,343,11],[319,8,344,6,"available"],[319,17,344,15],[319,19,344,17,"isAvailable"],[319,30,344,28],[320,8,345,6,"message"],[320,15,345,13],[320,17,345,15,"isAvailable"],[320,28,345,26],[320,31,345,29],[320,47,345,45],[320,50,345,48],[321,6,346,4],[321,7,346,5],[322,4,347,2],[322,5,347,3],[323,4,349,2,"getMyCompetitionsMock"],[323,25,349,23],[323,27,349,25],[323,33,349,25,"getMyCompetitionsMock"],[323,34,349,25],[323,39,349,37],[324,6,350,4,"console"],[324,13,350,11],[324,14,350,12,"log"],[324,17,350,15],[324,18,350,16],[324,52,350,50],[324,53,350,51],[326,6,352,4],[327,6,353,4],[327,12,353,10,"storedCompetitions"],[327,30,353,28],[327,33,353,31],[327,39,353,37,"CrossPlatformStorage"],[327,59,353,57],[327,60,353,58,"getItem"],[327,67,353,65],[327,68,353,66],[327,86,353,84],[327,87,353,85],[328,6,354,4],[328,10,354,8,"competitions"],[328,22,354,20],[328,25,354,23,"storedCompetitions"],[328,43,354,41],[328,46,354,44,"JSON"],[328,50,354,48],[328,51,354,49,"parse"],[328,56,354,54],[328,57,354,55,"storedCompetitions"],[328,75,354,73],[328,76,354,74],[328,79,354,77],[328,81,354,79],[329,6,356,4,"console"],[329,13,356,11],[329,14,356,12,"log"],[329,17,356,15],[329,18,356,16],[329,53,356,51],[329,55,356,53,"competitions"],[329,67,356,65],[329,68,356,66,"length"],[329,74,356,72],[329,75,356,73],[331,6,358,4],[332,6,359,4,"competitions"],[332,18,359,16],[332,19,359,17,"forEach"],[332,26,359,24],[332,27,359,25],[332,28,359,26,"comp"],[332,32,359,35],[332,34,359,37,"index"],[332,39,359,50],[332,44,359,55],[333,8,360,6,"console"],[333,15,360,13],[333,16,360,14,"log"],[333,19,360,17],[333,20,360,18],[333,23,360,21,"index"],[333,28,360,26],[333,31,360,29],[333,32,360,30],[333,37,360,35,"comp"],[333,41,360,39],[333,42,360,40,"name"],[333,46,360,44],[333,55,360,53,"comp"],[333,59,360,57],[333,60,360,58,"_id"],[333,63,360,61],[333,66,360,64],[333,67,360,65],[334,6,361,4],[334,7,361,5],[334,8,361,6],[335,6,363,4],[335,13,363,11,"competitions"],[335,25,363,23],[336,4,364,2],[336,5,364,3],[337,4,366,2,"joinMock"],[337,12,366,10],[337,14,366,12],[337,20,366,19,"inviteCode"],[337,30,366,37],[337,34,366,42],[338,6,367,4,"console"],[338,13,367,11],[338,14,367,12,"log"],[338,17,367,15],[338,18,367,16],[338,59,367,57],[338,61,367,59,"inviteCode"],[338,71,367,69],[338,72,367,70],[339,6,368,4],[339,10,368,8,"inviteCode"],[339,20,368,18],[339,21,368,19,"length"],[339,27,368,25],[339,30,368,28],[339,31,368,29],[339,33,368,31],[340,8,369,6],[340,14,369,12],[340,18,369,16,"Error"],[340,23,369,21],[340,24,369,22],[340,45,369,43],[340,46,369,44],[341,6,370,4],[342,6,371,4],[342,13,371,11],[343,8,371,13,"message"],[343,15,371,20],[343,17,371,22],[344,6,371,57],[344,7,371,58],[345,4,372,2],[345,5,372,3],[346,4,374,2],[347,4,375,2,"deleteMock"],[347,14,375,12],[347,16,375,14],[347,22,375,21,"competitionId"],[347,35,375,42],[347,39,375,47],[348,6,376,4,"console"],[348,13,376,11],[348,14,376,12,"log"],[348,17,376,15],[348,18,376,16],[348,51,376,49],[348,53,376,51,"competitionId"],[348,66,376,64],[348,67,376,65],[349,6,378,4],[349,12,378,10,"storedCompetitions"],[349,30,378,28],[349,33,378,31],[349,39,378,37,"CrossPlatformStorage"],[349,59,378,57],[349,60,378,58,"getItem"],[349,67,378,65],[349,68,378,66],[349,86,378,84],[349,87,378,85],[350,6,379,4],[350,10,379,8,"competitions"],[350,22,379,20],[350,25,379,23,"storedCompetitions"],[350,43,379,41],[350,46,379,44,"JSON"],[350,50,379,48],[350,51,379,49,"parse"],[350,56,379,54],[350,57,379,55,"storedCompetitions"],[350,75,379,73],[350,76,379,74],[350,79,379,77],[350,81,379,79],[351,6,381,4],[351,12,381,10,"competitionToDelete"],[351,31,381,29],[351,34,381,32,"competitions"],[351,46,381,44],[351,47,381,45,"find"],[351,51,381,49],[351,52,381,51,"comp"],[351,56,381,60],[351,60,381,65,"comp"],[351,64,381,69],[351,65,381,70,"_id"],[351,68,381,73],[351,73,381,78,"competitionId"],[351,86,381,91],[351,87,381,92],[352,6,382,4],[352,10,382,8],[352,11,382,9,"competitionToDelete"],[352,30,382,28],[352,32,382,30],[353,8,383,6],[353,14,383,12],[353,18,383,16,"Error"],[353,23,383,21],[353,24,383,22],[353,47,383,45],[353,48,383,46],[354,6,384,4],[356,6,386,4],[357,6,387,4],[357,10,387,8,"competitionToDelete"],[357,29,387,27],[357,30,387,28,"admin_id"],[357,38,387,36],[357,43,387,41],[357,69,387,67],[357,71,387,69],[358,8,388,6],[358,14,388,12],[358,18,388,16,"Error"],[358,23,388,21],[358,24,388,22],[358,64,388,62],[358,65,388,63],[359,6,389,4],[361,6,391,4],[362,6,392,4,"competitions"],[362,18,392,16],[362,21,392,19,"competitions"],[362,33,392,31],[362,34,392,32,"filter"],[362,40,392,38],[362,41,392,40,"comp"],[362,45,392,49],[362,49,392,54,"comp"],[362,53,392,58],[362,54,392,59,"_id"],[362,57,392,62],[362,62,392,67,"competitionId"],[362,75,392,80],[362,76,392,81],[363,6,393,4],[363,12,393,10,"CrossPlatformStorage"],[363,32,393,30],[363,33,393,31,"setItem"],[363,40,393,38],[363,41,393,39],[363,59,393,57],[363,61,393,59,"JSON"],[363,65,393,63],[363,66,393,64,"stringify"],[363,75,393,73],[363,76,393,74,"competitions"],[363,88,393,86],[363,89,393,87],[363,90,393,88],[365,6,395,4],[366,6,396,4],[366,12,396,10,"logAdminAction"],[366,26,396,24],[366,27,396,25],[366,35,396,33],[366,37,396,35,"competitionToDelete"],[366,56,396,54],[366,57,396,55,"name"],[366,61,396,59],[366,63,396,61],[366,80,396,78],[366,81,396,79],[367,6,398,4,"console"],[367,13,398,11],[367,14,398,12,"log"],[367,17,398,15],[367,18,398,16],[367,54,398,52],[367,55,398,53],[368,6,399,4],[368,13,399,11],[369,8,399,13,"message"],[369,15,399,20],[369,17,399,22],[370,6,399,57],[370,7,399,58],[371,4,400,2],[371,5,400,3],[372,4,402,2],[373,4,403,2,"editMock"],[373,12,403,10],[373,14,403,12],[373,20,403,12,"editMock"],[373,21,403,19,"competitionId"],[373,34,403,40],[373,36,403,42,"updates"],[373,43,403,54],[373,48,403,59],[374,6,404,4,"console"],[374,13,404,11],[374,14,404,12,"log"],[374,17,404,15],[374,18,404,16],[374,49,404,47],[374,51,404,49,"competitionId"],[374,64,404,62],[374,66,404,64,"updates"],[374,73,404,71],[374,74,404,72],[375,6,406,4],[375,12,406,10,"storedCompetitions"],[375,30,406,28],[375,33,406,31],[375,39,406,37,"CrossPlatformStorage"],[375,59,406,57],[375,60,406,58,"getItem"],[375,67,406,65],[375,68,406,66],[375,86,406,84],[375,87,406,85],[376,6,407,4],[376,10,407,8,"competitions"],[376,22,407,20],[376,25,407,23,"storedCompetitions"],[376,43,407,41],[376,46,407,44,"JSON"],[376,50,407,48],[376,51,407,49,"parse"],[376,56,407,54],[376,57,407,55,"storedCompetitions"],[376,75,407,73],[376,76,407,74],[376,79,407,77],[376,81,407,79],[377,6,409,4],[377,12,409,10,"competitionIndex"],[377,28,409,26],[377,31,409,29,"competitions"],[377,43,409,41],[377,44,409,42,"findIndex"],[377,53,409,51],[377,54,409,53,"comp"],[377,58,409,62],[377,62,409,67,"comp"],[377,66,409,71],[377,67,409,72,"_id"],[377,70,409,75],[377,75,409,80,"competitionId"],[377,88,409,93],[377,89,409,94],[378,6,410,4],[378,10,410,8,"competitionIndex"],[378,26,410,24],[378,31,410,29],[378,32,410,30],[378,33,410,31],[378,35,410,33],[379,8,411,6],[379,14,411,12],[379,18,411,16,"Error"],[379,23,411,21],[379,24,411,22],[379,47,411,45],[379,48,411,46],[380,6,412,4],[381,6,414,4],[381,12,414,10,"competition"],[381,23,414,21],[381,26,414,24,"competitions"],[381,38,414,36],[381,39,414,37,"competitionIndex"],[381,55,414,53],[381,56,414,54],[383,6,416,4],[384,6,417,4],[384,10,417,8,"competition"],[384,21,417,19],[384,22,417,20,"admin_id"],[384,30,417,28],[384,35,417,33],[384,61,417,59],[384,63,417,61],[385,8,418,6],[385,14,418,12],[385,18,418,16,"Error"],[385,23,418,21],[385,24,418,22],[385,62,418,60],[385,63,418,61],[386,6,419,4],[388,6,421,4],[389,6,422,4,"competitions"],[389,18,422,16],[389,19,422,17,"competitionIndex"],[389,35,422,33],[389,36,422,34],[389,39,422,34,"Object"],[389,45,422,34],[389,46,422,34,"assign"],[389,52,422,34],[389,57,423,9,"competition"],[389,68,423,20],[389,70,424,9,"updates"],[389,77,424,16],[390,8,425,6,"updated_at"],[390,18,425,16],[390,20,425,18],[390,24,425,22,"Date"],[390,28,425,26],[390,29,425,27],[390,30,425,28],[390,31,425,29,"toISOString"],[390,42,425,40],[390,43,425,41],[391,6,425,42],[391,8,426,5],[392,6,428,4],[392,12,428,10,"CrossPlatformStorage"],[392,32,428,30],[392,33,428,31,"setItem"],[392,40,428,38],[392,41,428,39],[392,59,428,57],[392,61,428,59,"JSON"],[392,65,428,63],[392,66,428,64,"stringify"],[392,75,428,73],[392,76,428,74,"competitions"],[392,88,428,86],[392,89,428,87],[392,90,428,88],[394,6,430,4],[395,6,431,4],[395,12,431,10,"logAdminAction"],[395,26,431,24],[395,27,431,25],[395,33,431,31],[395,35,431,33,"competition"],[395,46,431,44],[395,47,431,45,"name"],[395,51,431,49],[395,53,431,51],[395,70,431,68],[395,72,431,70,"updates"],[395,79,431,77],[395,80,431,78],[396,6,433,4,"console"],[396,13,433,11],[396,14,433,12,"log"],[396,17,433,15],[396,18,433,16],[396,54,433,52],[396,55,433,53],[397,6,434,4],[397,13,434,11,"competitions"],[397,25,434,23],[397,26,434,24,"competitionIndex"],[397,42,434,40],[397,43,434,41],[398,4,435,2],[398,5,435,3],[399,4,437,2],[400,4,438,2,"awardDailyPrizeMock"],[400,23,438,21],[400,25,438,23],[400,31,438,23,"awardDailyPrizeMock"],[400,32,438,30,"competitionId"],[400,45,438,51],[400,47,438,53,"matchday"],[400,55,438,69],[400,57,438,71,"winnerId"],[400,65,438,87],[400,70,438,92],[401,6,439,4,"console"],[401,13,439,11],[401,14,439,12,"log"],[401,17,439,15],[401,18,439,16],[401,62,439,60],[401,64,439,62,"matchday"],[401,72,439,70],[401,74,439,72],[401,83,439,81],[401,85,439,83,"winnerId"],[401,93,439,91],[401,94,439,92],[402,6,441,4],[402,12,441,10,"storedCompetitions"],[402,30,441,28],[402,33,441,31],[402,39,441,37,"CrossPlatformStorage"],[402,59,441,57],[402,60,441,58,"getItem"],[402,67,441,65],[402,68,441,66],[402,86,441,84],[402,87,441,85],[403,6,442,4],[403,10,442,8,"competitions"],[403,22,442,20],[403,25,442,23,"storedCompetitions"],[403,43,442,41],[403,46,442,44,"JSON"],[403,50,442,48],[403,51,442,49,"parse"],[403,56,442,54],[403,57,442,55,"storedCompetitions"],[403,75,442,73],[403,76,442,74],[403,79,442,77],[403,81,442,79],[404,6,444,4],[404,12,444,10,"competitionIndex"],[404,28,444,26],[404,31,444,29,"competitions"],[404,43,444,41],[404,44,444,42,"findIndex"],[404,53,444,51],[404,54,444,53,"comp"],[404,58,444,62],[404,62,444,67,"comp"],[404,66,444,71],[404,67,444,72,"_id"],[404,70,444,75],[404,75,444,80,"competitionId"],[404,88,444,93],[404,89,444,94],[405,6,445,4],[405,10,445,8,"competitionIndex"],[405,26,445,24],[405,31,445,29],[405,32,445,30],[405,33,445,31],[405,35,445,33],[406,8,446,6],[406,14,446,12],[406,18,446,16,"Error"],[406,23,446,21],[406,24,446,22],[406,47,446,45],[406,48,446,46],[407,6,447,4],[408,6,449,4],[408,12,449,10,"competition"],[408,23,449,21],[408,26,449,24,"competitions"],[408,38,449,36],[408,39,449,37,"competitionIndex"],[408,55,449,53],[408,56,449,54],[410,6,451,4],[411,6,452,4],[411,10,452,8,"competition"],[411,21,452,19],[411,22,452,20,"admin_id"],[411,30,452,28],[411,35,452,33],[411,61,452,59],[411,63,452,61],[412,8,453,6],[412,14,453,12],[412,18,453,16,"Error"],[412,23,453,21],[412,24,453,22],[412,59,453,57],[412,60,453,58],[413,6,454,4],[415,6,456,4],[416,6,457,4],[416,10,457,8],[416,11,457,9,"competition"],[416,22,457,20],[416,23,457,21,"rules"],[416,28,457,26],[416,32,457,30],[416,33,457,31],[416,34,457,32],[416,41,457,39],[416,43,457,41],[416,50,457,48],[416,51,457,49],[416,52,457,50,"includes"],[416,60,457,58],[416,61,457,59,"competition"],[416,72,457,70],[416,73,457,71,"rules"],[416,78,457,76],[416,79,457,77,"type"],[416,83,457,81],[416,84,457,82],[416,86,457,84],[417,8,458,6],[417,14,458,12],[417,18,458,16,"Error"],[417,23,458,21],[417,24,458,22],[417,69,458,67],[417,70,458,68],[418,6,459,4],[419,6,461,4],[419,12,461,10,"dailyPrizeAmount"],[419,28,461,26],[419,31,461,29,"competition"],[419,42,461,40],[419,43,461,41,"rules"],[419,48,461,46],[419,49,461,47,"daily_prize"],[419,60,461,58],[419,64,461,62],[419,65,461,63],[420,6,462,4],[420,12,462,10,"winner"],[420,18,462,16],[420,21,462,19,"competition"],[420,32,462,30],[420,33,462,31,"participants"],[420,45,462,43],[420,46,462,44,"find"],[420,50,462,48],[420,51,462,50,"p"],[420,52,462,56],[420,56,462,61,"p"],[420,57,462,62],[420,58,462,63,"id"],[420,60,462,65],[420,65,462,70,"winnerId"],[420,73,462,78],[420,74,462,79],[421,6,464,4],[421,10,464,8],[421,11,464,9,"winner"],[421,17,464,15],[421,19,464,17],[422,8,465,6],[422,14,465,12],[422,18,465,16,"Error"],[422,23,465,21],[422,24,465,22],[422,57,465,55],[422,58,465,56],[423,6,466,4],[425,6,468,4],[426,6,469,4],[426,10,469,8],[426,11,469,9,"competition"],[426,22,469,20],[426,23,469,21,"daily_winners"],[426,36,469,34],[426,38,469,36],[427,8,470,6,"competition"],[427,19,470,17],[427,20,470,18,"daily_winners"],[427,33,470,31],[427,36,470,34],[427,37,470,35],[427,38,470,36],[428,6,471,4],[430,6,473,4],[431,6,474,4],[431,10,474,8,"competition"],[431,21,474,19],[431,22,474,20,"daily_winners"],[431,35,474,33],[431,36,474,34,"matchday"],[431,44,474,42],[431,45,474,43],[431,47,474,45],[432,8,475,6],[432,14,475,12],[432,18,475,16,"Error"],[432,23,475,21],[432,24,475,22],[432,52,475,50,"matchday"],[432,60,475,58],[432,83,475,81,"competition"],[432,94,475,92],[432,95,475,93,"daily_winners"],[432,108,475,106],[432,109,475,107,"matchday"],[432,117,475,115],[432,118,475,116],[432,119,475,117,"name"],[432,123,475,121],[432,125,475,123],[432,126,475,124],[433,6,476,4],[435,6,478,4],[436,6,479,4,"competition"],[436,17,479,15],[436,18,479,16,"daily_winners"],[436,31,479,29],[436,32,479,30,"matchday"],[436,40,479,38],[436,41,479,39],[436,44,479,42],[437,8,480,6,"user_id"],[437,15,480,13],[437,17,480,15,"winnerId"],[437,25,480,23],[438,8,481,6,"name"],[438,12,481,10],[438,14,481,12,"winner"],[438,20,481,18],[438,21,481,19,"name"],[438,25,481,23],[439,8,482,6,"amount"],[439,14,482,12],[439,16,482,14,"dailyPrizeAmount"],[439,32,482,30],[440,8,483,6,"awarded_at"],[440,18,483,16],[440,20,483,18],[440,24,483,22,"Date"],[440,28,483,26],[440,29,483,27],[440,30,483,28],[440,31,483,29,"toISOString"],[440,42,483,40],[440,43,483,41],[441,6,484,4],[441,7,484,5],[443,6,486,4],[444,6,487,4,"competitions"],[444,18,487,16],[444,19,487,17,"competitionIndex"],[444,35,487,33],[444,36,487,34],[444,39,487,37,"competition"],[444,50,487,48],[445,6,488,4],[445,12,488,10,"CrossPlatformStorage"],[445,32,488,30],[445,33,488,31,"setItem"],[445,40,488,38],[445,41,488,39],[445,59,488,57],[445,61,488,59,"JSON"],[445,65,488,63],[445,66,488,64,"stringify"],[445,75,488,73],[445,76,488,74,"competitions"],[445,88,488,86],[445,89,488,87],[445,90,488,88],[447,6,490,4],[448,6,491,4],[448,12,491,10,"logAdminAction"],[448,26,491,24],[448,27,491,25],[448,46,491,44],[448,48,491,46,"competition"],[448,59,491,57],[448,60,491,58,"name"],[448,64,491,62],[448,66,491,64],[448,83,491,81],[448,85,491,83],[449,8,492,6,"matchday"],[449,16,492,14],[450,8,493,6,"winner"],[450,14,493,12],[450,16,493,14,"winner"],[450,22,493,20],[450,23,493,21,"name"],[450,27,493,25],[451,8,494,6,"amount"],[451,14,494,12],[451,16,494,14,"dailyPrizeAmount"],[452,6,495,4],[452,7,495,5],[452,8,495,6],[454,6,497,4],[455,6,498,4,"console"],[455,13,498,11],[455,14,498,12,"log"],[455,17,498,15],[455,18,498,16],[455,24,498,22,"winner"],[455,30,498,28],[455,31,498,29,"name"],[455,35,498,33],[455,48,498,46,"dailyPrizeAmount"],[455,64,498,62],[455,89,498,87,"matchday"],[455,97,498,95],[455,99,498,97],[455,100,498,98],[456,6,500,4,"console"],[456,13,500,11],[456,14,500,12,"log"],[456,17,500,15],[456,18,500,16],[456,54,500,52],[456,55,500,53],[457,6,501,4],[457,13,501,11],[458,8,502,6,"message"],[458,15,502,13],[458,17,502,15],[458,36,502,34,"dailyPrizeAmount"],[458,52,502,50],[458,67,502,65,"winner"],[458,73,502,71],[458,74,502,72,"name"],[458,78,502,76],[458,95,502,93,"matchday"],[458,103,502,101],[458,105,502,103],[459,8,503,6,"competition"],[459,19,503,17],[459,21,503,19,"competition"],[460,6,504,4],[460,7,504,5],[461,4,505,2],[461,5,505,3],[462,4,507,2],[463,4,508,2,"getAdminLogsMock"],[463,20,508,18],[463,22,508,20],[463,28,508,20,"getAdminLogsMock"],[463,29,508,20],[463,34,508,32],[464,6,509,4,"console"],[464,13,509,11],[464,14,509,12,"log"],[464,17,509,15],[464,18,509,16],[464,47,509,45],[464,48,509,46],[465,6,511,4],[465,10,511,8],[466,8,512,6],[466,14,512,12,"logs"],[466,18,512,16],[466,21,512,19],[466,28,512,25,"CrossPlatformStorage"],[466,48,512,45],[466,49,512,46,"getItem"],[466,56,512,53],[466,57,512,54],[466,68,512,65],[466,69,512,66],[466,74,512,70],[466,78,512,74],[467,8,513,6],[467,14,513,12,"adminLogs"],[467,23,513,21],[467,26,513,24,"JSON"],[467,30,513,28],[467,31,513,29,"parse"],[467,36,513,34],[467,37,513,35,"logs"],[467,41,513,39],[467,42,513,40],[469,8,515,6],[470,8,516,6,"adminLogs"],[470,17,516,15],[470,18,516,16,"sort"],[470,22,516,20],[470,23,516,21],[470,24,516,22,"a"],[470,25,516,28],[470,27,516,30,"b"],[470,28,516,36],[470,33,516,41],[470,37,516,45,"Date"],[470,41,516,49],[470,42,516,50,"b"],[470,43,516,51],[470,44,516,52,"timestamp"],[470,53,516,61],[470,54,516,62],[470,55,516,63,"getTime"],[470,62,516,70],[470,63,516,71],[470,64,516,72],[470,67,516,75],[470,71,516,79,"Date"],[470,75,516,83],[470,76,516,84,"a"],[470,77,516,85],[470,78,516,86,"timestamp"],[470,87,516,95],[470,88,516,96],[470,89,516,97,"getTime"],[470,96,516,104],[470,97,516,105],[470,98,516,106],[470,99,516,107],[471,8,518,6,"console"],[471,15,518,13],[471,16,518,14,"log"],[471,19,518,17],[471,20,518,18],[471,42,518,40],[471,44,518,42,"adminLogs"],[471,53,518,51],[471,54,518,52,"length"],[471,60,518,58],[471,61,518,59],[472,8,519,6],[472,15,519,13,"adminLogs"],[472,24,519,22],[473,6,520,4],[473,7,520,5],[473,8,520,6],[473,15,520,13,"error"],[473,20,520,18],[473,22,520,20],[474,8,521,6,"console"],[474,15,521,13],[474,16,521,14,"error"],[474,21,521,19],[474,22,521,20],[474,52,521,50],[474,54,521,52,"error"],[474,59,521,57],[474,60,521,58],[475,8,522,6],[475,15,522,13],[475,17,522,15],[476,6,523,4],[477,4,524,2],[478,2,525,0],[478,3,525,1],[480,2,527,0],[481,2,528,7],[481,8,528,13,"walletAPI"],[481,17,528,22],[481,20,528,25],[482,4,529,2,"getBalance"],[482,14,529,12],[482,16,529,14,"getBalance"],[482,17,529,14],[482,22,529,20,"apiClient"],[482,31,529,29],[482,32,529,30,"get"],[482,35,529,33],[482,36,529,34],[482,53,529,51],[482,54,529,52],[483,4,531,2,"topUp"],[483,9,531,7],[483,11,531,10,"amount"],[483,17,531,24],[483,21,532,4,"apiClient"],[483,30,532,13],[483,31,532,14,"post"],[483,35,532,18],[483,36,532,19],[483,51,532,34],[483,53,532,36],[483,57,532,40],[483,59,532,42],[484,6,533,6,"params"],[484,12,533,12],[484,14,533,14],[485,8,533,16,"amount"],[486,6,533,23],[487,4,534,4],[487,5,534,5],[487,6,534,6],[488,4,536,2,"withdraw"],[488,12,536,10],[488,14,536,13,"amount"],[488,20,536,27],[488,24,537,4,"apiClient"],[488,33,537,13],[488,34,537,14,"post"],[488,38,537,18],[488,39,537,19],[488,57,537,37],[488,59,537,39],[488,63,537,43],[488,65,537,45],[489,6,538,6,"params"],[489,12,538,12],[489,14,538,14],[490,8,538,16,"amount"],[491,6,538,23],[492,4,539,4],[492,5,539,5],[492,6,539,6],[493,4,541,2,"getTransactions"],[493,19,541,17],[493,21,541,19,"getTransactions"],[493,22,541,19],[493,27,541,25,"apiClient"],[493,36,541,34],[493,37,541,35,"get"],[493,40,541,38],[493,41,541,39],[493,56,541,54],[494,2,542,0],[494,3,542,1],[495,2,544,0],[495,6,544,0,"_default"],[495,14,544,0],[495,17,544,15,"apiClient"],[495,26,544,24],[496,0,544,25],[496,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnC2D;oBqCG;kCDc,sCC;0BCC,0BD;GrCS;yBuCE;yBCU;KDE;GvCG;YyCE;GzCM;c0CG;kDCM,yCD;uCEW,yCF;G1CQ;Y6CG;oDCM,yCD;G7C0B;uB+CG;oDDM,yCC;iDCkB,6BD;G/C2C;oBiDG;qBCQ,qFD;GjDQ;cmDK,sCnD;SoDE;MpDG;YqDE;MrDG;mBsDE,oCtD"},"hasCjsExports":false},"type":"js/module"}]}