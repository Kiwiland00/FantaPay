{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactJsxDevRuntime = require(_dependencyMap[1], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useAuth = () => {\n    _s();\n    const context = (0, _react.useContext)(AuthContext);\n    if (!context) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const AuthProvider = ({\n    children\n  }) => {\n    _s2();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n\n    // TEMPORARY: Mock authenticated user for testing core features\n    // TODO: Remove this when re-enabling full authentication\n    const mockUser = {\n      id: '650f1f1f1f1f1f1f1f1f1f1f',\n      email: 'test@fantapay.com',\n      name: 'FantaPay Tester',\n      username: 'fantapay_user',\n      picture: undefined,\n      auth_method: 'email',\n      is_verified: true,\n      language: 'en',\n      wallet_balance: 150.00,\n      biometric_enabled: false,\n      created_at: '2024-01-01T00:00:00Z',\n      updated_at: '2024-01-01T00:00:00Z',\n      last_login: '2024-01-01T00:00:00Z'\n    };\n    const isAuthenticated = true; // Always authenticated for testing\n\n    // Initialize with mock user on app start\n    (0, _react.useEffect)(() => {\n      const initMockUser = () => {\n        setUser(mockUser);\n        setIsLoading(false);\n      };\n\n      // Simulate loading time\n      const timer = setTimeout(initMockUser, 1000);\n      return () => clearTimeout(timer);\n    }, []);\n    const checkExistingSession = async () => {\n      // TEMPORARY: Disabled for testing\n      // Original authentication logic will be restored later\n    };\n    const login = async sessionId => {\n      // TEMPORARY: Mock login for testing\n      console.log('Mock login called');\n    };\n    const loginWithEmail = async (email, password) => {\n      // TEMPORARY: Mock email login for testing  \n      console.log('Mock email login called');\n    };\n    const signup = async userData => {\n      // TEMPORARY: Mock signup for testing\n      console.log('Mock signup called');\n      return {\n        email: userData.email,\n        requiresOTP: false\n      };\n    };\n    const verifyOTP = async (email, otpCode) => {\n      // TEMPORARY: Mock OTP verification for testing\n      console.log('Mock OTP verification called');\n    };\n    const resendOTP = async email => {\n      // TEMPORARY: Mock resend OTP for testing\n      console.log('Mock resend OTP called');\n    };\n    const logout = async () => {\n      // TEMPORARY: Mock logout for testing\n      console.log('Mock logout called - staying logged in for testing');\n    };\n    const enableBiometric = async () => {\n      // TEMPORARY: Mock biometric enable for testing\n      if (user) {\n        setUser(Object.assign({}, user, {\n          biometric_enabled: true\n        }));\n        console.log('Mock biometric enabled');\n      }\n    };\n    const authenticateWithBiometric = async () => {\n      // TEMPORARY: Mock biometric auth for testing\n      console.log('Mock biometric authentication');\n      return true;\n    };\n    const updateLanguage = async language => {\n      // TEMPORARY: Mock language update for testing\n      if (user) {\n        setUser(Object.assign({}, user, {\n          language\n        }));\n        console.log('Mock language updated to:', language);\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isAuthenticated,\n      login,\n      loginWithEmail,\n      signup,\n      verifyOTP,\n      resendOTP,\n      logout,\n      enableBiometric,\n      authenticateWithBiometric,\n      updateLanguage\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }, this);\n  };\n  _s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n  _c = AuthProvider;\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":153,"map":[[10,2,46,0,"Object"],[10,8,46,0],[10,9,46,0,"defineProperty"],[10,23,46,0],[10,24,46,0,"exports"],[10,31,46,0],[11,4,46,0,"enumerable"],[11,14,46,0],[12,4,46,0,"get"],[12,7,46,0],[12,18,46,0,"get"],[12,19,46,0],[13,6,46,0],[13,13,46,0,"useAuth"],[13,20,46,0],[14,4,46,0],[15,2,46,0],[16,2,58,0,"Object"],[16,8,58,0],[16,9,58,0,"defineProperty"],[16,23,58,0],[16,24,58,0,"exports"],[16,31,58,0],[17,4,58,0,"enumerable"],[17,14,58,0],[18,4,58,0,"get"],[18,7,58,0],[18,18,58,0,"get"],[18,19,58,0],[19,6,58,0],[19,13,58,0,"AuthProvider"],[19,25,58,0],[20,4,58,0],[21,2,58,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,1,78],[23,6,1,78,"_reactJsxDevRuntime"],[23,25,1,78],[23,28,1,78,"require"],[23,35,1,78],[23,36,1,78,"_dependencyMap"],[23,50,1,78],[24,2,44,0],[24,8,44,6,"AuthContext"],[24,19,44,17],[24,35,44,20],[24,39,44,20,"createContext"],[24,45,44,33],[24,46,44,33,"createContext"],[24,59,44,33],[24,61,44,63,"undefined"],[24,70,44,72],[24,71,44,73],[25,2,46,7],[25,8,46,13,"useAuth"],[25,15,46,20],[25,18,46,23,"useAuth"],[25,19,46,23],[25,24,46,29],[26,4,46,29,"_s"],[26,6,46,29],[27,4,47,2],[27,10,47,8,"context"],[27,17,47,15],[27,20,47,18],[27,24,47,18,"useContext"],[27,30,47,28],[27,31,47,28,"useContext"],[27,41,47,28],[27,43,47,29,"AuthContext"],[27,54,47,40],[27,55,47,41],[28,4,48,2],[28,8,48,6],[28,9,48,7,"context"],[28,16,48,14],[28,18,48,16],[29,6,49,4],[29,12,49,10],[29,16,49,14,"Error"],[29,21,49,19],[29,22,49,20],[29,67,49,65],[29,68,49,66],[30,4,50,2],[31,4,51,2],[31,11,51,9,"context"],[31,18,51,16],[32,2,52,0],[32,3,52,1],[33,2,52,2,"_s"],[33,4,52,2],[33,5,46,13,"useAuth"],[33,12,46,20],[34,2,58,7],[34,8,58,13,"AuthProvider"],[34,20,58,54],[34,23,58,57,"AuthProvider"],[34,24,58,58],[35,4,58,60,"children"],[36,2,58,69],[36,3,58,70],[36,8,58,75],[37,4,58,75,"_s2"],[37,7,58,75],[38,4,59,2],[38,10,59,8],[38,11,59,9,"user"],[38,15,59,13],[38,17,59,15,"setUser"],[38,24,59,22],[38,25,59,23],[38,28,59,26],[38,32,59,26,"useState"],[38,38,59,34],[38,39,59,34,"useState"],[38,47,59,34],[38,49,59,48],[38,53,59,52],[38,54,59,53],[39,4,60,2],[39,10,60,8],[39,11,60,9,"isLoading"],[39,20,60,18],[39,22,60,20,"setIsLoading"],[39,34,60,32],[39,35,60,33],[39,38,60,36],[39,42,60,36,"useState"],[39,48,60,44],[39,49,60,44,"useState"],[39,57,60,44],[39,59,60,45],[39,63,60,49],[39,64,60,50],[41,4,62,2],[42,4,63,2],[43,4,64,2],[43,10,64,8,"mockUser"],[43,18,64,22],[43,21,64,25],[44,6,65,4,"id"],[44,8,65,6],[44,10,65,8],[44,36,65,34],[45,6,66,4,"email"],[45,11,66,9],[45,13,66,11],[45,32,66,30],[46,6,67,4,"name"],[46,10,67,8],[46,12,67,10],[46,29,67,27],[47,6,68,4,"username"],[47,14,68,12],[47,16,68,14],[47,31,68,29],[48,6,69,4,"picture"],[48,13,69,11],[48,15,69,13,"undefined"],[48,24,69,22],[49,6,70,4,"auth_method"],[49,17,70,15],[49,19,70,17],[49,26,70,24],[50,6,71,4,"is_verified"],[50,17,71,15],[50,19,71,17],[50,23,71,21],[51,6,72,4,"language"],[51,14,72,12],[51,16,72,14],[51,20,72,18],[52,6,73,4,"wallet_balance"],[52,20,73,18],[52,22,73,20],[52,28,73,26],[53,6,74,4,"biometric_enabled"],[53,23,74,21],[53,25,74,23],[53,30,74,28],[54,6,75,4,"created_at"],[54,16,75,14],[54,18,75,16],[54,40,75,38],[55,6,76,4,"updated_at"],[55,16,76,14],[55,18,76,16],[55,40,76,38],[56,6,77,4,"last_login"],[56,16,77,14],[56,18,77,16],[57,4,78,2],[57,5,78,3],[58,4,80,2],[58,10,80,8,"isAuthenticated"],[58,25,80,23],[58,28,80,26],[58,32,80,30],[58,33,80,31],[58,34,80,32],[60,4,82,2],[61,4,83,2],[61,8,83,2,"useEffect"],[61,14,83,11],[61,15,83,11,"useEffect"],[61,24,83,11],[61,26,83,12],[61,32,83,18],[62,6,84,4],[62,12,84,10,"initMockUser"],[62,24,84,22],[62,27,84,25,"initMockUser"],[62,28,84,25],[62,33,84,31],[63,8,85,6,"setUser"],[63,15,85,13],[63,16,85,14,"mockUser"],[63,24,85,22],[63,25,85,23],[64,8,86,6,"setIsLoading"],[64,20,86,18],[64,21,86,19],[64,26,86,24],[64,27,86,25],[65,6,87,4],[65,7,87,5],[67,6,89,4],[68,6,90,4],[68,12,90,10,"timer"],[68,17,90,15],[68,20,90,18,"setTimeout"],[68,30,90,28],[68,31,90,29,"initMockUser"],[68,43,90,41],[68,45,90,43],[68,49,90,47],[68,50,90,48],[69,6,91,4],[69,13,91,11],[69,19,91,17,"clearTimeout"],[69,31,91,29],[69,32,91,30,"timer"],[69,37,91,35],[69,38,91,36],[70,4,92,2],[70,5,92,3],[70,7,92,5],[70,9,92,7],[70,10,92,8],[71,4,94,2],[71,10,94,8,"checkExistingSession"],[71,30,94,28],[71,33,94,31],[71,39,94,31,"checkExistingSession"],[71,40,94,31],[71,45,94,43],[72,6,95,4],[73,6,96,4],[74,4,96,4],[74,5,97,3],[75,4,99,2],[75,10,99,8,"login"],[75,15,99,13],[75,18,99,16],[75,24,99,23,"sessionId"],[75,33,99,40],[75,37,99,45],[76,6,100,4],[77,6,101,4,"console"],[77,13,101,11],[77,14,101,12,"log"],[77,17,101,15],[77,18,101,16],[77,37,101,35],[77,38,101,36],[78,4,102,2],[78,5,102,3],[79,4,104,2],[79,10,104,8,"loginWithEmail"],[79,24,104,22],[79,27,104,25],[79,33,104,25,"loginWithEmail"],[79,34,104,32,"email"],[79,39,104,45],[79,41,104,47,"password"],[79,49,104,63],[79,54,104,68],[80,6,105,4],[81,6,106,4,"console"],[81,13,106,11],[81,14,106,12,"log"],[81,17,106,15],[81,18,106,16],[81,43,106,41],[81,44,106,42],[82,4,107,2],[82,5,107,3],[83,4,109,2],[83,10,109,8,"signup"],[83,16,109,14],[83,19,109,17],[83,25,109,24,"userData"],[83,33,114,3],[83,37,114,8],[84,6,115,4],[85,6,116,4,"console"],[85,13,116,11],[85,14,116,12,"log"],[85,17,116,15],[85,18,116,16],[85,38,116,36],[85,39,116,37],[86,6,117,4],[86,13,117,11],[87,8,118,6,"email"],[87,13,118,11],[87,15,118,13,"userData"],[87,23,118,21],[87,24,118,22,"email"],[87,29,118,27],[88,8,119,6,"requiresOTP"],[88,19,119,17],[88,21,119,19],[89,6,120,4],[89,7,120,5],[90,4,121,2],[90,5,121,3],[91,4,123,2],[91,10,123,8,"verifyOTP"],[91,19,123,17],[91,22,123,20],[91,28,123,20,"verifyOTP"],[91,29,123,27,"email"],[91,34,123,40],[91,36,123,42,"otpCode"],[91,43,123,57],[91,48,123,62],[92,6,124,4],[93,6,125,4,"console"],[93,13,125,11],[93,14,125,12,"log"],[93,17,125,15],[93,18,125,16],[93,48,125,46],[93,49,125,47],[94,4,126,2],[94,5,126,3],[95,4,128,2],[95,10,128,8,"resendOTP"],[95,19,128,17],[95,22,128,20],[95,28,128,27,"email"],[95,33,128,40],[95,37,128,45],[96,6,129,4],[97,6,130,4,"console"],[97,13,130,11],[97,14,130,12,"log"],[97,17,130,15],[97,18,130,16],[97,42,130,40],[97,43,130,41],[98,4,131,2],[98,5,131,3],[99,4,133,2],[99,10,133,8,"logout"],[99,16,133,14],[99,19,133,17],[99,25,133,17,"logout"],[99,26,133,17],[99,31,133,29],[100,6,134,4],[101,6,135,4,"console"],[101,13,135,11],[101,14,135,12,"log"],[101,17,135,15],[101,18,135,16],[101,70,135,68],[101,71,135,69],[102,4,136,2],[102,5,136,3],[103,4,138,2],[103,10,138,8,"enableBiometric"],[103,25,138,23],[103,28,138,26],[103,34,138,26,"enableBiometric"],[103,35,138,26],[103,40,138,38],[104,6,139,4],[105,6,140,4],[105,10,140,8,"user"],[105,14,140,12],[105,16,140,14],[106,8,141,6,"setUser"],[106,15,141,13],[106,16,141,13,"Object"],[106,22,141,13],[106,23,141,13,"assign"],[106,29,141,13],[106,34,141,19,"user"],[106,38,141,23],[107,10,141,25,"biometric_enabled"],[107,27,141,42],[107,29,141,44],[108,8,141,48],[108,10,141,50],[108,11,141,51],[109,8,142,6,"console"],[109,15,142,13],[109,16,142,14,"log"],[109,19,142,17],[109,20,142,18],[109,44,142,42],[109,45,142,43],[110,6,143,4],[111,4,144,2],[111,5,144,3],[112,4,146,2],[112,10,146,8,"authenticateWithBiometric"],[112,35,146,33],[112,38,146,36],[112,44,146,36,"authenticateWithBiometric"],[112,45,146,36],[112,50,146,66],[113,6,147,4],[114,6,148,4,"console"],[114,13,148,11],[114,14,148,12,"log"],[114,17,148,15],[114,18,148,16],[114,49,148,47],[114,50,148,48],[115,6,149,4],[115,13,149,11],[115,17,149,15],[116,4,150,2],[116,5,150,3],[117,4,152,2],[117,10,152,8,"updateLanguage"],[117,24,152,22],[117,27,152,25],[117,33,152,32,"language"],[117,41,152,48],[117,45,152,53],[118,6,153,4],[119,6,154,4],[119,10,154,8,"user"],[119,14,154,12],[119,16,154,14],[120,8,155,6,"setUser"],[120,15,155,13],[120,16,155,13,"Object"],[120,22,155,13],[120,23,155,13,"assign"],[120,29,155,13],[120,34,155,19,"user"],[120,38,155,23],[121,10,155,25,"language"],[122,8,155,33],[122,10,155,35],[122,11,155,36],[123,8,156,6,"console"],[123,15,156,13],[123,16,156,14,"log"],[123,19,156,17],[123,20,156,18],[123,47,156,45],[123,49,156,47,"language"],[123,57,156,55],[123,58,156,56],[124,6,157,4],[125,4,158,2],[125,5,158,3],[126,4,160,2],[126,10,160,8,"value"],[126,15,160,30],[126,18,160,33],[127,6,161,4,"user"],[127,10,161,8],[128,6,162,4,"isLoading"],[128,15,162,13],[129,6,163,4,"isAuthenticated"],[129,21,163,19],[130,6,164,4,"login"],[130,11,164,9],[131,6,165,4,"loginWithEmail"],[131,20,165,18],[132,6,166,4,"signup"],[132,12,166,10],[133,6,167,4,"verifyOTP"],[133,15,167,13],[134,6,168,4,"resendOTP"],[134,15,168,13],[135,6,169,4,"logout"],[135,12,169,10],[136,6,170,4,"enableBiometric"],[136,21,170,19],[137,6,171,4,"authenticateWithBiometric"],[137,31,171,29],[138,6,172,4,"updateLanguage"],[139,4,173,2],[139,5,173,3],[140,4,175,2],[140,24,175,9],[140,28,175,9,"_reactJsxDevRuntime"],[140,47,175,9],[140,48,175,9,"jsxDEV"],[140,54,175,9],[140,56,175,10,"AuthContext"],[140,67,175,21],[140,68,175,22,"Provider"],[140,76,175,30],[141,6,175,31,"value"],[141,11,175,36],[141,13,175,38,"value"],[141,18,175,44],[142,6,175,44,"children"],[142,14,175,44],[142,16,175,46,"children"],[143,4,175,54],[144,6,175,54,"fileName"],[144,14,175,54],[144,16,175,54,"_jsxFileName"],[144,28,175,54],[145,6,175,54,"lineNumber"],[145,16,175,54],[146,6,175,54,"columnNumber"],[146,18,175,54],[147,4,175,54],[147,11,175,77],[147,12,175,78],[148,2,176,0],[148,3,176,1],[149,2,176,2,"_s2"],[149,5,176,2],[149,6,58,13,"AuthProvider"],[149,18,58,54],[150,2,58,54,"_c"],[150,4,58,54],[150,7,58,13,"AuthProvider"],[150,19,58,54],[151,2,58,54],[151,6,58,54,"_c"],[151,8,58,54],[152,2,58,54,"$RefreshReg$"],[152,14,58,54],[152,15,58,54,"_c"],[152,17,58,54],[153,0,58,54],[153,3]],"functionMap":{"names":["<global>","useAuth","AuthProvider","useEffect$argument_0","initMockUser","<anonymous>","checkExistingSession","login","loginWithEmail","signup","verifyOTP","resendOTP","logout","enableBiometric","authenticateWithBiometric","updateLanguage"],"mappings":"AAA;uBC6C;CDM;yDEM;YCyB;yBCC;KDG;WEI,yBF;GDC;+BIE;GJG;gBKE;GLG;yBME;GNG;iBOE;GPY;oBQE;GRG;oBSE;GTG;iBUE;GVG;0BWE;GXM;oCYE;GZI;yBaE;GbM;CFkB"},"hasCjsExports":false},"type":"js/module"}]}