{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactJsxDevRuntime = require(_dependencyMap[1], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (!context) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n\n    // TEMPORARY: Mock authenticated user for testing core features\n    // TODO: Remove this when re-enabling full authentication\n    const mockUser = {\n      id: '650f1f1f1f1f1f1f1f1f1f1f',\n      email: 'test@fantapay.com',\n      name: 'FantaPay Tester',\n      username: 'fantapay_user',\n      picture: undefined,\n      auth_method: 'email',\n      is_verified: true,\n      language: 'en',\n      wallet_balance: 150.00,\n      biometric_enabled: false,\n      created_at: '2024-01-01T00:00:00Z',\n      updated_at: '2024-01-01T00:00:00Z',\n      last_login: '2024-01-01T00:00:00Z'\n    };\n    const isAuthenticated = true; // Always authenticated for testing\n\n    // Initialize with mock user on app start\n    (0, _react.useEffect)(() => {\n      const initMockUser = () => {\n        setUser(mockUser);\n        setIsLoading(false);\n      };\n\n      // Simulate loading time\n      const timer = setTimeout(initMockUser, 1000);\n      return () => clearTimeout(timer);\n    }, []);\n    const checkExistingSession = async () => {\n      // TEMPORARY: Disabled for testing\n      // Original authentication logic will be restored later\n    };\n    const login = async sessionId => {\n      // TEMPORARY: Mock login for testing\n      console.log('Mock login called');\n    };\n    const loginWithEmail = async (email, password) => {\n      // TEMPORARY: Mock email login for testing  \n      console.log('Mock email login called');\n    };\n    const signup = async userData => {\n      // TEMPORARY: Mock signup for testing\n      console.log('Mock signup called');\n      return {\n        email: userData.email,\n        requiresOTP: false\n      };\n    };\n    const verifyOTP = async (email, otpCode) => {\n      // TEMPORARY: Mock OTP verification for testing\n      console.log('Mock OTP verification called');\n    };\n    const resendOTP = async email => {\n      // TEMPORARY: Mock resend OTP for testing\n      console.log('Mock resend OTP called');\n    };\n    const logout = async () => {\n      // TEMPORARY: Mock logout for testing\n      console.log('Mock logout called - staying logged in for testing');\n    };\n    const enableBiometric = async () => {\n      // TEMPORARY: Mock biometric enable for testing\n      if (user) {\n        setUser({\n          ...user,\n          biometric_enabled: true\n        });\n        console.log('Mock biometric enabled');\n      }\n    };\n    const authenticateWithBiometric = async () => {\n      // TEMPORARY: Mock biometric auth for testing\n      console.log('Mock biometric authentication');\n      return true;\n    };\n    const updateLanguage = async language => {\n      // TEMPORARY: Mock language update for testing\n      if (user) {\n        setUser({\n          ...user,\n          language\n        });\n        console.log('Mock language updated to:', language);\n      }\n    };\n    const value = {\n      user,\n      isLoading,\n      isAuthenticated,\n      login,\n      loginWithEmail,\n      signup,\n      verifyOTP,\n      resendOTP,\n      logout,\n      enableBiometric,\n      authenticateWithBiometric,\n      updateLanguage\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }, this);\n  };\n});","lineCount":146,"map":[[8,2,46,0,"Object"],[8,8,46,0],[8,9,46,0,"defineProperty"],[8,23,46,0],[8,24,46,0,"exports"],[8,31,46,0],[9,4,46,0,"enumerable"],[9,14,46,0],[10,4,46,0,"get"],[10,7,46,0],[10,18,46,0,"get"],[10,19,46,0],[11,6,46,0],[11,13,46,0,"useAuth"],[11,20,46,0],[12,4,46,0],[13,2,46,0],[14,2,58,0,"Object"],[14,8,58,0],[14,9,58,0,"defineProperty"],[14,23,58,0],[14,24,58,0,"exports"],[14,31,58,0],[15,4,58,0,"enumerable"],[15,14,58,0],[16,4,58,0,"get"],[16,7,58,0],[16,18,58,0,"get"],[16,19,58,0],[17,6,58,0],[17,13,58,0,"AuthProvider"],[17,25,58,0],[18,4,58,0],[19,2,58,0],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,1,78],[21,6,1,78,"_reactJsxDevRuntime"],[21,25,1,78],[21,28,1,78,"require"],[21,35,1,78],[21,36,1,78,"_dependencyMap"],[21,50,1,78],[22,2,44,0],[22,8,44,6,"AuthContext"],[22,19,44,17],[22,35,44,20],[22,39,44,20,"createContext"],[22,45,44,33],[22,46,44,33,"createContext"],[22,59,44,33],[22,61,44,63,"undefined"],[22,70,44,72],[22,71,44,73],[23,2,46,7],[23,8,46,13,"useAuth"],[23,15,46,20],[23,18,46,23,"useAuth"],[23,19,46,23],[23,24,46,29],[24,4,47,2],[24,10,47,8,"context"],[24,17,47,15],[24,20,47,18],[24,24,47,18,"useContext"],[24,30,47,28],[24,31,47,28,"useContext"],[24,41,47,28],[24,43,47,29,"AuthContext"],[24,54,47,40],[24,55,47,41],[25,4,48,2],[25,8,48,6],[25,9,48,7,"context"],[25,16,48,14],[25,18,48,16],[26,6,49,4],[26,12,49,10],[26,16,49,14,"Error"],[26,21,49,19],[26,22,49,20],[26,67,49,65],[26,68,49,66],[27,4,50,2],[28,4,51,2],[28,11,51,9,"context"],[28,18,51,16],[29,2,52,0],[29,3,52,1],[30,2,58,7],[30,8,58,13,"AuthProvider"],[30,20,58,54],[30,23,58,57,"AuthProvider"],[30,24,58,58],[31,4,58,60,"children"],[32,2,58,69],[32,3,58,70],[32,8,58,75],[33,4,59,2],[33,10,59,8],[33,11,59,9,"user"],[33,15,59,13],[33,17,59,15,"setUser"],[33,24,59,22],[33,25,59,23],[33,28,59,26],[33,32,59,26,"useState"],[33,38,59,34],[33,39,59,34,"useState"],[33,47,59,34],[33,49,59,48],[33,53,59,52],[33,54,59,53],[34,4,60,2],[34,10,60,8],[34,11,60,9,"isLoading"],[34,20,60,18],[34,22,60,20,"setIsLoading"],[34,34,60,32],[34,35,60,33],[34,38,60,36],[34,42,60,36,"useState"],[34,48,60,44],[34,49,60,44,"useState"],[34,57,60,44],[34,59,60,45],[34,63,60,49],[34,64,60,50],[36,4,62,2],[37,4,63,2],[38,4,64,2],[38,10,64,8,"mockUser"],[38,18,64,22],[38,21,64,25],[39,6,65,4,"id"],[39,8,65,6],[39,10,65,8],[39,36,65,34],[40,6,66,4,"email"],[40,11,66,9],[40,13,66,11],[40,32,66,30],[41,6,67,4,"name"],[41,10,67,8],[41,12,67,10],[41,29,67,27],[42,6,68,4,"username"],[42,14,68,12],[42,16,68,14],[42,31,68,29],[43,6,69,4,"picture"],[43,13,69,11],[43,15,69,13,"undefined"],[43,24,69,22],[44,6,70,4,"auth_method"],[44,17,70,15],[44,19,70,17],[44,26,70,24],[45,6,71,4,"is_verified"],[45,17,71,15],[45,19,71,17],[45,23,71,21],[46,6,72,4,"language"],[46,14,72,12],[46,16,72,14],[46,20,72,18],[47,6,73,4,"wallet_balance"],[47,20,73,18],[47,22,73,20],[47,28,73,26],[48,6,74,4,"biometric_enabled"],[48,23,74,21],[48,25,74,23],[48,30,74,28],[49,6,75,4,"created_at"],[49,16,75,14],[49,18,75,16],[49,40,75,38],[50,6,76,4,"updated_at"],[50,16,76,14],[50,18,76,16],[50,40,76,38],[51,6,77,4,"last_login"],[51,16,77,14],[51,18,77,16],[52,4,78,2],[52,5,78,3],[53,4,80,2],[53,10,80,8,"isAuthenticated"],[53,25,80,23],[53,28,80,26],[53,32,80,30],[53,33,80,31],[53,34,80,32],[55,4,82,2],[56,4,83,2],[56,8,83,2,"useEffect"],[56,14,83,11],[56,15,83,11,"useEffect"],[56,24,83,11],[56,26,83,12],[56,32,83,18],[57,6,84,4],[57,12,84,10,"initMockUser"],[57,24,84,22],[57,27,84,25,"initMockUser"],[57,28,84,25],[57,33,84,31],[58,8,85,6,"setUser"],[58,15,85,13],[58,16,85,14,"mockUser"],[58,24,85,22],[58,25,85,23],[59,8,86,6,"setIsLoading"],[59,20,86,18],[59,21,86,19],[59,26,86,24],[59,27,86,25],[60,6,87,4],[60,7,87,5],[62,6,89,4],[63,6,90,4],[63,12,90,10,"timer"],[63,17,90,15],[63,20,90,18,"setTimeout"],[63,30,90,28],[63,31,90,29,"initMockUser"],[63,43,90,41],[63,45,90,43],[63,49,90,47],[63,50,90,48],[64,6,91,4],[64,13,91,11],[64,19,91,17,"clearTimeout"],[64,31,91,29],[64,32,91,30,"timer"],[64,37,91,35],[64,38,91,36],[65,4,92,2],[65,5,92,3],[65,7,92,5],[65,9,92,7],[65,10,92,8],[66,4,94,2],[66,10,94,8,"checkExistingSession"],[66,30,94,28],[66,33,94,31],[66,39,94,31,"checkExistingSession"],[66,40,94,31],[66,45,94,43],[67,6,95,4],[68,6,96,4],[69,4,96,4],[69,5,97,3],[70,4,99,2],[70,10,99,8,"login"],[70,15,99,13],[70,18,99,16],[70,24,99,23,"sessionId"],[70,33,99,40],[70,37,99,45],[71,6,100,4],[72,6,101,4,"console"],[72,13,101,11],[72,14,101,12,"log"],[72,17,101,15],[72,18,101,16],[72,37,101,35],[72,38,101,36],[73,4,102,2],[73,5,102,3],[74,4,104,2],[74,10,104,8,"loginWithEmail"],[74,24,104,22],[74,27,104,25],[74,33,104,25,"loginWithEmail"],[74,34,104,32,"email"],[74,39,104,45],[74,41,104,47,"password"],[74,49,104,63],[74,54,104,68],[75,6,105,4],[76,6,106,4,"console"],[76,13,106,11],[76,14,106,12,"log"],[76,17,106,15],[76,18,106,16],[76,43,106,41],[76,44,106,42],[77,4,107,2],[77,5,107,3],[78,4,109,2],[78,10,109,8,"signup"],[78,16,109,14],[78,19,109,17],[78,25,109,24,"userData"],[78,33,114,3],[78,37,114,8],[79,6,115,4],[80,6,116,4,"console"],[80,13,116,11],[80,14,116,12,"log"],[80,17,116,15],[80,18,116,16],[80,38,116,36],[80,39,116,37],[81,6,117,4],[81,13,117,11],[82,8,118,6,"email"],[82,13,118,11],[82,15,118,13,"userData"],[82,23,118,21],[82,24,118,22,"email"],[82,29,118,27],[83,8,119,6,"requiresOTP"],[83,19,119,17],[83,21,119,19],[84,6,120,4],[84,7,120,5],[85,4,121,2],[85,5,121,3],[86,4,123,2],[86,10,123,8,"verifyOTP"],[86,19,123,17],[86,22,123,20],[86,28,123,20,"verifyOTP"],[86,29,123,27,"email"],[86,34,123,40],[86,36,123,42,"otpCode"],[86,43,123,57],[86,48,123,62],[87,6,124,4],[88,6,125,4,"console"],[88,13,125,11],[88,14,125,12,"log"],[88,17,125,15],[88,18,125,16],[88,48,125,46],[88,49,125,47],[89,4,126,2],[89,5,126,3],[90,4,128,2],[90,10,128,8,"resendOTP"],[90,19,128,17],[90,22,128,20],[90,28,128,27,"email"],[90,33,128,40],[90,37,128,45],[91,6,129,4],[92,6,130,4,"console"],[92,13,130,11],[92,14,130,12,"log"],[92,17,130,15],[92,18,130,16],[92,42,130,40],[92,43,130,41],[93,4,131,2],[93,5,131,3],[94,4,133,2],[94,10,133,8,"logout"],[94,16,133,14],[94,19,133,17],[94,25,133,17,"logout"],[94,26,133,17],[94,31,133,29],[95,6,134,4],[96,6,135,4,"console"],[96,13,135,11],[96,14,135,12,"log"],[96,17,135,15],[96,18,135,16],[96,70,135,68],[96,71,135,69],[97,4,136,2],[97,5,136,3],[98,4,138,2],[98,10,138,8,"enableBiometric"],[98,25,138,23],[98,28,138,26],[98,34,138,26,"enableBiometric"],[98,35,138,26],[98,40,138,38],[99,6,139,4],[100,6,140,4],[100,10,140,8,"user"],[100,14,140,12],[100,16,140,14],[101,8,141,6,"setUser"],[101,15,141,13],[101,16,141,14],[102,10,141,16],[102,13,141,19,"user"],[102,17,141,23],[103,10,141,25,"biometric_enabled"],[103,27,141,42],[103,29,141,44],[104,8,141,49],[104,9,141,50],[104,10,141,51],[105,8,142,6,"console"],[105,15,142,13],[105,16,142,14,"log"],[105,19,142,17],[105,20,142,18],[105,44,142,42],[105,45,142,43],[106,6,143,4],[107,4,144,2],[107,5,144,3],[108,4,146,2],[108,10,146,8,"authenticateWithBiometric"],[108,35,146,33],[108,38,146,36],[108,44,146,36,"authenticateWithBiometric"],[108,45,146,36],[108,50,146,66],[109,6,147,4],[110,6,148,4,"console"],[110,13,148,11],[110,14,148,12,"log"],[110,17,148,15],[110,18,148,16],[110,49,148,47],[110,50,148,48],[111,6,149,4],[111,13,149,11],[111,17,149,15],[112,4,150,2],[112,5,150,3],[113,4,152,2],[113,10,152,8,"updateLanguage"],[113,24,152,22],[113,27,152,25],[113,33,152,32,"language"],[113,41,152,48],[113,45,152,53],[114,6,153,4],[115,6,154,4],[115,10,154,8,"user"],[115,14,154,12],[115,16,154,14],[116,8,155,6,"setUser"],[116,15,155,13],[116,16,155,14],[117,10,155,16],[117,13,155,19,"user"],[117,17,155,23],[118,10,155,25,"language"],[119,8,155,34],[119,9,155,35],[119,10,155,36],[120,8,156,6,"console"],[120,15,156,13],[120,16,156,14,"log"],[120,19,156,17],[120,20,156,18],[120,47,156,45],[120,49,156,47,"language"],[120,57,156,55],[120,58,156,56],[121,6,157,4],[122,4,158,2],[122,5,158,3],[123,4,160,2],[123,10,160,8,"value"],[123,15,160,30],[123,18,160,33],[124,6,161,4,"user"],[124,10,161,8],[125,6,162,4,"isLoading"],[125,15,162,13],[126,6,163,4,"isAuthenticated"],[126,21,163,19],[127,6,164,4,"login"],[127,11,164,9],[128,6,165,4,"loginWithEmail"],[128,20,165,18],[129,6,166,4,"signup"],[129,12,166,10],[130,6,167,4,"verifyOTP"],[130,15,167,13],[131,6,168,4,"resendOTP"],[131,15,168,13],[132,6,169,4,"logout"],[132,12,169,10],[133,6,170,4,"enableBiometric"],[133,21,170,19],[134,6,171,4,"authenticateWithBiometric"],[134,31,171,29],[135,6,172,4,"updateLanguage"],[136,4,173,2],[136,5,173,3],[137,4,175,2],[137,24,175,9],[137,28,175,9,"_reactJsxDevRuntime"],[137,47,175,9],[137,48,175,9,"jsxDEV"],[137,54,175,9],[137,56,175,10,"AuthContext"],[137,67,175,21],[137,68,175,22,"Provider"],[137,76,175,30],[138,6,175,31,"value"],[138,11,175,36],[138,13,175,38,"value"],[138,18,175,44],[139,6,175,44,"children"],[139,14,175,44],[139,16,175,46,"children"],[140,4,175,54],[141,6,175,54,"fileName"],[141,14,175,54],[141,16,175,54,"_jsxFileName"],[141,28,175,54],[142,6,175,54,"lineNumber"],[142,16,175,54],[143,6,175,54,"columnNumber"],[143,18,175,54],[144,4,175,54],[144,11,175,77],[144,12,175,78],[145,2,176,0],[145,3,176,1],[146,0,176,2],[146,3]],"functionMap":{"names":["<global>","useAuth","AuthProvider","useEffect$argument_0","initMockUser","<anonymous>","checkExistingSession","login","loginWithEmail","signup","verifyOTP","resendOTP","logout","enableBiometric","authenticateWithBiometric","updateLanguage"],"mappings":"AAA;uBC6C;CDM;yDEM;YCyB;yBCC;KDG;WEI,yBF;GDC;+BIE;GJG;gBKE;GLG;yBME;GNG;iBOE;GPY;oBQE;GRG;oBSE;GTG;iBUE;GVG;0BWE;GXM;oCYE;GZI;yBaE;GbM;CFkB"},"hasCjsExports":false},"type":"js/module"}]}