{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":39,"index":150}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"../utils/CrossPlatformStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":151},"end":{"line":4,"column":65,"index":216}}],"key":"f35s9TWsgQpxKKiCp9CmSar+L+U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _expoVirtualEnv = require(_dependencyMap[3], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[4], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[5], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoConstants = require(_dependencyMap[6], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _utilsCrossPlatformStorage = require(_dependencyMap[7], \"../utils/CrossPlatformStorage\");\n  var CrossPlatformStorage = _interopDefault(_utilsCrossPlatformStorage);\n  // Get backend URL from environment\n  var BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantaleague-pay.preview.emergentagent.com';\n  var ApiClient = /*#__PURE__*/function () {\n    function ApiClient() {\n      (0, _classCallCheck.default)(this, ApiClient);\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(/*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator.default)(function* (config) {\n          console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n          var token = yield SecureStore.getItemAsync('session_token');\n          if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n          }\n          return config;\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    return (0, _createClass.default)(ApiClient, [{\n      key: \"get\",\n      value: function () {\n        var _get = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.get(url);\n          return response.data;\n        });\n        function get(_x2) {\n          return _get.apply(this, arguments);\n        }\n        return get;\n      }()\n    }, {\n      key: \"post\",\n      value: function () {\n        var _post = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.post(url, data);\n          return response.data;\n        });\n        function post(_x3, _x4) {\n          return _post.apply(this, arguments);\n        }\n        return post;\n      }()\n    }, {\n      key: \"patch\",\n      value: function () {\n        var _patch = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.patch(url, data);\n          return response.data;\n        });\n        function patch(_x5, _x6) {\n          return _patch.apply(this, arguments);\n        }\n        return patch;\n      }()\n    }, {\n      key: \"delete\",\n      value: function () {\n        var _delete2 = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.delete(url);\n          return response.data;\n        });\n        function _delete(_x7) {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      key: \"put\",\n      value: function () {\n        var _put = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.put(url, data);\n          return response.data;\n        });\n        function put(_x8, _x9) {\n          return _put.apply(this, arguments);\n        }\n        return put;\n      }()\n    }]);\n  }();\n  var apiClient = new ApiClient();\n\n  // Auth API\n  var authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  var logAdminAction = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator.default)(function* (action, competitionName, adminName, details) {\n      try {\n        var logs = (yield CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n        var adminLogs = JSON.parse(logs);\n        var logEntry = {\n          id: `log_${Date.now()}`,\n          action,\n          competition_name: competitionName,\n          admin_name: adminName,\n          details,\n          timestamp: new Date().toISOString()\n        };\n        adminLogs.push(logEntry);\n        yield CrossPlatformStorage.default.setItem('adminLogs', JSON.stringify(adminLogs));\n        console.log('📝 Admin action logged:', action, competitionName);\n      } catch (error) {\n        console.error('Failed to log admin action:', error);\n      }\n    });\n    return function logAdminAction(_x0, _x1, _x10, _x11) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Competition API\n  var competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* (data) {\n        console.log('🏆 Mock: Creating competition:', data.name);\n        console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n        // Get existing competitions from cross-platform storage\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('competitions_mock');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n        // Check for unique name validation\n        var existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n        if (existingNames.includes(data.name.toLowerCase())) {\n          throw new Error('Competition name already exists. Please choose another name.');\n        }\n\n        // Create new competition\n        // Generate truly random unique invite code (not based on name)\n        var generateRandomCode = () => {\n          var chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'; // Exclude confusing chars like O, 0, I, L\n          var result = '';\n          for (var i = 0; i < 8; i++) {\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\n          }\n          return result;\n        };\n\n        // Ensure invite code is globally unique\n        var inviteCode = generateRandomCode();\n        while (existingCompetitions.some(comp => comp.invite_code === inviteCode)) {\n          inviteCode = generateRandomCode();\n          console.log('🔄 Generated new code due to collision:', inviteCode);\n        }\n        console.log('✅ Generated unique invite code:', inviteCode);\n        var newCompetition = {\n          _id: `comp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          name: data.name,\n          total_matchdays: data.total_matchdays || 36,\n          participation_cost_per_team: data.participation_cost_per_team || 210.0,\n          expected_teams: data.expected_teams || 8,\n          total_prize_pool: data.total_prize_pool || 1680.0,\n          daily_payment_enabled: data.daily_payment_enabled || false,\n          daily_payment_amount: data.daily_payment_amount || 0.0,\n          rules: data.rules,\n          invite_code: inviteCode,\n          // Random unique code\n          invite_link: `https://fantapay.app/join/${inviteCode}`,\n          admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          // Current mock user ID\n          participants: [{\n            id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            email: 'test@fantapay.com',\n            is_admin: true,\n            paid_matchdays: [1, 2],\n            // Mock paid matchdays\n            points: 0\n          }],\n          wallet_balance: 0,\n          is_active: true,\n          current_matchday: 1,\n          // Start at matchday 1\n          standings: [{\n            position: 1,\n            player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            points: 0\n          }],\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n\n        // Add to competitions list and save to storage\n        existingCompetitions.push(newCompetition);\n        yield CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n        console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n        // Log the creation action\n        yield logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n          competition_id: newCompetition._id,\n          rules: newCompetition.rules,\n          total_matchdays: newCompetition.total_matchdays,\n          participation_cost_per_team: newCompetition.participation_cost_per_team,\n          expected_teams: newCompetition.expected_teams,\n          total_prize_pool: newCompetition.total_prize_pool,\n          daily_payment_enabled: newCompetition.daily_payment_enabled,\n          daily_payment_amount: newCompetition.daily_payment_amount\n        });\n        console.log('✅ Mock Competition Created:', newCompetition.name);\n        console.log('📝 Competition Name:', newCompetition.name);\n        console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n        console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n        console.log('🔑 Invite Code:', newCompetition.invite_code);\n        return {\n          data: newCompetition\n        };\n      });\n      return function createMock(_x12) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    // Mock matchday payment methods\n    payMatchdaysMock: function () {\n      var _ref4 = (0, _asyncToGenerator.default)(function* (competitionId, matchdays) {\n        console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n        // Simulate payment processing\n        var totalCost = matchdays.length * 5; // €5 per matchday\n\n        // Mock payment success\n        return {\n          data: {\n            message: `Successfully paid for ${matchdays.length} matchdays`,\n            paid_matchdays: matchdays,\n            total_cost: totalCost,\n            new_user_balance: 150 - totalCost // Mock remaining balance\n          }\n        };\n      });\n      return function payMatchdaysMock(_x13, _x14) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    getMatchdayPaymentsMock: function () {\n      var _ref5 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n        // Mock payment data\n        var mockPayments = [];\n        for (var i = 1; i <= 36; i++) {\n          mockPayments.push({\n            _id: `payment_${i}`,\n            user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            competition_id: competitionId,\n            matchday: i,\n            amount: 5,\n            status: i <= 3 ? 'paid' : 'pending',\n            paid_at: i <= 3 ? new Date().toISOString() : null,\n            created_at: new Date().toISOString()\n          });\n        }\n        return {\n          data: {\n            competition_id: competitionId,\n            daily_payment_enabled: true,\n            daily_payment_amount: 5,\n            total_matchdays: 36,\n            payments: mockPayments\n          }\n        };\n      });\n      return function getMatchdayPaymentsMock(_x15) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    getPaymentStatusTableMock: function () {\n      var _ref6 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n        // Mock admin payment table\n        var mockTable = [{\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          username: 'FantaPay Tester',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          matchday_payments: Array.from({\n            length: 36\n          }, (_, i) => ({\n            matchday: i + 1,\n            status: i < 3 ? 'paid' : 'pending',\n            amount: 5,\n            paid_at: i < 3 ? new Date().toISOString() : null\n          }))\n        }];\n        return {\n          data: {\n            competition_name: 'Mock Fantasy League',\n            total_matchdays: 36,\n            daily_payment_amount: 5,\n            participants: mockTable\n          }\n        };\n      });\n      return function getPaymentStatusTableMock(_x16) {\n        return _ref6.apply(this, arguments);\n      };\n    }(),\n    // Real-time name validation\n    validateNameMock: function () {\n      var _ref7 = (0, _asyncToGenerator.default)(function* (name) {\n        console.log('🏆 Mock: Validating competition name:', name);\n        if (!name.trim()) {\n          return {\n            available: true,\n            message: ''\n          };\n        }\n\n        // Get existing competitions\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Add some default competition names to check against\n        var defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n        var allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n        var isAvailable = !allNames.includes(name.toLowerCase());\n        return {\n          available: isAvailable,\n          message: isAvailable ? 'Name available' : 'Name already exists'\n        };\n      });\n      return function validateNameMock(_x17) {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: function () {\n      var _ref8 = (0, _asyncToGenerator.default)(function* () {\n        console.log('🏆 Mock: Getting my competitions');\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('competitions_mock');\n        if (storedCompetitions) {\n          var competitions = JSON.parse(storedCompetitions);\n          console.log('📋 Competitions found in storage:', competitions.length);\n\n          // Enhance competitions with demo participants if they don't have enough\n          var enhancedCompetitions = competitions.map(comp => {\n            if (!comp.participants || comp.participants.length < 4) {\n              var demoParticipants = [{\n                id: '650f1f1f1f1f1f1f1f1f1f1f',\n                name: 'FantaPay Tester',\n                email: 'test@fantapay.com',\n                is_admin: true,\n                paid_matchdays: [1, 2, 3],\n                points: 87.5,\n                totalPoints: 254.8\n              }, {\n                id: 'user_marco_rossi',\n                name: 'Marco Rossi',\n                email: 'marco.rossi@email.com',\n                is_admin: false,\n                paid_matchdays: [1, 2],\n                points: 92.3,\n                totalPoints: 301.7\n              }, {\n                id: 'user_giulia_bianchi',\n                name: 'Giulia Bianchi',\n                email: 'giulia.bianchi@email.com',\n                is_admin: false,\n                paid_matchdays: [1],\n                points: 78.1,\n                totalPoints: 198.4\n              }, {\n                id: 'user_luca_ferrari',\n                name: 'Luca Ferrari',\n                email: 'luca.ferrari@email.com',\n                is_admin: false,\n                paid_matchdays: [],\n                points: 45.7,\n                totalPoints: 142.9\n              }, {\n                id: 'user_sofia_conti',\n                name: 'Sofia Conti',\n                email: 'sofia.conti@email.com',\n                is_admin: false,\n                paid_matchdays: [1, 2, 3],\n                points: 95.2,\n                totalPoints: 328.6\n              }];\n              return {\n                ...comp,\n                participants: demoParticipants\n              };\n            }\n            return comp;\n          });\n\n          // Save enhanced competitions back to storage\n          yield CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(enhancedCompetitions));\n          enhancedCompetitions.forEach((comp, index) => {\n            console.log(`${index + 1}. ${comp.name} (ID: ${comp._id}) - ${comp.participants?.length || 0} participants`);\n          });\n          return enhancedCompetitions;\n        } else {\n          console.log('📋 No competitions found in storage, returning empty array');\n          return [];\n        }\n      });\n      return function getMyCompetitionsMock() {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    joinMock: function () {\n      var _ref9 = (0, _asyncToGenerator.default)(function* (inviteCode) {\n        console.log('🏆 Mock: Joining competition with code:', inviteCode);\n        if (inviteCode.length < 6) {\n          throw new Error('Invalid invite code');\n        }\n        return {\n          message: 'Successfully joined competition!'\n        };\n      });\n      return function joinMock(_x18) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    // Delete competition (admin only)\n    deleteMock: function () {\n      var _ref0 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('🗑️ Mock: Deleting competition:', competitionId);\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionToDelete = competitions.find(comp => comp._id === competitionId);\n        if (!competitionToDelete) {\n          throw new Error('Competition not found');\n        }\n\n        // Check if user is admin\n        if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can delete this competition');\n        }\n\n        // Remove competition from storage\n        competitions = competitions.filter(comp => comp._id !== competitionId);\n        yield CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n        console.log('✅ Competition deleted successfully');\n        return {\n          message: 'Competition deleted successfully'\n        };\n      });\n      return function deleteMock(_x19) {\n        return _ref0.apply(this, arguments);\n      };\n    }(),\n    // Edit competition (admin only)\n    editMock: function () {\n      var _ref1 = (0, _asyncToGenerator.default)(function* (competitionId, updates) {\n        console.log('✏️ Mock: Editing competition:', competitionId, updates);\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can edit this competition');\n        }\n\n        // Update competition\n        competitions[competitionIndex] = {\n          ...competition,\n          ...updates,\n          updated_at: new Date().toISOString()\n        };\n        yield CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n        console.log('✅ Competition updated successfully');\n        return competitions[competitionIndex];\n      });\n      return function editMock(_x20, _x21) {\n        return _ref1.apply(this, arguments);\n      };\n    }(),\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: function () {\n      var _ref10 = (0, _asyncToGenerator.default)(function* (competitionId, matchday, winnerId) {\n        console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can award daily prizes');\n        }\n\n        // Check if competition has daily prizes\n        if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n          throw new Error('This competition does not have daily prizes');\n        }\n        var dailyPrizeAmount = competition.rules.daily_prize || 5;\n        var winner = competition.participants.find(p => p.id === winnerId);\n        if (!winner) {\n          throw new Error('Winner not found in competition');\n        }\n\n        // Initialize daily winners if not exists\n        if (!competition.daily_winners) {\n          competition.daily_winners = {};\n        }\n\n        // Check if prize already awarded for this matchday\n        if (competition.daily_winners[matchday]) {\n          throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n        }\n\n        // Award the prize\n        competition.daily_winners[matchday] = {\n          user_id: winnerId,\n          name: winner.name,\n          amount: dailyPrizeAmount,\n          awarded_at: new Date().toISOString()\n        };\n\n        // Update competition\n        competitions[competitionIndex] = competition;\n        yield CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n          matchday,\n          winner: winner.name,\n          amount: dailyPrizeAmount\n        });\n\n        // Simulate wallet credit (in a real app, this would update the user's wallet)\n        console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n        console.log('✅ Daily prize awarded successfully');\n        return {\n          message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n          competition: competition\n        };\n      });\n      return function awardDailyPrizeMock(_x22, _x23, _x24) {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    // Get admin logs\n    getAdminLogsMock: function () {\n      var _ref11 = (0, _asyncToGenerator.default)(function* () {\n        console.log('📝 Mock: Getting admin logs');\n        try {\n          var logs = (yield CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n          var adminLogs = JSON.parse(logs);\n\n          // Sort by timestamp (newest first)\n          adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n          console.log('📋 Admin logs found:', adminLogs.length);\n          return adminLogs;\n        } catch (error) {\n          console.error('💥 Error getting admin logs:', error);\n          return [];\n        }\n      });\n      return function getAdminLogsMock() {\n        return _ref11.apply(this, arguments);\n      };\n    }(),\n    // Critical Missing Method: Get ALL competitions for uniqueness validation\n    getAllCompetitions: function () {\n      var _ref12 = (0, _asyncToGenerator.default)(function* () {\n        console.log('🌐 Mock: Getting ALL competitions for validation');\n        try {\n          // Get competitions from both storage locations \n          var storedCompetitions = yield CrossPlatformStorage.default.getItem('competitions_mock');\n          var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n          // Also check the old storage key for backwards compatibility\n          var oldStoredCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n          var oldCompetitions = oldStoredCompetitions ? JSON.parse(oldStoredCompetitions) : [];\n\n          // Combine both sources and remove duplicates\n          var allCompetitions = [...competitions, ...oldCompetitions];\n          var uniqueCompetitions = allCompetitions.filter((comp, index, self) => index === self.findIndex(c => c._id === comp._id));\n          console.log('📊 Total unique competitions found:', uniqueCompetitions.length);\n          return uniqueCompetitions;\n        } catch (error) {\n          console.error('💥 Error getting all competitions:', error);\n          return [];\n        }\n      });\n      return function getAllCompetitions() {\n        return _ref12.apply(this, arguments);\n      };\n    }()\n  };\n\n  // Wallet API\n  var walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  var databaseAPI = {\n    resetDatabase: function () {\n      var _ref13 = (0, _asyncToGenerator.default)(function* () {\n        console.log('🗑️ Resetting database - clearing all stored data');\n        try {\n          yield CrossPlatformStorage.default.removeItem('competitions_mock');\n          yield CrossPlatformStorage.default.removeItem('admin_logs_mock');\n          yield CrossPlatformStorage.default.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n          yield CrossPlatformStorage.default.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n          console.log('✅ Database reset complete - all data cleared');\n          return {\n            success: true,\n            message: 'Database reset complete'\n          };\n        } catch (error) {\n          console.error('❌ Database reset failed:', error);\n          return {\n            success: false,\n            message: 'Reset failed'\n          };\n        }\n      });\n      return function resetDatabase() {\n        return _ref13.apply(this, arguments);\n      };\n    }()\n  };\n  var _default = apiClient;\n});","lineCount":789,"map":[[27,2,714,0,"Object"],[27,8,714,0],[27,9,714,0,"defineProperty"],[27,23,714,0],[27,24,714,0,"exports"],[27,31,714,0],[28,4,714,0,"enumerable"],[28,14,714,0],[29,4,714,0,"get"],[29,7,714,0],[29,18,714,0,"get"],[29,19,714,0],[30,6,714,0],[30,13,714,0,"_default"],[30,21,714,0],[31,4,714,0],[32,2,714,0],[33,2,79,0,"Object"],[33,8,79,0],[33,9,79,0,"defineProperty"],[33,23,79,0],[33,24,79,0,"exports"],[33,31,79,0],[34,4,79,0,"enumerable"],[34,14,79,0],[35,4,79,0,"get"],[35,7,79,0],[35,18,79,0,"get"],[35,19,79,0],[36,6,79,0],[36,13,79,0,"authAPI"],[36,20,79,0],[37,4,79,0],[38,2,79,0],[39,2,142,0,"Object"],[39,8,142,0],[39,9,142,0,"defineProperty"],[39,23,142,0],[39,24,142,0,"exports"],[39,31,142,0],[40,4,142,0,"enumerable"],[40,14,142,0],[41,4,142,0,"get"],[41,7,142,0],[41,18,142,0,"get"],[41,19,142,0],[42,6,142,0],[42,13,142,0,"competitionAPI"],[42,27,142,0],[43,4,142,0],[44,2,142,0],[45,2,678,0,"Object"],[45,8,678,0],[45,9,678,0,"defineProperty"],[45,23,678,0],[45,24,678,0,"exports"],[45,31,678,0],[46,4,678,0,"enumerable"],[46,14,678,0],[47,4,678,0,"get"],[47,7,678,0],[47,18,678,0,"get"],[47,19,678,0],[48,6,678,0],[48,13,678,0,"walletAPI"],[48,22,678,0],[49,4,678,0],[50,2,678,0],[51,2,695,0,"Object"],[51,8,695,0],[51,9,695,0,"defineProperty"],[51,23,695,0],[51,24,695,0,"exports"],[51,31,695,0],[52,4,695,0,"enumerable"],[52,14,695,0],[53,4,695,0,"get"],[53,7,695,0],[53,18,695,0,"get"],[53,19,695,0],[54,6,695,0],[54,13,695,0,"databaseAPI"],[54,24,695,0],[55,4,695,0],[56,2,695,0],[57,2,712,2],[57,6,712,2,"_babelRuntimeHelpersAsyncToGenerator"],[57,42,712,2],[57,45,712,2,"require"],[57,52,712,2],[57,53,712,2,"_dependencyMap"],[57,67,712,2],[58,2,712,2],[58,6,712,2,"_asyncToGenerator"],[58,23,712,2],[58,26,712,2,"_interopDefault"],[58,41,712,2],[58,42,712,2,"_babelRuntimeHelpersAsyncToGenerator"],[58,78,712,2],[59,2,712,2],[59,6,712,2,"_babelRuntimeHelpersClassCallCheck"],[59,40,712,2],[59,43,712,2,"require"],[59,50,712,2],[59,51,712,2,"_dependencyMap"],[59,65,712,2],[60,2,712,2],[60,6,712,2,"_classCallCheck"],[60,21,712,2],[60,24,712,2,"_interopDefault"],[60,39,712,2],[60,40,712,2,"_babelRuntimeHelpersClassCallCheck"],[60,74,712,2],[61,2,712,2],[61,6,712,2,"_babelRuntimeHelpersCreateClass"],[61,37,712,2],[61,40,712,2,"require"],[61,47,712,2],[61,48,712,2,"_dependencyMap"],[61,62,712,2],[62,2,712,2],[62,6,712,2,"_createClass"],[62,18,712,2],[62,21,712,2,"_interopDefault"],[62,36,712,2],[62,37,712,2,"_babelRuntimeHelpersCreateClass"],[62,68,712,2],[63,2,712,2],[63,6,712,2,"_expoVirtualEnv"],[63,21,712,2],[63,24,712,2,"require"],[63,31,712,2],[63,32,712,2,"_dependencyMap"],[63,46,712,2],[64,2,1,0],[64,6,1,0,"_axios"],[64,12,1,0],[64,15,1,0,"require"],[64,22,1,0],[64,23,1,0,"_dependencyMap"],[64,37,1,0],[65,2,1,0],[65,6,1,0,"axios"],[65,11,1,0],[65,14,1,0,"_interopDefault"],[65,29,1,0],[65,30,1,0,"_axios"],[65,36,1,0],[66,2,2,0],[66,6,2,0,"_expoSecureStore"],[66,22,2,0],[66,25,2,0,"require"],[66,32,2,0],[66,33,2,0,"_dependencyMap"],[66,47,2,0],[67,2,2,0],[67,6,2,0,"SecureStore"],[67,17,2,0],[67,20,2,0,"_interopNamespace"],[67,37,2,0],[67,38,2,0,"_expoSecureStore"],[67,54,2,0],[68,2,3,0],[68,6,3,0,"_expoConstants"],[68,20,3,0],[68,23,3,0,"require"],[68,30,3,0],[68,31,3,0,"_dependencyMap"],[68,45,3,0],[69,2,3,0],[69,6,3,0,"Constants"],[69,15,3,0],[69,18,3,0,"_interopDefault"],[69,33,3,0],[69,34,3,0,"_expoConstants"],[69,48,3,0],[70,2,4,0],[70,6,4,0,"_utilsCrossPlatformStorage"],[70,32,4,0],[70,35,4,0,"require"],[70,42,4,0],[70,43,4,0,"_dependencyMap"],[70,57,4,0],[71,2,4,0],[71,6,4,0,"CrossPlatformStorage"],[71,26,4,0],[71,29,4,0,"_interopDefault"],[71,44,4,0],[71,45,4,0,"_utilsCrossPlatformStorage"],[71,71,4,0],[72,2,6,0],[73,2,7,0],[73,6,7,6,"BACKEND_URL"],[73,17,7,17],[73,20,7,20,"Constants"],[73,29,7,29],[73,30,7,29,"default"],[73,37,7,29],[73,38,7,30,"expoConfig"],[73,48,7,40],[73,50,7,42,"extra"],[73,55,7,47],[73,57,7,49,"backendUrl"],[73,67,7,59],[73,71,7,59,"_expoVirtualEnv"],[73,86,7,59],[73,87,7,59,"env"],[73,90,7,59],[73,91,7,59,"EXPO_PUBLIC_BACKEND_URL"],[73,114,7,98],[73,118,7,102],[73,169,7,153],[74,2,7,154],[74,6,9,6,"ApiClient"],[74,15,9,15],[75,4,12,2],[75,13,12,2,"ApiClient"],[75,23,12,2],[75,25,12,16],[76,6,12,16],[76,10,12,16,"_classCallCheck"],[76,25,12,16],[76,26,12,16,"default"],[76,33,12,16],[76,41,12,16,"ApiClient"],[76,50,12,16],[77,6,13,4],[77,10,13,8],[77,11,13,9,"client"],[77,17,13,15],[77,20,13,18,"axios"],[77,25,13,23],[77,26,13,23,"default"],[77,33,13,23],[77,34,13,24,"create"],[77,40,13,30],[77,41,13,31],[78,8,14,6,"baseURL"],[78,15,14,13],[78,17,14,15],[78,20,14,18,"BACKEND_URL"],[78,31,14,29],[78,37,14,35],[79,8,15,6,"timeout"],[79,15,15,13],[79,17,15,15],[79,22,15,20],[80,8,16,6,"headers"],[80,15,16,13],[80,17,16,15],[81,10,17,8],[81,24,17,22],[81,26,17,24],[82,8,18,6],[83,6,19,4],[83,7,19,5],[83,8,19,6],[85,6,21,4],[86,6,22,4],[86,10,22,8],[86,11,22,9,"client"],[86,17,22,15],[86,18,22,16,"interceptors"],[86,30,22,28],[86,31,22,29,"request"],[86,38,22,36],[86,39,22,37,"use"],[86,42,22,40],[87,8,22,40],[87,12,22,40,"_ref"],[87,16,22,40],[87,23,22,40,"_asyncToGenerator"],[87,40,22,40],[87,41,22,40,"default"],[87,48,22,40],[87,50,22,41],[87,61,22,48,"config"],[87,67,22,54],[87,69,22,59],[88,10,23,6,"console"],[88,17,23,13],[88,18,23,14,"log"],[88,21,23,17],[88,22,23,18],[88,41,23,37,"config"],[88,47,23,43],[88,48,23,44,"method"],[88,54,23,50],[88,56,23,52,"toUpperCase"],[88,67,23,63],[88,68,23,64],[88,69,23,65],[88,73,23,69,"config"],[88,79,23,75],[88,80,23,76,"url"],[88,83,23,79],[88,85,23,81],[88,87,23,83,"config"],[88,93,23,89],[88,94,23,90,"data"],[88,98,23,94],[88,99,23,95],[89,10,25,6],[89,14,25,12,"token"],[89,19,25,17],[89,28,25,26,"SecureStore"],[89,39,25,37],[89,40,25,38,"getItemAsync"],[89,52,25,50],[89,53,25,51],[89,68,25,66],[89,69,25,67],[90,10,26,6],[90,14,26,10,"token"],[90,19,26,15],[90,21,26,17],[91,12,27,8,"config"],[91,18,27,14],[91,19,27,15,"headers"],[91,26,27,22],[91,27,27,23,"Authorization"],[91,40,27,36],[91,43,27,39],[91,53,27,49,"token"],[91,58,27,54],[91,60,27,56],[92,10,28,6],[93,10,29,6],[93,17,29,13,"config"],[93,23,29,19],[94,8,30,4],[94,9,30,5],[95,8,30,5],[95,25,30,5,"_x"],[95,27,30,5],[96,10,30,5],[96,17,30,5,"_ref"],[96,21,30,5],[96,22,30,5,"apply"],[96,27,30,5],[96,34,30,5,"arguments"],[96,43,30,5],[97,8,30,5],[98,6,30,5],[98,10,30,6],[100,6,32,4],[101,6,33,4],[101,10,33,8],[101,11,33,9,"client"],[101,17,33,15],[101,18,33,16,"interceptors"],[101,30,33,28],[101,31,33,29,"response"],[101,39,33,37],[101,40,33,38,"use"],[101,43,33,41],[101,44,34,7,"response"],[101,52,34,15],[101,56,34,20],[102,8,35,8,"console"],[102,15,35,15],[102,16,35,16,"log"],[102,19,35,19],[102,20,35,20],[102,39,35,39,"response"],[102,47,35,47],[102,48,35,48,"status"],[102,54,35,54],[102,56,35,56],[102,58,35,58,"response"],[102,66,35,66],[102,67,35,67,"data"],[102,71,35,71],[102,72,35,72],[103,8,36,8],[103,15,36,15,"response"],[103,23,36,23],[104,6,37,6],[104,7,37,7],[104,9,38,7,"error"],[104,14,38,12],[104,18,38,17],[105,8,39,8,"console"],[105,15,39,15],[105,16,39,16,"log"],[105,19,39,19],[105,20,39,20],[105,36,39,36,"error"],[105,41,39,41],[105,42,39,42,"response"],[105,50,39,50],[105,52,39,52,"status"],[105,58,39,58],[105,62,39,62],[105,71,39,71],[105,73,39,73],[105,75,39,75,"error"],[105,80,39,80],[105,81,39,81,"response"],[105,89,39,89],[105,91,39,91,"data"],[105,95,39,95],[105,99,39,99,"error"],[105,104,39,104],[105,105,39,105,"message"],[105,112,39,112],[105,113,39,113],[106,8,41,8],[106,12,41,12,"error"],[106,17,41,17],[106,18,41,18,"response"],[106,26,41,26],[106,28,41,28,"status"],[106,34,41,34],[106,39,41,39],[106,42,41,42],[106,44,41,44],[107,10,42,10],[108,10,43,10,"SecureStore"],[108,21,43,21],[108,22,43,22,"deleteItemAsync"],[108,37,43,37],[108,38,43,38],[108,53,43,53],[108,54,43,54],[109,8,44,8],[110,8,45,8],[110,15,45,15,"Promise"],[110,22,45,22],[110,23,45,23,"reject"],[110,29,45,29],[110,30,45,30,"error"],[110,35,45,35],[110,36,45,36],[111,6,46,6],[111,7,47,4],[111,8,47,5],[112,4,48,2],[113,4,48,3],[113,15,48,3,"_createClass"],[113,27,48,3],[113,28,48,3,"default"],[113,35,48,3],[113,37,48,3,"ApiClient"],[113,46,48,3],[114,6,48,3,"key"],[114,9,48,3],[115,6,48,3,"value"],[115,11,48,3],[116,8,48,3],[116,12,48,3,"_get"],[116,16,48,3],[116,23,48,3,"_asyncToGenerator"],[116,40,48,3],[116,41,48,3,"default"],[116,48,48,3],[116,50,50,2],[116,61,50,21,"url"],[116,64,50,32],[116,66,50,46],[117,10,51,4],[117,14,51,10,"response"],[117,22,51,36],[117,31,51,45],[117,35,51,49],[117,36,51,50,"client"],[117,42,51,56],[117,43,51,57,"get"],[117,46,51,60],[117,47,51,61,"url"],[117,50,51,64],[117,51,51,65],[118,10,52,4],[118,17,52,11,"response"],[118,25,52,19],[118,26,52,20,"data"],[118,30,52,24],[119,8,53,2],[119,9,53,3],[120,8,53,3],[120,17,50,8,"get"],[120,20,50,11,"get"],[120,21,50,11,"_x2"],[120,24,50,11],[121,10,50,11],[121,17,50,11,"_get"],[121,21,50,11],[121,22,50,11,"apply"],[121,27,50,11],[121,34,50,11,"arguments"],[121,43,50,11],[122,8,50,11],[123,8,50,11],[123,15,50,8,"get"],[123,18,50,11],[124,6,50,11],[125,4,50,11],[126,6,50,11,"key"],[126,9,50,11],[127,6,50,11,"value"],[127,11,50,11],[128,8,50,11],[128,12,50,11,"_post"],[128,17,50,11],[128,24,50,11,"_asyncToGenerator"],[128,41,50,11],[128,42,50,11,"default"],[128,49,50,11],[128,51,55,2],[128,62,55,22,"url"],[128,65,55,33],[128,67,55,35,"data"],[128,71,55,45],[128,73,55,59],[129,10,56,4],[129,14,56,10,"response"],[129,22,56,36],[129,31,56,45],[129,35,56,49],[129,36,56,50,"client"],[129,42,56,56],[129,43,56,57,"post"],[129,47,56,61],[129,48,56,62,"url"],[129,51,56,65],[129,53,56,67,"data"],[129,57,56,71],[129,58,56,72],[130,10,57,4],[130,17,57,11,"response"],[130,25,57,19],[130,26,57,20,"data"],[130,30,57,24],[131,8,58,2],[131,9,58,3],[132,8,58,3],[132,17,55,8,"post"],[132,21,55,12,"post"],[132,22,55,12,"_x3"],[132,25,55,12],[132,27,55,12,"_x4"],[132,30,55,12],[133,10,55,12],[133,17,55,12,"_post"],[133,22,55,12],[133,23,55,12,"apply"],[133,28,55,12],[133,35,55,12,"arguments"],[133,44,55,12],[134,8,55,12],[135,8,55,12],[135,15,55,8,"post"],[135,19,55,12],[136,6,55,12],[137,4,55,12],[138,6,55,12,"key"],[138,9,55,12],[139,6,55,12,"value"],[139,11,55,12],[140,8,55,12],[140,12,55,12,"_patch"],[140,18,55,12],[140,25,55,12,"_asyncToGenerator"],[140,42,55,12],[140,43,55,12,"default"],[140,50,55,12],[140,52,60,2],[140,63,60,23,"url"],[140,66,60,34],[140,68,60,36,"data"],[140,72,60,46],[140,74,60,60],[141,10,61,4],[141,14,61,10,"response"],[141,22,61,36],[141,31,61,45],[141,35,61,49],[141,36,61,50,"client"],[141,42,61,56],[141,43,61,57,"patch"],[141,48,61,62],[141,49,61,63,"url"],[141,52,61,66],[141,54,61,68,"data"],[141,58,61,72],[141,59,61,73],[142,10,62,4],[142,17,62,11,"response"],[142,25,62,19],[142,26,62,20,"data"],[142,30,62,24],[143,8,63,2],[143,9,63,3],[144,8,63,3],[144,17,60,8,"patch"],[144,22,60,13,"patch"],[144,23,60,13,"_x5"],[144,26,60,13],[144,28,60,13,"_x6"],[144,31,60,13],[145,10,60,13],[145,17,60,13,"_patch"],[145,23,60,13],[145,24,60,13,"apply"],[145,29,60,13],[145,36,60,13,"arguments"],[145,45,60,13],[146,8,60,13],[147,8,60,13],[147,15,60,8,"patch"],[147,20,60,13],[148,6,60,13],[149,4,60,13],[150,6,60,13,"key"],[150,9,60,13],[151,6,60,13,"value"],[151,11,60,13],[152,8,60,13],[152,12,60,13,"_delete2"],[152,20,60,13],[152,27,60,13,"_asyncToGenerator"],[152,44,60,13],[152,45,60,13,"default"],[152,52,60,13],[152,54,65,2],[152,65,65,24,"url"],[152,68,65,35],[152,70,65,49],[153,10,66,4],[153,14,66,10,"response"],[153,22,66,36],[153,31,66,45],[153,35,66,49],[153,36,66,50,"client"],[153,42,66,56],[153,43,66,57,"delete"],[153,49,66,63],[153,50,66,64,"url"],[153,53,66,67],[153,54,66,68],[154,10,67,4],[154,17,67,11,"response"],[154,25,67,19],[154,26,67,20,"data"],[154,30,67,24],[155,8,68,2],[155,9,68,3],[156,8,68,3],[156,17,65,8,"delete"],[156,24,65,14,"delete"],[156,25,65,14,"_x7"],[156,28,65,14],[157,10,65,14],[157,17,65,14,"_delete2"],[157,25,65,14],[157,26,65,14,"apply"],[157,31,65,14],[157,38,65,14,"arguments"],[157,47,65,14],[158,8,65,14],[159,8,65,14],[159,15,65,8,"delete"],[159,22,65,14],[160,6,65,14],[161,4,65,14],[162,6,65,14,"key"],[162,9,65,14],[163,6,65,14,"value"],[163,11,65,14],[164,8,65,14],[164,12,65,14,"_put"],[164,16,65,14],[164,23,65,14,"_asyncToGenerator"],[164,40,65,14],[164,41,65,14,"default"],[164,48,65,14],[164,50,70,2],[164,61,70,21,"url"],[164,64,70,32],[164,66,70,34,"data"],[164,70,70,44],[164,72,70,58],[165,10,71,4],[165,14,71,10,"response"],[165,22,71,36],[165,31,71,45],[165,35,71,49],[165,36,71,50,"client"],[165,42,71,56],[165,43,71,57,"put"],[165,46,71,60],[165,47,71,61,"url"],[165,50,71,64],[165,52,71,66,"data"],[165,56,71,70],[165,57,71,71],[166,10,72,4],[166,17,72,11,"response"],[166,25,72,19],[166,26,72,20,"data"],[166,30,72,24],[167,8,73,2],[167,9,73,3],[168,8,73,3],[168,17,70,8,"put"],[168,20,70,11,"put"],[168,21,70,11,"_x8"],[168,24,70,11],[168,26,70,11,"_x9"],[168,29,70,11],[169,10,70,11],[169,17,70,11,"_put"],[169,21,70,11],[169,22,70,11,"apply"],[169,27,70,11],[169,34,70,11,"arguments"],[169,43,70,11],[170,8,70,11],[171,8,70,11],[171,15,70,8,"put"],[171,18,70,11],[172,6,70,11],[173,4,70,11],[174,2,70,11],[175,2,76,0],[175,6,76,6,"apiClient"],[175,15,76,15],[175,18,76,18],[175,22,76,22,"ApiClient"],[175,31,76,31],[175,32,76,32],[175,33,76,33],[177,2,78,0],[178,2,79,7],[178,6,79,13,"authAPI"],[178,13,79,20],[178,16,79,23],[179,4,80,2,"createSession"],[179,17,80,15],[179,19,80,18,"sessionId"],[179,28,80,35],[179,32,81,4,"apiClient"],[179,41,81,13],[179,42,81,14,"post"],[179,46,81,18],[179,47,81,19],[179,62,81,34],[179,64,81,36],[179,68,81,40],[179,70,81,42],[180,6,82,6,"headers"],[180,13,82,13],[180,15,82,15],[181,8,82,17],[181,22,82,31],[181,24,82,33,"sessionId"],[182,6,82,43],[183,4,83,4],[183,5,83,5],[183,6,83,6],[184,4,85,2,"signup"],[184,10,85,8],[184,12,85,11,"data"],[184,16,91,3],[184,20,91,8,"apiClient"],[184,29,91,17],[184,30,91,18,"post"],[184,34,91,22],[184,35,91,23],[184,49,91,37],[184,51,91,39,"data"],[184,55,91,43],[184,56,91,44],[185,4,93,2,"verifyOTP"],[185,13,93,11],[185,15,93,14,"data"],[185,19,93,55],[185,23,94,4,"apiClient"],[185,32,94,13],[185,33,94,14,"post"],[185,37,94,18],[185,38,94,19],[185,56,94,37],[185,58,94,39,"data"],[185,62,94,43],[185,63,94,44],[186,4,96,2,"login"],[186,9,96,7],[186,11,96,10,"data"],[186,15,96,51],[186,19,97,4,"apiClient"],[186,28,97,13],[186,29,97,14,"post"],[186,33,97,18],[186,34,97,19],[186,47,97,32],[186,49,97,34,"data"],[186,53,97,38],[186,54,97,39],[187,4,99,2,"resendOTP"],[187,13,99,11],[187,15,99,14,"email"],[187,20,99,27],[187,24,100,4,"apiClient"],[187,33,100,13],[187,34,100,14,"post"],[187,38,100,18],[187,39,100,19],[187,57,100,37],[187,59,100,39],[188,6,100,41,"email"],[189,4,100,47],[189,5,100,48],[189,6,100,49],[190,4,102,2,"getCurrentUser"],[190,18,102,16],[190,20,102,18,"getCurrentUser"],[190,21,102,18],[190,26,102,24,"apiClient"],[190,35,102,33],[190,36,102,34,"get"],[190,39,102,37],[190,40,102,38],[190,50,102,48],[190,51,102,49],[191,4,104,2,"logout"],[191,10,104,8],[191,12,104,10,"logout"],[191,13,104,10],[191,18,104,16,"apiClient"],[191,27,104,25],[191,28,104,26,"post"],[191,32,104,30],[191,33,104,31],[191,47,104,45],[191,48,104,46],[192,4,106,2,"updateLanguage"],[192,18,106,16],[192,20,106,19,"language"],[192,28,106,35],[192,32,107,4,"apiClient"],[192,41,107,13],[192,42,107,14,"patch"],[192,47,107,19],[192,48,107,20],[192,64,107,36],[192,66,107,38],[192,70,107,42],[192,72,107,44],[193,6,108,6,"params"],[193,12,108,12],[193,14,108,14],[194,8,108,16,"language"],[195,6,108,25],[196,4,109,4],[196,5,109,5],[196,6,109,6],[197,4,111,2,"toggleBiometric"],[197,19,111,17],[197,21,111,20,"enabled"],[197,28,111,36],[197,32,112,4,"apiClient"],[197,41,112,13],[197,42,112,14,"patch"],[197,47,112,19],[197,48,112,20],[197,65,112,37],[197,67,112,39],[197,71,112,43],[197,73,112,45],[198,6,113,6,"params"],[198,12,113,12],[198,14,113,14],[199,8,113,16,"enabled"],[200,6,113,24],[201,4,114,4],[201,5,114,5],[202,2,115,0],[202,3,115,1],[204,2,117,0],[205,2,118,0],[205,6,118,6,"logAdminAction"],[205,20,118,20],[206,4,118,20],[206,8,118,20,"_ref2"],[206,13,118,20],[206,20,118,20,"_asyncToGenerator"],[206,37,118,20],[206,38,118,20,"default"],[206,45,118,20],[206,47,118,23],[206,58,118,30,"action"],[206,64,118,44],[206,66,118,46,"competitionName"],[206,81,118,69],[206,83,118,71,"adminName"],[206,92,118,88],[206,94,118,90,"details"],[206,101,118,103],[206,103,118,108],[207,6,119,2],[207,10,119,6],[208,8,120,4],[208,12,120,10,"logs"],[208,16,120,14],[208,19,120,17],[208,26,120,23,"CrossPlatformStorage"],[208,46,120,43],[208,47,120,43,"default"],[208,54,120,43],[208,55,120,44,"getItem"],[208,62,120,51],[208,63,120,52],[208,74,120,63],[208,75,120,64],[208,80,120,68],[208,84,120,72],[209,8,121,4],[209,12,121,10,"adminLogs"],[209,21,121,19],[209,24,121,22,"JSON"],[209,28,121,26],[209,29,121,27,"parse"],[209,34,121,32],[209,35,121,33,"logs"],[209,39,121,37],[209,40,121,38],[210,8,123,4],[210,12,123,10,"logEntry"],[210,20,123,18],[210,23,123,21],[211,10,124,6,"id"],[211,12,124,8],[211,14,124,10],[211,21,124,17,"Date"],[211,25,124,21],[211,26,124,22,"now"],[211,29,124,25],[211,30,124,26],[211,31,124,27],[211,33,124,29],[212,10,125,6,"action"],[212,16,125,12],[213,10,126,6,"competition_name"],[213,26,126,22],[213,28,126,24,"competitionName"],[213,43,126,39],[214,10,127,6,"admin_name"],[214,20,127,16],[214,22,127,18,"adminName"],[214,31,127,27],[215,10,128,6,"details"],[215,17,128,13],[216,10,129,6,"timestamp"],[216,19,129,15],[216,21,129,17],[216,25,129,21,"Date"],[216,29,129,25],[216,30,129,26],[216,31,129,27],[216,32,129,28,"toISOString"],[216,43,129,39],[216,44,129,40],[217,8,130,4],[217,9,130,5],[218,8,132,4,"adminLogs"],[218,17,132,13],[218,18,132,14,"push"],[218,22,132,18],[218,23,132,19,"logEntry"],[218,31,132,27],[218,32,132,28],[219,8,133,4],[219,14,133,10,"CrossPlatformStorage"],[219,34,133,30],[219,35,133,30,"default"],[219,42,133,30],[219,43,133,31,"setItem"],[219,50,133,38],[219,51,133,39],[219,62,133,50],[219,64,133,52,"JSON"],[219,68,133,56],[219,69,133,57,"stringify"],[219,78,133,66],[219,79,133,67,"adminLogs"],[219,88,133,76],[219,89,133,77],[219,90,133,78],[220,8,135,4,"console"],[220,15,135,11],[220,16,135,12,"log"],[220,19,135,15],[220,20,135,16],[220,45,135,41],[220,47,135,43,"action"],[220,53,135,49],[220,55,135,51,"competitionName"],[220,70,135,66],[220,71,135,67],[221,6,136,2],[221,7,136,3],[221,8,136,4],[221,15,136,11,"error"],[221,20,136,16],[221,22,136,18],[222,8,137,4,"console"],[222,15,137,11],[222,16,137,12,"error"],[222,21,137,17],[222,22,137,18],[222,51,137,47],[222,53,137,49,"error"],[222,58,137,54],[222,59,137,55],[223,6,138,2],[224,4,139,0],[224,5,139,1],[225,4,139,1],[225,20,118,6,"logAdminAction"],[225,34,118,20,"logAdminAction"],[225,35,118,20,"_x0"],[225,38,118,20],[225,40,118,20,"_x1"],[225,43,118,20],[225,45,118,20,"_x10"],[225,49,118,20],[225,51,118,20,"_x11"],[225,55,118,20],[226,6,118,20],[226,13,118,20,"_ref2"],[226,18,118,20],[226,19,118,20,"apply"],[226,24,118,20],[226,31,118,20,"arguments"],[226,40,118,20],[227,4,118,20],[228,2,118,20],[228,5,139,1],[230,2,141,0],[231,2,142,7],[231,6,142,13,"competitionAPI"],[231,20,142,27],[231,23,142,30],[232,4,143,2,"create"],[232,10,143,8],[232,12,143,11,"data"],[232,16,158,3],[232,20,158,8,"apiClient"],[232,29,158,17],[232,30,158,18,"post"],[232,34,158,22],[232,35,158,23],[232,50,158,38],[232,52,158,40,"data"],[232,56,158,44],[232,57,158,45],[233,4,160,2,"join"],[233,8,160,6],[233,10,160,9,"inviteCode"],[233,20,160,27],[233,24,161,4,"apiClient"],[233,33,161,13],[233,34,161,14,"post"],[233,38,161,18],[233,39,161,19],[233,59,161,39],[233,61,161,41],[234,6,161,43,"invite_code"],[234,17,161,54],[234,19,161,56,"inviteCode"],[235,4,161,67],[235,5,161,68],[235,6,161,69],[236,4,163,2,"getMyCompetitions"],[236,21,163,19],[236,23,163,21,"getMyCompetitions"],[236,24,163,21],[236,29,163,27,"apiClient"],[236,38,163,36],[236,39,163,37,"get"],[236,42,163,40],[236,43,163,41],[236,61,163,59],[236,62,163,60],[237,4,165,2,"getCompetition"],[237,18,165,16],[237,20,165,19,"id"],[237,22,165,29],[237,26,165,34,"apiClient"],[237,35,165,43],[237,36,165,44,"get"],[237,39,165,47],[237,40,165,48],[237,57,165,65,"id"],[237,59,165,67],[237,61,165,69],[237,62,165,70],[238,4,167,2,"updateStandings"],[238,19,167,17],[238,21,167,19,"updateStandings"],[238,22,168,4,"id"],[238,24,168,14],[238,26,169,4,"standings"],[238,35,169,18],[238,37,170,4,"matchday"],[238,45,170,21],[238,50,172,4,"apiClient"],[238,59,172,13],[238,60,172,14,"patch"],[238,65,172,19],[238,66,172,20],[238,83,172,37,"id"],[238,85,172,39],[238,97,172,51],[238,99,172,53],[239,6,173,6,"standings"],[239,15,173,15],[240,6,174,6,"matchday"],[241,4,175,4],[241,5,175,5],[241,6,175,6],[242,4,177,2,"payFee"],[242,10,177,8],[242,12,177,10,"payFee"],[242,13,177,11,"id"],[242,15,177,21],[242,17,177,23,"amount"],[242,23,177,37],[242,28,178,4,"apiClient"],[242,37,178,13],[242,38,178,14,"post"],[242,42,178,18],[242,43,178,19],[242,60,178,36,"id"],[242,62,178,38],[242,68,178,44],[242,70,178,46],[242,74,178,50],[242,76,178,52],[243,6,179,6,"params"],[243,12,179,12],[243,14,179,14],[244,8,179,16,"amount"],[245,6,179,23],[246,4,180,4],[246,5,180,5],[246,6,180,6],[247,4,182,2,"getTransactions"],[247,19,182,17],[247,21,182,20,"id"],[247,23,182,30],[247,27,183,4,"apiClient"],[247,36,183,13],[247,37,183,14,"get"],[247,40,183,17],[247,41,183,18],[247,58,183,35,"id"],[247,60,183,37],[247,75,183,52],[247,76,183,53],[248,4,185,2],[249,4,186,2,"payMatchdays"],[249,16,186,14],[249,18,186,16,"payMatchdays"],[249,19,186,17,"competitionId"],[249,32,186,38],[249,34,186,40,"matchdays"],[249,43,186,59],[249,48,187,4,"apiClient"],[249,57,187,13],[249,58,187,14,"post"],[249,62,187,18],[249,63,187,19],[249,80,187,36,"competitionId"],[249,93,187,49],[249,113,187,69],[249,115,187,71],[250,6,188,6,"competition_id"],[250,20,188,20],[250,22,188,22,"competitionId"],[250,35,188,35],[251,6,189,6,"matchdays"],[252,4,190,4],[252,5,190,5],[252,6,190,6],[253,4,192,2,"getMatchdayPayments"],[253,23,192,21],[253,25,192,24,"competitionId"],[253,38,192,45],[253,42,193,4,"apiClient"],[253,51,193,13],[253,52,193,14,"get"],[253,55,193,17],[253,56,193,18],[253,73,193,35,"competitionId"],[253,86,193,48],[253,106,193,68],[253,107,193,69],[254,4,195,2,"getPaymentStatusTable"],[254,25,195,23],[254,27,195,26,"competitionId"],[254,40,195,47],[254,44,196,4,"apiClient"],[254,53,196,13],[254,54,196,14,"get"],[254,57,196,17],[254,58,196,18],[254,75,196,35,"competitionId"],[254,88,196,48],[254,111,196,71],[254,112,196,72],[255,4,198,2],[256,4,199,2,"createMock"],[256,14,199,12],[257,6,199,12],[257,10,199,12,"_ref3"],[257,15,199,12],[257,22,199,12,"_asyncToGenerator"],[257,39,199,12],[257,40,199,12,"default"],[257,47,199,12],[257,49,199,14],[257,60,199,21,"data"],[257,64,212,3],[257,66,212,8],[258,8,213,4,"console"],[258,15,213,11],[258,16,213,12,"log"],[258,19,213,15],[258,20,213,16],[258,52,213,48],[258,54,213,50,"data"],[258,58,213,54],[258,59,213,55,"name"],[258,63,213,59],[258,64,213,60],[259,8,214,4,"console"],[259,15,214,11],[259,16,214,12,"log"],[259,19,214,15],[259,20,214,16],[259,41,214,37],[259,43,214,39,"data"],[259,47,214,43],[259,48,214,44,"total_matchdays"],[259,63,214,59],[259,67,214,63],[259,69,214,65],[259,70,214,66],[261,8,216,4],[262,8,217,4],[262,12,217,10,"storedCompetitions"],[262,30,217,28],[262,39,217,37,"CrossPlatformStorage"],[262,59,217,57],[262,60,217,57,"default"],[262,67,217,57],[262,68,217,58,"getItem"],[262,75,217,65],[262,76,217,66],[262,95,217,85],[262,96,217,86],[263,8,218,4],[263,12,218,8,"existingCompetitions"],[263,32,218,28],[263,35,218,31,"storedCompetitions"],[263,53,218,49],[263,56,218,52,"JSON"],[263,60,218,56],[263,61,218,57,"parse"],[263,66,218,62],[263,67,218,63,"storedCompetitions"],[263,85,218,81],[263,86,218,82],[263,89,218,85],[263,91,218,87],[264,8,220,4,"console"],[264,15,220,11],[264,16,220,12,"log"],[264,19,220,15],[264,20,220,16],[264,62,220,58],[264,64,220,60,"existingCompetitions"],[264,84,220,80],[264,85,220,81,"length"],[264,91,220,87],[264,92,220,88],[266,8,222,4],[267,8,223,4],[267,12,223,10,"existingNames"],[267,25,223,23],[267,28,223,26,"existingCompetitions"],[267,48,223,46],[267,49,223,47,"map"],[267,52,223,50],[267,53,223,52,"comp"],[267,57,223,61],[267,61,223,66,"comp"],[267,65,223,70],[267,66,223,71,"name"],[267,70,223,75],[267,71,223,76,"toLowerCase"],[267,82,223,87],[267,83,223,88],[267,84,223,89],[267,85,223,90],[268,8,224,4],[268,12,224,8,"existingNames"],[268,25,224,21],[268,26,224,22,"includes"],[268,34,224,30],[268,35,224,31,"data"],[268,39,224,35],[268,40,224,36,"name"],[268,44,224,40],[268,45,224,41,"toLowerCase"],[268,56,224,52],[268,57,224,53],[268,58,224,54],[268,59,224,55],[268,61,224,57],[269,10,225,6],[269,16,225,12],[269,20,225,16,"Error"],[269,25,225,21],[269,26,225,22],[269,88,225,84],[269,89,225,85],[270,8,226,4],[272,8,228,4],[273,8,229,4],[274,8,230,4],[274,12,230,10,"generateRandomCode"],[274,30,230,28],[274,33,230,31,"generateRandomCode"],[274,34,230,31],[274,39,230,37],[275,10,231,6],[275,14,231,12,"chars"],[275,19,231,17],[275,22,231,20],[275,58,231,56],[275,59,231,57],[275,60,231,58],[276,10,232,6],[276,14,232,10,"result"],[276,20,232,16],[276,23,232,19],[276,25,232,21],[277,10,233,6],[277,15,233,11],[277,19,233,15,"i"],[277,20,233,16],[277,23,233,19],[277,24,233,20],[277,26,233,22,"i"],[277,27,233,23],[277,30,233,26],[277,31,233,27],[277,33,233,29,"i"],[277,34,233,30],[277,36,233,32],[277,38,233,34],[278,12,234,8,"result"],[278,18,234,14],[278,22,234,18,"chars"],[278,27,234,23],[278,28,234,24,"charAt"],[278,34,234,30],[278,35,234,31,"Math"],[278,39,234,35],[278,40,234,36,"floor"],[278,45,234,41],[278,46,234,42,"Math"],[278,50,234,46],[278,51,234,47,"random"],[278,57,234,53],[278,58,234,54],[278,59,234,55],[278,62,234,58,"chars"],[278,67,234,63],[278,68,234,64,"length"],[278,74,234,70],[278,75,234,71],[278,76,234,72],[279,10,235,6],[280,10,236,6],[280,17,236,13,"result"],[280,23,236,19],[281,8,237,4],[281,9,237,5],[283,8,239,4],[284,8,240,4],[284,12,240,8,"inviteCode"],[284,22,240,18],[284,25,240,21,"generateRandomCode"],[284,43,240,39],[284,44,240,40],[284,45,240,41],[285,8,241,4],[285,15,241,11,"existingCompetitions"],[285,35,241,31],[285,36,241,32,"some"],[285,40,241,36],[285,41,241,38,"comp"],[285,45,241,47],[285,49,241,52,"comp"],[285,53,241,56],[285,54,241,57,"invite_code"],[285,65,241,68],[285,70,241,73,"inviteCode"],[285,80,241,83],[285,81,241,84],[285,83,241,86],[286,10,242,6,"inviteCode"],[286,20,242,16],[286,23,242,19,"generateRandomCode"],[286,41,242,37],[286,42,242,38],[286,43,242,39],[287,10,243,6,"console"],[287,17,243,13],[287,18,243,14,"log"],[287,21,243,17],[287,22,243,18],[287,63,243,59],[287,65,243,61,"inviteCode"],[287,75,243,71],[287,76,243,72],[288,8,244,4],[289,8,246,4,"console"],[289,15,246,11],[289,16,246,12,"log"],[289,19,246,15],[289,20,246,16],[289,53,246,49],[289,55,246,51,"inviteCode"],[289,65,246,61],[289,66,246,62],[290,8,248,4],[290,12,248,10,"newCompetition"],[290,26,248,24],[290,29,248,27],[291,10,249,6,"_id"],[291,13,249,9],[291,15,249,11],[291,23,249,19,"Date"],[291,27,249,23],[291,28,249,24,"now"],[291,31,249,27],[291,32,249,28],[291,33,249,29],[291,37,249,33,"Math"],[291,41,249,37],[291,42,249,38,"random"],[291,48,249,44],[291,49,249,45],[291,50,249,46],[291,51,249,47,"toString"],[291,59,249,55],[291,60,249,56],[291,62,249,58],[291,63,249,59],[291,64,249,60,"substr"],[291,70,249,66],[291,71,249,67],[291,72,249,68],[291,74,249,70],[291,75,249,71],[291,76,249,72],[291,78,249,74],[292,10,250,6,"name"],[292,14,250,10],[292,16,250,12,"data"],[292,20,250,16],[292,21,250,17,"name"],[292,25,250,21],[293,10,251,6,"total_matchdays"],[293,25,251,21],[293,27,251,23,"data"],[293,31,251,27],[293,32,251,28,"total_matchdays"],[293,47,251,43],[293,51,251,47],[293,53,251,49],[294,10,252,6,"participation_cost_per_team"],[294,37,252,33],[294,39,252,35,"data"],[294,43,252,39],[294,44,252,40,"participation_cost_per_team"],[294,71,252,67],[294,75,252,71],[294,80,252,76],[295,10,253,6,"expected_teams"],[295,24,253,20],[295,26,253,22,"data"],[295,30,253,26],[295,31,253,27,"expected_teams"],[295,45,253,41],[295,49,253,45],[295,50,253,46],[296,10,254,6,"total_prize_pool"],[296,26,254,22],[296,28,254,24,"data"],[296,32,254,28],[296,33,254,29,"total_prize_pool"],[296,49,254,45],[296,53,254,49],[296,59,254,55],[297,10,255,6,"daily_payment_enabled"],[297,31,255,27],[297,33,255,29,"data"],[297,37,255,33],[297,38,255,34,"daily_payment_enabled"],[297,59,255,55],[297,63,255,59],[297,68,255,64],[298,10,256,6,"daily_payment_amount"],[298,30,256,26],[298,32,256,28,"data"],[298,36,256,32],[298,37,256,33,"daily_payment_amount"],[298,57,256,53],[298,61,256,57],[298,64,256,60],[299,10,257,6,"rules"],[299,15,257,11],[299,17,257,13,"data"],[299,21,257,17],[299,22,257,18,"rules"],[299,27,257,23],[300,10,258,6,"invite_code"],[300,21,258,17],[300,23,258,19,"inviteCode"],[300,33,258,29],[301,10,258,31],[302,10,259,6,"invite_link"],[302,21,259,17],[302,23,259,19],[302,52,259,48,"inviteCode"],[302,62,259,58],[302,64,259,60],[303,10,260,6,"admin_id"],[303,18,260,14],[303,20,260,16],[303,46,260,42],[304,10,260,44],[305,10,261,6,"participants"],[305,22,261,18],[305,24,261,20],[305,25,262,8],[306,12,263,10,"id"],[306,14,263,12],[306,16,263,14],[306,42,263,40],[307,12,264,10,"name"],[307,16,264,14],[307,18,264,16],[307,35,264,33],[308,12,265,10,"email"],[308,17,265,15],[308,19,265,17],[308,38,265,36],[309,12,266,10,"is_admin"],[309,20,266,18],[309,22,266,20],[309,26,266,24],[310,12,267,10,"paid_matchdays"],[310,26,267,24],[310,28,267,26],[310,29,267,27],[310,30,267,28],[310,32,267,30],[310,33,267,31],[310,34,267,32],[311,12,267,34],[312,12,268,10,"points"],[312,18,268,16],[312,20,268,18],[313,10,269,8],[313,11,269,9],[313,12,270,7],[314,10,271,6,"wallet_balance"],[314,24,271,20],[314,26,271,22],[314,27,271,23],[315,10,272,6,"is_active"],[315,19,272,15],[315,21,272,17],[315,25,272,21],[316,10,273,6,"current_matchday"],[316,26,273,22],[316,28,273,24],[316,29,273,25],[317,10,273,27],[318,10,274,6,"standings"],[318,19,274,15],[318,21,274,17],[318,22,275,8],[319,12,275,10,"position"],[319,20,275,18],[319,22,275,20],[319,23,275,21],[320,12,275,23,"player_id"],[320,21,275,32],[320,23,275,34],[320,49,275,60],[321,12,275,62,"name"],[321,16,275,66],[321,18,275,68],[321,35,275,85],[322,12,275,87,"points"],[322,18,275,93],[322,20,275,95],[323,10,275,97],[323,11,275,98],[323,12,276,7],[324,10,277,6,"created_at"],[324,20,277,16],[324,22,277,18],[324,26,277,22,"Date"],[324,30,277,26],[324,31,277,27],[324,32,277,28],[324,33,277,29,"toISOString"],[324,44,277,40],[324,45,277,41],[324,46,277,42],[325,10,278,6,"updated_at"],[325,20,278,16],[325,22,278,18],[325,26,278,22,"Date"],[325,30,278,26],[325,31,278,27],[325,32,278,28],[325,33,278,29,"toISOString"],[325,44,278,40],[325,45,278,41],[326,8,279,4],[326,9,279,5],[328,8,281,4],[329,8,282,4,"existingCompetitions"],[329,28,282,24],[329,29,282,25,"push"],[329,33,282,29],[329,34,282,30,"newCompetition"],[329,48,282,44],[329,49,282,45],[330,8,283,4],[330,14,283,10,"CrossPlatformStorage"],[330,34,283,30],[330,35,283,30,"default"],[330,42,283,30],[330,43,283,31,"setItem"],[330,50,283,38],[330,51,283,39],[330,70,283,58],[330,72,283,60,"JSON"],[330,76,283,64],[330,77,283,65,"stringify"],[330,86,283,74],[330,87,283,75,"existingCompetitions"],[330,107,283,95],[330,108,283,96],[330,109,283,97],[331,8,285,4,"console"],[331,15,285,11],[331,16,285,12,"log"],[331,19,285,15],[331,20,285,16],[331,73,285,69],[331,75,285,71,"existingCompetitions"],[331,95,285,91],[331,96,285,92,"length"],[331,102,285,98],[331,103,285,99],[333,8,287,4],[334,8,288,4],[334,14,288,10,"logAdminAction"],[334,28,288,24],[334,29,288,25],[334,37,288,33],[334,39,288,35,"newCompetition"],[334,53,288,49],[334,54,288,50,"name"],[334,58,288,54],[334,60,288,56],[334,77,288,73],[334,79,288,75],[335,10,289,6,"competition_id"],[335,24,289,20],[335,26,289,22,"newCompetition"],[335,40,289,36],[335,41,289,37,"_id"],[335,44,289,40],[336,10,290,6,"rules"],[336,15,290,11],[336,17,290,13,"newCompetition"],[336,31,290,27],[336,32,290,28,"rules"],[336,37,290,33],[337,10,291,6,"total_matchdays"],[337,25,291,21],[337,27,291,23,"newCompetition"],[337,41,291,37],[337,42,291,38,"total_matchdays"],[337,57,291,53],[338,10,292,6,"participation_cost_per_team"],[338,37,292,33],[338,39,292,35,"newCompetition"],[338,53,292,49],[338,54,292,50,"participation_cost_per_team"],[338,81,292,77],[339,10,293,6,"expected_teams"],[339,24,293,20],[339,26,293,22,"newCompetition"],[339,40,293,36],[339,41,293,37,"expected_teams"],[339,55,293,51],[340,10,294,6,"total_prize_pool"],[340,26,294,22],[340,28,294,24,"newCompetition"],[340,42,294,38],[340,43,294,39,"total_prize_pool"],[340,59,294,55],[341,10,295,6,"daily_payment_enabled"],[341,31,295,27],[341,33,295,29,"newCompetition"],[341,47,295,43],[341,48,295,44,"daily_payment_enabled"],[341,69,295,65],[342,10,296,6,"daily_payment_amount"],[342,30,296,26],[342,32,296,28,"newCompetition"],[342,46,296,42],[342,47,296,43,"daily_payment_amount"],[343,8,297,4],[343,9,297,5],[343,10,297,6],[344,8,299,4,"console"],[344,15,299,11],[344,16,299,12,"log"],[344,19,299,15],[344,20,299,16],[344,49,299,45],[344,51,299,47,"newCompetition"],[344,65,299,61],[344,66,299,62,"name"],[344,70,299,66],[344,71,299,67],[345,8,300,4,"console"],[345,15,300,11],[345,16,300,12,"log"],[345,19,300,15],[345,20,300,16],[345,42,300,38],[345,44,300,40,"newCompetition"],[345,58,300,54],[345,59,300,55,"name"],[345,63,300,59],[345,64,300,60],[346,8,301,4,"console"],[346,15,301,11],[346,16,301,12,"log"],[346,19,301,15],[346,20,301,16],[346,39,301,35],[346,41,301,37,"newCompetition"],[346,55,301,51],[346,56,301,52,"daily_payment_enabled"],[346,77,301,73],[346,80,301,76],[346,84,301,80,"newCompetition"],[346,98,301,94],[346,99,301,95,"daily_payment_amount"],[346,119,301,115],[346,134,301,130],[346,137,301,133],[346,147,301,143],[346,148,301,144],[347,8,302,4,"console"],[347,15,302,11],[347,16,302,12,"log"],[347,19,302,15],[347,20,302,16],[347,42,302,38],[347,44,302,40],[347,48,302,44,"newCompetition"],[347,62,302,58],[347,63,302,59,"total_prize_pool"],[347,79,302,75],[347,81,302,77],[347,82,302,78],[348,8,303,4,"console"],[348,15,303,11],[348,16,303,12,"log"],[348,19,303,15],[348,20,303,16],[348,37,303,33],[348,39,303,35,"newCompetition"],[348,53,303,49],[348,54,303,50,"invite_code"],[348,65,303,61],[348,66,303,62],[349,8,305,4],[349,15,305,11],[350,10,305,13,"data"],[350,14,305,17],[350,16,305,19,"newCompetition"],[351,8,305,34],[351,9,305,35],[352,6,306,2],[352,7,306,3],[353,6,306,3],[353,22,199,2,"createMock"],[353,32,199,12,"createMock"],[353,33,199,12,"_x12"],[353,37,199,12],[354,8,199,12],[354,15,199,12,"_ref3"],[354,20,199,12],[354,21,199,12,"apply"],[354,26,199,12],[354,33,199,12,"arguments"],[354,42,199,12],[355,6,199,12],[356,4,199,12],[356,7,306,3],[357,4,308,2],[358,4,309,2,"payMatchdaysMock"],[358,20,309,18],[359,6,309,18],[359,10,309,18,"_ref4"],[359,15,309,18],[359,22,309,18,"_asyncToGenerator"],[359,39,309,18],[359,40,309,18,"default"],[359,47,309,18],[359,49,309,20],[359,60,309,27,"competitionId"],[359,73,309,48],[359,75,309,50,"matchdays"],[359,84,309,69],[359,86,309,74],[360,8,310,4,"console"],[360,15,310,11],[360,16,310,12,"log"],[360,19,310,15],[360,20,310,16],[360,51,310,47],[360,53,310,49,"matchdays"],[360,62,310,58],[360,64,310,60],[360,80,310,76],[360,82,310,78,"competitionId"],[360,95,310,91],[360,96,310,92],[362,8,312,4],[363,8,313,4],[363,12,313,10,"totalCost"],[363,21,313,19],[363,24,313,22,"matchdays"],[363,33,313,31],[363,34,313,32,"length"],[363,40,313,38],[363,43,313,41],[363,44,313,42],[363,45,313,43],[363,46,313,44],[365,8,315,4],[366,8,316,4],[366,15,316,11],[367,10,317,6,"data"],[367,14,317,10],[367,16,317,12],[368,12,318,8,"message"],[368,19,318,15],[368,21,318,17],[368,46,318,42,"matchdays"],[368,55,318,51],[368,56,318,52,"length"],[368,62,318,58],[368,74,318,70],[369,12,319,8,"paid_matchdays"],[369,26,319,22],[369,28,319,24,"matchdays"],[369,37,319,33],[370,12,320,8,"total_cost"],[370,22,320,18],[370,24,320,20,"totalCost"],[370,33,320,29],[371,12,321,8,"new_user_balance"],[371,28,321,24],[371,30,321,26],[371,33,321,29],[371,36,321,32,"totalCost"],[371,45,321,41],[371,46,321,42],[372,10,322,6],[373,8,323,4],[373,9,323,5],[374,6,324,2],[374,7,324,3],[375,6,324,3],[375,22,309,2,"payMatchdaysMock"],[375,38,309,18,"payMatchdaysMock"],[375,39,309,18,"_x13"],[375,43,309,18],[375,45,309,18,"_x14"],[375,49,309,18],[376,8,309,18],[376,15,309,18,"_ref4"],[376,20,309,18],[376,21,309,18,"apply"],[376,26,309,18],[376,33,309,18,"arguments"],[376,42,309,18],[377,6,309,18],[378,4,309,18],[378,7,324,3],[379,4,326,2,"getMatchdayPaymentsMock"],[379,27,326,25],[380,6,326,25],[380,10,326,25,"_ref5"],[380,15,326,25],[380,22,326,25,"_asyncToGenerator"],[380,39,326,25],[380,40,326,25,"default"],[380,47,326,25],[380,49,326,27],[380,60,326,34,"competitionId"],[380,73,326,55],[380,75,326,60],[381,8,327,4,"console"],[381,15,327,11],[381,16,327,12,"log"],[381,19,327,15],[381,20,327,16],[381,72,327,68],[381,74,327,70,"competitionId"],[381,87,327,83],[381,88,327,84],[383,8,329,4],[384,8,330,4],[384,12,330,10,"mockPayments"],[384,24,330,22],[384,27,330,25],[384,29,330,27],[385,8,331,4],[385,13,331,9],[385,17,331,13,"i"],[385,18,331,14],[385,21,331,17],[385,22,331,18],[385,24,331,20,"i"],[385,25,331,21],[385,29,331,25],[385,31,331,27],[385,33,331,29,"i"],[385,34,331,30],[385,36,331,32],[385,38,331,34],[386,10,332,6,"mockPayments"],[386,22,332,18],[386,23,332,19,"push"],[386,27,332,23],[386,28,332,24],[387,12,333,8,"_id"],[387,15,333,11],[387,17,333,13],[387,28,333,24,"i"],[387,29,333,25],[387,31,333,27],[388,12,334,8,"user_id"],[388,19,334,15],[388,21,334,17],[388,47,334,43],[389,12,335,8,"competition_id"],[389,26,335,22],[389,28,335,24,"competitionId"],[389,41,335,37],[390,12,336,8,"matchday"],[390,20,336,16],[390,22,336,18,"i"],[390,23,336,19],[391,12,337,8,"amount"],[391,18,337,14],[391,20,337,16],[391,21,337,17],[392,12,338,8,"status"],[392,18,338,14],[392,20,338,16,"i"],[392,21,338,17],[392,25,338,21],[392,26,338,22],[392,29,338,25],[392,35,338,31],[392,38,338,34],[392,47,338,43],[393,12,339,8,"paid_at"],[393,19,339,15],[393,21,339,17,"i"],[393,22,339,18],[393,26,339,22],[393,27,339,23],[393,30,339,26],[393,34,339,30,"Date"],[393,38,339,34],[393,39,339,35],[393,40,339,36],[393,41,339,37,"toISOString"],[393,52,339,48],[393,53,339,49],[393,54,339,50],[393,57,339,53],[393,61,339,57],[394,12,340,8,"created_at"],[394,22,340,18],[394,24,340,20],[394,28,340,24,"Date"],[394,32,340,28],[394,33,340,29],[394,34,340,30],[394,35,340,31,"toISOString"],[394,46,340,42],[394,47,340,43],[395,10,341,6],[395,11,341,7],[395,12,341,8],[396,8,342,4],[397,8,344,4],[397,15,344,11],[398,10,345,6,"data"],[398,14,345,10],[398,16,345,12],[399,12,346,8,"competition_id"],[399,26,346,22],[399,28,346,24,"competitionId"],[399,41,346,37],[400,12,347,8,"daily_payment_enabled"],[400,33,347,29],[400,35,347,31],[400,39,347,35],[401,12,348,8,"daily_payment_amount"],[401,32,348,28],[401,34,348,30],[401,35,348,31],[402,12,349,8,"total_matchdays"],[402,27,349,23],[402,29,349,25],[402,31,349,27],[403,12,350,8,"payments"],[403,20,350,16],[403,22,350,18,"mockPayments"],[404,10,351,6],[405,8,352,4],[405,9,352,5],[406,6,353,2],[406,7,353,3],[407,6,353,3],[407,22,326,2,"getMatchdayPaymentsMock"],[407,45,326,25,"getMatchdayPaymentsMock"],[407,46,326,25,"_x15"],[407,50,326,25],[408,8,326,25],[408,15,326,25,"_ref5"],[408,20,326,25],[408,21,326,25,"apply"],[408,26,326,25],[408,33,326,25,"arguments"],[408,42,326,25],[409,6,326,25],[410,4,326,25],[410,7,353,3],[411,4,355,2,"getPaymentStatusTableMock"],[411,29,355,27],[412,6,355,27],[412,10,355,27,"_ref6"],[412,15,355,27],[412,22,355,27,"_asyncToGenerator"],[412,39,355,27],[412,40,355,27,"default"],[412,47,355,27],[412,49,355,29],[412,60,355,36,"competitionId"],[412,73,355,57],[412,75,355,62],[413,8,356,4,"console"],[413,15,356,11],[413,16,356,12,"log"],[413,19,356,15],[413,20,356,16],[413,75,356,71],[413,77,356,73,"competitionId"],[413,90,356,86],[413,91,356,87],[415,8,358,4],[416,8,359,4],[416,12,359,10,"mockTable"],[416,21,359,19],[416,24,359,22],[416,25,359,23],[417,10,360,6,"user_id"],[417,17,360,13],[417,19,360,15],[417,45,360,41],[418,10,361,6,"username"],[418,18,361,14],[418,20,361,16],[418,37,361,33],[419,10,362,6,"name"],[419,14,362,10],[419,16,362,12],[419,33,362,29],[420,10,363,6,"email"],[420,15,363,11],[420,17,363,13],[420,36,363,32],[421,10,364,6,"matchday_payments"],[421,27,364,23],[421,29,364,25,"Array"],[421,34,364,30],[421,35,364,31,"from"],[421,39,364,35],[421,40,364,36],[422,12,364,37,"length"],[422,18,364,43],[422,20,364,45],[423,10,364,47],[423,11,364,48],[423,13,364,50],[423,14,364,51,"_"],[423,15,364,52],[423,17,364,54,"i"],[423,18,364,55],[423,24,364,61],[424,12,365,8,"matchday"],[424,20,365,16],[424,22,365,18,"i"],[424,23,365,19],[424,26,365,22],[424,27,365,23],[425,12,366,8,"status"],[425,18,366,14],[425,20,366,17,"i"],[425,21,366,18],[425,24,366,21],[425,25,366,22],[425,28,366,25],[425,34,366,31],[425,37,366,34],[425,46,366,44],[426,12,367,8,"amount"],[426,18,367,14],[426,20,367,16],[426,21,367,17],[427,12,368,8,"paid_at"],[427,19,368,15],[427,21,368,17,"i"],[427,22,368,18],[427,25,368,21],[427,26,368,22],[427,29,368,25],[427,33,368,29,"Date"],[427,37,368,33],[427,38,368,34],[427,39,368,35],[427,40,368,36,"toISOString"],[427,51,368,47],[427,52,368,48],[427,53,368,49],[427,56,368,52],[428,10,369,6],[428,11,369,7],[428,12,369,8],[429,8,370,4],[429,9,370,5],[429,10,370,6],[430,8,372,4],[430,15,372,11],[431,10,373,6,"data"],[431,14,373,10],[431,16,373,12],[432,12,374,8,"competition_name"],[432,28,374,24],[432,30,374,26],[432,51,374,47],[433,12,375,8,"total_matchdays"],[433,27,375,23],[433,29,375,25],[433,31,375,27],[434,12,376,8,"daily_payment_amount"],[434,32,376,28],[434,34,376,30],[434,35,376,31],[435,12,377,8,"participants"],[435,24,377,20],[435,26,377,22,"mockTable"],[436,10,378,6],[437,8,379,4],[437,9,379,5],[438,6,380,2],[438,7,380,3],[439,6,380,3],[439,22,355,2,"getPaymentStatusTableMock"],[439,47,355,27,"getPaymentStatusTableMock"],[439,48,355,27,"_x16"],[439,52,355,27],[440,8,355,27],[440,15,355,27,"_ref6"],[440,20,355,27],[440,21,355,27,"apply"],[440,26,355,27],[440,33,355,27,"arguments"],[440,42,355,27],[441,6,355,27],[442,4,355,27],[442,7,380,3],[443,4,382,2],[444,4,383,2,"validateNameMock"],[444,20,383,18],[445,6,383,18],[445,10,383,18,"_ref7"],[445,15,383,18],[445,22,383,18,"_asyncToGenerator"],[445,39,383,18],[445,40,383,18,"default"],[445,47,383,18],[445,49,383,20],[445,60,383,27,"name"],[445,64,383,39],[445,66,383,44],[446,8,384,4,"console"],[446,15,384,11],[446,16,384,12,"log"],[446,19,384,15],[446,20,384,16],[446,59,384,55],[446,61,384,57,"name"],[446,65,384,61],[446,66,384,62],[447,8,386,4],[447,12,386,8],[447,13,386,9,"name"],[447,17,386,13],[447,18,386,14,"trim"],[447,22,386,18],[447,23,386,19],[447,24,386,20],[447,26,386,22],[448,10,387,6],[448,17,387,13],[449,12,387,15,"available"],[449,21,387,24],[449,23,387,26],[449,27,387,30],[450,12,387,32,"message"],[450,19,387,39],[450,21,387,41],[451,10,387,44],[451,11,387,45],[452,8,388,4],[454,8,390,4],[455,8,391,4],[455,12,391,10,"storedCompetitions"],[455,30,391,28],[455,39,391,37,"CrossPlatformStorage"],[455,59,391,57],[455,60,391,57,"default"],[455,67,391,57],[455,68,391,58,"getItem"],[455,75,391,65],[455,76,391,66],[455,94,391,84],[455,95,391,85],[456,8,392,4],[456,12,392,8,"existingCompetitions"],[456,32,392,28],[456,35,392,31,"storedCompetitions"],[456,53,392,49],[456,56,392,52,"JSON"],[456,60,392,56],[456,61,392,57,"parse"],[456,66,392,62],[456,67,392,63,"storedCompetitions"],[456,85,392,81],[456,86,392,82],[456,89,392,85],[456,91,392,87],[458,8,394,4],[459,8,395,4],[459,12,395,10,"defaultNames"],[459,24,395,22],[459,27,395,25],[459,28,395,26],[459,50,395,48],[459,52,395,50],[459,78,395,76],[459,80,395,78],[459,96,395,94],[459,97,395,95],[460,8,396,4],[460,12,396,10,"allNames"],[460,20,396,18],[460,23,396,21],[460,24,397,6],[460,27,397,9,"existingCompetitions"],[460,47,397,29],[460,48,397,30,"map"],[460,51,397,33],[460,52,397,35,"comp"],[460,56,397,44],[460,60,397,49,"comp"],[460,64,397,53],[460,65,397,54,"name"],[460,69,397,58],[460,70,397,59,"toLowerCase"],[460,81,397,70],[460,82,397,71],[460,83,397,72],[460,84,397,73],[460,86,398,6],[460,89,398,9,"defaultNames"],[460,101,398,21],[460,102,398,22,"map"],[460,105,398,25],[460,106,398,26,"name"],[460,110,398,30],[460,114,398,34,"name"],[460,118,398,38],[460,119,398,39,"toLowerCase"],[460,130,398,50],[460,131,398,51],[460,132,398,52],[460,133,398,53],[460,134,399,5],[461,8,401,4],[461,12,401,10,"isAvailable"],[461,23,401,21],[461,26,401,24],[461,27,401,25,"allNames"],[461,35,401,33],[461,36,401,34,"includes"],[461,44,401,42],[461,45,401,43,"name"],[461,49,401,47],[461,50,401,48,"toLowerCase"],[461,61,401,59],[461,62,401,60],[461,63,401,61],[461,64,401,62],[462,8,403,4],[462,15,403,11],[463,10,404,6,"available"],[463,19,404,15],[463,21,404,17,"isAvailable"],[463,32,404,28],[464,10,405,6,"message"],[464,17,405,13],[464,19,405,15,"isAvailable"],[464,30,405,26],[464,33,405,29],[464,49,405,45],[464,52,405,48],[465,8,406,4],[465,9,406,5],[466,6,407,2],[466,7,407,3],[467,6,407,3],[467,22,383,2,"validateNameMock"],[467,38,383,18,"validateNameMock"],[467,39,383,18,"_x17"],[467,43,383,18],[468,8,383,18],[468,15,383,18,"_ref7"],[468,20,383,18],[468,21,383,18,"apply"],[468,26,383,18],[468,33,383,18,"arguments"],[468,42,383,18],[469,6,383,18],[470,4,383,18],[470,7,407,3],[471,4,409,2],[472,4,410,2,"getMyCompetitionsMock"],[472,25,410,23],[473,6,410,23],[473,10,410,23,"_ref8"],[473,15,410,23],[473,22,410,23,"_asyncToGenerator"],[473,39,410,23],[473,40,410,23,"default"],[473,47,410,23],[473,49,410,25],[473,62,410,37],[474,8,411,4,"console"],[474,15,411,11],[474,16,411,12,"log"],[474,19,411,15],[474,20,411,16],[474,54,411,50],[474,55,411,51],[475,8,412,4],[475,12,412,10,"storedCompetitions"],[475,30,412,28],[475,39,412,37,"CrossPlatformStorage"],[475,59,412,57],[475,60,412,57,"default"],[475,67,412,57],[475,68,412,58,"getItem"],[475,75,412,65],[475,76,412,66],[475,95,412,85],[475,96,412,86],[476,8,414,4],[476,12,414,8,"storedCompetitions"],[476,30,414,26],[476,32,414,28],[477,10,415,6],[477,14,415,12,"competitions"],[477,26,415,24],[477,29,415,27,"JSON"],[477,33,415,31],[477,34,415,32,"parse"],[477,39,415,37],[477,40,415,38,"storedCompetitions"],[477,58,415,56],[477,59,415,57],[478,10,416,6,"console"],[478,17,416,13],[478,18,416,14,"log"],[478,21,416,17],[478,22,416,18],[478,57,416,53],[478,59,416,55,"competitions"],[478,71,416,67],[478,72,416,68,"length"],[478,78,416,74],[478,79,416,75],[480,10,418,6],[481,10,419,6],[481,14,419,12,"enhancedCompetitions"],[481,34,419,32],[481,37,419,35,"competitions"],[481,49,419,47],[481,50,419,48,"map"],[481,53,419,51],[481,54,419,53,"comp"],[481,58,419,62],[481,62,419,67],[482,12,420,8],[482,16,420,12],[482,17,420,13,"comp"],[482,21,420,17],[482,22,420,18,"participants"],[482,34,420,30],[482,38,420,34,"comp"],[482,42,420,38],[482,43,420,39,"participants"],[482,55,420,51],[482,56,420,52,"length"],[482,62,420,58],[482,65,420,61],[482,66,420,62],[482,68,420,64],[483,14,421,10],[483,18,421,16,"demoParticipants"],[483,34,421,32],[483,37,421,35],[483,38,422,12],[484,16,423,14,"id"],[484,18,423,16],[484,20,423,18],[484,46,423,44],[485,16,424,14,"name"],[485,20,424,18],[485,22,424,20],[485,39,424,37],[486,16,425,14,"email"],[486,21,425,19],[486,23,425,21],[486,42,425,40],[487,16,426,14,"is_admin"],[487,24,426,22],[487,26,426,24],[487,30,426,28],[488,16,427,14,"paid_matchdays"],[488,30,427,28],[488,32,427,30],[488,33,427,31],[488,34,427,32],[488,36,427,34],[488,37,427,35],[488,39,427,37],[488,40,427,38],[488,41,427,39],[489,16,428,14,"points"],[489,22,428,20],[489,24,428,22],[489,28,428,26],[490,16,429,14,"totalPoints"],[490,27,429,25],[490,29,429,27],[491,14,430,12],[491,15,430,13],[491,17,431,12],[492,16,432,14,"id"],[492,18,432,16],[492,20,432,18],[492,38,432,36],[493,16,433,14,"name"],[493,20,433,18],[493,22,433,20],[493,35,433,33],[494,16,434,14,"email"],[494,21,434,19],[494,23,434,21],[494,46,434,44],[495,16,435,14,"is_admin"],[495,24,435,22],[495,26,435,24],[495,31,435,29],[496,16,436,14,"paid_matchdays"],[496,30,436,28],[496,32,436,30],[496,33,436,31],[496,34,436,32],[496,36,436,34],[496,37,436,35],[496,38,436,36],[497,16,437,14,"points"],[497,22,437,20],[497,24,437,22],[497,28,437,26],[498,16,438,14,"totalPoints"],[498,27,438,25],[498,29,438,27],[499,14,439,12],[499,15,439,13],[499,17,440,12],[500,16,441,14,"id"],[500,18,441,16],[500,20,441,18],[500,41,441,39],[501,16,442,14,"name"],[501,20,442,18],[501,22,442,20],[501,38,442,36],[502,16,443,14,"email"],[502,21,443,19],[502,23,443,21],[502,49,443,47],[503,16,444,14,"is_admin"],[503,24,444,22],[503,26,444,24],[503,31,444,29],[504,16,445,14,"paid_matchdays"],[504,30,445,28],[504,32,445,30],[504,33,445,31],[504,34,445,32],[504,35,445,33],[505,16,446,14,"points"],[505,22,446,20],[505,24,446,22],[505,28,446,26],[506,16,447,14,"totalPoints"],[506,27,447,25],[506,29,447,27],[507,14,448,12],[507,15,448,13],[507,17,449,12],[508,16,450,14,"id"],[508,18,450,16],[508,20,450,18],[508,39,450,37],[509,16,451,14,"name"],[509,20,451,18],[509,22,451,20],[509,36,451,34],[510,16,452,14,"email"],[510,21,452,19],[510,23,452,21],[510,47,452,45],[511,16,453,14,"is_admin"],[511,24,453,22],[511,26,453,24],[511,31,453,29],[512,16,454,14,"paid_matchdays"],[512,30,454,28],[512,32,454,30],[512,34,454,32],[513,16,455,14,"points"],[513,22,455,20],[513,24,455,22],[513,28,455,26],[514,16,456,14,"totalPoints"],[514,27,456,25],[514,29,456,27],[515,14,457,12],[515,15,457,13],[515,17,458,12],[516,16,459,14,"id"],[516,18,459,16],[516,20,459,18],[516,38,459,36],[517,16,460,14,"name"],[517,20,460,18],[517,22,460,20],[517,35,460,33],[518,16,461,14,"email"],[518,21,461,19],[518,23,461,21],[518,46,461,44],[519,16,462,14,"is_admin"],[519,24,462,22],[519,26,462,24],[519,31,462,29],[520,16,463,14,"paid_matchdays"],[520,30,463,28],[520,32,463,30],[520,33,463,31],[520,34,463,32],[520,36,463,34],[520,37,463,35],[520,39,463,37],[520,40,463,38],[520,41,463,39],[521,16,464,14,"points"],[521,22,464,20],[521,24,464,22],[521,28,464,26],[522,16,465,14,"totalPoints"],[522,27,465,25],[522,29,465,27],[523,14,466,12],[523,15,466,13],[523,16,467,11],[524,14,469,10],[524,21,469,17],[525,16,469,19],[525,19,469,22,"comp"],[525,23,469,26],[526,16,469,28,"participants"],[526,28,469,40],[526,30,469,42,"demoParticipants"],[527,14,469,59],[527,15,469,60],[528,12,470,8],[529,12,471,8],[529,19,471,15,"comp"],[529,23,471,19],[530,10,472,6],[530,11,472,7],[530,12,472,8],[532,10,474,6],[533,10,475,6],[533,16,475,12,"CrossPlatformStorage"],[533,36,475,32],[533,37,475,32,"default"],[533,44,475,32],[533,45,475,33,"setItem"],[533,52,475,40],[533,53,475,41],[533,72,475,60],[533,74,475,62,"JSON"],[533,78,475,66],[533,79,475,67,"stringify"],[533,88,475,76],[533,89,475,77,"enhancedCompetitions"],[533,109,475,97],[533,110,475,98],[533,111,475,99],[534,10,477,6,"enhancedCompetitions"],[534,30,477,26],[534,31,477,27,"forEach"],[534,38,477,34],[534,39,477,35],[534,40,477,36,"comp"],[534,44,477,45],[534,46,477,47,"index"],[534,51,477,60],[534,56,477,65],[535,12,478,8,"console"],[535,19,478,15],[535,20,478,16,"log"],[535,23,478,19],[535,24,478,20],[535,27,478,23,"index"],[535,32,478,28],[535,35,478,31],[535,36,478,32],[535,41,478,37,"comp"],[535,45,478,41],[535,46,478,42,"name"],[535,50,478,46],[535,59,478,55,"comp"],[535,63,478,59],[535,64,478,60,"_id"],[535,67,478,63],[535,74,478,70,"comp"],[535,78,478,74],[535,79,478,75,"participants"],[535,91,478,87],[535,93,478,89,"length"],[535,99,478,95],[535,103,478,99],[535,104,478,100],[535,119,478,115],[535,120,478,116],[536,10,479,6],[536,11,479,7],[536,12,479,8],[537,10,481,6],[537,17,481,13,"enhancedCompetitions"],[537,37,481,33],[538,8,482,4],[538,9,482,5],[538,15,482,11],[539,10,483,6,"console"],[539,17,483,13],[539,18,483,14,"log"],[539,21,483,17],[539,22,483,18],[539,82,483,78],[539,83,483,79],[540,10,484,6],[540,17,484,13],[540,19,484,15],[541,8,485,4],[542,6,486,2],[542,7,486,3],[543,6,486,3],[543,22,410,2,"getMyCompetitionsMock"],[543,43,410,23,"getMyCompetitionsMock"],[543,44,410,23],[544,8,410,23],[544,15,410,23,"_ref8"],[544,20,410,23],[544,21,410,23,"apply"],[544,26,410,23],[544,33,410,23,"arguments"],[544,42,410,23],[545,6,410,23],[546,4,410,23],[546,7,486,3],[547,4,488,2,"joinMock"],[547,12,488,10],[548,6,488,10],[548,10,488,10,"_ref9"],[548,15,488,10],[548,22,488,10,"_asyncToGenerator"],[548,39,488,10],[548,40,488,10,"default"],[548,47,488,10],[548,49,488,12],[548,60,488,19,"inviteCode"],[548,70,488,37],[548,72,488,42],[549,8,489,4,"console"],[549,15,489,11],[549,16,489,12,"log"],[549,19,489,15],[549,20,489,16],[549,61,489,57],[549,63,489,59,"inviteCode"],[549,73,489,69],[549,74,489,70],[550,8,490,4],[550,12,490,8,"inviteCode"],[550,22,490,18],[550,23,490,19,"length"],[550,29,490,25],[550,32,490,28],[550,33,490,29],[550,35,490,31],[551,10,491,6],[551,16,491,12],[551,20,491,16,"Error"],[551,25,491,21],[551,26,491,22],[551,47,491,43],[551,48,491,44],[552,8,492,4],[553,8,493,4],[553,15,493,11],[554,10,493,13,"message"],[554,17,493,20],[554,19,493,22],[555,8,493,57],[555,9,493,58],[556,6,494,2],[556,7,494,3],[557,6,494,3],[557,22,488,2,"joinMock"],[557,30,488,10,"joinMock"],[557,31,488,10,"_x18"],[557,35,488,10],[558,8,488,10],[558,15,488,10,"_ref9"],[558,20,488,10],[558,21,488,10,"apply"],[558,26,488,10],[558,33,488,10,"arguments"],[558,42,488,10],[559,6,488,10],[560,4,488,10],[560,7,494,3],[561,4,496,2],[562,4,497,2,"deleteMock"],[562,14,497,12],[563,6,497,12],[563,10,497,12,"_ref0"],[563,15,497,12],[563,22,497,12,"_asyncToGenerator"],[563,39,497,12],[563,40,497,12,"default"],[563,47,497,12],[563,49,497,14],[563,60,497,21,"competitionId"],[563,73,497,42],[563,75,497,47],[564,8,498,4,"console"],[564,15,498,11],[564,16,498,12,"log"],[564,19,498,15],[564,20,498,16],[564,53,498,49],[564,55,498,51,"competitionId"],[564,68,498,64],[564,69,498,65],[565,8,500,4],[565,12,500,10,"storedCompetitions"],[565,30,500,28],[565,39,500,37,"CrossPlatformStorage"],[565,59,500,57],[565,60,500,57,"default"],[565,67,500,57],[565,68,500,58,"getItem"],[565,75,500,65],[565,76,500,66],[565,94,500,84],[565,95,500,85],[566,8,501,4],[566,12,501,8,"competitions"],[566,24,501,20],[566,27,501,23,"storedCompetitions"],[566,45,501,41],[566,48,501,44,"JSON"],[566,52,501,48],[566,53,501,49,"parse"],[566,58,501,54],[566,59,501,55,"storedCompetitions"],[566,77,501,73],[566,78,501,74],[566,81,501,77],[566,83,501,79],[567,8,503,4],[567,12,503,10,"competitionToDelete"],[567,31,503,29],[567,34,503,32,"competitions"],[567,46,503,44],[567,47,503,45,"find"],[567,51,503,49],[567,52,503,51,"comp"],[567,56,503,60],[567,60,503,65,"comp"],[567,64,503,69],[567,65,503,70,"_id"],[567,68,503,73],[567,73,503,78,"competitionId"],[567,86,503,91],[567,87,503,92],[568,8,504,4],[568,12,504,8],[568,13,504,9,"competitionToDelete"],[568,32,504,28],[568,34,504,30],[569,10,505,6],[569,16,505,12],[569,20,505,16,"Error"],[569,25,505,21],[569,26,505,22],[569,49,505,45],[569,50,505,46],[570,8,506,4],[572,8,508,4],[573,8,509,4],[573,12,509,8,"competitionToDelete"],[573,31,509,27],[573,32,509,28,"admin_id"],[573,40,509,36],[573,45,509,41],[573,71,509,67],[573,73,509,69],[574,10,510,6],[574,16,510,12],[574,20,510,16,"Error"],[574,25,510,21],[574,26,510,22],[574,66,510,62],[574,67,510,63],[575,8,511,4],[577,8,513,4],[578,8,514,4,"competitions"],[578,20,514,16],[578,23,514,19,"competitions"],[578,35,514,31],[578,36,514,32,"filter"],[578,42,514,38],[578,43,514,40,"comp"],[578,47,514,49],[578,51,514,54,"comp"],[578,55,514,58],[578,56,514,59,"_id"],[578,59,514,62],[578,64,514,67,"competitionId"],[578,77,514,80],[578,78,514,81],[579,8,515,4],[579,14,515,10,"CrossPlatformStorage"],[579,34,515,30],[579,35,515,30,"default"],[579,42,515,30],[579,43,515,31,"setItem"],[579,50,515,38],[579,51,515,39],[579,69,515,57],[579,71,515,59,"JSON"],[579,75,515,63],[579,76,515,64,"stringify"],[579,85,515,73],[579,86,515,74,"competitions"],[579,98,515,86],[579,99,515,87],[579,100,515,88],[581,8,517,4],[582,8,518,4],[582,14,518,10,"logAdminAction"],[582,28,518,24],[582,29,518,25],[582,37,518,33],[582,39,518,35,"competitionToDelete"],[582,58,518,54],[582,59,518,55,"name"],[582,63,518,59],[582,65,518,61],[582,82,518,78],[582,83,518,79],[583,8,520,4,"console"],[583,15,520,11],[583,16,520,12,"log"],[583,19,520,15],[583,20,520,16],[583,56,520,52],[583,57,520,53],[584,8,521,4],[584,15,521,11],[585,10,521,13,"message"],[585,17,521,20],[585,19,521,22],[586,8,521,57],[586,9,521,58],[587,6,522,2],[587,7,522,3],[588,6,522,3],[588,22,497,2,"deleteMock"],[588,32,497,12,"deleteMock"],[588,33,497,12,"_x19"],[588,37,497,12],[589,8,497,12],[589,15,497,12,"_ref0"],[589,20,497,12],[589,21,497,12,"apply"],[589,26,497,12],[589,33,497,12,"arguments"],[589,42,497,12],[590,6,497,12],[591,4,497,12],[591,7,522,3],[592,4,524,2],[593,4,525,2,"editMock"],[593,12,525,10],[594,6,525,10],[594,10,525,10,"_ref1"],[594,15,525,10],[594,22,525,10,"_asyncToGenerator"],[594,39,525,10],[594,40,525,10,"default"],[594,47,525,10],[594,49,525,12],[594,60,525,19,"competitionId"],[594,73,525,40],[594,75,525,42,"updates"],[594,82,525,54],[594,84,525,59],[595,8,526,4,"console"],[595,15,526,11],[595,16,526,12,"log"],[595,19,526,15],[595,20,526,16],[595,51,526,47],[595,53,526,49,"competitionId"],[595,66,526,62],[595,68,526,64,"updates"],[595,75,526,71],[595,76,526,72],[596,8,528,4],[596,12,528,10,"storedCompetitions"],[596,30,528,28],[596,39,528,37,"CrossPlatformStorage"],[596,59,528,57],[596,60,528,57,"default"],[596,67,528,57],[596,68,528,58,"getItem"],[596,75,528,65],[596,76,528,66],[596,94,528,84],[596,95,528,85],[597,8,529,4],[597,12,529,8,"competitions"],[597,24,529,20],[597,27,529,23,"storedCompetitions"],[597,45,529,41],[597,48,529,44,"JSON"],[597,52,529,48],[597,53,529,49,"parse"],[597,58,529,54],[597,59,529,55,"storedCompetitions"],[597,77,529,73],[597,78,529,74],[597,81,529,77],[597,83,529,79],[598,8,531,4],[598,12,531,10,"competitionIndex"],[598,28,531,26],[598,31,531,29,"competitions"],[598,43,531,41],[598,44,531,42,"findIndex"],[598,53,531,51],[598,54,531,53,"comp"],[598,58,531,62],[598,62,531,67,"comp"],[598,66,531,71],[598,67,531,72,"_id"],[598,70,531,75],[598,75,531,80,"competitionId"],[598,88,531,93],[598,89,531,94],[599,8,532,4],[599,12,532,8,"competitionIndex"],[599,28,532,24],[599,33,532,29],[599,34,532,30],[599,35,532,31],[599,37,532,33],[600,10,533,6],[600,16,533,12],[600,20,533,16,"Error"],[600,25,533,21],[600,26,533,22],[600,49,533,45],[600,50,533,46],[601,8,534,4],[602,8,536,4],[602,12,536,10,"competition"],[602,23,536,21],[602,26,536,24,"competitions"],[602,38,536,36],[602,39,536,37,"competitionIndex"],[602,55,536,53],[602,56,536,54],[604,8,538,4],[605,8,539,4],[605,12,539,8,"competition"],[605,23,539,19],[605,24,539,20,"admin_id"],[605,32,539,28],[605,37,539,33],[605,63,539,59],[605,65,539,61],[606,10,540,6],[606,16,540,12],[606,20,540,16,"Error"],[606,25,540,21],[606,26,540,22],[606,64,540,60],[606,65,540,61],[607,8,541,4],[609,8,543,4],[610,8,544,4,"competitions"],[610,20,544,16],[610,21,544,17,"competitionIndex"],[610,37,544,33],[610,38,544,34],[610,41,544,37],[611,10,545,6],[611,13,545,9,"competition"],[611,24,545,20],[612,10,546,6],[612,13,546,9,"updates"],[612,20,546,16],[613,10,547,6,"updated_at"],[613,20,547,16],[613,22,547,18],[613,26,547,22,"Date"],[613,30,547,26],[613,31,547,27],[613,32,547,28],[613,33,547,29,"toISOString"],[613,44,547,40],[613,45,547,41],[614,8,548,4],[614,9,548,5],[615,8,550,4],[615,14,550,10,"CrossPlatformStorage"],[615,34,550,30],[615,35,550,30,"default"],[615,42,550,30],[615,43,550,31,"setItem"],[615,50,550,38],[615,51,550,39],[615,69,550,57],[615,71,550,59,"JSON"],[615,75,550,63],[615,76,550,64,"stringify"],[615,85,550,73],[615,86,550,74,"competitions"],[615,98,550,86],[615,99,550,87],[615,100,550,88],[617,8,552,4],[618,8,553,4],[618,14,553,10,"logAdminAction"],[618,28,553,24],[618,29,553,25],[618,35,553,31],[618,37,553,33,"competition"],[618,48,553,44],[618,49,553,45,"name"],[618,53,553,49],[618,55,553,51],[618,72,553,68],[618,74,553,70,"updates"],[618,81,553,77],[618,82,553,78],[619,8,555,4,"console"],[619,15,555,11],[619,16,555,12,"log"],[619,19,555,15],[619,20,555,16],[619,56,555,52],[619,57,555,53],[620,8,556,4],[620,15,556,11,"competitions"],[620,27,556,23],[620,28,556,24,"competitionIndex"],[620,44,556,40],[620,45,556,41],[621,6,557,2],[621,7,557,3],[622,6,557,3],[622,22,525,2,"editMock"],[622,30,525,10,"editMock"],[622,31,525,10,"_x20"],[622,35,525,10],[622,37,525,10,"_x21"],[622,41,525,10],[623,8,525,10],[623,15,525,10,"_ref1"],[623,20,525,10],[623,21,525,10,"apply"],[623,26,525,10],[623,33,525,10,"arguments"],[623,42,525,10],[624,6,525,10],[625,4,525,10],[625,7,557,3],[626,4,559,2],[627,4,560,2,"awardDailyPrizeMock"],[627,23,560,21],[628,6,560,21],[628,10,560,21,"_ref10"],[628,16,560,21],[628,23,560,21,"_asyncToGenerator"],[628,40,560,21],[628,41,560,21,"default"],[628,48,560,21],[628,50,560,23],[628,61,560,30,"competitionId"],[628,74,560,51],[628,76,560,53,"matchday"],[628,84,560,69],[628,86,560,71,"winnerId"],[628,94,560,87],[628,96,560,92],[629,8,561,4,"console"],[629,15,561,11],[629,16,561,12,"log"],[629,19,561,15],[629,20,561,16],[629,64,561,60],[629,66,561,62,"matchday"],[629,74,561,70],[629,76,561,72],[629,85,561,81],[629,87,561,83,"winnerId"],[629,95,561,91],[629,96,561,92],[630,8,563,4],[630,12,563,10,"storedCompetitions"],[630,30,563,28],[630,39,563,37,"CrossPlatformStorage"],[630,59,563,57],[630,60,563,57,"default"],[630,67,563,57],[630,68,563,58,"getItem"],[630,75,563,65],[630,76,563,66],[630,94,563,84],[630,95,563,85],[631,8,564,4],[631,12,564,8,"competitions"],[631,24,564,20],[631,27,564,23,"storedCompetitions"],[631,45,564,41],[631,48,564,44,"JSON"],[631,52,564,48],[631,53,564,49,"parse"],[631,58,564,54],[631,59,564,55,"storedCompetitions"],[631,77,564,73],[631,78,564,74],[631,81,564,77],[631,83,564,79],[632,8,566,4],[632,12,566,10,"competitionIndex"],[632,28,566,26],[632,31,566,29,"competitions"],[632,43,566,41],[632,44,566,42,"findIndex"],[632,53,566,51],[632,54,566,53,"comp"],[632,58,566,62],[632,62,566,67,"comp"],[632,66,566,71],[632,67,566,72,"_id"],[632,70,566,75],[632,75,566,80,"competitionId"],[632,88,566,93],[632,89,566,94],[633,8,567,4],[633,12,567,8,"competitionIndex"],[633,28,567,24],[633,33,567,29],[633,34,567,30],[633,35,567,31],[633,37,567,33],[634,10,568,6],[634,16,568,12],[634,20,568,16,"Error"],[634,25,568,21],[634,26,568,22],[634,49,568,45],[634,50,568,46],[635,8,569,4],[636,8,571,4],[636,12,571,10,"competition"],[636,23,571,21],[636,26,571,24,"competitions"],[636,38,571,36],[636,39,571,37,"competitionIndex"],[636,55,571,53],[636,56,571,54],[638,8,573,4],[639,8,574,4],[639,12,574,8,"competition"],[639,23,574,19],[639,24,574,20,"admin_id"],[639,32,574,28],[639,37,574,33],[639,63,574,59],[639,65,574,61],[640,10,575,6],[640,16,575,12],[640,20,575,16,"Error"],[640,25,575,21],[640,26,575,22],[640,61,575,57],[640,62,575,58],[641,8,576,4],[643,8,578,4],[644,8,579,4],[644,12,579,8],[644,13,579,9,"competition"],[644,24,579,20],[644,25,579,21,"rules"],[644,30,579,26],[644,34,579,30],[644,35,579,31],[644,36,579,32],[644,43,579,39],[644,45,579,41],[644,52,579,48],[644,53,579,49],[644,54,579,50,"includes"],[644,62,579,58],[644,63,579,59,"competition"],[644,74,579,70],[644,75,579,71,"rules"],[644,80,579,76],[644,81,579,77,"type"],[644,85,579,81],[644,86,579,82],[644,88,579,84],[645,10,580,6],[645,16,580,12],[645,20,580,16,"Error"],[645,25,580,21],[645,26,580,22],[645,71,580,67],[645,72,580,68],[646,8,581,4],[647,8,583,4],[647,12,583,10,"dailyPrizeAmount"],[647,28,583,26],[647,31,583,29,"competition"],[647,42,583,40],[647,43,583,41,"rules"],[647,48,583,46],[647,49,583,47,"daily_prize"],[647,60,583,58],[647,64,583,62],[647,65,583,63],[648,8,584,4],[648,12,584,10,"winner"],[648,18,584,16],[648,21,584,19,"competition"],[648,32,584,30],[648,33,584,31,"participants"],[648,45,584,43],[648,46,584,44,"find"],[648,50,584,48],[648,51,584,50,"p"],[648,52,584,56],[648,56,584,61,"p"],[648,57,584,62],[648,58,584,63,"id"],[648,60,584,65],[648,65,584,70,"winnerId"],[648,73,584,78],[648,74,584,79],[649,8,586,4],[649,12,586,8],[649,13,586,9,"winner"],[649,19,586,15],[649,21,586,17],[650,10,587,6],[650,16,587,12],[650,20,587,16,"Error"],[650,25,587,21],[650,26,587,22],[650,59,587,55],[650,60,587,56],[651,8,588,4],[653,8,590,4],[654,8,591,4],[654,12,591,8],[654,13,591,9,"competition"],[654,24,591,20],[654,25,591,21,"daily_winners"],[654,38,591,34],[654,40,591,36],[655,10,592,6,"competition"],[655,21,592,17],[655,22,592,18,"daily_winners"],[655,35,592,31],[655,38,592,34],[655,39,592,35],[655,40,592,36],[656,8,593,4],[658,8,595,4],[659,8,596,4],[659,12,596,8,"competition"],[659,23,596,19],[659,24,596,20,"daily_winners"],[659,37,596,33],[659,38,596,34,"matchday"],[659,46,596,42],[659,47,596,43],[659,49,596,45],[660,10,597,6],[660,16,597,12],[660,20,597,16,"Error"],[660,25,597,21],[660,26,597,22],[660,54,597,50,"matchday"],[660,62,597,58],[660,85,597,81,"competition"],[660,96,597,92],[660,97,597,93,"daily_winners"],[660,110,597,106],[660,111,597,107,"matchday"],[660,119,597,115],[660,120,597,116],[660,121,597,117,"name"],[660,125,597,121],[660,127,597,123],[660,128,597,124],[661,8,598,4],[663,8,600,4],[664,8,601,4,"competition"],[664,19,601,15],[664,20,601,16,"daily_winners"],[664,33,601,29],[664,34,601,30,"matchday"],[664,42,601,38],[664,43,601,39],[664,46,601,42],[665,10,602,6,"user_id"],[665,17,602,13],[665,19,602,15,"winnerId"],[665,27,602,23],[666,10,603,6,"name"],[666,14,603,10],[666,16,603,12,"winner"],[666,22,603,18],[666,23,603,19,"name"],[666,27,603,23],[667,10,604,6,"amount"],[667,16,604,12],[667,18,604,14,"dailyPrizeAmount"],[667,34,604,30],[668,10,605,6,"awarded_at"],[668,20,605,16],[668,22,605,18],[668,26,605,22,"Date"],[668,30,605,26],[668,31,605,27],[668,32,605,28],[668,33,605,29,"toISOString"],[668,44,605,40],[668,45,605,41],[669,8,606,4],[669,9,606,5],[671,8,608,4],[672,8,609,4,"competitions"],[672,20,609,16],[672,21,609,17,"competitionIndex"],[672,37,609,33],[672,38,609,34],[672,41,609,37,"competition"],[672,52,609,48],[673,8,610,4],[673,14,610,10,"CrossPlatformStorage"],[673,34,610,30],[673,35,610,30,"default"],[673,42,610,30],[673,43,610,31,"setItem"],[673,50,610,38],[673,51,610,39],[673,69,610,57],[673,71,610,59,"JSON"],[673,75,610,63],[673,76,610,64,"stringify"],[673,85,610,73],[673,86,610,74,"competitions"],[673,98,610,86],[673,99,610,87],[673,100,610,88],[675,8,612,4],[676,8,613,4],[676,14,613,10,"logAdminAction"],[676,28,613,24],[676,29,613,25],[676,48,613,44],[676,50,613,46,"competition"],[676,61,613,57],[676,62,613,58,"name"],[676,66,613,62],[676,68,613,64],[676,85,613,81],[676,87,613,83],[677,10,614,6,"matchday"],[677,18,614,14],[678,10,615,6,"winner"],[678,16,615,12],[678,18,615,14,"winner"],[678,24,615,20],[678,25,615,21,"name"],[678,29,615,25],[679,10,616,6,"amount"],[679,16,616,12],[679,18,616,14,"dailyPrizeAmount"],[680,8,617,4],[680,9,617,5],[680,10,617,6],[682,8,619,4],[683,8,620,4,"console"],[683,15,620,11],[683,16,620,12,"log"],[683,19,620,15],[683,20,620,16],[683,26,620,22,"winner"],[683,32,620,28],[683,33,620,29,"name"],[683,37,620,33],[683,50,620,46,"dailyPrizeAmount"],[683,66,620,62],[683,91,620,87,"matchday"],[683,99,620,95],[683,101,620,97],[683,102,620,98],[684,8,622,4,"console"],[684,15,622,11],[684,16,622,12,"log"],[684,19,622,15],[684,20,622,16],[684,56,622,52],[684,57,622,53],[685,8,623,4],[685,15,623,11],[686,10,624,6,"message"],[686,17,624,13],[686,19,624,15],[686,38,624,34,"dailyPrizeAmount"],[686,54,624,50],[686,69,624,65,"winner"],[686,75,624,71],[686,76,624,72,"name"],[686,80,624,76],[686,97,624,93,"matchday"],[686,105,624,101],[686,107,624,103],[687,10,625,6,"competition"],[687,21,625,17],[687,23,625,19,"competition"],[688,8,626,4],[688,9,626,5],[689,6,627,2],[689,7,627,3],[690,6,627,3],[690,22,560,2,"awardDailyPrizeMock"],[690,41,560,21,"awardDailyPrizeMock"],[690,42,560,21,"_x22"],[690,46,560,21],[690,48,560,21,"_x23"],[690,52,560,21],[690,54,560,21,"_x24"],[690,58,560,21],[691,8,560,21],[691,15,560,21,"_ref10"],[691,21,560,21],[691,22,560,21,"apply"],[691,27,560,21],[691,34,560,21,"arguments"],[691,43,560,21],[692,6,560,21],[693,4,560,21],[693,7,627,3],[694,4,629,2],[695,4,630,2,"getAdminLogsMock"],[695,20,630,18],[696,6,630,18],[696,10,630,18,"_ref11"],[696,16,630,18],[696,23,630,18,"_asyncToGenerator"],[696,40,630,18],[696,41,630,18,"default"],[696,48,630,18],[696,50,630,20],[696,63,630,32],[697,8,631,4,"console"],[697,15,631,11],[697,16,631,12,"log"],[697,19,631,15],[697,20,631,16],[697,49,631,45],[697,50,631,46],[698,8,633,4],[698,12,633,8],[699,10,634,6],[699,14,634,12,"logs"],[699,18,634,16],[699,21,634,19],[699,28,634,25,"CrossPlatformStorage"],[699,48,634,45],[699,49,634,45,"default"],[699,56,634,45],[699,57,634,46,"getItem"],[699,64,634,53],[699,65,634,54],[699,76,634,65],[699,77,634,66],[699,82,634,70],[699,86,634,74],[700,10,635,6],[700,14,635,12,"adminLogs"],[700,23,635,21],[700,26,635,24,"JSON"],[700,30,635,28],[700,31,635,29,"parse"],[700,36,635,34],[700,37,635,35,"logs"],[700,41,635,39],[700,42,635,40],[702,10,637,6],[703,10,638,6,"adminLogs"],[703,19,638,15],[703,20,638,16,"sort"],[703,24,638,20],[703,25,638,21],[703,26,638,22,"a"],[703,27,638,28],[703,29,638,30,"b"],[703,30,638,36],[703,35,638,41],[703,39,638,45,"Date"],[703,43,638,49],[703,44,638,50,"b"],[703,45,638,51],[703,46,638,52,"timestamp"],[703,55,638,61],[703,56,638,62],[703,57,638,63,"getTime"],[703,64,638,70],[703,65,638,71],[703,66,638,72],[703,69,638,75],[703,73,638,79,"Date"],[703,77,638,83],[703,78,638,84,"a"],[703,79,638,85],[703,80,638,86,"timestamp"],[703,89,638,95],[703,90,638,96],[703,91,638,97,"getTime"],[703,98,638,104],[703,99,638,105],[703,100,638,106],[703,101,638,107],[704,10,640,6,"console"],[704,17,640,13],[704,18,640,14,"log"],[704,21,640,17],[704,22,640,18],[704,44,640,40],[704,46,640,42,"adminLogs"],[704,55,640,51],[704,56,640,52,"length"],[704,62,640,58],[704,63,640,59],[705,10,641,6],[705,17,641,13,"adminLogs"],[705,26,641,22],[706,8,642,4],[706,9,642,5],[706,10,642,6],[706,17,642,13,"error"],[706,22,642,18],[706,24,642,20],[707,10,643,6,"console"],[707,17,643,13],[707,18,643,14,"error"],[707,23,643,19],[707,24,643,20],[707,54,643,50],[707,56,643,52,"error"],[707,61,643,57],[707,62,643,58],[708,10,644,6],[708,17,644,13],[708,19,644,15],[709,8,645,4],[710,6,646,2],[710,7,646,3],[711,6,646,3],[711,22,630,2,"getAdminLogsMock"],[711,38,630,18,"getAdminLogsMock"],[711,39,630,18],[712,8,630,18],[712,15,630,18,"_ref11"],[712,21,630,18],[712,22,630,18,"apply"],[712,27,630,18],[712,34,630,18,"arguments"],[712,43,630,18],[713,6,630,18],[714,4,630,18],[714,7,646,3],[715,4,648,2],[716,4,649,2,"getAllCompetitions"],[716,22,649,20],[717,6,649,20],[717,10,649,20,"_ref12"],[717,16,649,20],[717,23,649,20,"_asyncToGenerator"],[717,40,649,20],[717,41,649,20,"default"],[717,48,649,20],[717,50,649,22],[717,63,649,34],[718,8,650,4,"console"],[718,15,650,11],[718,16,650,12,"log"],[718,19,650,15],[718,20,650,16],[718,70,650,66],[718,71,650,67],[719,8,652,4],[719,12,652,8],[720,10,653,6],[721,10,654,6],[721,14,654,12,"storedCompetitions"],[721,32,654,30],[721,41,654,39,"CrossPlatformStorage"],[721,61,654,59],[721,62,654,59,"default"],[721,69,654,59],[721,70,654,60,"getItem"],[721,77,654,67],[721,78,654,68],[721,97,654,87],[721,98,654,88],[722,10,655,6],[722,14,655,10,"competitions"],[722,26,655,22],[722,29,655,25,"storedCompetitions"],[722,47,655,43],[722,50,655,46,"JSON"],[722,54,655,50],[722,55,655,51,"parse"],[722,60,655,56],[722,61,655,57,"storedCompetitions"],[722,79,655,75],[722,80,655,76],[722,83,655,79],[722,85,655,81],[724,10,657,6],[725,10,658,6],[725,14,658,12,"oldStoredCompetitions"],[725,35,658,33],[725,44,658,42,"CrossPlatformStorage"],[725,64,658,62],[725,65,658,62,"default"],[725,72,658,62],[725,73,658,63,"getItem"],[725,80,658,70],[725,81,658,71],[725,99,658,89],[725,100,658,90],[726,10,659,6],[726,14,659,12,"oldCompetitions"],[726,29,659,27],[726,32,659,30,"oldStoredCompetitions"],[726,53,659,51],[726,56,659,54,"JSON"],[726,60,659,58],[726,61,659,59,"parse"],[726,66,659,64],[726,67,659,65,"oldStoredCompetitions"],[726,88,659,86],[726,89,659,87],[726,92,659,90],[726,94,659,92],[728,10,661,6],[729,10,662,6],[729,14,662,12,"allCompetitions"],[729,29,662,27],[729,32,662,30],[729,33,662,31],[729,36,662,34,"competitions"],[729,48,662,46],[729,50,662,48],[729,53,662,51,"oldCompetitions"],[729,68,662,66],[729,69,662,67],[730,10,663,6],[730,14,663,12,"uniqueCompetitions"],[730,32,663,30],[730,35,663,33,"allCompetitions"],[730,50,663,48],[730,51,663,49,"filter"],[730,57,663,55],[730,58,663,56],[730,59,663,57,"comp"],[730,63,663,61],[730,65,663,63,"index"],[730,70,663,68],[730,72,663,70,"self"],[730,76,663,74],[730,81,664,8,"index"],[730,86,664,13],[730,91,664,18,"self"],[730,95,664,22],[730,96,664,23,"findIndex"],[730,105,664,32],[730,106,664,33,"c"],[730,107,664,34],[730,111,664,38,"c"],[730,112,664,39],[730,113,664,40,"_id"],[730,116,664,43],[730,121,664,48,"comp"],[730,125,664,52],[730,126,664,53,"_id"],[730,129,664,56],[730,130,665,6],[730,131,665,7],[731,10,667,6,"console"],[731,17,667,13],[731,18,667,14,"log"],[731,21,667,17],[731,22,667,18],[731,59,667,55],[731,61,667,57,"uniqueCompetitions"],[731,79,667,75],[731,80,667,76,"length"],[731,86,667,82],[731,87,667,83],[732,10,668,6],[732,17,668,13,"uniqueCompetitions"],[732,35,668,31],[733,8,670,4],[733,9,670,5],[733,10,670,6],[733,17,670,13,"error"],[733,22,670,18],[733,24,670,20],[734,10,671,6,"console"],[734,17,671,13],[734,18,671,14,"error"],[734,23,671,19],[734,24,671,20],[734,60,671,56],[734,62,671,58,"error"],[734,67,671,63],[734,68,671,64],[735,10,672,6],[735,17,672,13],[735,19,672,15],[736,8,673,4],[737,6,674,2],[737,7,674,3],[738,6,674,3],[738,22,649,2,"getAllCompetitions"],[738,40,649,20,"getAllCompetitions"],[738,41,649,20],[739,8,649,20],[739,15,649,20,"_ref12"],[739,21,649,20],[739,22,649,20,"apply"],[739,27,649,20],[739,34,649,20,"arguments"],[739,43,649,20],[740,6,649,20],[741,4,649,20],[742,2,675,0],[742,3,675,1],[744,2,677,0],[745,2,678,7],[745,6,678,13,"walletAPI"],[745,15,678,22],[745,18,678,25],[746,4,679,2,"getBalance"],[746,14,679,12],[746,16,679,14,"getBalance"],[746,17,679,14],[746,22,679,20,"apiClient"],[746,31,679,29],[746,32,679,30,"get"],[746,35,679,33],[746,36,679,34],[746,53,679,51],[746,54,679,52],[747,4,681,2,"topUp"],[747,9,681,7],[747,11,681,10,"amount"],[747,17,681,24],[747,21,682,4,"apiClient"],[747,30,682,13],[747,31,682,14,"post"],[747,35,682,18],[747,36,682,19],[747,51,682,34],[747,53,682,36],[747,57,682,40],[747,59,682,42],[748,6,683,6,"params"],[748,12,683,12],[748,14,683,14],[749,8,683,16,"amount"],[750,6,683,23],[751,4,684,4],[751,5,684,5],[751,6,684,6],[752,4,686,2,"withdraw"],[752,12,686,10],[752,14,686,13,"amount"],[752,20,686,27],[752,24,687,4,"apiClient"],[752,33,687,13],[752,34,687,14,"post"],[752,38,687,18],[752,39,687,19],[752,57,687,37],[752,59,687,39],[752,63,687,43],[752,65,687,45],[753,6,688,6,"params"],[753,12,688,12],[753,14,688,14],[754,8,688,16,"amount"],[755,6,688,23],[756,4,689,4],[756,5,689,5],[756,6,689,6],[757,4,691,2,"getTransactions"],[757,19,691,17],[757,21,691,19,"getTransactions"],[757,22,691,19],[757,27,691,25,"apiClient"],[757,36,691,34],[757,37,691,35,"get"],[757,40,691,38],[757,41,691,39],[757,56,691,54],[758,2,692,0],[758,3,692,1],[760,2,694,0],[761,2,695,7],[761,6,695,13,"databaseAPI"],[761,17,695,24],[761,20,695,27],[762,4,696,2,"resetDatabase"],[762,17,696,15],[763,6,696,15],[763,10,696,15,"_ref13"],[763,16,696,15],[763,23,696,15,"_asyncToGenerator"],[763,40,696,15],[763,41,696,15,"default"],[763,48,696,15],[763,50,696,17],[763,63,696,29],[764,8,697,4,"console"],[764,15,697,11],[764,16,697,12,"log"],[764,19,697,15],[764,20,697,16],[764,71,697,67],[764,72,697,68],[765,8,699,4],[765,12,699,8],[766,10,700,6],[766,16,700,12,"CrossPlatformStorage"],[766,36,700,32],[766,37,700,32,"default"],[766,44,700,32],[766,45,700,33,"removeItem"],[766,55,700,43],[766,56,700,44],[766,75,700,63],[766,76,700,64],[767,10,701,6],[767,16,701,12,"CrossPlatformStorage"],[767,36,701,32],[767,37,701,32,"default"],[767,44,701,32],[767,45,701,33,"removeItem"],[767,55,701,43],[767,56,701,44],[767,73,701,61],[767,74,701,62],[768,10,702,6],[768,16,702,12,"CrossPlatformStorage"],[768,36,702,32],[768,37,702,32,"default"],[768,44,702,32],[768,45,702,33,"removeItem"],[768,55,702,43],[768,56,702,44],[768,97,702,85],[768,98,702,86],[769,10,703,6],[769,16,703,12,"CrossPlatformStorage"],[769,36,703,32],[769,37,703,32,"default"],[769,44,703,32],[769,45,703,33,"removeItem"],[769,55,703,43],[769,56,703,44],[769,95,703,83],[769,96,703,84],[770,10,705,6,"console"],[770,17,705,13],[770,18,705,14,"log"],[770,21,705,17],[770,22,705,18],[770,68,705,64],[770,69,705,65],[771,10,706,6],[771,17,706,13],[772,12,706,15,"success"],[772,19,706,22],[772,21,706,24],[772,25,706,28],[773,12,706,30,"message"],[773,19,706,37],[773,21,706,39],[774,10,706,65],[774,11,706,66],[775,8,707,4],[775,9,707,5],[775,10,707,6],[775,17,707,13,"error"],[775,22,707,18],[775,24,707,20],[776,10,708,6,"console"],[776,17,708,13],[776,18,708,14,"error"],[776,23,708,19],[776,24,708,20],[776,50,708,46],[776,52,708,48,"error"],[776,57,708,53],[776,58,708,54],[777,10,709,6],[777,17,709,13],[778,12,709,15,"success"],[778,19,709,22],[778,21,709,24],[778,26,709,29],[779,12,709,31,"message"],[779,19,709,38],[779,21,709,40],[780,10,709,55],[780,11,709,56],[781,8,710,4],[782,6,711,2],[782,7,711,3],[783,6,711,3],[783,22,696,2,"resetDatabase"],[783,35,696,15,"resetDatabase"],[783,36,696,15],[784,8,696,15],[784,15,696,15,"_ref13"],[784,21,696,15],[784,22,696,15,"apply"],[784,27,696,15],[784,34,696,15,"arguments"],[784,43,696,15],[785,6,696,15],[786,4,696,15],[787,2,712,0],[787,3,712,1],[788,2,714,0],[788,6,714,0,"_default"],[788,14,714,0],[788,17,714,15,"apiClient"],[788,26,714,24],[789,0,714,25],[789,3]],"functionMap":{"names":["<global>","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","generateRandomCode","existingCompetitions.some$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.map$argument_0","enhancedCompetitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","competitionAPI.getAllCompetitions","allCompetitions.filter$argument_0","self.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACQ;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CDC;iBWM;MXG;UYE;4CZM;aaE;4CbC;ScE;uCdC;aeE;iDfC;kBgBE,+BhB;UiBE,oCjB;kBkBE;MlBG;mBmBE;MnBG;uBoBI;CpBqB;UqBI;6CrBe;QsBE;qEtBC;qBuBE,uCvB;kBwBE,oDxB;mByBE;MzBQ;U0BE;M1BG;mB2BE;qD3BC;gB4BG;M5BI;uB6BE;qE7BC;yB8BE;wE9BC;c+BG;mDCwB,sCD;+BEO;KFO;qCGI,8CH;G/BiE;oBmCG;GnCe;2BoCE;GpC2B;6BqCE;kDCS;QDK;GrCW;oBuCG;kCPc,sCO;0BCC,0BD;GvCS;yByCG;oDCS;ODqD;mCEK;OFE;GzCO;Y4CE;G5CM;c6CG;kDCM,yCD;uCEW,yCF;G7CQ;YgDG;oDCM,yCD;GhD0B;uBkDG;oDDM,yCC;iDCkB,6BD;GlD2C;oBoDG;qBCQ,qFD;GpDQ;sBsDG;wDCc;iCCC,uBD,CD;GtDU;cyDK,sCzD;S0DE;M1DG;Y2DE;M3DG;mB4DE,oC5D;iB6DK;G7De"},"hasCjsExports":false},"type":"js/module"}]}