{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _axios = require(_dependencyMap[4], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[5], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[6], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[7], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  var CrossPlatformStorage = /*#__PURE__*/function () {\n    function CrossPlatformStorage() {\n      (0, _classCallCheck.default)(this, CrossPlatformStorage);\n    }\n    return (0, _createClass.default)(CrossPlatformStorage, null, [{\n      key: \"getItem\",\n      value: function () {\n        var _getItem = (0, _asyncToGenerator.default)(function* (key) {\n          try {\n            // Try AsyncStorage first (works on both platforms)\n            return yield AsyncStorage.default.getItem(key);\n          } catch (error) {\n            // Fallback to localStorage on web if AsyncStorage fails\n            if (typeof window !== 'undefined' && window.localStorage) {\n              return window.localStorage.getItem(key);\n            }\n            return null;\n          }\n        });\n        function getItem(_x) {\n          return _getItem.apply(this, arguments);\n        }\n        return getItem;\n      }()\n    }, {\n      key: \"setItem\",\n      value: function () {\n        var _setItem = (0, _asyncToGenerator.default)(function* (key, value) {\n          try {\n            // Try AsyncStorage first (works on both platforms)\n            yield AsyncStorage.default.setItem(key, value);\n          } catch (error) {\n            // Fallback to localStorage on web if AsyncStorage fails\n            if (typeof window !== 'undefined' && window.localStorage) {\n              window.localStorage.setItem(key, value);\n            }\n          }\n        });\n        function setItem(_x2, _x3) {\n          return _setItem.apply(this, arguments);\n        }\n        return setItem;\n      }()\n    }, {\n      key: \"removeItem\",\n      value: function () {\n        var _removeItem = (0, _asyncToGenerator.default)(function* (key) {\n          try {\n            yield AsyncStorage.default.removeItem(key);\n          } catch (error) {\n            if (typeof window !== 'undefined' && window.localStorage) {\n              window.localStorage.removeItem(key);\n            }\n          }\n        });\n        function removeItem(_x4) {\n          return _removeItem.apply(this, arguments);\n        }\n        return removeItem;\n      }()\n    }]);\n  }(); // Get backend URL from environment\n  var BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantaleague-pay.preview.emergentagent.com';\n  var ApiClient = /*#__PURE__*/function () {\n    function ApiClient() {\n      (0, _classCallCheck.default)(this, ApiClient);\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(/*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator.default)(function* (config) {\n          console.log(`üåê API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n          var token = yield SecureStore.getItemAsync('session_token');\n          if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n          }\n          return config;\n        });\n        return function (_x5) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`‚úÖ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`‚ùå API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    return (0, _createClass.default)(ApiClient, [{\n      key: \"get\",\n      value: function () {\n        var _get = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.get(url);\n          return response.data;\n        });\n        function get(_x6) {\n          return _get.apply(this, arguments);\n        }\n        return get;\n      }()\n    }, {\n      key: \"post\",\n      value: function () {\n        var _post = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.post(url, data);\n          return response.data;\n        });\n        function post(_x7, _x8) {\n          return _post.apply(this, arguments);\n        }\n        return post;\n      }()\n    }, {\n      key: \"patch\",\n      value: function () {\n        var _patch = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.patch(url, data);\n          return response.data;\n        });\n        function patch(_x9, _x0) {\n          return _patch.apply(this, arguments);\n        }\n        return patch;\n      }()\n    }, {\n      key: \"delete\",\n      value: function () {\n        var _delete2 = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.delete(url);\n          return response.data;\n        });\n        function _delete(_x1) {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      key: \"put\",\n      value: function () {\n        var _put = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.put(url, data);\n          return response.data;\n        });\n        function put(_x10, _x11) {\n          return _put.apply(this, arguments);\n        }\n        return put;\n      }()\n    }]);\n  }();\n  var apiClient = new ApiClient();\n\n  // Auth API\n  var authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  var logAdminAction = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator.default)(function* (action, competitionName, adminName, details) {\n      try {\n        var logs = (yield CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        var adminLogs = JSON.parse(logs);\n        var logEntry = {\n          id: `log_${Date.now()}`,\n          action,\n          competition_name: competitionName,\n          admin_name: adminName,\n          details,\n          timestamp: new Date().toISOString()\n        };\n        adminLogs.push(logEntry);\n        yield CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n        console.log('üìù Admin action logged:', action, competitionName);\n      } catch (error) {\n        console.error('Failed to log admin action:', error);\n      }\n    });\n    return function logAdminAction(_x12, _x13, _x14, _x15) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Competition API\n  var competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* (data) {\n        console.log('üèÜ Mock: Creating competition:', data.name);\n        console.log('üìÖ Total matchdays:', data.total_matchdays || 36);\n\n        // Get existing competitions from cross-platform storage\n        var storedCompetitions = yield CrossPlatformStorage.getItem('competitions_mock');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        console.log('üìã Current competitions before creation:', existingCompetitions.length);\n\n        // Check for unique name validation\n        var existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n        if (existingNames.includes(data.name.toLowerCase())) {\n          throw new Error('Competition name already exists. Please choose another name.');\n        }\n\n        // Create new competition\n        // Generate unique invite code based on competition name\n        var inviteCode = data.name.replace(/\\s+/g, '').substring(0, 6).toUpperCase();\n\n        // Ensure invite code is unique by appending a number if needed\n        var uniqueCode = inviteCode;\n        var counter = 1;\n        while (existingCompetitions.some(comp => comp.invite_code === uniqueCode)) {\n          uniqueCode = inviteCode + counter.toString().padStart(2, '0');\n          counter++;\n        }\n        var newCompetition = {\n          _id: `comp_${Date.now()}`,\n          name: data.name,\n          total_matchdays: data.total_matchdays || 36,\n          participation_cost_per_team: data.participation_cost_per_team || 210.0,\n          expected_teams: data.expected_teams || 8,\n          total_prize_pool: data.total_prize_pool || 1680.0,\n          daily_payment_enabled: data.daily_payment_enabled || false,\n          daily_payment_amount: data.daily_payment_amount || 0.0,\n          rules: data.rules,\n          invite_code: uniqueCode,\n          // Use unique code\n          invite_link: `https://fantapay.app/join/${uniqueCode}`,\n          admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          // Current mock user ID\n          participants: [{\n            id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            email: 'test@fantapay.com',\n            is_admin: true,\n            paid_matchdays: [1, 2],\n            // Mock paid matchdays\n            points: 0\n          }],\n          wallet_balance: 0,\n          is_active: true,\n          current_matchday: 1,\n          // Start at matchday 1\n          standings: [{\n            position: 1,\n            player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            points: 0\n          }],\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n\n        // Add to competitions list and save to storage\n        existingCompetitions.push(newCompetition);\n        yield CrossPlatformStorage.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n        console.log('‚úÖ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n        // Log the creation action\n        yield logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n          competition_id: newCompetition._id,\n          rules: newCompetition.rules,\n          total_matchdays: newCompetition.total_matchdays,\n          participation_cost_per_team: newCompetition.participation_cost_per_team,\n          expected_teams: newCompetition.expected_teams,\n          total_prize_pool: newCompetition.total_prize_pool,\n          daily_payment_enabled: newCompetition.daily_payment_enabled,\n          daily_payment_amount: newCompetition.daily_payment_amount\n        });\n        console.log('‚úÖ Mock Competition Created:', newCompetition.name);\n        console.log('üìù Competition Name:', newCompetition.name);\n        console.log('üí∞ Daily Payment:', newCompetition.daily_payment_enabled ? `‚Ç¨${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n        console.log('üèÜ Total Prize Pool:', `‚Ç¨${newCompetition.total_prize_pool}`);\n        console.log('üîë Invite Code:', newCompetition.invite_code);\n        return {\n          data: newCompetition\n        };\n      });\n      return function createMock(_x16) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    // Mock matchday payment methods\n    payMatchdaysMock: function () {\n      var _ref4 = (0, _asyncToGenerator.default)(function* (competitionId, matchdays) {\n        console.log('üí≥ Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n        // Simulate payment processing\n        var totalCost = matchdays.length * 5; // ‚Ç¨5 per matchday\n\n        // Mock payment success\n        return {\n          data: {\n            message: `Successfully paid for ${matchdays.length} matchdays`,\n            paid_matchdays: matchdays,\n            total_cost: totalCost,\n            new_user_balance: 150 - totalCost // Mock remaining balance\n          }\n        };\n      });\n      return function payMatchdaysMock(_x17, _x18) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    getMatchdayPaymentsMock: function () {\n      var _ref5 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('üìä Mock: Getting matchday payments for competition', competitionId);\n\n        // Mock payment data\n        var mockPayments = [];\n        for (var i = 1; i <= 36; i++) {\n          mockPayments.push({\n            _id: `payment_${i}`,\n            user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            competition_id: competitionId,\n            matchday: i,\n            amount: 5,\n            status: i <= 3 ? 'paid' : 'pending',\n            paid_at: i <= 3 ? new Date().toISOString() : null,\n            created_at: new Date().toISOString()\n          });\n        }\n        return {\n          data: {\n            competition_id: competitionId,\n            daily_payment_enabled: true,\n            daily_payment_amount: 5,\n            total_matchdays: 36,\n            payments: mockPayments\n          }\n        };\n      });\n      return function getMatchdayPaymentsMock(_x19) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    getPaymentStatusTableMock: function () {\n      var _ref6 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('üîê Mock: Getting payment status table for competition', competitionId);\n\n        // Mock admin payment table\n        var mockTable = [{\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          username: 'FantaPay Tester',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          matchday_payments: Array.from({\n            length: 36\n          }, (_, i) => ({\n            matchday: i + 1,\n            status: i < 3 ? 'paid' : 'pending',\n            amount: 5,\n            paid_at: i < 3 ? new Date().toISOString() : null\n          }))\n        }];\n        return {\n          data: {\n            competition_name: 'Mock Fantasy League',\n            total_matchdays: 36,\n            daily_payment_amount: 5,\n            participants: mockTable\n          }\n        };\n      });\n      return function getPaymentStatusTableMock(_x20) {\n        return _ref6.apply(this, arguments);\n      };\n    }(),\n    // Real-time name validation\n    validateNameMock: function () {\n      var _ref7 = (0, _asyncToGenerator.default)(function* (name) {\n        console.log('üèÜ Mock: Validating competition name:', name);\n        if (!name.trim()) {\n          return {\n            available: true,\n            message: ''\n          };\n        }\n\n        // Get existing competitions\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Add some default competition names to check against\n        var defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n        var allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n        var isAvailable = !allNames.includes(name.toLowerCase());\n        return {\n          available: isAvailable,\n          message: isAvailable ? 'Name available' : 'Name already exists'\n        };\n      });\n      return function validateNameMock(_x21) {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: function () {\n      var _ref8 = (0, _asyncToGenerator.default)(function* () {\n        console.log('üèÜ Mock: Getting my competitions');\n        var storedCompetitions = yield CrossPlatformStorage.getItem('competitions_mock');\n        if (storedCompetitions) {\n          var competitions = JSON.parse(storedCompetitions);\n          console.log('üìã Competitions found in storage:', competitions.length);\n          competitions.forEach((comp, index) => {\n            console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n          });\n          return competitions;\n        } else {\n          console.log('üìã No competitions found in storage, returning empty array');\n          return [];\n        }\n      });\n      return function getMyCompetitionsMock() {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    joinMock: function () {\n      var _ref9 = (0, _asyncToGenerator.default)(function* (inviteCode) {\n        console.log('üèÜ Mock: Joining competition with code:', inviteCode);\n        if (inviteCode.length < 6) {\n          throw new Error('Invalid invite code');\n        }\n        return {\n          message: 'Successfully joined competition!'\n        };\n      });\n      return function joinMock(_x22) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    // Delete competition (admin only)\n    deleteMock: function () {\n      var _ref0 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('üóëÔ∏è Mock: Deleting competition:', competitionId);\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionToDelete = competitions.find(comp => comp._id === competitionId);\n        if (!competitionToDelete) {\n          throw new Error('Competition not found');\n        }\n\n        // Check if user is admin\n        if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can delete this competition');\n        }\n\n        // Remove competition from storage\n        competitions = competitions.filter(comp => comp._id !== competitionId);\n        yield CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n        console.log('‚úÖ Competition deleted successfully');\n        return {\n          message: 'Competition deleted successfully'\n        };\n      });\n      return function deleteMock(_x23) {\n        return _ref0.apply(this, arguments);\n      };\n    }(),\n    // Edit competition (admin only)\n    editMock: function () {\n      var _ref1 = (0, _asyncToGenerator.default)(function* (competitionId, updates) {\n        console.log('‚úèÔ∏è Mock: Editing competition:', competitionId, updates);\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can edit this competition');\n        }\n\n        // Update competition\n        competitions[competitionIndex] = {\n          ...competition,\n          ...updates,\n          updated_at: new Date().toISOString()\n        };\n        yield CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n        console.log('‚úÖ Competition updated successfully');\n        return competitions[competitionIndex];\n      });\n      return function editMock(_x24, _x25) {\n        return _ref1.apply(this, arguments);\n      };\n    }(),\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: function () {\n      var _ref10 = (0, _asyncToGenerator.default)(function* (competitionId, matchday, winnerId) {\n        console.log('üèÜ Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can award daily prizes');\n        }\n\n        // Check if competition has daily prizes\n        if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n          throw new Error('This competition does not have daily prizes');\n        }\n        var dailyPrizeAmount = competition.rules.daily_prize || 5;\n        var winner = competition.participants.find(p => p.id === winnerId);\n        if (!winner) {\n          throw new Error('Winner not found in competition');\n        }\n\n        // Initialize daily winners if not exists\n        if (!competition.daily_winners) {\n          competition.daily_winners = {};\n        }\n\n        // Check if prize already awarded for this matchday\n        if (competition.daily_winners[matchday]) {\n          throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n        }\n\n        // Award the prize\n        competition.daily_winners[matchday] = {\n          user_id: winnerId,\n          name: winner.name,\n          amount: dailyPrizeAmount,\n          awarded_at: new Date().toISOString()\n        };\n\n        // Update competition\n        competitions[competitionIndex] = competition;\n        yield CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n          matchday,\n          winner: winner.name,\n          amount: dailyPrizeAmount\n        });\n\n        // Simulate wallet credit (in a real app, this would update the user's wallet)\n        console.log(`üí∞ ${winner.name} awarded ‚Ç¨${dailyPrizeAmount} for winning matchday ${matchday}`);\n        console.log('‚úÖ Daily prize awarded successfully');\n        return {\n          message: `Daily prize of ‚Ç¨${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n          competition: competition\n        };\n      });\n      return function awardDailyPrizeMock(_x26, _x27, _x28) {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    // Get admin logs\n    getAdminLogsMock: function () {\n      var _ref11 = (0, _asyncToGenerator.default)(function* () {\n        console.log('üìù Mock: Getting admin logs');\n        try {\n          var logs = (yield CrossPlatformStorage.getItem('adminLogs')) || '[]';\n          var adminLogs = JSON.parse(logs);\n\n          // Sort by timestamp (newest first)\n          adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n          console.log('üìã Admin logs found:', adminLogs.length);\n          return adminLogs;\n        } catch (error) {\n          console.error('üí• Error getting admin logs:', error);\n          return [];\n        }\n      });\n      return function getAdminLogsMock() {\n        return _ref11.apply(this, arguments);\n      };\n    }(),\n    // Critical Missing Method: Get ALL competitions for uniqueness validation\n    getAllCompetitions: function () {\n      var _ref12 = (0, _asyncToGenerator.default)(function* () {\n        console.log('üåê Mock: Getting ALL competitions for validation');\n        try {\n          // Get competitions from both storage locations \n          var storedCompetitions = yield CrossPlatformStorage.getItem('competitions_mock');\n          var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n          // Also check the old storage key for backwards compatibility\n          var oldStoredCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n          var oldCompetitions = oldStoredCompetitions ? JSON.parse(oldStoredCompetitions) : [];\n\n          // Combine both sources and remove duplicates\n          var allCompetitions = [...competitions, ...oldCompetitions];\n          var uniqueCompetitions = allCompetitions.filter((comp, index, self) => index === self.findIndex(c => c._id === comp._id));\n          console.log('üìä Total unique competitions found:', uniqueCompetitions.length);\n          return uniqueCompetitions;\n        } catch (error) {\n          console.error('üí• Error getting all competitions:', error);\n          return [];\n        }\n      });\n      return function getAllCompetitions() {\n        return _ref12.apply(this, arguments);\n      };\n    }()\n  };\n\n  // Wallet API\n  var walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  var databaseAPI = {\n    resetDatabase: function () {\n      var _ref13 = (0, _asyncToGenerator.default)(function* () {\n        console.log('üóëÔ∏è Resetting database - clearing all stored data');\n        try {\n          yield CrossPlatformStorage.removeItem('competitions_mock');\n          yield CrossPlatformStorage.removeItem('admin_logs_mock');\n          yield CrossPlatformStorage.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n          yield CrossPlatformStorage.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n          console.log('‚úÖ Database reset complete - all data cleared');\n          return {\n            success: true,\n            message: 'Database reset complete'\n          };\n        } catch (error) {\n          console.error('‚ùå Database reset failed:', error);\n          return {\n            success: false,\n            message: 'Reset failed'\n          };\n        }\n      });\n      return function resetDatabase() {\n        return _ref13.apply(this, arguments);\n      };\n    }()\n  };\n  var _default = apiClient;\n});","lineCount":789,"map":[[27,2,685,0,"Object"],[27,8,685,0],[27,9,685,0,"defineProperty"],[27,23,685,0],[27,24,685,0,"exports"],[27,31,685,0],[28,4,685,0,"enumerable"],[28,14,685,0],[29,4,685,0,"get"],[29,7,685,0],[29,18,685,0,"get"],[29,19,685,0],[30,6,685,0],[30,13,685,0,"_default"],[30,21,685,0],[31,4,685,0],[32,2,685,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,649,0,"Object"],[45,8,649,0],[45,9,649,0,"defineProperty"],[45,23,649,0],[45,24,649,0,"exports"],[45,31,649,0],[46,4,649,0,"enumerable"],[46,14,649,0],[47,4,649,0,"get"],[47,7,649,0],[47,18,649,0,"get"],[47,19,649,0],[48,6,649,0],[48,13,649,0,"walletAPI"],[48,22,649,0],[49,4,649,0],[50,2,649,0],[51,2,666,0,"Object"],[51,8,666,0],[51,9,666,0,"defineProperty"],[51,23,666,0],[51,24,666,0,"exports"],[51,31,666,0],[52,4,666,0,"enumerable"],[52,14,666,0],[53,4,666,0,"get"],[53,7,666,0],[53,18,666,0,"get"],[53,19,666,0],[54,6,666,0],[54,13,666,0,"databaseAPI"],[54,24,666,0],[55,4,666,0],[56,2,666,0],[57,2,683,2],[57,6,683,2,"_expoVirtualEnv"],[57,21,683,2],[57,24,683,2,"require"],[57,31,683,2],[57,32,683,2,"_dependencyMap"],[57,46,683,2],[58,2,683,2],[58,6,683,2,"_babelRuntimeHelpersAsyncToGenerator"],[58,42,683,2],[58,45,683,2,"require"],[58,52,683,2],[58,53,683,2,"_dependencyMap"],[58,67,683,2],[59,2,683,2],[59,6,683,2,"_asyncToGenerator"],[59,23,683,2],[59,26,683,2,"_interopDefault"],[59,41,683,2],[59,42,683,2,"_babelRuntimeHelpersAsyncToGenerator"],[59,78,683,2],[60,2,683,2],[60,6,683,2,"_babelRuntimeHelpersClassCallCheck"],[60,40,683,2],[60,43,683,2,"require"],[60,50,683,2],[60,51,683,2,"_dependencyMap"],[60,65,683,2],[61,2,683,2],[61,6,683,2,"_classCallCheck"],[61,21,683,2],[61,24,683,2,"_interopDefault"],[61,39,683,2],[61,40,683,2,"_babelRuntimeHelpersClassCallCheck"],[61,74,683,2],[62,2,683,2],[62,6,683,2,"_babelRuntimeHelpersCreateClass"],[62,37,683,2],[62,40,683,2,"require"],[62,47,683,2],[62,48,683,2,"_dependencyMap"],[62,62,683,2],[63,2,683,2],[63,6,683,2,"_createClass"],[63,18,683,2],[63,21,683,2,"_interopDefault"],[63,36,683,2],[63,37,683,2,"_babelRuntimeHelpersCreateClass"],[63,68,683,2],[64,2,1,0],[64,6,1,0,"_axios"],[64,12,1,0],[64,15,1,0,"require"],[64,22,1,0],[64,23,1,0,"_dependencyMap"],[64,37,1,0],[65,2,1,0],[65,6,1,0,"axios"],[65,11,1,0],[65,14,1,0,"_interopDefault"],[65,29,1,0],[65,30,1,0,"_axios"],[65,36,1,0],[66,2,2,0],[66,6,2,0,"_expoSecureStore"],[66,22,2,0],[66,25,2,0,"require"],[66,32,2,0],[66,33,2,0,"_dependencyMap"],[66,47,2,0],[67,2,2,0],[67,6,2,0,"SecureStore"],[67,17,2,0],[67,20,2,0,"_interopNamespace"],[67,37,2,0],[67,38,2,0,"_expoSecureStore"],[67,54,2,0],[68,2,3,0],[68,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[68,42,3,0],[68,45,3,0,"require"],[68,52,3,0],[68,53,3,0,"_dependencyMap"],[68,67,3,0],[69,2,3,0],[69,6,3,0,"AsyncStorage"],[69,18,3,0],[69,21,3,0,"_interopDefault"],[69,36,3,0],[69,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[69,73,3,0],[70,2,4,0],[70,6,4,0,"_expoConstants"],[70,20,4,0],[70,23,4,0,"require"],[70,30,4,0],[70,31,4,0,"_dependencyMap"],[70,45,4,0],[71,2,4,0],[71,6,4,0,"Constants"],[71,15,4,0],[71,18,4,0,"_interopDefault"],[71,33,4,0],[71,34,4,0,"_expoConstants"],[71,48,4,0],[72,2,6,0],[73,2,6,0],[73,6,7,6,"CrossPlatformStorage"],[73,26,7,26],[74,4,7,26],[74,13,7,26,"CrossPlatformStorage"],[74,34,7,26],[75,6,7,26],[75,10,7,26,"_classCallCheck"],[75,25,7,26],[75,26,7,26,"default"],[75,33,7,26],[75,41,7,26,"CrossPlatformStorage"],[75,61,7,26],[76,4,7,26],[77,4,7,26],[77,15,7,26,"_createClass"],[77,27,7,26],[77,28,7,26,"default"],[77,35,7,26],[77,37,7,26,"CrossPlatformStorage"],[77,57,7,26],[78,6,7,26,"key"],[78,9,7,26],[79,6,7,26,"value"],[79,11,7,26],[80,8,7,26],[80,12,7,26,"_getItem"],[80,20,7,26],[80,27,7,26,"_asyncToGenerator"],[80,44,7,26],[80,45,7,26,"default"],[80,52,7,26],[80,54,8,2],[80,65,8,23,"key"],[80,68,8,34],[80,70,8,60],[81,10,9,4],[81,14,9,8],[82,12,10,6],[83,12,11,6],[83,25,11,19,"AsyncStorage"],[83,37,11,31],[83,38,11,31,"default"],[83,45,11,31],[83,46,11,32,"getItem"],[83,53,11,39],[83,54,11,40,"key"],[83,57,11,43],[83,58,11,44],[84,10,12,4],[84,11,12,5],[84,12,12,6],[84,19,12,13,"error"],[84,24,12,18],[84,26,12,20],[85,12,13,6],[86,12,14,6],[86,16,14,10],[86,23,14,17,"window"],[86,29,14,23],[86,34,14,28],[86,45,14,39],[86,49,14,43,"window"],[86,55,14,49],[86,56,14,50,"localStorage"],[86,68,14,62],[86,70,14,64],[87,14,15,8],[87,21,15,15,"window"],[87,27,15,21],[87,28,15,22,"localStorage"],[87,40,15,34],[87,41,15,35,"getItem"],[87,48,15,42],[87,49,15,43,"key"],[87,52,15,46],[87,53,15,47],[88,12,16,6],[89,12,17,6],[89,19,17,13],[89,23,17,17],[90,10,18,4],[91,8,19,2],[91,9,19,3],[92,8,19,3],[92,17,8,15,"getItem"],[92,24,8,22,"getItem"],[92,25,8,22,"_x"],[92,27,8,22],[93,10,8,22],[93,17,8,22,"_getItem"],[93,25,8,22],[93,26,8,22,"apply"],[93,31,8,22],[93,38,8,22,"arguments"],[93,47,8,22],[94,8,8,22],[95,8,8,22],[95,15,8,15,"getItem"],[95,22,8,22],[96,6,8,22],[97,4,8,22],[98,6,8,22,"key"],[98,9,8,22],[99,6,8,22,"value"],[99,11,8,22],[100,8,8,22],[100,12,8,22,"_setItem"],[100,20,8,22],[100,27,8,22,"_asyncToGenerator"],[100,44,8,22],[100,45,8,22,"default"],[100,52,8,22],[100,54,21,2],[100,65,21,23,"key"],[100,68,21,34],[100,70,21,36,"value"],[100,75,21,49],[100,77,21,66],[101,10,22,4],[101,14,22,8],[102,12,23,6],[103,12,24,6],[103,18,24,12,"AsyncStorage"],[103,30,24,24],[103,31,24,24,"default"],[103,38,24,24],[103,39,24,25,"setItem"],[103,46,24,32],[103,47,24,33,"key"],[103,50,24,36],[103,52,24,38,"value"],[103,57,24,43],[103,58,24,44],[104,10,25,4],[104,11,25,5],[104,12,25,6],[104,19,25,13,"error"],[104,24,25,18],[104,26,25,20],[105,12,26,6],[106,12,27,6],[106,16,27,10],[106,23,27,17,"window"],[106,29,27,23],[106,34,27,28],[106,45,27,39],[106,49,27,43,"window"],[106,55,27,49],[106,56,27,50,"localStorage"],[106,68,27,62],[106,70,27,64],[107,14,28,8,"window"],[107,20,28,14],[107,21,28,15,"localStorage"],[107,33,28,27],[107,34,28,28,"setItem"],[107,41,28,35],[107,42,28,36,"key"],[107,45,28,39],[107,47,28,41,"value"],[107,52,28,46],[107,53,28,47],[108,12,29,6],[109,10,30,4],[110,8,31,2],[110,9,31,3],[111,8,31,3],[111,17,21,15,"setItem"],[111,24,21,22,"setItem"],[111,25,21,22,"_x2"],[111,28,21,22],[111,30,21,22,"_x3"],[111,33,21,22],[112,10,21,22],[112,17,21,22,"_setItem"],[112,25,21,22],[112,26,21,22,"apply"],[112,31,21,22],[112,38,21,22,"arguments"],[112,47,21,22],[113,8,21,22],[114,8,21,22],[114,15,21,15,"setItem"],[114,22,21,22],[115,6,21,22],[116,4,21,22],[117,6,21,22,"key"],[117,9,21,22],[118,6,21,22,"value"],[118,11,21,22],[119,8,21,22],[119,12,21,22,"_removeItem"],[119,23,21,22],[119,30,21,22,"_asyncToGenerator"],[119,47,21,22],[119,48,21,22,"default"],[119,55,21,22],[119,57,33,2],[119,68,33,26,"key"],[119,71,33,37],[119,73,33,54],[120,10,34,4],[120,14,34,8],[121,12,35,6],[121,18,35,12,"AsyncStorage"],[121,30,35,24],[121,31,35,24,"default"],[121,38,35,24],[121,39,35,25,"removeItem"],[121,49,35,35],[121,50,35,36,"key"],[121,53,35,39],[121,54,35,40],[122,10,36,4],[122,11,36,5],[122,12,36,6],[122,19,36,13,"error"],[122,24,36,18],[122,26,36,20],[123,12,37,6],[123,16,37,10],[123,23,37,17,"window"],[123,29,37,23],[123,34,37,28],[123,45,37,39],[123,49,37,43,"window"],[123,55,37,49],[123,56,37,50,"localStorage"],[123,68,37,62],[123,70,37,64],[124,14,38,8,"window"],[124,20,38,14],[124,21,38,15,"localStorage"],[124,33,38,27],[124,34,38,28,"removeItem"],[124,44,38,38],[124,45,38,39,"key"],[124,48,38,42],[124,49,38,43],[125,12,39,6],[126,10,40,4],[127,8,41,2],[127,9,41,3],[128,8,41,3],[128,17,33,15,"removeItem"],[128,27,33,25,"removeItem"],[128,28,33,25,"_x4"],[128,31,33,25],[129,10,33,25],[129,17,33,25,"_removeItem"],[129,28,33,25],[129,29,33,25,"apply"],[129,34,33,25],[129,41,33,25,"arguments"],[129,50,33,25],[130,8,33,25],[131,8,33,25],[131,15,33,15,"removeItem"],[131,25,33,25],[132,6,33,25],[133,4,33,25],[134,2,33,25],[134,7,44,0],[135,2,45,0],[135,6,45,6,"BACKEND_URL"],[135,17,45,17],[135,20,45,20,"Constants"],[135,29,45,29],[135,30,45,29,"default"],[135,37,45,29],[135,38,45,30,"expoConfig"],[135,48,45,40],[135,50,45,42,"extra"],[135,55,45,47],[135,57,45,49,"backendUrl"],[135,67,45,59],[135,71,45,59,"_expoVirtualEnv"],[135,86,45,59],[135,87,45,59,"env"],[135,90,45,59],[135,91,45,59,"EXPO_PUBLIC_BACKEND_URL"],[135,114,45,98],[135,118,45,102],[135,169,45,153],[136,2,45,154],[136,6,47,6,"ApiClient"],[136,15,47,15],[137,4,50,2],[137,13,50,2,"ApiClient"],[137,23,50,2],[137,25,50,16],[138,6,50,16],[138,10,50,16,"_classCallCheck"],[138,25,50,16],[138,26,50,16,"default"],[138,33,50,16],[138,41,50,16,"ApiClient"],[138,50,50,16],[139,6,51,4],[139,10,51,8],[139,11,51,9,"client"],[139,17,51,15],[139,20,51,18,"axios"],[139,25,51,23],[139,26,51,23,"default"],[139,33,51,23],[139,34,51,24,"create"],[139,40,51,30],[139,41,51,31],[140,8,52,6,"baseURL"],[140,15,52,13],[140,17,52,15],[140,20,52,18,"BACKEND_URL"],[140,31,52,29],[140,37,52,35],[141,8,53,6,"timeout"],[141,15,53,13],[141,17,53,15],[141,22,53,20],[142,8,54,6,"headers"],[142,15,54,13],[142,17,54,15],[143,10,55,8],[143,24,55,22],[143,26,55,24],[144,8,56,6],[145,6,57,4],[145,7,57,5],[145,8,57,6],[147,6,59,4],[148,6,60,4],[148,10,60,8],[148,11,60,9,"client"],[148,17,60,15],[148,18,60,16,"interceptors"],[148,30,60,28],[148,31,60,29,"request"],[148,38,60,36],[148,39,60,37,"use"],[148,42,60,40],[149,8,60,40],[149,12,60,40,"_ref"],[149,16,60,40],[149,23,60,40,"_asyncToGenerator"],[149,40,60,40],[149,41,60,40,"default"],[149,48,60,40],[149,50,60,41],[149,61,60,48,"config"],[149,67,60,54],[149,69,60,59],[150,10,61,6,"console"],[150,17,61,13],[150,18,61,14,"log"],[150,21,61,17],[150,22,61,18],[150,41,61,37,"config"],[150,47,61,43],[150,48,61,44,"method"],[150,54,61,50],[150,56,61,52,"toUpperCase"],[150,67,61,63],[150,68,61,64],[150,69,61,65],[150,73,61,69,"config"],[150,79,61,75],[150,80,61,76,"url"],[150,83,61,79],[150,85,61,81],[150,87,61,83,"config"],[150,93,61,89],[150,94,61,90,"data"],[150,98,61,94],[150,99,61,95],[151,10,63,6],[151,14,63,12,"token"],[151,19,63,17],[151,28,63,26,"SecureStore"],[151,39,63,37],[151,40,63,38,"getItemAsync"],[151,52,63,50],[151,53,63,51],[151,68,63,66],[151,69,63,67],[152,10,64,6],[152,14,64,10,"token"],[152,19,64,15],[152,21,64,17],[153,12,65,8,"config"],[153,18,65,14],[153,19,65,15,"headers"],[153,26,65,22],[153,27,65,23,"Authorization"],[153,40,65,36],[153,43,65,39],[153,53,65,49,"token"],[153,58,65,54],[153,60,65,56],[154,10,66,6],[155,10,67,6],[155,17,67,13,"config"],[155,23,67,19],[156,8,68,4],[156,9,68,5],[157,8,68,5],[157,25,68,5,"_x5"],[157,28,68,5],[158,10,68,5],[158,17,68,5,"_ref"],[158,21,68,5],[158,22,68,5,"apply"],[158,27,68,5],[158,34,68,5,"arguments"],[158,43,68,5],[159,8,68,5],[160,6,68,5],[160,10,68,6],[162,6,70,4],[163,6,71,4],[163,10,71,8],[163,11,71,9,"client"],[163,17,71,15],[163,18,71,16,"interceptors"],[163,30,71,28],[163,31,71,29,"response"],[163,39,71,37],[163,40,71,38,"use"],[163,43,71,41],[163,44,72,7,"response"],[163,52,72,15],[163,56,72,20],[164,8,73,8,"console"],[164,15,73,15],[164,16,73,16,"log"],[164,19,73,19],[164,20,73,20],[164,39,73,39,"response"],[164,47,73,47],[164,48,73,48,"status"],[164,54,73,54],[164,56,73,56],[164,58,73,58,"response"],[164,66,73,66],[164,67,73,67,"data"],[164,71,73,71],[164,72,73,72],[165,8,74,8],[165,15,74,15,"response"],[165,23,74,23],[166,6,75,6],[166,7,75,7],[166,9,76,7,"error"],[166,14,76,12],[166,18,76,17],[167,8,77,8,"console"],[167,15,77,15],[167,16,77,16,"log"],[167,19,77,19],[167,20,77,20],[167,36,77,36,"error"],[167,41,77,41],[167,42,77,42,"response"],[167,50,77,50],[167,52,77,52,"status"],[167,58,77,58],[167,62,77,62],[167,71,77,71],[167,73,77,73],[167,75,77,75,"error"],[167,80,77,80],[167,81,77,81,"response"],[167,89,77,89],[167,91,77,91,"data"],[167,95,77,95],[167,99,77,99,"error"],[167,104,77,104],[167,105,77,105,"message"],[167,112,77,112],[167,113,77,113],[168,8,79,8],[168,12,79,12,"error"],[168,17,79,17],[168,18,79,18,"response"],[168,26,79,26],[168,28,79,28,"status"],[168,34,79,34],[168,39,79,39],[168,42,79,42],[168,44,79,44],[169,10,80,10],[170,10,81,10,"SecureStore"],[170,21,81,21],[170,22,81,22,"deleteItemAsync"],[170,37,81,37],[170,38,81,38],[170,53,81,53],[170,54,81,54],[171,8,82,8],[172,8,83,8],[172,15,83,15,"Promise"],[172,22,83,22],[172,23,83,23,"reject"],[172,29,83,29],[172,30,83,30,"error"],[172,35,83,35],[172,36,83,36],[173,6,84,6],[173,7,85,4],[173,8,85,5],[174,4,86,2],[175,4,86,3],[175,15,86,3,"_createClass"],[175,27,86,3],[175,28,86,3,"default"],[175,35,86,3],[175,37,86,3,"ApiClient"],[175,46,86,3],[176,6,86,3,"key"],[176,9,86,3],[177,6,86,3,"value"],[177,11,86,3],[178,8,86,3],[178,12,86,3,"_get"],[178,16,86,3],[178,23,86,3,"_asyncToGenerator"],[178,40,86,3],[178,41,86,3,"default"],[178,48,86,3],[178,50,88,2],[178,61,88,21,"url"],[178,64,88,32],[178,66,88,46],[179,10,89,4],[179,14,89,10,"response"],[179,22,89,36],[179,31,89,45],[179,35,89,49],[179,36,89,50,"client"],[179,42,89,56],[179,43,89,57,"get"],[179,46,89,60],[179,47,89,61,"url"],[179,50,89,64],[179,51,89,65],[180,10,90,4],[180,17,90,11,"response"],[180,25,90,19],[180,26,90,20,"data"],[180,30,90,24],[181,8,91,2],[181,9,91,3],[182,8,91,3],[182,17,88,8,"get"],[182,20,88,11,"get"],[182,21,88,11,"_x6"],[182,24,88,11],[183,10,88,11],[183,17,88,11,"_get"],[183,21,88,11],[183,22,88,11,"apply"],[183,27,88,11],[183,34,88,11,"arguments"],[183,43,88,11],[184,8,88,11],[185,8,88,11],[185,15,88,8,"get"],[185,18,88,11],[186,6,88,11],[187,4,88,11],[188,6,88,11,"key"],[188,9,88,11],[189,6,88,11,"value"],[189,11,88,11],[190,8,88,11],[190,12,88,11,"_post"],[190,17,88,11],[190,24,88,11,"_asyncToGenerator"],[190,41,88,11],[190,42,88,11,"default"],[190,49,88,11],[190,51,93,2],[190,62,93,22,"url"],[190,65,93,33],[190,67,93,35,"data"],[190,71,93,45],[190,73,93,59],[191,10,94,4],[191,14,94,10,"response"],[191,22,94,36],[191,31,94,45],[191,35,94,49],[191,36,94,50,"client"],[191,42,94,56],[191,43,94,57,"post"],[191,47,94,61],[191,48,94,62,"url"],[191,51,94,65],[191,53,94,67,"data"],[191,57,94,71],[191,58,94,72],[192,10,95,4],[192,17,95,11,"response"],[192,25,95,19],[192,26,95,20,"data"],[192,30,95,24],[193,8,96,2],[193,9,96,3],[194,8,96,3],[194,17,93,8,"post"],[194,21,93,12,"post"],[194,22,93,12,"_x7"],[194,25,93,12],[194,27,93,12,"_x8"],[194,30,93,12],[195,10,93,12],[195,17,93,12,"_post"],[195,22,93,12],[195,23,93,12,"apply"],[195,28,93,12],[195,35,93,12,"arguments"],[195,44,93,12],[196,8,93,12],[197,8,93,12],[197,15,93,8,"post"],[197,19,93,12],[198,6,93,12],[199,4,93,12],[200,6,93,12,"key"],[200,9,93,12],[201,6,93,12,"value"],[201,11,93,12],[202,8,93,12],[202,12,93,12,"_patch"],[202,18,93,12],[202,25,93,12,"_asyncToGenerator"],[202,42,93,12],[202,43,93,12,"default"],[202,50,93,12],[202,52,98,2],[202,63,98,23,"url"],[202,66,98,34],[202,68,98,36,"data"],[202,72,98,46],[202,74,98,60],[203,10,99,4],[203,14,99,10,"response"],[203,22,99,36],[203,31,99,45],[203,35,99,49],[203,36,99,50,"client"],[203,42,99,56],[203,43,99,57,"patch"],[203,48,99,62],[203,49,99,63,"url"],[203,52,99,66],[203,54,99,68,"data"],[203,58,99,72],[203,59,99,73],[204,10,100,4],[204,17,100,11,"response"],[204,25,100,19],[204,26,100,20,"data"],[204,30,100,24],[205,8,101,2],[205,9,101,3],[206,8,101,3],[206,17,98,8,"patch"],[206,22,98,13,"patch"],[206,23,98,13,"_x9"],[206,26,98,13],[206,28,98,13,"_x0"],[206,31,98,13],[207,10,98,13],[207,17,98,13,"_patch"],[207,23,98,13],[207,24,98,13,"apply"],[207,29,98,13],[207,36,98,13,"arguments"],[207,45,98,13],[208,8,98,13],[209,8,98,13],[209,15,98,8,"patch"],[209,20,98,13],[210,6,98,13],[211,4,98,13],[212,6,98,13,"key"],[212,9,98,13],[213,6,98,13,"value"],[213,11,98,13],[214,8,98,13],[214,12,98,13,"_delete2"],[214,20,98,13],[214,27,98,13,"_asyncToGenerator"],[214,44,98,13],[214,45,98,13,"default"],[214,52,98,13],[214,54,103,2],[214,65,103,24,"url"],[214,68,103,35],[214,70,103,49],[215,10,104,4],[215,14,104,10,"response"],[215,22,104,36],[215,31,104,45],[215,35,104,49],[215,36,104,50,"client"],[215,42,104,56],[215,43,104,57,"delete"],[215,49,104,63],[215,50,104,64,"url"],[215,53,104,67],[215,54,104,68],[216,10,105,4],[216,17,105,11,"response"],[216,25,105,19],[216,26,105,20,"data"],[216,30,105,24],[217,8,106,2],[217,9,106,3],[218,8,106,3],[218,17,103,8,"delete"],[218,24,103,14,"delete"],[218,25,103,14,"_x1"],[218,28,103,14],[219,10,103,14],[219,17,103,14,"_delete2"],[219,25,103,14],[219,26,103,14,"apply"],[219,31,103,14],[219,38,103,14,"arguments"],[219,47,103,14],[220,8,103,14],[221,8,103,14],[221,15,103,8,"delete"],[221,22,103,14],[222,6,103,14],[223,4,103,14],[224,6,103,14,"key"],[224,9,103,14],[225,6,103,14,"value"],[225,11,103,14],[226,8,103,14],[226,12,103,14,"_put"],[226,16,103,14],[226,23,103,14,"_asyncToGenerator"],[226,40,103,14],[226,41,103,14,"default"],[226,48,103,14],[226,50,108,2],[226,61,108,21,"url"],[226,64,108,32],[226,66,108,34,"data"],[226,70,108,44],[226,72,108,58],[227,10,109,4],[227,14,109,10,"response"],[227,22,109,36],[227,31,109,45],[227,35,109,49],[227,36,109,50,"client"],[227,42,109,56],[227,43,109,57,"put"],[227,46,109,60],[227,47,109,61,"url"],[227,50,109,64],[227,52,109,66,"data"],[227,56,109,70],[227,57,109,71],[228,10,110,4],[228,17,110,11,"response"],[228,25,110,19],[228,26,110,20,"data"],[228,30,110,24],[229,8,111,2],[229,9,111,3],[230,8,111,3],[230,17,108,8,"put"],[230,20,108,11,"put"],[230,21,108,11,"_x10"],[230,25,108,11],[230,27,108,11,"_x11"],[230,31,108,11],[231,10,108,11],[231,17,108,11,"_put"],[231,21,108,11],[231,22,108,11,"apply"],[231,27,108,11],[231,34,108,11,"arguments"],[231,43,108,11],[232,8,108,11],[233,8,108,11],[233,15,108,8,"put"],[233,18,108,11],[234,6,108,11],[235,4,108,11],[236,2,108,11],[237,2,114,0],[237,6,114,6,"apiClient"],[237,15,114,15],[237,18,114,18],[237,22,114,22,"ApiClient"],[237,31,114,31],[237,32,114,32],[237,33,114,33],[239,2,116,0],[240,2,117,7],[240,6,117,13,"authAPI"],[240,13,117,20],[240,16,117,23],[241,4,118,2,"createSession"],[241,17,118,15],[241,19,118,18,"sessionId"],[241,28,118,35],[241,32,119,4,"apiClient"],[241,41,119,13],[241,42,119,14,"post"],[241,46,119,18],[241,47,119,19],[241,62,119,34],[241,64,119,36],[241,68,119,40],[241,70,119,42],[242,6,120,6,"headers"],[242,13,120,13],[242,15,120,15],[243,8,120,17],[243,22,120,31],[243,24,120,33,"sessionId"],[244,6,120,43],[245,4,121,4],[245,5,121,5],[245,6,121,6],[246,4,123,2,"signup"],[246,10,123,8],[246,12,123,11,"data"],[246,16,129,3],[246,20,129,8,"apiClient"],[246,29,129,17],[246,30,129,18,"post"],[246,34,129,22],[246,35,129,23],[246,49,129,37],[246,51,129,39,"data"],[246,55,129,43],[246,56,129,44],[247,4,131,2,"verifyOTP"],[247,13,131,11],[247,15,131,14,"data"],[247,19,131,55],[247,23,132,4,"apiClient"],[247,32,132,13],[247,33,132,14,"post"],[247,37,132,18],[247,38,132,19],[247,56,132,37],[247,58,132,39,"data"],[247,62,132,43],[247,63,132,44],[248,4,134,2,"login"],[248,9,134,7],[248,11,134,10,"data"],[248,15,134,51],[248,19,135,4,"apiClient"],[248,28,135,13],[248,29,135,14,"post"],[248,33,135,18],[248,34,135,19],[248,47,135,32],[248,49,135,34,"data"],[248,53,135,38],[248,54,135,39],[249,4,137,2,"resendOTP"],[249,13,137,11],[249,15,137,14,"email"],[249,20,137,27],[249,24,138,4,"apiClient"],[249,33,138,13],[249,34,138,14,"post"],[249,38,138,18],[249,39,138,19],[249,57,138,37],[249,59,138,39],[250,6,138,41,"email"],[251,4,138,47],[251,5,138,48],[251,6,138,49],[252,4,140,2,"getCurrentUser"],[252,18,140,16],[252,20,140,18,"getCurrentUser"],[252,21,140,18],[252,26,140,24,"apiClient"],[252,35,140,33],[252,36,140,34,"get"],[252,39,140,37],[252,40,140,38],[252,50,140,48],[252,51,140,49],[253,4,142,2,"logout"],[253,10,142,8],[253,12,142,10,"logout"],[253,13,142,10],[253,18,142,16,"apiClient"],[253,27,142,25],[253,28,142,26,"post"],[253,32,142,30],[253,33,142,31],[253,47,142,45],[253,48,142,46],[254,4,144,2,"updateLanguage"],[254,18,144,16],[254,20,144,19,"language"],[254,28,144,35],[254,32,145,4,"apiClient"],[254,41,145,13],[254,42,145,14,"patch"],[254,47,145,19],[254,48,145,20],[254,64,145,36],[254,66,145,38],[254,70,145,42],[254,72,145,44],[255,6,146,6,"params"],[255,12,146,12],[255,14,146,14],[256,8,146,16,"language"],[257,6,146,25],[258,4,147,4],[258,5,147,5],[258,6,147,6],[259,4,149,2,"toggleBiometric"],[259,19,149,17],[259,21,149,20,"enabled"],[259,28,149,36],[259,32,150,4,"apiClient"],[259,41,150,13],[259,42,150,14,"patch"],[259,47,150,19],[259,48,150,20],[259,65,150,37],[259,67,150,39],[259,71,150,43],[259,73,150,45],[260,6,151,6,"params"],[260,12,151,12],[260,14,151,14],[261,8,151,16,"enabled"],[262,6,151,24],[263,4,152,4],[263,5,152,5],[264,2,153,0],[264,3,153,1],[266,2,155,0],[267,2,156,0],[267,6,156,6,"logAdminAction"],[267,20,156,20],[268,4,156,20],[268,8,156,20,"_ref2"],[268,13,156,20],[268,20,156,20,"_asyncToGenerator"],[268,37,156,20],[268,38,156,20,"default"],[268,45,156,20],[268,47,156,23],[268,58,156,30,"action"],[268,64,156,44],[268,66,156,46,"competitionName"],[268,81,156,69],[268,83,156,71,"adminName"],[268,92,156,88],[268,94,156,90,"details"],[268,101,156,103],[268,103,156,108],[269,6,157,2],[269,10,157,6],[270,8,158,4],[270,12,158,10,"logs"],[270,16,158,14],[270,19,158,17],[270,26,158,23,"CrossPlatformStorage"],[270,46,158,43],[270,47,158,44,"getItem"],[270,54,158,51],[270,55,158,52],[270,66,158,63],[270,67,158,64],[270,72,158,68],[270,76,158,72],[271,8,159,4],[271,12,159,10,"adminLogs"],[271,21,159,19],[271,24,159,22,"JSON"],[271,28,159,26],[271,29,159,27,"parse"],[271,34,159,32],[271,35,159,33,"logs"],[271,39,159,37],[271,40,159,38],[272,8,161,4],[272,12,161,10,"logEntry"],[272,20,161,18],[272,23,161,21],[273,10,162,6,"id"],[273,12,162,8],[273,14,162,10],[273,21,162,17,"Date"],[273,25,162,21],[273,26,162,22,"now"],[273,29,162,25],[273,30,162,26],[273,31,162,27],[273,33,162,29],[274,10,163,6,"action"],[274,16,163,12],[275,10,164,6,"competition_name"],[275,26,164,22],[275,28,164,24,"competitionName"],[275,43,164,39],[276,10,165,6,"admin_name"],[276,20,165,16],[276,22,165,18,"adminName"],[276,31,165,27],[277,10,166,6,"details"],[277,17,166,13],[278,10,167,6,"timestamp"],[278,19,167,15],[278,21,167,17],[278,25,167,21,"Date"],[278,29,167,25],[278,30,167,26],[278,31,167,27],[278,32,167,28,"toISOString"],[278,43,167,39],[278,44,167,40],[279,8,168,4],[279,9,168,5],[280,8,170,4,"adminLogs"],[280,17,170,13],[280,18,170,14,"push"],[280,22,170,18],[280,23,170,19,"logEntry"],[280,31,170,27],[280,32,170,28],[281,8,171,4],[281,14,171,10,"CrossPlatformStorage"],[281,34,171,30],[281,35,171,31,"setItem"],[281,42,171,38],[281,43,171,39],[281,54,171,50],[281,56,171,52,"JSON"],[281,60,171,56],[281,61,171,57,"stringify"],[281,70,171,66],[281,71,171,67,"adminLogs"],[281,80,171,76],[281,81,171,77],[281,82,171,78],[282,8,173,4,"console"],[282,15,173,11],[282,16,173,12,"log"],[282,19,173,15],[282,20,173,16],[282,45,173,41],[282,47,173,43,"action"],[282,53,173,49],[282,55,173,51,"competitionName"],[282,70,173,66],[282,71,173,67],[283,6,174,2],[283,7,174,3],[283,8,174,4],[283,15,174,11,"error"],[283,20,174,16],[283,22,174,18],[284,8,175,4,"console"],[284,15,175,11],[284,16,175,12,"error"],[284,21,175,17],[284,22,175,18],[284,51,175,47],[284,53,175,49,"error"],[284,58,175,54],[284,59,175,55],[285,6,176,2],[286,4,177,0],[286,5,177,1],[287,4,177,1],[287,20,156,6,"logAdminAction"],[287,34,156,20,"logAdminAction"],[287,35,156,20,"_x12"],[287,39,156,20],[287,41,156,20,"_x13"],[287,45,156,20],[287,47,156,20,"_x14"],[287,51,156,20],[287,53,156,20,"_x15"],[287,57,156,20],[288,6,156,20],[288,13,156,20,"_ref2"],[288,18,156,20],[288,19,156,20,"apply"],[288,24,156,20],[288,31,156,20,"arguments"],[288,40,156,20],[289,4,156,20],[290,2,156,20],[290,5,177,1],[292,2,179,0],[293,2,180,7],[293,6,180,13,"competitionAPI"],[293,20,180,27],[293,23,180,30],[294,4,181,2,"create"],[294,10,181,8],[294,12,181,11,"data"],[294,16,196,3],[294,20,196,8,"apiClient"],[294,29,196,17],[294,30,196,18,"post"],[294,34,196,22],[294,35,196,23],[294,50,196,38],[294,52,196,40,"data"],[294,56,196,44],[294,57,196,45],[295,4,198,2,"join"],[295,8,198,6],[295,10,198,9,"inviteCode"],[295,20,198,27],[295,24,199,4,"apiClient"],[295,33,199,13],[295,34,199,14,"post"],[295,38,199,18],[295,39,199,19],[295,59,199,39],[295,61,199,41],[296,6,199,43,"invite_code"],[296,17,199,54],[296,19,199,56,"inviteCode"],[297,4,199,67],[297,5,199,68],[297,6,199,69],[298,4,201,2,"getMyCompetitions"],[298,21,201,19],[298,23,201,21,"getMyCompetitions"],[298,24,201,21],[298,29,201,27,"apiClient"],[298,38,201,36],[298,39,201,37,"get"],[298,42,201,40],[298,43,201,41],[298,61,201,59],[298,62,201,60],[299,4,203,2,"getCompetition"],[299,18,203,16],[299,20,203,19,"id"],[299,22,203,29],[299,26,203,34,"apiClient"],[299,35,203,43],[299,36,203,44,"get"],[299,39,203,47],[299,40,203,48],[299,57,203,65,"id"],[299,59,203,67],[299,61,203,69],[299,62,203,70],[300,4,205,2,"updateStandings"],[300,19,205,17],[300,21,205,19,"updateStandings"],[300,22,206,4,"id"],[300,24,206,14],[300,26,207,4,"standings"],[300,35,207,18],[300,37,208,4,"matchday"],[300,45,208,21],[300,50,210,4,"apiClient"],[300,59,210,13],[300,60,210,14,"patch"],[300,65,210,19],[300,66,210,20],[300,83,210,37,"id"],[300,85,210,39],[300,97,210,51],[300,99,210,53],[301,6,211,6,"standings"],[301,15,211,15],[302,6,212,6,"matchday"],[303,4,213,4],[303,5,213,5],[303,6,213,6],[304,4,215,2,"payFee"],[304,10,215,8],[304,12,215,10,"payFee"],[304,13,215,11,"id"],[304,15,215,21],[304,17,215,23,"amount"],[304,23,215,37],[304,28,216,4,"apiClient"],[304,37,216,13],[304,38,216,14,"post"],[304,42,216,18],[304,43,216,19],[304,60,216,36,"id"],[304,62,216,38],[304,68,216,44],[304,70,216,46],[304,74,216,50],[304,76,216,52],[305,6,217,6,"params"],[305,12,217,12],[305,14,217,14],[306,8,217,16,"amount"],[307,6,217,23],[308,4,218,4],[308,5,218,5],[308,6,218,6],[309,4,220,2,"getTransactions"],[309,19,220,17],[309,21,220,20,"id"],[309,23,220,30],[309,27,221,4,"apiClient"],[309,36,221,13],[309,37,221,14,"get"],[309,40,221,17],[309,41,221,18],[309,58,221,35,"id"],[309,60,221,37],[309,75,221,52],[309,76,221,53],[310,4,223,2],[311,4,224,2,"payMatchdays"],[311,16,224,14],[311,18,224,16,"payMatchdays"],[311,19,224,17,"competitionId"],[311,32,224,38],[311,34,224,40,"matchdays"],[311,43,224,59],[311,48,225,4,"apiClient"],[311,57,225,13],[311,58,225,14,"post"],[311,62,225,18],[311,63,225,19],[311,80,225,36,"competitionId"],[311,93,225,49],[311,113,225,69],[311,115,225,71],[312,6,226,6,"competition_id"],[312,20,226,20],[312,22,226,22,"competitionId"],[312,35,226,35],[313,6,227,6,"matchdays"],[314,4,228,4],[314,5,228,5],[314,6,228,6],[315,4,230,2,"getMatchdayPayments"],[315,23,230,21],[315,25,230,24,"competitionId"],[315,38,230,45],[315,42,231,4,"apiClient"],[315,51,231,13],[315,52,231,14,"get"],[315,55,231,17],[315,56,231,18],[315,73,231,35,"competitionId"],[315,86,231,48],[315,106,231,68],[315,107,231,69],[316,4,233,2,"getPaymentStatusTable"],[316,25,233,23],[316,27,233,26,"competitionId"],[316,40,233,47],[316,44,234,4,"apiClient"],[316,53,234,13],[316,54,234,14,"get"],[316,57,234,17],[316,58,234,18],[316,75,234,35,"competitionId"],[316,88,234,48],[316,111,234,71],[316,112,234,72],[317,4,236,2],[318,4,237,2,"createMock"],[318,14,237,12],[319,6,237,12],[319,10,237,12,"_ref3"],[319,15,237,12],[319,22,237,12,"_asyncToGenerator"],[319,39,237,12],[319,40,237,12,"default"],[319,47,237,12],[319,49,237,14],[319,60,237,21,"data"],[319,64,250,3],[319,66,250,8],[320,8,251,4,"console"],[320,15,251,11],[320,16,251,12,"log"],[320,19,251,15],[320,20,251,16],[320,52,251,48],[320,54,251,50,"data"],[320,58,251,54],[320,59,251,55,"name"],[320,63,251,59],[320,64,251,60],[321,8,252,4,"console"],[321,15,252,11],[321,16,252,12,"log"],[321,19,252,15],[321,20,252,16],[321,41,252,37],[321,43,252,39,"data"],[321,47,252,43],[321,48,252,44,"total_matchdays"],[321,63,252,59],[321,67,252,63],[321,69,252,65],[321,70,252,66],[323,8,254,4],[324,8,255,4],[324,12,255,10,"storedCompetitions"],[324,30,255,28],[324,39,255,37,"CrossPlatformStorage"],[324,59,255,57],[324,60,255,58,"getItem"],[324,67,255,65],[324,68,255,66],[324,87,255,85],[324,88,255,86],[325,8,256,4],[325,12,256,8,"existingCompetitions"],[325,32,256,28],[325,35,256,31,"storedCompetitions"],[325,53,256,49],[325,56,256,52,"JSON"],[325,60,256,56],[325,61,256,57,"parse"],[325,66,256,62],[325,67,256,63,"storedCompetitions"],[325,85,256,81],[325,86,256,82],[325,89,256,85],[325,91,256,87],[326,8,258,4,"console"],[326,15,258,11],[326,16,258,12,"log"],[326,19,258,15],[326,20,258,16],[326,62,258,58],[326,64,258,60,"existingCompetitions"],[326,84,258,80],[326,85,258,81,"length"],[326,91,258,87],[326,92,258,88],[328,8,260,4],[329,8,261,4],[329,12,261,10,"existingNames"],[329,25,261,23],[329,28,261,26,"existingCompetitions"],[329,48,261,46],[329,49,261,47,"map"],[329,52,261,50],[329,53,261,52,"comp"],[329,57,261,61],[329,61,261,66,"comp"],[329,65,261,70],[329,66,261,71,"name"],[329,70,261,75],[329,71,261,76,"toLowerCase"],[329,82,261,87],[329,83,261,88],[329,84,261,89],[329,85,261,90],[330,8,262,4],[330,12,262,8,"existingNames"],[330,25,262,21],[330,26,262,22,"includes"],[330,34,262,30],[330,35,262,31,"data"],[330,39,262,35],[330,40,262,36,"name"],[330,44,262,40],[330,45,262,41,"toLowerCase"],[330,56,262,52],[330,57,262,53],[330,58,262,54],[330,59,262,55],[330,61,262,57],[331,10,263,6],[331,16,263,12],[331,20,263,16,"Error"],[331,25,263,21],[331,26,263,22],[331,88,263,84],[331,89,263,85],[332,8,264,4],[334,8,266,4],[335,8,267,4],[336,8,268,4],[336,12,268,8,"inviteCode"],[336,22,268,18],[336,25,268,21,"data"],[336,29,268,25],[336,30,268,26,"name"],[336,34,268,30],[336,35,268,31,"replace"],[336,42,268,38],[336,43,268,39],[336,49,268,45],[336,51,268,47],[336,53,268,49],[336,54,268,50],[336,55,268,51,"substring"],[336,64,268,60],[336,65,268,61],[336,66,268,62],[336,68,268,64],[336,69,268,65],[336,70,268,66],[336,71,268,67,"toUpperCase"],[336,82,268,78],[336,83,268,79],[336,84,268,80],[338,8,270,4],[339,8,271,4],[339,12,271,8,"uniqueCode"],[339,22,271,18],[339,25,271,21,"inviteCode"],[339,35,271,31],[340,8,272,4],[340,12,272,8,"counter"],[340,19,272,15],[340,22,272,18],[340,23,272,19],[341,8,273,4],[341,15,273,11,"existingCompetitions"],[341,35,273,31],[341,36,273,32,"some"],[341,40,273,36],[341,41,273,38,"comp"],[341,45,273,47],[341,49,273,52,"comp"],[341,53,273,56],[341,54,273,57,"invite_code"],[341,65,273,68],[341,70,273,73,"uniqueCode"],[341,80,273,83],[341,81,273,84],[341,83,273,86],[342,10,274,6,"uniqueCode"],[342,20,274,16],[342,23,274,19,"inviteCode"],[342,33,274,29],[342,36,274,32,"counter"],[342,43,274,39],[342,44,274,40,"toString"],[342,52,274,48],[342,53,274,49],[342,54,274,50],[342,55,274,51,"padStart"],[342,63,274,59],[342,64,274,60],[342,65,274,61],[342,67,274,63],[342,70,274,66],[342,71,274,67],[343,10,275,6,"counter"],[343,17,275,13],[343,19,275,15],[344,8,276,4],[345,8,278,4],[345,12,278,10,"newCompetition"],[345,26,278,24],[345,29,278,27],[346,10,279,6,"_id"],[346,13,279,9],[346,15,279,11],[346,23,279,19,"Date"],[346,27,279,23],[346,28,279,24,"now"],[346,31,279,27],[346,32,279,28],[346,33,279,29],[346,35,279,31],[347,10,280,6,"name"],[347,14,280,10],[347,16,280,12,"data"],[347,20,280,16],[347,21,280,17,"name"],[347,25,280,21],[348,10,281,6,"total_matchdays"],[348,25,281,21],[348,27,281,23,"data"],[348,31,281,27],[348,32,281,28,"total_matchdays"],[348,47,281,43],[348,51,281,47],[348,53,281,49],[349,10,282,6,"participation_cost_per_team"],[349,37,282,33],[349,39,282,35,"data"],[349,43,282,39],[349,44,282,40,"participation_cost_per_team"],[349,71,282,67],[349,75,282,71],[349,80,282,76],[350,10,283,6,"expected_teams"],[350,24,283,20],[350,26,283,22,"data"],[350,30,283,26],[350,31,283,27,"expected_teams"],[350,45,283,41],[350,49,283,45],[350,50,283,46],[351,10,284,6,"total_prize_pool"],[351,26,284,22],[351,28,284,24,"data"],[351,32,284,28],[351,33,284,29,"total_prize_pool"],[351,49,284,45],[351,53,284,49],[351,59,284,55],[352,10,285,6,"daily_payment_enabled"],[352,31,285,27],[352,33,285,29,"data"],[352,37,285,33],[352,38,285,34,"daily_payment_enabled"],[352,59,285,55],[352,63,285,59],[352,68,285,64],[353,10,286,6,"daily_payment_amount"],[353,30,286,26],[353,32,286,28,"data"],[353,36,286,32],[353,37,286,33,"daily_payment_amount"],[353,57,286,53],[353,61,286,57],[353,64,286,60],[354,10,287,6,"rules"],[354,15,287,11],[354,17,287,13,"data"],[354,21,287,17],[354,22,287,18,"rules"],[354,27,287,23],[355,10,288,6,"invite_code"],[355,21,288,17],[355,23,288,19,"uniqueCode"],[355,33,288,29],[356,10,288,31],[357,10,289,6,"invite_link"],[357,21,289,17],[357,23,289,19],[357,52,289,48,"uniqueCode"],[357,62,289,58],[357,64,289,60],[358,10,290,6,"admin_id"],[358,18,290,14],[358,20,290,16],[358,46,290,42],[359,10,290,44],[360,10,291,6,"participants"],[360,22,291,18],[360,24,291,20],[360,25,292,8],[361,12,293,10,"id"],[361,14,293,12],[361,16,293,14],[361,42,293,40],[362,12,294,10,"name"],[362,16,294,14],[362,18,294,16],[362,35,294,33],[363,12,295,10,"email"],[363,17,295,15],[363,19,295,17],[363,38,295,36],[364,12,296,10,"is_admin"],[364,20,296,18],[364,22,296,20],[364,26,296,24],[365,12,297,10,"paid_matchdays"],[365,26,297,24],[365,28,297,26],[365,29,297,27],[365,30,297,28],[365,32,297,30],[365,33,297,31],[365,34,297,32],[366,12,297,34],[367,12,298,10,"points"],[367,18,298,16],[367,20,298,18],[368,10,299,8],[368,11,299,9],[368,12,300,7],[369,10,301,6,"wallet_balance"],[369,24,301,20],[369,26,301,22],[369,27,301,23],[370,10,302,6,"is_active"],[370,19,302,15],[370,21,302,17],[370,25,302,21],[371,10,303,6,"current_matchday"],[371,26,303,22],[371,28,303,24],[371,29,303,25],[372,10,303,27],[373,10,304,6,"standings"],[373,19,304,15],[373,21,304,17],[373,22,305,8],[374,12,305,10,"position"],[374,20,305,18],[374,22,305,20],[374,23,305,21],[375,12,305,23,"player_id"],[375,21,305,32],[375,23,305,34],[375,49,305,60],[376,12,305,62,"name"],[376,16,305,66],[376,18,305,68],[376,35,305,85],[377,12,305,87,"points"],[377,18,305,93],[377,20,305,95],[378,10,305,97],[378,11,305,98],[378,12,306,7],[379,10,307,6,"created_at"],[379,20,307,16],[379,22,307,18],[379,26,307,22,"Date"],[379,30,307,26],[379,31,307,27],[379,32,307,28],[379,33,307,29,"toISOString"],[379,44,307,40],[379,45,307,41],[379,46,307,42],[380,10,308,6,"updated_at"],[380,20,308,16],[380,22,308,18],[380,26,308,22,"Date"],[380,30,308,26],[380,31,308,27],[380,32,308,28],[380,33,308,29,"toISOString"],[380,44,308,40],[380,45,308,41],[381,8,309,4],[381,9,309,5],[383,8,311,4],[384,8,312,4,"existingCompetitions"],[384,28,312,24],[384,29,312,25,"push"],[384,33,312,29],[384,34,312,30,"newCompetition"],[384,48,312,44],[384,49,312,45],[385,8,313,4],[385,14,313,10,"CrossPlatformStorage"],[385,34,313,30],[385,35,313,31,"setItem"],[385,42,313,38],[385,43,313,39],[385,62,313,58],[385,64,313,60,"JSON"],[385,68,313,64],[385,69,313,65,"stringify"],[385,78,313,74],[385,79,313,75,"existingCompetitions"],[385,99,313,95],[385,100,313,96],[385,101,313,97],[386,8,315,4,"console"],[386,15,315,11],[386,16,315,12,"log"],[386,19,315,15],[386,20,315,16],[386,73,315,69],[386,75,315,71,"existingCompetitions"],[386,95,315,91],[386,96,315,92,"length"],[386,102,315,98],[386,103,315,99],[388,8,317,4],[389,8,318,4],[389,14,318,10,"logAdminAction"],[389,28,318,24],[389,29,318,25],[389,37,318,33],[389,39,318,35,"newCompetition"],[389,53,318,49],[389,54,318,50,"name"],[389,58,318,54],[389,60,318,56],[389,77,318,73],[389,79,318,75],[390,10,319,6,"competition_id"],[390,24,319,20],[390,26,319,22,"newCompetition"],[390,40,319,36],[390,41,319,37,"_id"],[390,44,319,40],[391,10,320,6,"rules"],[391,15,320,11],[391,17,320,13,"newCompetition"],[391,31,320,27],[391,32,320,28,"rules"],[391,37,320,33],[392,10,321,6,"total_matchdays"],[392,25,321,21],[392,27,321,23,"newCompetition"],[392,41,321,37],[392,42,321,38,"total_matchdays"],[392,57,321,53],[393,10,322,6,"participation_cost_per_team"],[393,37,322,33],[393,39,322,35,"newCompetition"],[393,53,322,49],[393,54,322,50,"participation_cost_per_team"],[393,81,322,77],[394,10,323,6,"expected_teams"],[394,24,323,20],[394,26,323,22,"newCompetition"],[394,40,323,36],[394,41,323,37,"expected_teams"],[394,55,323,51],[395,10,324,6,"total_prize_pool"],[395,26,324,22],[395,28,324,24,"newCompetition"],[395,42,324,38],[395,43,324,39,"total_prize_pool"],[395,59,324,55],[396,10,325,6,"daily_payment_enabled"],[396,31,325,27],[396,33,325,29,"newCompetition"],[396,47,325,43],[396,48,325,44,"daily_payment_enabled"],[396,69,325,65],[397,10,326,6,"daily_payment_amount"],[397,30,326,26],[397,32,326,28,"newCompetition"],[397,46,326,42],[397,47,326,43,"daily_payment_amount"],[398,8,327,4],[398,9,327,5],[398,10,327,6],[399,8,329,4,"console"],[399,15,329,11],[399,16,329,12,"log"],[399,19,329,15],[399,20,329,16],[399,49,329,45],[399,51,329,47,"newCompetition"],[399,65,329,61],[399,66,329,62,"name"],[399,70,329,66],[399,71,329,67],[400,8,330,4,"console"],[400,15,330,11],[400,16,330,12,"log"],[400,19,330,15],[400,20,330,16],[400,42,330,38],[400,44,330,40,"newCompetition"],[400,58,330,54],[400,59,330,55,"name"],[400,63,330,59],[400,64,330,60],[401,8,331,4,"console"],[401,15,331,11],[401,16,331,12,"log"],[401,19,331,15],[401,20,331,16],[401,39,331,35],[401,41,331,37,"newCompetition"],[401,55,331,51],[401,56,331,52,"daily_payment_enabled"],[401,77,331,73],[401,80,331,76],[401,84,331,80,"newCompetition"],[401,98,331,94],[401,99,331,95,"daily_payment_amount"],[401,119,331,115],[401,134,331,130],[401,137,331,133],[401,147,331,143],[401,148,331,144],[402,8,332,4,"console"],[402,15,332,11],[402,16,332,12,"log"],[402,19,332,15],[402,20,332,16],[402,42,332,38],[402,44,332,40],[402,48,332,44,"newCompetition"],[402,62,332,58],[402,63,332,59,"total_prize_pool"],[402,79,332,75],[402,81,332,77],[402,82,332,78],[403,8,333,4,"console"],[403,15,333,11],[403,16,333,12,"log"],[403,19,333,15],[403,20,333,16],[403,37,333,33],[403,39,333,35,"newCompetition"],[403,53,333,49],[403,54,333,50,"invite_code"],[403,65,333,61],[403,66,333,62],[404,8,335,4],[404,15,335,11],[405,10,335,13,"data"],[405,14,335,17],[405,16,335,19,"newCompetition"],[406,8,335,34],[406,9,335,35],[407,6,336,2],[407,7,336,3],[408,6,336,3],[408,22,237,2,"createMock"],[408,32,237,12,"createMock"],[408,33,237,12,"_x16"],[408,37,237,12],[409,8,237,12],[409,15,237,12,"_ref3"],[409,20,237,12],[409,21,237,12,"apply"],[409,26,237,12],[409,33,237,12,"arguments"],[409,42,237,12],[410,6,237,12],[411,4,237,12],[411,7,336,3],[412,4,338,2],[413,4,339,2,"payMatchdaysMock"],[413,20,339,18],[414,6,339,18],[414,10,339,18,"_ref4"],[414,15,339,18],[414,22,339,18,"_asyncToGenerator"],[414,39,339,18],[414,40,339,18,"default"],[414,47,339,18],[414,49,339,20],[414,60,339,27,"competitionId"],[414,73,339,48],[414,75,339,50,"matchdays"],[414,84,339,69],[414,86,339,74],[415,8,340,4,"console"],[415,15,340,11],[415,16,340,12,"log"],[415,19,340,15],[415,20,340,16],[415,51,340,47],[415,53,340,49,"matchdays"],[415,62,340,58],[415,64,340,60],[415,80,340,76],[415,82,340,78,"competitionId"],[415,95,340,91],[415,96,340,92],[417,8,342,4],[418,8,343,4],[418,12,343,10,"totalCost"],[418,21,343,19],[418,24,343,22,"matchdays"],[418,33,343,31],[418,34,343,32,"length"],[418,40,343,38],[418,43,343,41],[418,44,343,42],[418,45,343,43],[418,46,343,44],[420,8,345,4],[421,8,346,4],[421,15,346,11],[422,10,347,6,"data"],[422,14,347,10],[422,16,347,12],[423,12,348,8,"message"],[423,19,348,15],[423,21,348,17],[423,46,348,42,"matchdays"],[423,55,348,51],[423,56,348,52,"length"],[423,62,348,58],[423,74,348,70],[424,12,349,8,"paid_matchdays"],[424,26,349,22],[424,28,349,24,"matchdays"],[424,37,349,33],[425,12,350,8,"total_cost"],[425,22,350,18],[425,24,350,20,"totalCost"],[425,33,350,29],[426,12,351,8,"new_user_balance"],[426,28,351,24],[426,30,351,26],[426,33,351,29],[426,36,351,32,"totalCost"],[426,45,351,41],[426,46,351,42],[427,10,352,6],[428,8,353,4],[428,9,353,5],[429,6,354,2],[429,7,354,3],[430,6,354,3],[430,22,339,2,"payMatchdaysMock"],[430,38,339,18,"payMatchdaysMock"],[430,39,339,18,"_x17"],[430,43,339,18],[430,45,339,18,"_x18"],[430,49,339,18],[431,8,339,18],[431,15,339,18,"_ref4"],[431,20,339,18],[431,21,339,18,"apply"],[431,26,339,18],[431,33,339,18,"arguments"],[431,42,339,18],[432,6,339,18],[433,4,339,18],[433,7,354,3],[434,4,356,2,"getMatchdayPaymentsMock"],[434,27,356,25],[435,6,356,25],[435,10,356,25,"_ref5"],[435,15,356,25],[435,22,356,25,"_asyncToGenerator"],[435,39,356,25],[435,40,356,25,"default"],[435,47,356,25],[435,49,356,27],[435,60,356,34,"competitionId"],[435,73,356,55],[435,75,356,60],[436,8,357,4,"console"],[436,15,357,11],[436,16,357,12,"log"],[436,19,357,15],[436,20,357,16],[436,72,357,68],[436,74,357,70,"competitionId"],[436,87,357,83],[436,88,357,84],[438,8,359,4],[439,8,360,4],[439,12,360,10,"mockPayments"],[439,24,360,22],[439,27,360,25],[439,29,360,27],[440,8,361,4],[440,13,361,9],[440,17,361,13,"i"],[440,18,361,14],[440,21,361,17],[440,22,361,18],[440,24,361,20,"i"],[440,25,361,21],[440,29,361,25],[440,31,361,27],[440,33,361,29,"i"],[440,34,361,30],[440,36,361,32],[440,38,361,34],[441,10,362,6,"mockPayments"],[441,22,362,18],[441,23,362,19,"push"],[441,27,362,23],[441,28,362,24],[442,12,363,8,"_id"],[442,15,363,11],[442,17,363,13],[442,28,363,24,"i"],[442,29,363,25],[442,31,363,27],[443,12,364,8,"user_id"],[443,19,364,15],[443,21,364,17],[443,47,364,43],[444,12,365,8,"competition_id"],[444,26,365,22],[444,28,365,24,"competitionId"],[444,41,365,37],[445,12,366,8,"matchday"],[445,20,366,16],[445,22,366,18,"i"],[445,23,366,19],[446,12,367,8,"amount"],[446,18,367,14],[446,20,367,16],[446,21,367,17],[447,12,368,8,"status"],[447,18,368,14],[447,20,368,16,"i"],[447,21,368,17],[447,25,368,21],[447,26,368,22],[447,29,368,25],[447,35,368,31],[447,38,368,34],[447,47,368,43],[448,12,369,8,"paid_at"],[448,19,369,15],[448,21,369,17,"i"],[448,22,369,18],[448,26,369,22],[448,27,369,23],[448,30,369,26],[448,34,369,30,"Date"],[448,38,369,34],[448,39,369,35],[448,40,369,36],[448,41,369,37,"toISOString"],[448,52,369,48],[448,53,369,49],[448,54,369,50],[448,57,369,53],[448,61,369,57],[449,12,370,8,"created_at"],[449,22,370,18],[449,24,370,20],[449,28,370,24,"Date"],[449,32,370,28],[449,33,370,29],[449,34,370,30],[449,35,370,31,"toISOString"],[449,46,370,42],[449,47,370,43],[450,10,371,6],[450,11,371,7],[450,12,371,8],[451,8,372,4],[452,8,374,4],[452,15,374,11],[453,10,375,6,"data"],[453,14,375,10],[453,16,375,12],[454,12,376,8,"competition_id"],[454,26,376,22],[454,28,376,24,"competitionId"],[454,41,376,37],[455,12,377,8,"daily_payment_enabled"],[455,33,377,29],[455,35,377,31],[455,39,377,35],[456,12,378,8,"daily_payment_amount"],[456,32,378,28],[456,34,378,30],[456,35,378,31],[457,12,379,8,"total_matchdays"],[457,27,379,23],[457,29,379,25],[457,31,379,27],[458,12,380,8,"payments"],[458,20,380,16],[458,22,380,18,"mockPayments"],[459,10,381,6],[460,8,382,4],[460,9,382,5],[461,6,383,2],[461,7,383,3],[462,6,383,3],[462,22,356,2,"getMatchdayPaymentsMock"],[462,45,356,25,"getMatchdayPaymentsMock"],[462,46,356,25,"_x19"],[462,50,356,25],[463,8,356,25],[463,15,356,25,"_ref5"],[463,20,356,25],[463,21,356,25,"apply"],[463,26,356,25],[463,33,356,25,"arguments"],[463,42,356,25],[464,6,356,25],[465,4,356,25],[465,7,383,3],[466,4,385,2,"getPaymentStatusTableMock"],[466,29,385,27],[467,6,385,27],[467,10,385,27,"_ref6"],[467,15,385,27],[467,22,385,27,"_asyncToGenerator"],[467,39,385,27],[467,40,385,27,"default"],[467,47,385,27],[467,49,385,29],[467,60,385,36,"competitionId"],[467,73,385,57],[467,75,385,62],[468,8,386,4,"console"],[468,15,386,11],[468,16,386,12,"log"],[468,19,386,15],[468,20,386,16],[468,75,386,71],[468,77,386,73,"competitionId"],[468,90,386,86],[468,91,386,87],[470,8,388,4],[471,8,389,4],[471,12,389,10,"mockTable"],[471,21,389,19],[471,24,389,22],[471,25,389,23],[472,10,390,6,"user_id"],[472,17,390,13],[472,19,390,15],[472,45,390,41],[473,10,391,6,"username"],[473,18,391,14],[473,20,391,16],[473,37,391,33],[474,10,392,6,"name"],[474,14,392,10],[474,16,392,12],[474,33,392,29],[475,10,393,6,"email"],[475,15,393,11],[475,17,393,13],[475,36,393,32],[476,10,394,6,"matchday_payments"],[476,27,394,23],[476,29,394,25,"Array"],[476,34,394,30],[476,35,394,31,"from"],[476,39,394,35],[476,40,394,36],[477,12,394,37,"length"],[477,18,394,43],[477,20,394,45],[478,10,394,47],[478,11,394,48],[478,13,394,50],[478,14,394,51,"_"],[478,15,394,52],[478,17,394,54,"i"],[478,18,394,55],[478,24,394,61],[479,12,395,8,"matchday"],[479,20,395,16],[479,22,395,18,"i"],[479,23,395,19],[479,26,395,22],[479,27,395,23],[480,12,396,8,"status"],[480,18,396,14],[480,20,396,17,"i"],[480,21,396,18],[480,24,396,21],[480,25,396,22],[480,28,396,25],[480,34,396,31],[480,37,396,34],[480,46,396,44],[481,12,397,8,"amount"],[481,18,397,14],[481,20,397,16],[481,21,397,17],[482,12,398,8,"paid_at"],[482,19,398,15],[482,21,398,17,"i"],[482,22,398,18],[482,25,398,21],[482,26,398,22],[482,29,398,25],[482,33,398,29,"Date"],[482,37,398,33],[482,38,398,34],[482,39,398,35],[482,40,398,36,"toISOString"],[482,51,398,47],[482,52,398,48],[482,53,398,49],[482,56,398,52],[483,10,399,6],[483,11,399,7],[483,12,399,8],[484,8,400,4],[484,9,400,5],[484,10,400,6],[485,8,402,4],[485,15,402,11],[486,10,403,6,"data"],[486,14,403,10],[486,16,403,12],[487,12,404,8,"competition_name"],[487,28,404,24],[487,30,404,26],[487,51,404,47],[488,12,405,8,"total_matchdays"],[488,27,405,23],[488,29,405,25],[488,31,405,27],[489,12,406,8,"daily_payment_amount"],[489,32,406,28],[489,34,406,30],[489,35,406,31],[490,12,407,8,"participants"],[490,24,407,20],[490,26,407,22,"mockTable"],[491,10,408,6],[492,8,409,4],[492,9,409,5],[493,6,410,2],[493,7,410,3],[494,6,410,3],[494,22,385,2,"getPaymentStatusTableMock"],[494,47,385,27,"getPaymentStatusTableMock"],[494,48,385,27,"_x20"],[494,52,385,27],[495,8,385,27],[495,15,385,27,"_ref6"],[495,20,385,27],[495,21,385,27,"apply"],[495,26,385,27],[495,33,385,27,"arguments"],[495,42,385,27],[496,6,385,27],[497,4,385,27],[497,7,410,3],[498,4,412,2],[499,4,413,2,"validateNameMock"],[499,20,413,18],[500,6,413,18],[500,10,413,18,"_ref7"],[500,15,413,18],[500,22,413,18,"_asyncToGenerator"],[500,39,413,18],[500,40,413,18,"default"],[500,47,413,18],[500,49,413,20],[500,60,413,27,"name"],[500,64,413,39],[500,66,413,44],[501,8,414,4,"console"],[501,15,414,11],[501,16,414,12,"log"],[501,19,414,15],[501,20,414,16],[501,59,414,55],[501,61,414,57,"name"],[501,65,414,61],[501,66,414,62],[502,8,416,4],[502,12,416,8],[502,13,416,9,"name"],[502,17,416,13],[502,18,416,14,"trim"],[502,22,416,18],[502,23,416,19],[502,24,416,20],[502,26,416,22],[503,10,417,6],[503,17,417,13],[504,12,417,15,"available"],[504,21,417,24],[504,23,417,26],[504,27,417,30],[505,12,417,32,"message"],[505,19,417,39],[505,21,417,41],[506,10,417,44],[506,11,417,45],[507,8,418,4],[509,8,420,4],[510,8,421,4],[510,12,421,10,"storedCompetitions"],[510,30,421,28],[510,39,421,37,"CrossPlatformStorage"],[510,59,421,57],[510,60,421,58,"getItem"],[510,67,421,65],[510,68,421,66],[510,86,421,84],[510,87,421,85],[511,8,422,4],[511,12,422,8,"existingCompetitions"],[511,32,422,28],[511,35,422,31,"storedCompetitions"],[511,53,422,49],[511,56,422,52,"JSON"],[511,60,422,56],[511,61,422,57,"parse"],[511,66,422,62],[511,67,422,63,"storedCompetitions"],[511,85,422,81],[511,86,422,82],[511,89,422,85],[511,91,422,87],[513,8,424,4],[514,8,425,4],[514,12,425,10,"defaultNames"],[514,24,425,22],[514,27,425,25],[514,28,425,26],[514,50,425,48],[514,52,425,50],[514,78,425,76],[514,80,425,78],[514,96,425,94],[514,97,425,95],[515,8,426,4],[515,12,426,10,"allNames"],[515,20,426,18],[515,23,426,21],[515,24,427,6],[515,27,427,9,"existingCompetitions"],[515,47,427,29],[515,48,427,30,"map"],[515,51,427,33],[515,52,427,35,"comp"],[515,56,427,44],[515,60,427,49,"comp"],[515,64,427,53],[515,65,427,54,"name"],[515,69,427,58],[515,70,427,59,"toLowerCase"],[515,81,427,70],[515,82,427,71],[515,83,427,72],[515,84,427,73],[515,86,428,6],[515,89,428,9,"defaultNames"],[515,101,428,21],[515,102,428,22,"map"],[515,105,428,25],[515,106,428,26,"name"],[515,110,428,30],[515,114,428,34,"name"],[515,118,428,38],[515,119,428,39,"toLowerCase"],[515,130,428,50],[515,131,428,51],[515,132,428,52],[515,133,428,53],[515,134,429,5],[516,8,431,4],[516,12,431,10,"isAvailable"],[516,23,431,21],[516,26,431,24],[516,27,431,25,"allNames"],[516,35,431,33],[516,36,431,34,"includes"],[516,44,431,42],[516,45,431,43,"name"],[516,49,431,47],[516,50,431,48,"toLowerCase"],[516,61,431,59],[516,62,431,60],[516,63,431,61],[516,64,431,62],[517,8,433,4],[517,15,433,11],[518,10,434,6,"available"],[518,19,434,15],[518,21,434,17,"isAvailable"],[518,32,434,28],[519,10,435,6,"message"],[519,17,435,13],[519,19,435,15,"isAvailable"],[519,30,435,26],[519,33,435,29],[519,49,435,45],[519,52,435,48],[520,8,436,4],[520,9,436,5],[521,6,437,2],[521,7,437,3],[522,6,437,3],[522,22,413,2,"validateNameMock"],[522,38,413,18,"validateNameMock"],[522,39,413,18,"_x21"],[522,43,413,18],[523,8,413,18],[523,15,413,18,"_ref7"],[523,20,413,18],[523,21,413,18,"apply"],[523,26,413,18],[523,33,413,18,"arguments"],[523,42,413,18],[524,6,413,18],[525,4,413,18],[525,7,437,3],[526,4,439,2],[527,4,440,2,"getMyCompetitionsMock"],[527,25,440,23],[528,6,440,23],[528,10,440,23,"_ref8"],[528,15,440,23],[528,22,440,23,"_asyncToGenerator"],[528,39,440,23],[528,40,440,23,"default"],[528,47,440,23],[528,49,440,25],[528,62,440,37],[529,8,441,4,"console"],[529,15,441,11],[529,16,441,12,"log"],[529,19,441,15],[529,20,441,16],[529,54,441,50],[529,55,441,51],[530,8,442,4],[530,12,442,10,"storedCompetitions"],[530,30,442,28],[530,39,442,37,"CrossPlatformStorage"],[530,59,442,57],[530,60,442,58,"getItem"],[530,67,442,65],[530,68,442,66],[530,87,442,85],[530,88,442,86],[531,8,444,4],[531,12,444,8,"storedCompetitions"],[531,30,444,26],[531,32,444,28],[532,10,445,6],[532,14,445,12,"competitions"],[532,26,445,24],[532,29,445,27,"JSON"],[532,33,445,31],[532,34,445,32,"parse"],[532,39,445,37],[532,40,445,38,"storedCompetitions"],[532,58,445,56],[532,59,445,57],[533,10,446,6,"console"],[533,17,446,13],[533,18,446,14,"log"],[533,21,446,17],[533,22,446,18],[533,57,446,53],[533,59,446,55,"competitions"],[533,71,446,67],[533,72,446,68,"length"],[533,78,446,74],[533,79,446,75],[534,10,448,6,"competitions"],[534,22,448,18],[534,23,448,19,"forEach"],[534,30,448,26],[534,31,448,27],[534,32,448,28,"comp"],[534,36,448,37],[534,38,448,39,"index"],[534,43,448,52],[534,48,448,57],[535,12,449,8,"console"],[535,19,449,15],[535,20,449,16,"log"],[535,23,449,19],[535,24,449,20],[535,27,449,23,"index"],[535,32,449,28],[535,35,449,31],[535,36,449,32],[535,41,449,37,"comp"],[535,45,449,41],[535,46,449,42,"name"],[535,50,449,46],[535,59,449,55,"comp"],[535,63,449,59],[535,64,449,60,"_id"],[535,67,449,63],[535,70,449,66],[535,71,449,67],[536,10,450,6],[536,11,450,7],[536,12,450,8],[537,10,452,6],[537,17,452,13,"competitions"],[537,29,452,25],[538,8,453,4],[538,9,453,5],[538,15,453,11],[539,10,454,6,"console"],[539,17,454,13],[539,18,454,14,"log"],[539,21,454,17],[539,22,454,18],[539,82,454,78],[539,83,454,79],[540,10,455,6],[540,17,455,13],[540,19,455,15],[541,8,456,4],[542,6,457,2],[542,7,457,3],[543,6,457,3],[543,22,440,2,"getMyCompetitionsMock"],[543,43,440,23,"getMyCompetitionsMock"],[543,44,440,23],[544,8,440,23],[544,15,440,23,"_ref8"],[544,20,440,23],[544,21,440,23,"apply"],[544,26,440,23],[544,33,440,23,"arguments"],[544,42,440,23],[545,6,440,23],[546,4,440,23],[546,7,457,3],[547,4,459,2,"joinMock"],[547,12,459,10],[548,6,459,10],[548,10,459,10,"_ref9"],[548,15,459,10],[548,22,459,10,"_asyncToGenerator"],[548,39,459,10],[548,40,459,10,"default"],[548,47,459,10],[548,49,459,12],[548,60,459,19,"inviteCode"],[548,70,459,37],[548,72,459,42],[549,8,460,4,"console"],[549,15,460,11],[549,16,460,12,"log"],[549,19,460,15],[549,20,460,16],[549,61,460,57],[549,63,460,59,"inviteCode"],[549,73,460,69],[549,74,460,70],[550,8,461,4],[550,12,461,8,"inviteCode"],[550,22,461,18],[550,23,461,19,"length"],[550,29,461,25],[550,32,461,28],[550,33,461,29],[550,35,461,31],[551,10,462,6],[551,16,462,12],[551,20,462,16,"Error"],[551,25,462,21],[551,26,462,22],[551,47,462,43],[551,48,462,44],[552,8,463,4],[553,8,464,4],[553,15,464,11],[554,10,464,13,"message"],[554,17,464,20],[554,19,464,22],[555,8,464,57],[555,9,464,58],[556,6,465,2],[556,7,465,3],[557,6,465,3],[557,22,459,2,"joinMock"],[557,30,459,10,"joinMock"],[557,31,459,10,"_x22"],[557,35,459,10],[558,8,459,10],[558,15,459,10,"_ref9"],[558,20,459,10],[558,21,459,10,"apply"],[558,26,459,10],[558,33,459,10,"arguments"],[558,42,459,10],[559,6,459,10],[560,4,459,10],[560,7,465,3],[561,4,467,2],[562,4,468,2,"deleteMock"],[562,14,468,12],[563,6,468,12],[563,10,468,12,"_ref0"],[563,15,468,12],[563,22,468,12,"_asyncToGenerator"],[563,39,468,12],[563,40,468,12,"default"],[563,47,468,12],[563,49,468,14],[563,60,468,21,"competitionId"],[563,73,468,42],[563,75,468,47],[564,8,469,4,"console"],[564,15,469,11],[564,16,469,12,"log"],[564,19,469,15],[564,20,469,16],[564,53,469,49],[564,55,469,51,"competitionId"],[564,68,469,64],[564,69,469,65],[565,8,471,4],[565,12,471,10,"storedCompetitions"],[565,30,471,28],[565,39,471,37,"CrossPlatformStorage"],[565,59,471,57],[565,60,471,58,"getItem"],[565,67,471,65],[565,68,471,66],[565,86,471,84],[565,87,471,85],[566,8,472,4],[566,12,472,8,"competitions"],[566,24,472,20],[566,27,472,23,"storedCompetitions"],[566,45,472,41],[566,48,472,44,"JSON"],[566,52,472,48],[566,53,472,49,"parse"],[566,58,472,54],[566,59,472,55,"storedCompetitions"],[566,77,472,73],[566,78,472,74],[566,81,472,77],[566,83,472,79],[567,8,474,4],[567,12,474,10,"competitionToDelete"],[567,31,474,29],[567,34,474,32,"competitions"],[567,46,474,44],[567,47,474,45,"find"],[567,51,474,49],[567,52,474,51,"comp"],[567,56,474,60],[567,60,474,65,"comp"],[567,64,474,69],[567,65,474,70,"_id"],[567,68,474,73],[567,73,474,78,"competitionId"],[567,86,474,91],[567,87,474,92],[568,8,475,4],[568,12,475,8],[568,13,475,9,"competitionToDelete"],[568,32,475,28],[568,34,475,30],[569,10,476,6],[569,16,476,12],[569,20,476,16,"Error"],[569,25,476,21],[569,26,476,22],[569,49,476,45],[569,50,476,46],[570,8,477,4],[572,8,479,4],[573,8,480,4],[573,12,480,8,"competitionToDelete"],[573,31,480,27],[573,32,480,28,"admin_id"],[573,40,480,36],[573,45,480,41],[573,71,480,67],[573,73,480,69],[574,10,481,6],[574,16,481,12],[574,20,481,16,"Error"],[574,25,481,21],[574,26,481,22],[574,66,481,62],[574,67,481,63],[575,8,482,4],[577,8,484,4],[578,8,485,4,"competitions"],[578,20,485,16],[578,23,485,19,"competitions"],[578,35,485,31],[578,36,485,32,"filter"],[578,42,485,38],[578,43,485,40,"comp"],[578,47,485,49],[578,51,485,54,"comp"],[578,55,485,58],[578,56,485,59,"_id"],[578,59,485,62],[578,64,485,67,"competitionId"],[578,77,485,80],[578,78,485,81],[579,8,486,4],[579,14,486,10,"CrossPlatformStorage"],[579,34,486,30],[579,35,486,31,"setItem"],[579,42,486,38],[579,43,486,39],[579,61,486,57],[579,63,486,59,"JSON"],[579,67,486,63],[579,68,486,64,"stringify"],[579,77,486,73],[579,78,486,74,"competitions"],[579,90,486,86],[579,91,486,87],[579,92,486,88],[581,8,488,4],[582,8,489,4],[582,14,489,10,"logAdminAction"],[582,28,489,24],[582,29,489,25],[582,37,489,33],[582,39,489,35,"competitionToDelete"],[582,58,489,54],[582,59,489,55,"name"],[582,63,489,59],[582,65,489,61],[582,82,489,78],[582,83,489,79],[583,8,491,4,"console"],[583,15,491,11],[583,16,491,12,"log"],[583,19,491,15],[583,20,491,16],[583,56,491,52],[583,57,491,53],[584,8,492,4],[584,15,492,11],[585,10,492,13,"message"],[585,17,492,20],[585,19,492,22],[586,8,492,57],[586,9,492,58],[587,6,493,2],[587,7,493,3],[588,6,493,3],[588,22,468,2,"deleteMock"],[588,32,468,12,"deleteMock"],[588,33,468,12,"_x23"],[588,37,468,12],[589,8,468,12],[589,15,468,12,"_ref0"],[589,20,468,12],[589,21,468,12,"apply"],[589,26,468,12],[589,33,468,12,"arguments"],[589,42,468,12],[590,6,468,12],[591,4,468,12],[591,7,493,3],[592,4,495,2],[593,4,496,2,"editMock"],[593,12,496,10],[594,6,496,10],[594,10,496,10,"_ref1"],[594,15,496,10],[594,22,496,10,"_asyncToGenerator"],[594,39,496,10],[594,40,496,10,"default"],[594,47,496,10],[594,49,496,12],[594,60,496,19,"competitionId"],[594,73,496,40],[594,75,496,42,"updates"],[594,82,496,54],[594,84,496,59],[595,8,497,4,"console"],[595,15,497,11],[595,16,497,12,"log"],[595,19,497,15],[595,20,497,16],[595,51,497,47],[595,53,497,49,"competitionId"],[595,66,497,62],[595,68,497,64,"updates"],[595,75,497,71],[595,76,497,72],[596,8,499,4],[596,12,499,10,"storedCompetitions"],[596,30,499,28],[596,39,499,37,"CrossPlatformStorage"],[596,59,499,57],[596,60,499,58,"getItem"],[596,67,499,65],[596,68,499,66],[596,86,499,84],[596,87,499,85],[597,8,500,4],[597,12,500,8,"competitions"],[597,24,500,20],[597,27,500,23,"storedCompetitions"],[597,45,500,41],[597,48,500,44,"JSON"],[597,52,500,48],[597,53,500,49,"parse"],[597,58,500,54],[597,59,500,55,"storedCompetitions"],[597,77,500,73],[597,78,500,74],[597,81,500,77],[597,83,500,79],[598,8,502,4],[598,12,502,10,"competitionIndex"],[598,28,502,26],[598,31,502,29,"competitions"],[598,43,502,41],[598,44,502,42,"findIndex"],[598,53,502,51],[598,54,502,53,"comp"],[598,58,502,62],[598,62,502,67,"comp"],[598,66,502,71],[598,67,502,72,"_id"],[598,70,502,75],[598,75,502,80,"competitionId"],[598,88,502,93],[598,89,502,94],[599,8,503,4],[599,12,503,8,"competitionIndex"],[599,28,503,24],[599,33,503,29],[599,34,503,30],[599,35,503,31],[599,37,503,33],[600,10,504,6],[600,16,504,12],[600,20,504,16,"Error"],[600,25,504,21],[600,26,504,22],[600,49,504,45],[600,50,504,46],[601,8,505,4],[602,8,507,4],[602,12,507,10,"competition"],[602,23,507,21],[602,26,507,24,"competitions"],[602,38,507,36],[602,39,507,37,"competitionIndex"],[602,55,507,53],[602,56,507,54],[604,8,509,4],[605,8,510,4],[605,12,510,8,"competition"],[605,23,510,19],[605,24,510,20,"admin_id"],[605,32,510,28],[605,37,510,33],[605,63,510,59],[605,65,510,61],[606,10,511,6],[606,16,511,12],[606,20,511,16,"Error"],[606,25,511,21],[606,26,511,22],[606,64,511,60],[606,65,511,61],[607,8,512,4],[609,8,514,4],[610,8,515,4,"competitions"],[610,20,515,16],[610,21,515,17,"competitionIndex"],[610,37,515,33],[610,38,515,34],[610,41,515,37],[611,10,516,6],[611,13,516,9,"competition"],[611,24,516,20],[612,10,517,6],[612,13,517,9,"updates"],[612,20,517,16],[613,10,518,6,"updated_at"],[613,20,518,16],[613,22,518,18],[613,26,518,22,"Date"],[613,30,518,26],[613,31,518,27],[613,32,518,28],[613,33,518,29,"toISOString"],[613,44,518,40],[613,45,518,41],[614,8,519,4],[614,9,519,5],[615,8,521,4],[615,14,521,10,"CrossPlatformStorage"],[615,34,521,30],[615,35,521,31,"setItem"],[615,42,521,38],[615,43,521,39],[615,61,521,57],[615,63,521,59,"JSON"],[615,67,521,63],[615,68,521,64,"stringify"],[615,77,521,73],[615,78,521,74,"competitions"],[615,90,521,86],[615,91,521,87],[615,92,521,88],[617,8,523,4],[618,8,524,4],[618,14,524,10,"logAdminAction"],[618,28,524,24],[618,29,524,25],[618,35,524,31],[618,37,524,33,"competition"],[618,48,524,44],[618,49,524,45,"name"],[618,53,524,49],[618,55,524,51],[618,72,524,68],[618,74,524,70,"updates"],[618,81,524,77],[618,82,524,78],[619,8,526,4,"console"],[619,15,526,11],[619,16,526,12,"log"],[619,19,526,15],[619,20,526,16],[619,56,526,52],[619,57,526,53],[620,8,527,4],[620,15,527,11,"competitions"],[620,27,527,23],[620,28,527,24,"competitionIndex"],[620,44,527,40],[620,45,527,41],[621,6,528,2],[621,7,528,3],[622,6,528,3],[622,22,496,2,"editMock"],[622,30,496,10,"editMock"],[622,31,496,10,"_x24"],[622,35,496,10],[622,37,496,10,"_x25"],[622,41,496,10],[623,8,496,10],[623,15,496,10,"_ref1"],[623,20,496,10],[623,21,496,10,"apply"],[623,26,496,10],[623,33,496,10,"arguments"],[623,42,496,10],[624,6,496,10],[625,4,496,10],[625,7,528,3],[626,4,530,2],[627,4,531,2,"awardDailyPrizeMock"],[627,23,531,21],[628,6,531,21],[628,10,531,21,"_ref10"],[628,16,531,21],[628,23,531,21,"_asyncToGenerator"],[628,40,531,21],[628,41,531,21,"default"],[628,48,531,21],[628,50,531,23],[628,61,531,30,"competitionId"],[628,74,531,51],[628,76,531,53,"matchday"],[628,84,531,69],[628,86,531,71,"winnerId"],[628,94,531,87],[628,96,531,92],[629,8,532,4,"console"],[629,15,532,11],[629,16,532,12,"log"],[629,19,532,15],[629,20,532,16],[629,64,532,60],[629,66,532,62,"matchday"],[629,74,532,70],[629,76,532,72],[629,85,532,81],[629,87,532,83,"winnerId"],[629,95,532,91],[629,96,532,92],[630,8,534,4],[630,12,534,10,"storedCompetitions"],[630,30,534,28],[630,39,534,37,"CrossPlatformStorage"],[630,59,534,57],[630,60,534,58,"getItem"],[630,67,534,65],[630,68,534,66],[630,86,534,84],[630,87,534,85],[631,8,535,4],[631,12,535,8,"competitions"],[631,24,535,20],[631,27,535,23,"storedCompetitions"],[631,45,535,41],[631,48,535,44,"JSON"],[631,52,535,48],[631,53,535,49,"parse"],[631,58,535,54],[631,59,535,55,"storedCompetitions"],[631,77,535,73],[631,78,535,74],[631,81,535,77],[631,83,535,79],[632,8,537,4],[632,12,537,10,"competitionIndex"],[632,28,537,26],[632,31,537,29,"competitions"],[632,43,537,41],[632,44,537,42,"findIndex"],[632,53,537,51],[632,54,537,53,"comp"],[632,58,537,62],[632,62,537,67,"comp"],[632,66,537,71],[632,67,537,72,"_id"],[632,70,537,75],[632,75,537,80,"competitionId"],[632,88,537,93],[632,89,537,94],[633,8,538,4],[633,12,538,8,"competitionIndex"],[633,28,538,24],[633,33,538,29],[633,34,538,30],[633,35,538,31],[633,37,538,33],[634,10,539,6],[634,16,539,12],[634,20,539,16,"Error"],[634,25,539,21],[634,26,539,22],[634,49,539,45],[634,50,539,46],[635,8,540,4],[636,8,542,4],[636,12,542,10,"competition"],[636,23,542,21],[636,26,542,24,"competitions"],[636,38,542,36],[636,39,542,37,"competitionIndex"],[636,55,542,53],[636,56,542,54],[638,8,544,4],[639,8,545,4],[639,12,545,8,"competition"],[639,23,545,19],[639,24,545,20,"admin_id"],[639,32,545,28],[639,37,545,33],[639,63,545,59],[639,65,545,61],[640,10,546,6],[640,16,546,12],[640,20,546,16,"Error"],[640,25,546,21],[640,26,546,22],[640,61,546,57],[640,62,546,58],[641,8,547,4],[643,8,549,4],[644,8,550,4],[644,12,550,8],[644,13,550,9,"competition"],[644,24,550,20],[644,25,550,21,"rules"],[644,30,550,26],[644,34,550,30],[644,35,550,31],[644,36,550,32],[644,43,550,39],[644,45,550,41],[644,52,550,48],[644,53,550,49],[644,54,550,50,"includes"],[644,62,550,58],[644,63,550,59,"competition"],[644,74,550,70],[644,75,550,71,"rules"],[644,80,550,76],[644,81,550,77,"type"],[644,85,550,81],[644,86,550,82],[644,88,550,84],[645,10,551,6],[645,16,551,12],[645,20,551,16,"Error"],[645,25,551,21],[645,26,551,22],[645,71,551,67],[645,72,551,68],[646,8,552,4],[647,8,554,4],[647,12,554,10,"dailyPrizeAmount"],[647,28,554,26],[647,31,554,29,"competition"],[647,42,554,40],[647,43,554,41,"rules"],[647,48,554,46],[647,49,554,47,"daily_prize"],[647,60,554,58],[647,64,554,62],[647,65,554,63],[648,8,555,4],[648,12,555,10,"winner"],[648,18,555,16],[648,21,555,19,"competition"],[648,32,555,30],[648,33,555,31,"participants"],[648,45,555,43],[648,46,555,44,"find"],[648,50,555,48],[648,51,555,50,"p"],[648,52,555,56],[648,56,555,61,"p"],[648,57,555,62],[648,58,555,63,"id"],[648,60,555,65],[648,65,555,70,"winnerId"],[648,73,555,78],[648,74,555,79],[649,8,557,4],[649,12,557,8],[649,13,557,9,"winner"],[649,19,557,15],[649,21,557,17],[650,10,558,6],[650,16,558,12],[650,20,558,16,"Error"],[650,25,558,21],[650,26,558,22],[650,59,558,55],[650,60,558,56],[651,8,559,4],[653,8,561,4],[654,8,562,4],[654,12,562,8],[654,13,562,9,"competition"],[654,24,562,20],[654,25,562,21,"daily_winners"],[654,38,562,34],[654,40,562,36],[655,10,563,6,"competition"],[655,21,563,17],[655,22,563,18,"daily_winners"],[655,35,563,31],[655,38,563,34],[655,39,563,35],[655,40,563,36],[656,8,564,4],[658,8,566,4],[659,8,567,4],[659,12,567,8,"competition"],[659,23,567,19],[659,24,567,20,"daily_winners"],[659,37,567,33],[659,38,567,34,"matchday"],[659,46,567,42],[659,47,567,43],[659,49,567,45],[660,10,568,6],[660,16,568,12],[660,20,568,16,"Error"],[660,25,568,21],[660,26,568,22],[660,54,568,50,"matchday"],[660,62,568,58],[660,85,568,81,"competition"],[660,96,568,92],[660,97,568,93,"daily_winners"],[660,110,568,106],[660,111,568,107,"matchday"],[660,119,568,115],[660,120,568,116],[660,121,568,117,"name"],[660,125,568,121],[660,127,568,123],[660,128,568,124],[661,8,569,4],[663,8,571,4],[664,8,572,4,"competition"],[664,19,572,15],[664,20,572,16,"daily_winners"],[664,33,572,29],[664,34,572,30,"matchday"],[664,42,572,38],[664,43,572,39],[664,46,572,42],[665,10,573,6,"user_id"],[665,17,573,13],[665,19,573,15,"winnerId"],[665,27,573,23],[666,10,574,6,"name"],[666,14,574,10],[666,16,574,12,"winner"],[666,22,574,18],[666,23,574,19,"name"],[666,27,574,23],[667,10,575,6,"amount"],[667,16,575,12],[667,18,575,14,"dailyPrizeAmount"],[667,34,575,30],[668,10,576,6,"awarded_at"],[668,20,576,16],[668,22,576,18],[668,26,576,22,"Date"],[668,30,576,26],[668,31,576,27],[668,32,576,28],[668,33,576,29,"toISOString"],[668,44,576,40],[668,45,576,41],[669,8,577,4],[669,9,577,5],[671,8,579,4],[672,8,580,4,"competitions"],[672,20,580,16],[672,21,580,17,"competitionIndex"],[672,37,580,33],[672,38,580,34],[672,41,580,37,"competition"],[672,52,580,48],[673,8,581,4],[673,14,581,10,"CrossPlatformStorage"],[673,34,581,30],[673,35,581,31,"setItem"],[673,42,581,38],[673,43,581,39],[673,61,581,57],[673,63,581,59,"JSON"],[673,67,581,63],[673,68,581,64,"stringify"],[673,77,581,73],[673,78,581,74,"competitions"],[673,90,581,86],[673,91,581,87],[673,92,581,88],[675,8,583,4],[676,8,584,4],[676,14,584,10,"logAdminAction"],[676,28,584,24],[676,29,584,25],[676,48,584,44],[676,50,584,46,"competition"],[676,61,584,57],[676,62,584,58,"name"],[676,66,584,62],[676,68,584,64],[676,85,584,81],[676,87,584,83],[677,10,585,6,"matchday"],[677,18,585,14],[678,10,586,6,"winner"],[678,16,586,12],[678,18,586,14,"winner"],[678,24,586,20],[678,25,586,21,"name"],[678,29,586,25],[679,10,587,6,"amount"],[679,16,587,12],[679,18,587,14,"dailyPrizeAmount"],[680,8,588,4],[680,9,588,5],[680,10,588,6],[682,8,590,4],[683,8,591,4,"console"],[683,15,591,11],[683,16,591,12,"log"],[683,19,591,15],[683,20,591,16],[683,26,591,22,"winner"],[683,32,591,28],[683,33,591,29,"name"],[683,37,591,33],[683,50,591,46,"dailyPrizeAmount"],[683,66,591,62],[683,91,591,87,"matchday"],[683,99,591,95],[683,101,591,97],[683,102,591,98],[684,8,593,4,"console"],[684,15,593,11],[684,16,593,12,"log"],[684,19,593,15],[684,20,593,16],[684,56,593,52],[684,57,593,53],[685,8,594,4],[685,15,594,11],[686,10,595,6,"message"],[686,17,595,13],[686,19,595,15],[686,38,595,34,"dailyPrizeAmount"],[686,54,595,50],[686,69,595,65,"winner"],[686,75,595,71],[686,76,595,72,"name"],[686,80,595,76],[686,97,595,93,"matchday"],[686,105,595,101],[686,107,595,103],[687,10,596,6,"competition"],[687,21,596,17],[687,23,596,19,"competition"],[688,8,597,4],[688,9,597,5],[689,6,598,2],[689,7,598,3],[690,6,598,3],[690,22,531,2,"awardDailyPrizeMock"],[690,41,531,21,"awardDailyPrizeMock"],[690,42,531,21,"_x26"],[690,46,531,21],[690,48,531,21,"_x27"],[690,52,531,21],[690,54,531,21,"_x28"],[690,58,531,21],[691,8,531,21],[691,15,531,21,"_ref10"],[691,21,531,21],[691,22,531,21,"apply"],[691,27,531,21],[691,34,531,21,"arguments"],[691,43,531,21],[692,6,531,21],[693,4,531,21],[693,7,598,3],[694,4,600,2],[695,4,601,2,"getAdminLogsMock"],[695,20,601,18],[696,6,601,18],[696,10,601,18,"_ref11"],[696,16,601,18],[696,23,601,18,"_asyncToGenerator"],[696,40,601,18],[696,41,601,18,"default"],[696,48,601,18],[696,50,601,20],[696,63,601,32],[697,8,602,4,"console"],[697,15,602,11],[697,16,602,12,"log"],[697,19,602,15],[697,20,602,16],[697,49,602,45],[697,50,602,46],[698,8,604,4],[698,12,604,8],[699,10,605,6],[699,14,605,12,"logs"],[699,18,605,16],[699,21,605,19],[699,28,605,25,"CrossPlatformStorage"],[699,48,605,45],[699,49,605,46,"getItem"],[699,56,605,53],[699,57,605,54],[699,68,605,65],[699,69,605,66],[699,74,605,70],[699,78,605,74],[700,10,606,6],[700,14,606,12,"adminLogs"],[700,23,606,21],[700,26,606,24,"JSON"],[700,30,606,28],[700,31,606,29,"parse"],[700,36,606,34],[700,37,606,35,"logs"],[700,41,606,39],[700,42,606,40],[702,10,608,6],[703,10,609,6,"adminLogs"],[703,19,609,15],[703,20,609,16,"sort"],[703,24,609,20],[703,25,609,21],[703,26,609,22,"a"],[703,27,609,28],[703,29,609,30,"b"],[703,30,609,36],[703,35,609,41],[703,39,609,45,"Date"],[703,43,609,49],[703,44,609,50,"b"],[703,45,609,51],[703,46,609,52,"timestamp"],[703,55,609,61],[703,56,609,62],[703,57,609,63,"getTime"],[703,64,609,70],[703,65,609,71],[703,66,609,72],[703,69,609,75],[703,73,609,79,"Date"],[703,77,609,83],[703,78,609,84,"a"],[703,79,609,85],[703,80,609,86,"timestamp"],[703,89,609,95],[703,90,609,96],[703,91,609,97,"getTime"],[703,98,609,104],[703,99,609,105],[703,100,609,106],[703,101,609,107],[704,10,611,6,"console"],[704,17,611,13],[704,18,611,14,"log"],[704,21,611,17],[704,22,611,18],[704,44,611,40],[704,46,611,42,"adminLogs"],[704,55,611,51],[704,56,611,52,"length"],[704,62,611,58],[704,63,611,59],[705,10,612,6],[705,17,612,13,"adminLogs"],[705,26,612,22],[706,8,613,4],[706,9,613,5],[706,10,613,6],[706,17,613,13,"error"],[706,22,613,18],[706,24,613,20],[707,10,614,6,"console"],[707,17,614,13],[707,18,614,14,"error"],[707,23,614,19],[707,24,614,20],[707,54,614,50],[707,56,614,52,"error"],[707,61,614,57],[707,62,614,58],[708,10,615,6],[708,17,615,13],[708,19,615,15],[709,8,616,4],[710,6,617,2],[710,7,617,3],[711,6,617,3],[711,22,601,2,"getAdminLogsMock"],[711,38,601,18,"getAdminLogsMock"],[711,39,601,18],[712,8,601,18],[712,15,601,18,"_ref11"],[712,21,601,18],[712,22,601,18,"apply"],[712,27,601,18],[712,34,601,18,"arguments"],[712,43,601,18],[713,6,601,18],[714,4,601,18],[714,7,617,3],[715,4,619,2],[716,4,620,2,"getAllCompetitions"],[716,22,620,20],[717,6,620,20],[717,10,620,20,"_ref12"],[717,16,620,20],[717,23,620,20,"_asyncToGenerator"],[717,40,620,20],[717,41,620,20,"default"],[717,48,620,20],[717,50,620,22],[717,63,620,34],[718,8,621,4,"console"],[718,15,621,11],[718,16,621,12,"log"],[718,19,621,15],[718,20,621,16],[718,70,621,66],[718,71,621,67],[719,8,623,4],[719,12,623,8],[720,10,624,6],[721,10,625,6],[721,14,625,12,"storedCompetitions"],[721,32,625,30],[721,41,625,39,"CrossPlatformStorage"],[721,61,625,59],[721,62,625,60,"getItem"],[721,69,625,67],[721,70,625,68],[721,89,625,87],[721,90,625,88],[722,10,626,6],[722,14,626,10,"competitions"],[722,26,626,22],[722,29,626,25,"storedCompetitions"],[722,47,626,43],[722,50,626,46,"JSON"],[722,54,626,50],[722,55,626,51,"parse"],[722,60,626,56],[722,61,626,57,"storedCompetitions"],[722,79,626,75],[722,80,626,76],[722,83,626,79],[722,85,626,81],[724,10,628,6],[725,10,629,6],[725,14,629,12,"oldStoredCompetitions"],[725,35,629,33],[725,44,629,42,"CrossPlatformStorage"],[725,64,629,62],[725,65,629,63,"getItem"],[725,72,629,70],[725,73,629,71],[725,91,629,89],[725,92,629,90],[726,10,630,6],[726,14,630,12,"oldCompetitions"],[726,29,630,27],[726,32,630,30,"oldStoredCompetitions"],[726,53,630,51],[726,56,630,54,"JSON"],[726,60,630,58],[726,61,630,59,"parse"],[726,66,630,64],[726,67,630,65,"oldStoredCompetitions"],[726,88,630,86],[726,89,630,87],[726,92,630,90],[726,94,630,92],[728,10,632,6],[729,10,633,6],[729,14,633,12,"allCompetitions"],[729,29,633,27],[729,32,633,30],[729,33,633,31],[729,36,633,34,"competitions"],[729,48,633,46],[729,50,633,48],[729,53,633,51,"oldCompetitions"],[729,68,633,66],[729,69,633,67],[730,10,634,6],[730,14,634,12,"uniqueCompetitions"],[730,32,634,30],[730,35,634,33,"allCompetitions"],[730,50,634,48],[730,51,634,49,"filter"],[730,57,634,55],[730,58,634,56],[730,59,634,57,"comp"],[730,63,634,61],[730,65,634,63,"index"],[730,70,634,68],[730,72,634,70,"self"],[730,76,634,74],[730,81,635,8,"index"],[730,86,635,13],[730,91,635,18,"self"],[730,95,635,22],[730,96,635,23,"findIndex"],[730,105,635,32],[730,106,635,33,"c"],[730,107,635,34],[730,111,635,38,"c"],[730,112,635,39],[730,113,635,40,"_id"],[730,116,635,43],[730,121,635,48,"comp"],[730,125,635,52],[730,126,635,53,"_id"],[730,129,635,56],[730,130,636,6],[730,131,636,7],[731,10,638,6,"console"],[731,17,638,13],[731,18,638,14,"log"],[731,21,638,17],[731,22,638,18],[731,59,638,55],[731,61,638,57,"uniqueCompetitions"],[731,79,638,75],[731,80,638,76,"length"],[731,86,638,82],[731,87,638,83],[732,10,639,6],[732,17,639,13,"uniqueCompetitions"],[732,35,639,31],[733,8,641,4],[733,9,641,5],[733,10,641,6],[733,17,641,13,"error"],[733,22,641,18],[733,24,641,20],[734,10,642,6,"console"],[734,17,642,13],[734,18,642,14,"error"],[734,23,642,19],[734,24,642,20],[734,60,642,56],[734,62,642,58,"error"],[734,67,642,63],[734,68,642,64],[735,10,643,6],[735,17,643,13],[735,19,643,15],[736,8,644,4],[737,6,645,2],[737,7,645,3],[738,6,645,3],[738,22,620,2,"getAllCompetitions"],[738,40,620,20,"getAllCompetitions"],[738,41,620,20],[739,8,620,20],[739,15,620,20,"_ref12"],[739,21,620,20],[739,22,620,20,"apply"],[739,27,620,20],[739,34,620,20,"arguments"],[739,43,620,20],[740,6,620,20],[741,4,620,20],[742,2,646,0],[742,3,646,1],[744,2,648,0],[745,2,649,7],[745,6,649,13,"walletAPI"],[745,15,649,22],[745,18,649,25],[746,4,650,2,"getBalance"],[746,14,650,12],[746,16,650,14,"getBalance"],[746,17,650,14],[746,22,650,20,"apiClient"],[746,31,650,29],[746,32,650,30,"get"],[746,35,650,33],[746,36,650,34],[746,53,650,51],[746,54,650,52],[747,4,652,2,"topUp"],[747,9,652,7],[747,11,652,10,"amount"],[747,17,652,24],[747,21,653,4,"apiClient"],[747,30,653,13],[747,31,653,14,"post"],[747,35,653,18],[747,36,653,19],[747,51,653,34],[747,53,653,36],[747,57,653,40],[747,59,653,42],[748,6,654,6,"params"],[748,12,654,12],[748,14,654,14],[749,8,654,16,"amount"],[750,6,654,23],[751,4,655,4],[751,5,655,5],[751,6,655,6],[752,4,657,2,"withdraw"],[752,12,657,10],[752,14,657,13,"amount"],[752,20,657,27],[752,24,658,4,"apiClient"],[752,33,658,13],[752,34,658,14,"post"],[752,38,658,18],[752,39,658,19],[752,57,658,37],[752,59,658,39],[752,63,658,43],[752,65,658,45],[753,6,659,6,"params"],[753,12,659,12],[753,14,659,14],[754,8,659,16,"amount"],[755,6,659,23],[756,4,660,4],[756,5,660,5],[756,6,660,6],[757,4,662,2,"getTransactions"],[757,19,662,17],[757,21,662,19,"getTransactions"],[757,22,662,19],[757,27,662,25,"apiClient"],[757,36,662,34],[757,37,662,35,"get"],[757,40,662,38],[757,41,662,39],[757,56,662,54],[758,2,663,0],[758,3,663,1],[760,2,665,0],[761,2,666,7],[761,6,666,13,"databaseAPI"],[761,17,666,24],[761,20,666,27],[762,4,667,2,"resetDatabase"],[762,17,667,15],[763,6,667,15],[763,10,667,15,"_ref13"],[763,16,667,15],[763,23,667,15,"_asyncToGenerator"],[763,40,667,15],[763,41,667,15,"default"],[763,48,667,15],[763,50,667,17],[763,63,667,29],[764,8,668,4,"console"],[764,15,668,11],[764,16,668,12,"log"],[764,19,668,15],[764,20,668,16],[764,71,668,67],[764,72,668,68],[765,8,670,4],[765,12,670,8],[766,10,671,6],[766,16,671,12,"CrossPlatformStorage"],[766,36,671,32],[766,37,671,33,"removeItem"],[766,47,671,43],[766,48,671,44],[766,67,671,63],[766,68,671,64],[767,10,672,6],[767,16,672,12,"CrossPlatformStorage"],[767,36,672,32],[767,37,672,33,"removeItem"],[767,47,672,43],[767,48,672,44],[767,65,672,61],[767,66,672,62],[768,10,673,6],[768,16,673,12,"CrossPlatformStorage"],[768,36,673,32],[768,37,673,33,"removeItem"],[768,47,673,43],[768,48,673,44],[768,89,673,85],[768,90,673,86],[769,10,674,6],[769,16,674,12,"CrossPlatformStorage"],[769,36,674,32],[769,37,674,33,"removeItem"],[769,47,674,43],[769,48,674,44],[769,87,674,83],[769,88,674,84],[770,10,676,6,"console"],[770,17,676,13],[770,18,676,14,"log"],[770,21,676,17],[770,22,676,18],[770,68,676,64],[770,69,676,65],[771,10,677,6],[771,17,677,13],[772,12,677,15,"success"],[772,19,677,22],[772,21,677,24],[772,25,677,28],[773,12,677,30,"message"],[773,19,677,37],[773,21,677,39],[774,10,677,65],[774,11,677,66],[775,8,678,4],[775,9,678,5],[775,10,678,6],[775,17,678,13,"error"],[775,22,678,18],[775,24,678,20],[776,10,679,6,"console"],[776,17,679,13],[776,18,679,14,"error"],[776,23,679,19],[776,24,679,20],[776,50,679,46],[776,52,679,48,"error"],[776,57,679,53],[776,58,679,54],[777,10,680,6],[777,17,680,13],[778,12,680,15,"success"],[778,19,680,22],[778,21,680,24],[778,26,680,29],[779,12,680,31,"message"],[779,19,680,38],[779,21,680,40],[780,10,680,55],[780,11,680,56],[781,8,681,4],[782,6,682,2],[782,7,682,3],[783,6,682,3],[783,22,667,2,"resetDatabase"],[783,35,667,15,"resetDatabase"],[783,36,667,15],[784,8,667,15],[784,15,667,15,"_ref13"],[784,21,667,15],[784,22,667,15,"apply"],[784,27,667,15],[784,34,667,15,"arguments"],[784,43,667,15],[785,6,667,15],[786,4,667,15],[787,2,683,0],[787,3,683,1],[788,2,685,0],[788,6,685,0,"_default"],[788,14,685,0],[788,17,685,15,"apiClient"],[788,26,685,24],[789,0,685,25],[789,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","existingCompetitions.some$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","competitionAPI.getAllCompetitions","allCompetitions.filter$argument_0","self.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;qCEY,8CF;GnC+D;oBsCG;GtCe;2BuCE;GvC2B;6BwCE;kDCS;QDK;GxCW;oB0CG;kCNc,sCM;0BCC,0BD;G1CS;yB4CG;2BCQ;ODE;G5CO;Y8CE;G9CM;c+CG;kDCM,yCD;uCEW,yCF;G/CQ;YkDG;oDCM,yCD;GlD0B;uBoDG;oDDM,yCC;iDCkB,6BD;GpD2C;oBsDG;qBCQ,qFD;GtDQ;sBwDG;wDCc;iCCC,uBD,CD;GxDU;c2DK,sC3D;S4DE;M5DG;Y6DE;M7DG;mB8DE,oC9D;iB+DK;G/De"},"hasCjsExports":false},"type":"js/module"}]}