{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":69,"index":180}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":181},"end":{"line":4,"column":39,"index":220}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _axios = require(_dependencyMap[4], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[5], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[6], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[7], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  // Cross-platform storage utility\n  var CrossPlatformStorage = /*#__PURE__*/function () {\n    function CrossPlatformStorage() {\n      (0, _classCallCheck.default)(this, CrossPlatformStorage);\n    }\n    return (0, _createClass.default)(CrossPlatformStorage, null, [{\n      key: \"getItem\",\n      value: function () {\n        var _getItem = (0, _asyncToGenerator.default)(function* (key) {\n          try {\n            // Try AsyncStorage first (works on both platforms)\n            return yield AsyncStorage.default.getItem(key);\n          } catch (error) {\n            // Fallback to localStorage on web if AsyncStorage fails\n            if (typeof window !== 'undefined' && window.localStorage) {\n              return window.localStorage.getItem(key);\n            }\n            return null;\n          }\n        });\n        function getItem(_x) {\n          return _getItem.apply(this, arguments);\n        }\n        return getItem;\n      }()\n    }, {\n      key: \"setItem\",\n      value: function () {\n        var _setItem = (0, _asyncToGenerator.default)(function* (key, value) {\n          try {\n            // Try AsyncStorage first (works on both platforms)\n            yield AsyncStorage.default.setItem(key, value);\n          } catch (error) {\n            // Fallback to localStorage on web if AsyncStorage fails\n            if (typeof window !== 'undefined' && window.localStorage) {\n              window.localStorage.setItem(key, value);\n            }\n          }\n        });\n        function setItem(_x2, _x3) {\n          return _setItem.apply(this, arguments);\n        }\n        return setItem;\n      }()\n    }, {\n      key: \"removeItem\",\n      value: function () {\n        var _removeItem = (0, _asyncToGenerator.default)(function* (key) {\n          try {\n            yield AsyncStorage.default.removeItem(key);\n          } catch (error) {\n            if (typeof window !== 'undefined' && window.localStorage) {\n              window.localStorage.removeItem(key);\n            }\n          }\n        });\n        function removeItem(_x4) {\n          return _removeItem.apply(this, arguments);\n        }\n        return removeItem;\n      }()\n    }]);\n  }(); // Get backend URL from environment\n  var BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantasy-fintech.preview.emergentagent.com';\n  var ApiClient = /*#__PURE__*/function () {\n    function ApiClient() {\n      (0, _classCallCheck.default)(this, ApiClient);\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(/*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator.default)(function* (config) {\n          console.log(`üåê API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n          var token = yield SecureStore.getItemAsync('session_token');\n          if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n          }\n          return config;\n        });\n        return function (_x5) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`‚úÖ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`‚ùå API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    return (0, _createClass.default)(ApiClient, [{\n      key: \"get\",\n      value: function () {\n        var _get = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.get(url);\n          return response.data;\n        });\n        function get(_x6) {\n          return _get.apply(this, arguments);\n        }\n        return get;\n      }()\n    }, {\n      key: \"post\",\n      value: function () {\n        var _post = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.post(url, data);\n          return response.data;\n        });\n        function post(_x7, _x8) {\n          return _post.apply(this, arguments);\n        }\n        return post;\n      }()\n    }, {\n      key: \"patch\",\n      value: function () {\n        var _patch = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.patch(url, data);\n          return response.data;\n        });\n        function patch(_x9, _x0) {\n          return _patch.apply(this, arguments);\n        }\n        return patch;\n      }()\n    }, {\n      key: \"delete\",\n      value: function () {\n        var _delete2 = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.delete(url);\n          return response.data;\n        });\n        function _delete(_x1) {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      key: \"put\",\n      value: function () {\n        var _put = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.put(url, data);\n          return response.data;\n        });\n        function put(_x10, _x11) {\n          return _put.apply(this, arguments);\n        }\n        return put;\n      }()\n    }]);\n  }();\n  var apiClient = new ApiClient();\n\n  // Auth API\n  var authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  var logAdminAction = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator.default)(function* (action, competitionName, adminName, details) {\n      try {\n        var logs = (yield CrossPlatformStorage.getItem('adminLogs')) || '[]';\n        var adminLogs = JSON.parse(logs);\n        var logEntry = {\n          id: `log_${Date.now()}`,\n          action,\n          competition_name: competitionName,\n          admin_name: adminName,\n          details,\n          timestamp: new Date().toISOString()\n        };\n        adminLogs.push(logEntry);\n        yield CrossPlatformStorage.setItem('adminLogs', JSON.stringify(adminLogs));\n        console.log('üìù Admin action logged:', action, competitionName);\n      } catch (error) {\n        console.error('Failed to log admin action:', error);\n      }\n    });\n    return function logAdminAction(_x12, _x13, _x14, _x15) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Competition API\n  var competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* (data) {\n        console.log('üèÜ Mock: Creating competition:', data.name);\n        console.log('üìÖ Total matchdays:', data.total_matchdays || 36);\n\n        // Get existing competitions from cross-platform storage\n        var storedCompetitions = yield CrossPlatformStorage.getItem('competitions_mock');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        console.log('üìã Current competitions before creation:', existingCompetitions.length);\n\n        // Check for unique name validation\n        var existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n        if (existingNames.includes(data.name.toLowerCase())) {\n          throw new Error('Competition name already exists. Please choose another name.');\n        }\n\n        // Create new competition\n        var newCompetition = {\n          _id: `comp_${Date.now()}`,\n          name: data.name,\n          total_matchdays: data.total_matchdays || 36,\n          participation_cost_per_team: data.participation_cost_per_team || 210.0,\n          expected_teams: data.expected_teams || 8,\n          total_prize_pool: data.total_prize_pool || 1680.0,\n          daily_payment_enabled: data.daily_payment_enabled || false,\n          daily_payment_amount: data.daily_payment_amount || 0.0,\n          rules: data.rules,\n          invite_code: Math.random().toString(36).substr(2, 8).toUpperCase(),\n          invite_link: `https://fantapay.app/join/${Math.random().toString(36).substr(2, 8).toUpperCase()}`,\n          admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          // Current mock user ID\n          participants: [{\n            id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            email: 'test@fantapay.com',\n            is_admin: true,\n            paid_matchdays: [1, 2],\n            // Mock paid matchdays\n            points: 0\n          }],\n          wallet_balance: 0,\n          is_active: true,\n          current_matchday: 1,\n          // Start at matchday 1\n          standings: [{\n            position: 1,\n            player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            points: 0\n          }],\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n\n        // Add to competitions list and save to storage\n        existingCompetitions.push(newCompetition);\n        yield CrossPlatformStorage.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n        console.log('‚úÖ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n        // Log the creation action\n        yield logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n          competition_id: newCompetition._id,\n          rules: newCompetition.rules,\n          total_matchdays: newCompetition.total_matchdays,\n          participation_cost_per_team: newCompetition.participation_cost_per_team,\n          expected_teams: newCompetition.expected_teams,\n          total_prize_pool: newCompetition.total_prize_pool,\n          daily_payment_enabled: newCompetition.daily_payment_enabled,\n          daily_payment_amount: newCompetition.daily_payment_amount\n        });\n        console.log('‚úÖ Mock Competition Created:', newCompetition.name);\n        console.log('üìù Competition Name:', newCompetition.name);\n        console.log('üí∞ Daily Payment:', newCompetition.daily_payment_enabled ? `‚Ç¨${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n        console.log('üèÜ Total Prize Pool:', `‚Ç¨${newCompetition.total_prize_pool}`);\n        console.log('üîë Invite Code:', newCompetition.invite_code);\n        return {\n          data: newCompetition\n        };\n      });\n      return function createMock(_x16) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    // Mock matchday payment methods\n    payMatchdaysMock: function () {\n      var _ref4 = (0, _asyncToGenerator.default)(function* (competitionId, matchdays) {\n        console.log('üí≥ Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n        // Simulate payment processing\n        var totalCost = matchdays.length * 5; // ‚Ç¨5 per matchday\n\n        // Mock payment success\n        return {\n          data: {\n            message: `Successfully paid for ${matchdays.length} matchdays`,\n            paid_matchdays: matchdays,\n            total_cost: totalCost,\n            new_user_balance: 150 - totalCost // Mock remaining balance\n          }\n        };\n      });\n      return function payMatchdaysMock(_x17, _x18) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    getMatchdayPaymentsMock: function () {\n      var _ref5 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('üìä Mock: Getting matchday payments for competition', competitionId);\n\n        // Mock payment data\n        var mockPayments = [];\n        for (var i = 1; i <= 36; i++) {\n          mockPayments.push({\n            _id: `payment_${i}`,\n            user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            competition_id: competitionId,\n            matchday: i,\n            amount: 5,\n            status: i <= 3 ? 'paid' : 'pending',\n            paid_at: i <= 3 ? new Date().toISOString() : null,\n            created_at: new Date().toISOString()\n          });\n        }\n        return {\n          data: {\n            competition_id: competitionId,\n            daily_payment_enabled: true,\n            daily_payment_amount: 5,\n            total_matchdays: 36,\n            payments: mockPayments\n          }\n        };\n      });\n      return function getMatchdayPaymentsMock(_x19) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    getPaymentStatusTableMock: function () {\n      var _ref6 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('üîê Mock: Getting payment status table for competition', competitionId);\n\n        // Mock admin payment table\n        var mockTable = [{\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          username: 'FantaPay Tester',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          matchday_payments: Array.from({\n            length: 36\n          }, (_, i) => ({\n            matchday: i + 1,\n            status: i < 3 ? 'paid' : 'pending',\n            amount: 5,\n            paid_at: i < 3 ? new Date().toISOString() : null\n          }))\n        }];\n        return {\n          data: {\n            competition_name: 'Mock Fantasy League',\n            total_matchdays: 36,\n            daily_payment_amount: 5,\n            participants: mockTable\n          }\n        };\n      });\n      return function getPaymentStatusTableMock(_x20) {\n        return _ref6.apply(this, arguments);\n      };\n    }(),\n    // Real-time name validation\n    validateNameMock: function () {\n      var _ref7 = (0, _asyncToGenerator.default)(function* (name) {\n        console.log('üèÜ Mock: Validating competition name:', name);\n        if (!name.trim()) {\n          return {\n            available: true,\n            message: ''\n          };\n        }\n\n        // Get existing competitions\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Add some default competition names to check against\n        var defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n        var allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n        var isAvailable = !allNames.includes(name.toLowerCase());\n        return {\n          available: isAvailable,\n          message: isAvailable ? 'Name available' : 'Name already exists'\n        };\n      });\n      return function validateNameMock(_x21) {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: function () {\n      var _ref8 = (0, _asyncToGenerator.default)(function* () {\n        console.log('üèÜ Mock: Getting my competitions');\n        var storedCompetitions = yield CrossPlatformStorage.getItem('competitions_mock');\n        if (storedCompetitions) {\n          var competitions = JSON.parse(storedCompetitions);\n          console.log('üìã Competitions found in storage:', competitions.length);\n          competitions.forEach((comp, index) => {\n            console.log(`${index + 1}. ${comp.name} (ID: ${comp._id})`);\n          });\n          return competitions;\n        } else {\n          console.log('üìã No competitions found in storage, returning empty array');\n          return [];\n        }\n      });\n      return function getMyCompetitionsMock() {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    joinMock: function () {\n      var _ref9 = (0, _asyncToGenerator.default)(function* (inviteCode) {\n        console.log('üèÜ Mock: Joining competition with code:', inviteCode);\n        if (inviteCode.length < 6) {\n          throw new Error('Invalid invite code');\n        }\n        return {\n          message: 'Successfully joined competition!'\n        };\n      });\n      return function joinMock(_x22) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    // Delete competition (admin only)\n    deleteMock: function () {\n      var _ref0 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('üóëÔ∏è Mock: Deleting competition:', competitionId);\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionToDelete = competitions.find(comp => comp._id === competitionId);\n        if (!competitionToDelete) {\n          throw new Error('Competition not found');\n        }\n\n        // Check if user is admin\n        if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can delete this competition');\n        }\n\n        // Remove competition from storage\n        competitions = competitions.filter(comp => comp._id !== competitionId);\n        yield CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n        console.log('‚úÖ Competition deleted successfully');\n        return {\n          message: 'Competition deleted successfully'\n        };\n      });\n      return function deleteMock(_x23) {\n        return _ref0.apply(this, arguments);\n      };\n    }(),\n    // Edit competition (admin only)\n    editMock: function () {\n      var _ref1 = (0, _asyncToGenerator.default)(function* (competitionId, updates) {\n        console.log('‚úèÔ∏è Mock: Editing competition:', competitionId, updates);\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can edit this competition');\n        }\n\n        // Update competition\n        competitions[competitionIndex] = {\n          ...competition,\n          ...updates,\n          updated_at: new Date().toISOString()\n        };\n        yield CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n        console.log('‚úÖ Competition updated successfully');\n        return competitions[competitionIndex];\n      });\n      return function editMock(_x24, _x25) {\n        return _ref1.apply(this, arguments);\n      };\n    }(),\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: function () {\n      var _ref10 = (0, _asyncToGenerator.default)(function* (competitionId, matchday, winnerId) {\n        console.log('üèÜ Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n        var storedCompetitions = yield CrossPlatformStorage.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can award daily prizes');\n        }\n\n        // Check if competition has daily prizes\n        if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n          throw new Error('This competition does not have daily prizes');\n        }\n        var dailyPrizeAmount = competition.rules.daily_prize || 5;\n        var winner = competition.participants.find(p => p.id === winnerId);\n        if (!winner) {\n          throw new Error('Winner not found in competition');\n        }\n\n        // Initialize daily winners if not exists\n        if (!competition.daily_winners) {\n          competition.daily_winners = {};\n        }\n\n        // Check if prize already awarded for this matchday\n        if (competition.daily_winners[matchday]) {\n          throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n        }\n\n        // Award the prize\n        competition.daily_winners[matchday] = {\n          user_id: winnerId,\n          name: winner.name,\n          amount: dailyPrizeAmount,\n          awarded_at: new Date().toISOString()\n        };\n\n        // Update competition\n        competitions[competitionIndex] = competition;\n        yield CrossPlatformStorage.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n          matchday,\n          winner: winner.name,\n          amount: dailyPrizeAmount\n        });\n\n        // Simulate wallet credit (in a real app, this would update the user's wallet)\n        console.log(`üí∞ ${winner.name} awarded ‚Ç¨${dailyPrizeAmount} for winning matchday ${matchday}`);\n        console.log('‚úÖ Daily prize awarded successfully');\n        return {\n          message: `Daily prize of ‚Ç¨${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n          competition: competition\n        };\n      });\n      return function awardDailyPrizeMock(_x26, _x27, _x28) {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    // Get admin logs\n    getAdminLogsMock: function () {\n      var _ref11 = (0, _asyncToGenerator.default)(function* () {\n        console.log('üìù Mock: Getting admin logs');\n        try {\n          var logs = (yield CrossPlatformStorage.getItem('adminLogs')) || '[]';\n          var adminLogs = JSON.parse(logs);\n\n          // Sort by timestamp (newest first)\n          adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n          console.log('üìã Admin logs found:', adminLogs.length);\n          return adminLogs;\n        } catch (error) {\n          console.error('üí• Error getting admin logs:', error);\n          return [];\n        }\n      });\n      return function getAdminLogsMock() {\n        return _ref11.apply(this, arguments);\n      };\n    }()\n  };\n\n  // Wallet API\n  var walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  var databaseAPI = {\n    resetDatabase: function () {\n      var _ref12 = (0, _asyncToGenerator.default)(function* () {\n        console.log('üóëÔ∏è Resetting database - clearing all stored data');\n        try {\n          yield CrossPlatformStorage.removeItem('competitions_mock');\n          yield CrossPlatformStorage.removeItem('admin_logs_mock');\n          yield CrossPlatformStorage.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n          yield CrossPlatformStorage.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n          console.log('‚úÖ Database reset complete - all data cleared');\n          return {\n            success: true,\n            message: 'Database reset complete'\n          };\n        } catch (error) {\n          console.error('‚ùå Database reset failed:', error);\n          return {\n            success: false,\n            message: 'Reset failed'\n          };\n        }\n      });\n      return function resetDatabase() {\n        return _ref12.apply(this, arguments);\n      };\n    }()\n  };\n  var _default = apiClient;\n});","lineCount":751,"map":[[27,2,646,0,"Object"],[27,8,646,0],[27,9,646,0,"defineProperty"],[27,23,646,0],[27,24,646,0,"exports"],[27,31,646,0],[28,4,646,0,"enumerable"],[28,14,646,0],[29,4,646,0,"get"],[29,7,646,0],[29,18,646,0,"get"],[29,19,646,0],[30,6,646,0],[30,13,646,0,"_default"],[30,21,646,0],[31,4,646,0],[32,2,646,0],[33,2,117,0,"Object"],[33,8,117,0],[33,9,117,0,"defineProperty"],[33,23,117,0],[33,24,117,0,"exports"],[33,31,117,0],[34,4,117,0,"enumerable"],[34,14,117,0],[35,4,117,0,"get"],[35,7,117,0],[35,18,117,0,"get"],[35,19,117,0],[36,6,117,0],[36,13,117,0,"authAPI"],[36,20,117,0],[37,4,117,0],[38,2,117,0],[39,2,180,0,"Object"],[39,8,180,0],[39,9,180,0,"defineProperty"],[39,23,180,0],[39,24,180,0,"exports"],[39,31,180,0],[40,4,180,0,"enumerable"],[40,14,180,0],[41,4,180,0,"get"],[41,7,180,0],[41,18,180,0,"get"],[41,19,180,0],[42,6,180,0],[42,13,180,0,"competitionAPI"],[42,27,180,0],[43,4,180,0],[44,2,180,0],[45,2,610,0,"Object"],[45,8,610,0],[45,9,610,0,"defineProperty"],[45,23,610,0],[45,24,610,0,"exports"],[45,31,610,0],[46,4,610,0,"enumerable"],[46,14,610,0],[47,4,610,0,"get"],[47,7,610,0],[47,18,610,0,"get"],[47,19,610,0],[48,6,610,0],[48,13,610,0,"walletAPI"],[48,22,610,0],[49,4,610,0],[50,2,610,0],[51,2,627,0,"Object"],[51,8,627,0],[51,9,627,0,"defineProperty"],[51,23,627,0],[51,24,627,0,"exports"],[51,31,627,0],[52,4,627,0,"enumerable"],[52,14,627,0],[53,4,627,0,"get"],[53,7,627,0],[53,18,627,0,"get"],[53,19,627,0],[54,6,627,0],[54,13,627,0,"databaseAPI"],[54,24,627,0],[55,4,627,0],[56,2,627,0],[57,2,644,2],[57,6,644,2,"_expoVirtualEnv"],[57,21,644,2],[57,24,644,2,"require"],[57,31,644,2],[57,32,644,2,"_dependencyMap"],[57,46,644,2],[58,2,644,2],[58,6,644,2,"_babelRuntimeHelpersAsyncToGenerator"],[58,42,644,2],[58,45,644,2,"require"],[58,52,644,2],[58,53,644,2,"_dependencyMap"],[58,67,644,2],[59,2,644,2],[59,6,644,2,"_asyncToGenerator"],[59,23,644,2],[59,26,644,2,"_interopDefault"],[59,41,644,2],[59,42,644,2,"_babelRuntimeHelpersAsyncToGenerator"],[59,78,644,2],[60,2,644,2],[60,6,644,2,"_babelRuntimeHelpersClassCallCheck"],[60,40,644,2],[60,43,644,2,"require"],[60,50,644,2],[60,51,644,2,"_dependencyMap"],[60,65,644,2],[61,2,644,2],[61,6,644,2,"_classCallCheck"],[61,21,644,2],[61,24,644,2,"_interopDefault"],[61,39,644,2],[61,40,644,2,"_babelRuntimeHelpersClassCallCheck"],[61,74,644,2],[62,2,644,2],[62,6,644,2,"_babelRuntimeHelpersCreateClass"],[62,37,644,2],[62,40,644,2,"require"],[62,47,644,2],[62,48,644,2,"_dependencyMap"],[62,62,644,2],[63,2,644,2],[63,6,644,2,"_createClass"],[63,18,644,2],[63,21,644,2,"_interopDefault"],[63,36,644,2],[63,37,644,2,"_babelRuntimeHelpersCreateClass"],[63,68,644,2],[64,2,1,0],[64,6,1,0,"_axios"],[64,12,1,0],[64,15,1,0,"require"],[64,22,1,0],[64,23,1,0,"_dependencyMap"],[64,37,1,0],[65,2,1,0],[65,6,1,0,"axios"],[65,11,1,0],[65,14,1,0,"_interopDefault"],[65,29,1,0],[65,30,1,0,"_axios"],[65,36,1,0],[66,2,2,0],[66,6,2,0,"_expoSecureStore"],[66,22,2,0],[66,25,2,0,"require"],[66,32,2,0],[66,33,2,0,"_dependencyMap"],[66,47,2,0],[67,2,2,0],[67,6,2,0,"SecureStore"],[67,17,2,0],[67,20,2,0,"_interopNamespace"],[67,37,2,0],[67,38,2,0,"_expoSecureStore"],[67,54,2,0],[68,2,3,0],[68,6,3,0,"_reactNativeAsyncStorageAsyncStorage"],[68,42,3,0],[68,45,3,0,"require"],[68,52,3,0],[68,53,3,0,"_dependencyMap"],[68,67,3,0],[69,2,3,0],[69,6,3,0,"AsyncStorage"],[69,18,3,0],[69,21,3,0,"_interopDefault"],[69,36,3,0],[69,37,3,0,"_reactNativeAsyncStorageAsyncStorage"],[69,73,3,0],[70,2,4,0],[70,6,4,0,"_expoConstants"],[70,20,4,0],[70,23,4,0,"require"],[70,30,4,0],[70,31,4,0,"_dependencyMap"],[70,45,4,0],[71,2,4,0],[71,6,4,0,"Constants"],[71,15,4,0],[71,18,4,0,"_interopDefault"],[71,33,4,0],[71,34,4,0,"_expoConstants"],[71,48,4,0],[72,2,6,0],[73,2,6,0],[73,6,7,6,"CrossPlatformStorage"],[73,26,7,26],[74,4,7,26],[74,13,7,26,"CrossPlatformStorage"],[74,34,7,26],[75,6,7,26],[75,10,7,26,"_classCallCheck"],[75,25,7,26],[75,26,7,26,"default"],[75,33,7,26],[75,41,7,26,"CrossPlatformStorage"],[75,61,7,26],[76,4,7,26],[77,4,7,26],[77,15,7,26,"_createClass"],[77,27,7,26],[77,28,7,26,"default"],[77,35,7,26],[77,37,7,26,"CrossPlatformStorage"],[77,57,7,26],[78,6,7,26,"key"],[78,9,7,26],[79,6,7,26,"value"],[79,11,7,26],[80,8,7,26],[80,12,7,26,"_getItem"],[80,20,7,26],[80,27,7,26,"_asyncToGenerator"],[80,44,7,26],[80,45,7,26,"default"],[80,52,7,26],[80,54,8,2],[80,65,8,23,"key"],[80,68,8,34],[80,70,8,60],[81,10,9,4],[81,14,9,8],[82,12,10,6],[83,12,11,6],[83,25,11,19,"AsyncStorage"],[83,37,11,31],[83,38,11,31,"default"],[83,45,11,31],[83,46,11,32,"getItem"],[83,53,11,39],[83,54,11,40,"key"],[83,57,11,43],[83,58,11,44],[84,10,12,4],[84,11,12,5],[84,12,12,6],[84,19,12,13,"error"],[84,24,12,18],[84,26,12,20],[85,12,13,6],[86,12,14,6],[86,16,14,10],[86,23,14,17,"window"],[86,29,14,23],[86,34,14,28],[86,45,14,39],[86,49,14,43,"window"],[86,55,14,49],[86,56,14,50,"localStorage"],[86,68,14,62],[86,70,14,64],[87,14,15,8],[87,21,15,15,"window"],[87,27,15,21],[87,28,15,22,"localStorage"],[87,40,15,34],[87,41,15,35,"getItem"],[87,48,15,42],[87,49,15,43,"key"],[87,52,15,46],[87,53,15,47],[88,12,16,6],[89,12,17,6],[89,19,17,13],[89,23,17,17],[90,10,18,4],[91,8,19,2],[91,9,19,3],[92,8,19,3],[92,17,8,15,"getItem"],[92,24,8,22,"getItem"],[92,25,8,22,"_x"],[92,27,8,22],[93,10,8,22],[93,17,8,22,"_getItem"],[93,25,8,22],[93,26,8,22,"apply"],[93,31,8,22],[93,38,8,22,"arguments"],[93,47,8,22],[94,8,8,22],[95,8,8,22],[95,15,8,15,"getItem"],[95,22,8,22],[96,6,8,22],[97,4,8,22],[98,6,8,22,"key"],[98,9,8,22],[99,6,8,22,"value"],[99,11,8,22],[100,8,8,22],[100,12,8,22,"_setItem"],[100,20,8,22],[100,27,8,22,"_asyncToGenerator"],[100,44,8,22],[100,45,8,22,"default"],[100,52,8,22],[100,54,21,2],[100,65,21,23,"key"],[100,68,21,34],[100,70,21,36,"value"],[100,75,21,49],[100,77,21,66],[101,10,22,4],[101,14,22,8],[102,12,23,6],[103,12,24,6],[103,18,24,12,"AsyncStorage"],[103,30,24,24],[103,31,24,24,"default"],[103,38,24,24],[103,39,24,25,"setItem"],[103,46,24,32],[103,47,24,33,"key"],[103,50,24,36],[103,52,24,38,"value"],[103,57,24,43],[103,58,24,44],[104,10,25,4],[104,11,25,5],[104,12,25,6],[104,19,25,13,"error"],[104,24,25,18],[104,26,25,20],[105,12,26,6],[106,12,27,6],[106,16,27,10],[106,23,27,17,"window"],[106,29,27,23],[106,34,27,28],[106,45,27,39],[106,49,27,43,"window"],[106,55,27,49],[106,56,27,50,"localStorage"],[106,68,27,62],[106,70,27,64],[107,14,28,8,"window"],[107,20,28,14],[107,21,28,15,"localStorage"],[107,33,28,27],[107,34,28,28,"setItem"],[107,41,28,35],[107,42,28,36,"key"],[107,45,28,39],[107,47,28,41,"value"],[107,52,28,46],[107,53,28,47],[108,12,29,6],[109,10,30,4],[110,8,31,2],[110,9,31,3],[111,8,31,3],[111,17,21,15,"setItem"],[111,24,21,22,"setItem"],[111,25,21,22,"_x2"],[111,28,21,22],[111,30,21,22,"_x3"],[111,33,21,22],[112,10,21,22],[112,17,21,22,"_setItem"],[112,25,21,22],[112,26,21,22,"apply"],[112,31,21,22],[112,38,21,22,"arguments"],[112,47,21,22],[113,8,21,22],[114,8,21,22],[114,15,21,15,"setItem"],[114,22,21,22],[115,6,21,22],[116,4,21,22],[117,6,21,22,"key"],[117,9,21,22],[118,6,21,22,"value"],[118,11,21,22],[119,8,21,22],[119,12,21,22,"_removeItem"],[119,23,21,22],[119,30,21,22,"_asyncToGenerator"],[119,47,21,22],[119,48,21,22,"default"],[119,55,21,22],[119,57,33,2],[119,68,33,26,"key"],[119,71,33,37],[119,73,33,54],[120,10,34,4],[120,14,34,8],[121,12,35,6],[121,18,35,12,"AsyncStorage"],[121,30,35,24],[121,31,35,24,"default"],[121,38,35,24],[121,39,35,25,"removeItem"],[121,49,35,35],[121,50,35,36,"key"],[121,53,35,39],[121,54,35,40],[122,10,36,4],[122,11,36,5],[122,12,36,6],[122,19,36,13,"error"],[122,24,36,18],[122,26,36,20],[123,12,37,6],[123,16,37,10],[123,23,37,17,"window"],[123,29,37,23],[123,34,37,28],[123,45,37,39],[123,49,37,43,"window"],[123,55,37,49],[123,56,37,50,"localStorage"],[123,68,37,62],[123,70,37,64],[124,14,38,8,"window"],[124,20,38,14],[124,21,38,15,"localStorage"],[124,33,38,27],[124,34,38,28,"removeItem"],[124,44,38,38],[124,45,38,39,"key"],[124,48,38,42],[124,49,38,43],[125,12,39,6],[126,10,40,4],[127,8,41,2],[127,9,41,3],[128,8,41,3],[128,17,33,15,"removeItem"],[128,27,33,25,"removeItem"],[128,28,33,25,"_x4"],[128,31,33,25],[129,10,33,25],[129,17,33,25,"_removeItem"],[129,28,33,25],[129,29,33,25,"apply"],[129,34,33,25],[129,41,33,25,"arguments"],[129,50,33,25],[130,8,33,25],[131,8,33,25],[131,15,33,15,"removeItem"],[131,25,33,25],[132,6,33,25],[133,4,33,25],[134,2,33,25],[134,7,44,0],[135,2,45,0],[135,6,45,6,"BACKEND_URL"],[135,17,45,17],[135,20,45,20,"Constants"],[135,29,45,29],[135,30,45,29,"default"],[135,37,45,29],[135,38,45,30,"expoConfig"],[135,48,45,40],[135,50,45,42,"extra"],[135,55,45,47],[135,57,45,49,"backendUrl"],[135,67,45,59],[135,71,45,59,"_expoVirtualEnv"],[135,86,45,59],[135,87,45,59,"env"],[135,90,45,59],[135,91,45,59,"EXPO_PUBLIC_BACKEND_URL"],[135,114,45,98],[135,118,45,102],[135,169,45,153],[136,2,45,154],[136,6,47,6,"ApiClient"],[136,15,47,15],[137,4,50,2],[137,13,50,2,"ApiClient"],[137,23,50,2],[137,25,50,16],[138,6,50,16],[138,10,50,16,"_classCallCheck"],[138,25,50,16],[138,26,50,16,"default"],[138,33,50,16],[138,41,50,16,"ApiClient"],[138,50,50,16],[139,6,51,4],[139,10,51,8],[139,11,51,9,"client"],[139,17,51,15],[139,20,51,18,"axios"],[139,25,51,23],[139,26,51,23,"default"],[139,33,51,23],[139,34,51,24,"create"],[139,40,51,30],[139,41,51,31],[140,8,52,6,"baseURL"],[140,15,52,13],[140,17,52,15],[140,20,52,18,"BACKEND_URL"],[140,31,52,29],[140,37,52,35],[141,8,53,6,"timeout"],[141,15,53,13],[141,17,53,15],[141,22,53,20],[142,8,54,6,"headers"],[142,15,54,13],[142,17,54,15],[143,10,55,8],[143,24,55,22],[143,26,55,24],[144,8,56,6],[145,6,57,4],[145,7,57,5],[145,8,57,6],[147,6,59,4],[148,6,60,4],[148,10,60,8],[148,11,60,9,"client"],[148,17,60,15],[148,18,60,16,"interceptors"],[148,30,60,28],[148,31,60,29,"request"],[148,38,60,36],[148,39,60,37,"use"],[148,42,60,40],[149,8,60,40],[149,12,60,40,"_ref"],[149,16,60,40],[149,23,60,40,"_asyncToGenerator"],[149,40,60,40],[149,41,60,40,"default"],[149,48,60,40],[149,50,60,41],[149,61,60,48,"config"],[149,67,60,54],[149,69,60,59],[150,10,61,6,"console"],[150,17,61,13],[150,18,61,14,"log"],[150,21,61,17],[150,22,61,18],[150,41,61,37,"config"],[150,47,61,43],[150,48,61,44,"method"],[150,54,61,50],[150,56,61,52,"toUpperCase"],[150,67,61,63],[150,68,61,64],[150,69,61,65],[150,73,61,69,"config"],[150,79,61,75],[150,80,61,76,"url"],[150,83,61,79],[150,85,61,81],[150,87,61,83,"config"],[150,93,61,89],[150,94,61,90,"data"],[150,98,61,94],[150,99,61,95],[151,10,63,6],[151,14,63,12,"token"],[151,19,63,17],[151,28,63,26,"SecureStore"],[151,39,63,37],[151,40,63,38,"getItemAsync"],[151,52,63,50],[151,53,63,51],[151,68,63,66],[151,69,63,67],[152,10,64,6],[152,14,64,10,"token"],[152,19,64,15],[152,21,64,17],[153,12,65,8,"config"],[153,18,65,14],[153,19,65,15,"headers"],[153,26,65,22],[153,27,65,23,"Authorization"],[153,40,65,36],[153,43,65,39],[153,53,65,49,"token"],[153,58,65,54],[153,60,65,56],[154,10,66,6],[155,10,67,6],[155,17,67,13,"config"],[155,23,67,19],[156,8,68,4],[156,9,68,5],[157,8,68,5],[157,25,68,5,"_x5"],[157,28,68,5],[158,10,68,5],[158,17,68,5,"_ref"],[158,21,68,5],[158,22,68,5,"apply"],[158,27,68,5],[158,34,68,5,"arguments"],[158,43,68,5],[159,8,68,5],[160,6,68,5],[160,10,68,6],[162,6,70,4],[163,6,71,4],[163,10,71,8],[163,11,71,9,"client"],[163,17,71,15],[163,18,71,16,"interceptors"],[163,30,71,28],[163,31,71,29,"response"],[163,39,71,37],[163,40,71,38,"use"],[163,43,71,41],[163,44,72,7,"response"],[163,52,72,15],[163,56,72,20],[164,8,73,8,"console"],[164,15,73,15],[164,16,73,16,"log"],[164,19,73,19],[164,20,73,20],[164,39,73,39,"response"],[164,47,73,47],[164,48,73,48,"status"],[164,54,73,54],[164,56,73,56],[164,58,73,58,"response"],[164,66,73,66],[164,67,73,67,"data"],[164,71,73,71],[164,72,73,72],[165,8,74,8],[165,15,74,15,"response"],[165,23,74,23],[166,6,75,6],[166,7,75,7],[166,9,76,7,"error"],[166,14,76,12],[166,18,76,17],[167,8,77,8,"console"],[167,15,77,15],[167,16,77,16,"log"],[167,19,77,19],[167,20,77,20],[167,36,77,36,"error"],[167,41,77,41],[167,42,77,42,"response"],[167,50,77,50],[167,52,77,52,"status"],[167,58,77,58],[167,62,77,62],[167,71,77,71],[167,73,77,73],[167,75,77,75,"error"],[167,80,77,80],[167,81,77,81,"response"],[167,89,77,89],[167,91,77,91,"data"],[167,95,77,95],[167,99,77,99,"error"],[167,104,77,104],[167,105,77,105,"message"],[167,112,77,112],[167,113,77,113],[168,8,79,8],[168,12,79,12,"error"],[168,17,79,17],[168,18,79,18,"response"],[168,26,79,26],[168,28,79,28,"status"],[168,34,79,34],[168,39,79,39],[168,42,79,42],[168,44,79,44],[169,10,80,10],[170,10,81,10,"SecureStore"],[170,21,81,21],[170,22,81,22,"deleteItemAsync"],[170,37,81,37],[170,38,81,38],[170,53,81,53],[170,54,81,54],[171,8,82,8],[172,8,83,8],[172,15,83,15,"Promise"],[172,22,83,22],[172,23,83,23,"reject"],[172,29,83,29],[172,30,83,30,"error"],[172,35,83,35],[172,36,83,36],[173,6,84,6],[173,7,85,4],[173,8,85,5],[174,4,86,2],[175,4,86,3],[175,15,86,3,"_createClass"],[175,27,86,3],[175,28,86,3,"default"],[175,35,86,3],[175,37,86,3,"ApiClient"],[175,46,86,3],[176,6,86,3,"key"],[176,9,86,3],[177,6,86,3,"value"],[177,11,86,3],[178,8,86,3],[178,12,86,3,"_get"],[178,16,86,3],[178,23,86,3,"_asyncToGenerator"],[178,40,86,3],[178,41,86,3,"default"],[178,48,86,3],[178,50,88,2],[178,61,88,21,"url"],[178,64,88,32],[178,66,88,46],[179,10,89,4],[179,14,89,10,"response"],[179,22,89,36],[179,31,89,45],[179,35,89,49],[179,36,89,50,"client"],[179,42,89,56],[179,43,89,57,"get"],[179,46,89,60],[179,47,89,61,"url"],[179,50,89,64],[179,51,89,65],[180,10,90,4],[180,17,90,11,"response"],[180,25,90,19],[180,26,90,20,"data"],[180,30,90,24],[181,8,91,2],[181,9,91,3],[182,8,91,3],[182,17,88,8,"get"],[182,20,88,11,"get"],[182,21,88,11,"_x6"],[182,24,88,11],[183,10,88,11],[183,17,88,11,"_get"],[183,21,88,11],[183,22,88,11,"apply"],[183,27,88,11],[183,34,88,11,"arguments"],[183,43,88,11],[184,8,88,11],[185,8,88,11],[185,15,88,8,"get"],[185,18,88,11],[186,6,88,11],[187,4,88,11],[188,6,88,11,"key"],[188,9,88,11],[189,6,88,11,"value"],[189,11,88,11],[190,8,88,11],[190,12,88,11,"_post"],[190,17,88,11],[190,24,88,11,"_asyncToGenerator"],[190,41,88,11],[190,42,88,11,"default"],[190,49,88,11],[190,51,93,2],[190,62,93,22,"url"],[190,65,93,33],[190,67,93,35,"data"],[190,71,93,45],[190,73,93,59],[191,10,94,4],[191,14,94,10,"response"],[191,22,94,36],[191,31,94,45],[191,35,94,49],[191,36,94,50,"client"],[191,42,94,56],[191,43,94,57,"post"],[191,47,94,61],[191,48,94,62,"url"],[191,51,94,65],[191,53,94,67,"data"],[191,57,94,71],[191,58,94,72],[192,10,95,4],[192,17,95,11,"response"],[192,25,95,19],[192,26,95,20,"data"],[192,30,95,24],[193,8,96,2],[193,9,96,3],[194,8,96,3],[194,17,93,8,"post"],[194,21,93,12,"post"],[194,22,93,12,"_x7"],[194,25,93,12],[194,27,93,12,"_x8"],[194,30,93,12],[195,10,93,12],[195,17,93,12,"_post"],[195,22,93,12],[195,23,93,12,"apply"],[195,28,93,12],[195,35,93,12,"arguments"],[195,44,93,12],[196,8,93,12],[197,8,93,12],[197,15,93,8,"post"],[197,19,93,12],[198,6,93,12],[199,4,93,12],[200,6,93,12,"key"],[200,9,93,12],[201,6,93,12,"value"],[201,11,93,12],[202,8,93,12],[202,12,93,12,"_patch"],[202,18,93,12],[202,25,93,12,"_asyncToGenerator"],[202,42,93,12],[202,43,93,12,"default"],[202,50,93,12],[202,52,98,2],[202,63,98,23,"url"],[202,66,98,34],[202,68,98,36,"data"],[202,72,98,46],[202,74,98,60],[203,10,99,4],[203,14,99,10,"response"],[203,22,99,36],[203,31,99,45],[203,35,99,49],[203,36,99,50,"client"],[203,42,99,56],[203,43,99,57,"patch"],[203,48,99,62],[203,49,99,63,"url"],[203,52,99,66],[203,54,99,68,"data"],[203,58,99,72],[203,59,99,73],[204,10,100,4],[204,17,100,11,"response"],[204,25,100,19],[204,26,100,20,"data"],[204,30,100,24],[205,8,101,2],[205,9,101,3],[206,8,101,3],[206,17,98,8,"patch"],[206,22,98,13,"patch"],[206,23,98,13,"_x9"],[206,26,98,13],[206,28,98,13,"_x0"],[206,31,98,13],[207,10,98,13],[207,17,98,13,"_patch"],[207,23,98,13],[207,24,98,13,"apply"],[207,29,98,13],[207,36,98,13,"arguments"],[207,45,98,13],[208,8,98,13],[209,8,98,13],[209,15,98,8,"patch"],[209,20,98,13],[210,6,98,13],[211,4,98,13],[212,6,98,13,"key"],[212,9,98,13],[213,6,98,13,"value"],[213,11,98,13],[214,8,98,13],[214,12,98,13,"_delete2"],[214,20,98,13],[214,27,98,13,"_asyncToGenerator"],[214,44,98,13],[214,45,98,13,"default"],[214,52,98,13],[214,54,103,2],[214,65,103,24,"url"],[214,68,103,35],[214,70,103,49],[215,10,104,4],[215,14,104,10,"response"],[215,22,104,36],[215,31,104,45],[215,35,104,49],[215,36,104,50,"client"],[215,42,104,56],[215,43,104,57,"delete"],[215,49,104,63],[215,50,104,64,"url"],[215,53,104,67],[215,54,104,68],[216,10,105,4],[216,17,105,11,"response"],[216,25,105,19],[216,26,105,20,"data"],[216,30,105,24],[217,8,106,2],[217,9,106,3],[218,8,106,3],[218,17,103,8,"delete"],[218,24,103,14,"delete"],[218,25,103,14,"_x1"],[218,28,103,14],[219,10,103,14],[219,17,103,14,"_delete2"],[219,25,103,14],[219,26,103,14,"apply"],[219,31,103,14],[219,38,103,14,"arguments"],[219,47,103,14],[220,8,103,14],[221,8,103,14],[221,15,103,8,"delete"],[221,22,103,14],[222,6,103,14],[223,4,103,14],[224,6,103,14,"key"],[224,9,103,14],[225,6,103,14,"value"],[225,11,103,14],[226,8,103,14],[226,12,103,14,"_put"],[226,16,103,14],[226,23,103,14,"_asyncToGenerator"],[226,40,103,14],[226,41,103,14,"default"],[226,48,103,14],[226,50,108,2],[226,61,108,21,"url"],[226,64,108,32],[226,66,108,34,"data"],[226,70,108,44],[226,72,108,58],[227,10,109,4],[227,14,109,10,"response"],[227,22,109,36],[227,31,109,45],[227,35,109,49],[227,36,109,50,"client"],[227,42,109,56],[227,43,109,57,"put"],[227,46,109,60],[227,47,109,61,"url"],[227,50,109,64],[227,52,109,66,"data"],[227,56,109,70],[227,57,109,71],[228,10,110,4],[228,17,110,11,"response"],[228,25,110,19],[228,26,110,20,"data"],[228,30,110,24],[229,8,111,2],[229,9,111,3],[230,8,111,3],[230,17,108,8,"put"],[230,20,108,11,"put"],[230,21,108,11,"_x10"],[230,25,108,11],[230,27,108,11,"_x11"],[230,31,108,11],[231,10,108,11],[231,17,108,11,"_put"],[231,21,108,11],[231,22,108,11,"apply"],[231,27,108,11],[231,34,108,11,"arguments"],[231,43,108,11],[232,8,108,11],[233,8,108,11],[233,15,108,8,"put"],[233,18,108,11],[234,6,108,11],[235,4,108,11],[236,2,108,11],[237,2,114,0],[237,6,114,6,"apiClient"],[237,15,114,15],[237,18,114,18],[237,22,114,22,"ApiClient"],[237,31,114,31],[237,32,114,32],[237,33,114,33],[239,2,116,0],[240,2,117,7],[240,6,117,13,"authAPI"],[240,13,117,20],[240,16,117,23],[241,4,118,2,"createSession"],[241,17,118,15],[241,19,118,18,"sessionId"],[241,28,118,35],[241,32,119,4,"apiClient"],[241,41,119,13],[241,42,119,14,"post"],[241,46,119,18],[241,47,119,19],[241,62,119,34],[241,64,119,36],[241,68,119,40],[241,70,119,42],[242,6,120,6,"headers"],[242,13,120,13],[242,15,120,15],[243,8,120,17],[243,22,120,31],[243,24,120,33,"sessionId"],[244,6,120,43],[245,4,121,4],[245,5,121,5],[245,6,121,6],[246,4,123,2,"signup"],[246,10,123,8],[246,12,123,11,"data"],[246,16,129,3],[246,20,129,8,"apiClient"],[246,29,129,17],[246,30,129,18,"post"],[246,34,129,22],[246,35,129,23],[246,49,129,37],[246,51,129,39,"data"],[246,55,129,43],[246,56,129,44],[247,4,131,2,"verifyOTP"],[247,13,131,11],[247,15,131,14,"data"],[247,19,131,55],[247,23,132,4,"apiClient"],[247,32,132,13],[247,33,132,14,"post"],[247,37,132,18],[247,38,132,19],[247,56,132,37],[247,58,132,39,"data"],[247,62,132,43],[247,63,132,44],[248,4,134,2,"login"],[248,9,134,7],[248,11,134,10,"data"],[248,15,134,51],[248,19,135,4,"apiClient"],[248,28,135,13],[248,29,135,14,"post"],[248,33,135,18],[248,34,135,19],[248,47,135,32],[248,49,135,34,"data"],[248,53,135,38],[248,54,135,39],[249,4,137,2,"resendOTP"],[249,13,137,11],[249,15,137,14,"email"],[249,20,137,27],[249,24,138,4,"apiClient"],[249,33,138,13],[249,34,138,14,"post"],[249,38,138,18],[249,39,138,19],[249,57,138,37],[249,59,138,39],[250,6,138,41,"email"],[251,4,138,47],[251,5,138,48],[251,6,138,49],[252,4,140,2,"getCurrentUser"],[252,18,140,16],[252,20,140,18,"getCurrentUser"],[252,21,140,18],[252,26,140,24,"apiClient"],[252,35,140,33],[252,36,140,34,"get"],[252,39,140,37],[252,40,140,38],[252,50,140,48],[252,51,140,49],[253,4,142,2,"logout"],[253,10,142,8],[253,12,142,10,"logout"],[253,13,142,10],[253,18,142,16,"apiClient"],[253,27,142,25],[253,28,142,26,"post"],[253,32,142,30],[253,33,142,31],[253,47,142,45],[253,48,142,46],[254,4,144,2,"updateLanguage"],[254,18,144,16],[254,20,144,19,"language"],[254,28,144,35],[254,32,145,4,"apiClient"],[254,41,145,13],[254,42,145,14,"patch"],[254,47,145,19],[254,48,145,20],[254,64,145,36],[254,66,145,38],[254,70,145,42],[254,72,145,44],[255,6,146,6,"params"],[255,12,146,12],[255,14,146,14],[256,8,146,16,"language"],[257,6,146,25],[258,4,147,4],[258,5,147,5],[258,6,147,6],[259,4,149,2,"toggleBiometric"],[259,19,149,17],[259,21,149,20,"enabled"],[259,28,149,36],[259,32,150,4,"apiClient"],[259,41,150,13],[259,42,150,14,"patch"],[259,47,150,19],[259,48,150,20],[259,65,150,37],[259,67,150,39],[259,71,150,43],[259,73,150,45],[260,6,151,6,"params"],[260,12,151,12],[260,14,151,14],[261,8,151,16,"enabled"],[262,6,151,24],[263,4,152,4],[263,5,152,5],[264,2,153,0],[264,3,153,1],[266,2,155,0],[267,2,156,0],[267,6,156,6,"logAdminAction"],[267,20,156,20],[268,4,156,20],[268,8,156,20,"_ref2"],[268,13,156,20],[268,20,156,20,"_asyncToGenerator"],[268,37,156,20],[268,38,156,20,"default"],[268,45,156,20],[268,47,156,23],[268,58,156,30,"action"],[268,64,156,44],[268,66,156,46,"competitionName"],[268,81,156,69],[268,83,156,71,"adminName"],[268,92,156,88],[268,94,156,90,"details"],[268,101,156,103],[268,103,156,108],[269,6,157,2],[269,10,157,6],[270,8,158,4],[270,12,158,10,"logs"],[270,16,158,14],[270,19,158,17],[270,26,158,23,"CrossPlatformStorage"],[270,46,158,43],[270,47,158,44,"getItem"],[270,54,158,51],[270,55,158,52],[270,66,158,63],[270,67,158,64],[270,72,158,68],[270,76,158,72],[271,8,159,4],[271,12,159,10,"adminLogs"],[271,21,159,19],[271,24,159,22,"JSON"],[271,28,159,26],[271,29,159,27,"parse"],[271,34,159,32],[271,35,159,33,"logs"],[271,39,159,37],[271,40,159,38],[272,8,161,4],[272,12,161,10,"logEntry"],[272,20,161,18],[272,23,161,21],[273,10,162,6,"id"],[273,12,162,8],[273,14,162,10],[273,21,162,17,"Date"],[273,25,162,21],[273,26,162,22,"now"],[273,29,162,25],[273,30,162,26],[273,31,162,27],[273,33,162,29],[274,10,163,6,"action"],[274,16,163,12],[275,10,164,6,"competition_name"],[275,26,164,22],[275,28,164,24,"competitionName"],[275,43,164,39],[276,10,165,6,"admin_name"],[276,20,165,16],[276,22,165,18,"adminName"],[276,31,165,27],[277,10,166,6,"details"],[277,17,166,13],[278,10,167,6,"timestamp"],[278,19,167,15],[278,21,167,17],[278,25,167,21,"Date"],[278,29,167,25],[278,30,167,26],[278,31,167,27],[278,32,167,28,"toISOString"],[278,43,167,39],[278,44,167,40],[279,8,168,4],[279,9,168,5],[280,8,170,4,"adminLogs"],[280,17,170,13],[280,18,170,14,"push"],[280,22,170,18],[280,23,170,19,"logEntry"],[280,31,170,27],[280,32,170,28],[281,8,171,4],[281,14,171,10,"CrossPlatformStorage"],[281,34,171,30],[281,35,171,31,"setItem"],[281,42,171,38],[281,43,171,39],[281,54,171,50],[281,56,171,52,"JSON"],[281,60,171,56],[281,61,171,57,"stringify"],[281,70,171,66],[281,71,171,67,"adminLogs"],[281,80,171,76],[281,81,171,77],[281,82,171,78],[282,8,173,4,"console"],[282,15,173,11],[282,16,173,12,"log"],[282,19,173,15],[282,20,173,16],[282,45,173,41],[282,47,173,43,"action"],[282,53,173,49],[282,55,173,51,"competitionName"],[282,70,173,66],[282,71,173,67],[283,6,174,2],[283,7,174,3],[283,8,174,4],[283,15,174,11,"error"],[283,20,174,16],[283,22,174,18],[284,8,175,4,"console"],[284,15,175,11],[284,16,175,12,"error"],[284,21,175,17],[284,22,175,18],[284,51,175,47],[284,53,175,49,"error"],[284,58,175,54],[284,59,175,55],[285,6,176,2],[286,4,177,0],[286,5,177,1],[287,4,177,1],[287,20,156,6,"logAdminAction"],[287,34,156,20,"logAdminAction"],[287,35,156,20,"_x12"],[287,39,156,20],[287,41,156,20,"_x13"],[287,45,156,20],[287,47,156,20,"_x14"],[287,51,156,20],[287,53,156,20,"_x15"],[287,57,156,20],[288,6,156,20],[288,13,156,20,"_ref2"],[288,18,156,20],[288,19,156,20,"apply"],[288,24,156,20],[288,31,156,20,"arguments"],[288,40,156,20],[289,4,156,20],[290,2,156,20],[290,5,177,1],[292,2,179,0],[293,2,180,7],[293,6,180,13,"competitionAPI"],[293,20,180,27],[293,23,180,30],[294,4,181,2,"create"],[294,10,181,8],[294,12,181,11,"data"],[294,16,196,3],[294,20,196,8,"apiClient"],[294,29,196,17],[294,30,196,18,"post"],[294,34,196,22],[294,35,196,23],[294,50,196,38],[294,52,196,40,"data"],[294,56,196,44],[294,57,196,45],[295,4,198,2,"join"],[295,8,198,6],[295,10,198,9,"inviteCode"],[295,20,198,27],[295,24,199,4,"apiClient"],[295,33,199,13],[295,34,199,14,"post"],[295,38,199,18],[295,39,199,19],[295,59,199,39],[295,61,199,41],[296,6,199,43,"invite_code"],[296,17,199,54],[296,19,199,56,"inviteCode"],[297,4,199,67],[297,5,199,68],[297,6,199,69],[298,4,201,2,"getMyCompetitions"],[298,21,201,19],[298,23,201,21,"getMyCompetitions"],[298,24,201,21],[298,29,201,27,"apiClient"],[298,38,201,36],[298,39,201,37,"get"],[298,42,201,40],[298,43,201,41],[298,61,201,59],[298,62,201,60],[299,4,203,2,"getCompetition"],[299,18,203,16],[299,20,203,19,"id"],[299,22,203,29],[299,26,203,34,"apiClient"],[299,35,203,43],[299,36,203,44,"get"],[299,39,203,47],[299,40,203,48],[299,57,203,65,"id"],[299,59,203,67],[299,61,203,69],[299,62,203,70],[300,4,205,2,"updateStandings"],[300,19,205,17],[300,21,205,19,"updateStandings"],[300,22,206,4,"id"],[300,24,206,14],[300,26,207,4,"standings"],[300,35,207,18],[300,37,208,4,"matchday"],[300,45,208,21],[300,50,210,4,"apiClient"],[300,59,210,13],[300,60,210,14,"patch"],[300,65,210,19],[300,66,210,20],[300,83,210,37,"id"],[300,85,210,39],[300,97,210,51],[300,99,210,53],[301,6,211,6,"standings"],[301,15,211,15],[302,6,212,6,"matchday"],[303,4,213,4],[303,5,213,5],[303,6,213,6],[304,4,215,2,"payFee"],[304,10,215,8],[304,12,215,10,"payFee"],[304,13,215,11,"id"],[304,15,215,21],[304,17,215,23,"amount"],[304,23,215,37],[304,28,216,4,"apiClient"],[304,37,216,13],[304,38,216,14,"post"],[304,42,216,18],[304,43,216,19],[304,60,216,36,"id"],[304,62,216,38],[304,68,216,44],[304,70,216,46],[304,74,216,50],[304,76,216,52],[305,6,217,6,"params"],[305,12,217,12],[305,14,217,14],[306,8,217,16,"amount"],[307,6,217,23],[308,4,218,4],[308,5,218,5],[308,6,218,6],[309,4,220,2,"getTransactions"],[309,19,220,17],[309,21,220,20,"id"],[309,23,220,30],[309,27,221,4,"apiClient"],[309,36,221,13],[309,37,221,14,"get"],[309,40,221,17],[309,41,221,18],[309,58,221,35,"id"],[309,60,221,37],[309,75,221,52],[309,76,221,53],[310,4,223,2],[311,4,224,2,"payMatchdays"],[311,16,224,14],[311,18,224,16,"payMatchdays"],[311,19,224,17,"competitionId"],[311,32,224,38],[311,34,224,40,"matchdays"],[311,43,224,59],[311,48,225,4,"apiClient"],[311,57,225,13],[311,58,225,14,"post"],[311,62,225,18],[311,63,225,19],[311,80,225,36,"competitionId"],[311,93,225,49],[311,113,225,69],[311,115,225,71],[312,6,226,6,"competition_id"],[312,20,226,20],[312,22,226,22,"competitionId"],[312,35,226,35],[313,6,227,6,"matchdays"],[314,4,228,4],[314,5,228,5],[314,6,228,6],[315,4,230,2,"getMatchdayPayments"],[315,23,230,21],[315,25,230,24,"competitionId"],[315,38,230,45],[315,42,231,4,"apiClient"],[315,51,231,13],[315,52,231,14,"get"],[315,55,231,17],[315,56,231,18],[315,73,231,35,"competitionId"],[315,86,231,48],[315,106,231,68],[315,107,231,69],[316,4,233,2,"getPaymentStatusTable"],[316,25,233,23],[316,27,233,26,"competitionId"],[316,40,233,47],[316,44,234,4,"apiClient"],[316,53,234,13],[316,54,234,14,"get"],[316,57,234,17],[316,58,234,18],[316,75,234,35,"competitionId"],[316,88,234,48],[316,111,234,71],[316,112,234,72],[317,4,236,2],[318,4,237,2,"createMock"],[318,14,237,12],[319,6,237,12],[319,10,237,12,"_ref3"],[319,15,237,12],[319,22,237,12,"_asyncToGenerator"],[319,39,237,12],[319,40,237,12,"default"],[319,47,237,12],[319,49,237,14],[319,60,237,21,"data"],[319,64,250,3],[319,66,250,8],[320,8,251,4,"console"],[320,15,251,11],[320,16,251,12,"log"],[320,19,251,15],[320,20,251,16],[320,52,251,48],[320,54,251,50,"data"],[320,58,251,54],[320,59,251,55,"name"],[320,63,251,59],[320,64,251,60],[321,8,252,4,"console"],[321,15,252,11],[321,16,252,12,"log"],[321,19,252,15],[321,20,252,16],[321,41,252,37],[321,43,252,39,"data"],[321,47,252,43],[321,48,252,44,"total_matchdays"],[321,63,252,59],[321,67,252,63],[321,69,252,65],[321,70,252,66],[323,8,254,4],[324,8,255,4],[324,12,255,10,"storedCompetitions"],[324,30,255,28],[324,39,255,37,"CrossPlatformStorage"],[324,59,255,57],[324,60,255,58,"getItem"],[324,67,255,65],[324,68,255,66],[324,87,255,85],[324,88,255,86],[325,8,256,4],[325,12,256,8,"existingCompetitions"],[325,32,256,28],[325,35,256,31,"storedCompetitions"],[325,53,256,49],[325,56,256,52,"JSON"],[325,60,256,56],[325,61,256,57,"parse"],[325,66,256,62],[325,67,256,63,"storedCompetitions"],[325,85,256,81],[325,86,256,82],[325,89,256,85],[325,91,256,87],[326,8,258,4,"console"],[326,15,258,11],[326,16,258,12,"log"],[326,19,258,15],[326,20,258,16],[326,62,258,58],[326,64,258,60,"existingCompetitions"],[326,84,258,80],[326,85,258,81,"length"],[326,91,258,87],[326,92,258,88],[328,8,260,4],[329,8,261,4],[329,12,261,10,"existingNames"],[329,25,261,23],[329,28,261,26,"existingCompetitions"],[329,48,261,46],[329,49,261,47,"map"],[329,52,261,50],[329,53,261,52,"comp"],[329,57,261,61],[329,61,261,66,"comp"],[329,65,261,70],[329,66,261,71,"name"],[329,70,261,75],[329,71,261,76,"toLowerCase"],[329,82,261,87],[329,83,261,88],[329,84,261,89],[329,85,261,90],[330,8,262,4],[330,12,262,8,"existingNames"],[330,25,262,21],[330,26,262,22,"includes"],[330,34,262,30],[330,35,262,31,"data"],[330,39,262,35],[330,40,262,36,"name"],[330,44,262,40],[330,45,262,41,"toLowerCase"],[330,56,262,52],[330,57,262,53],[330,58,262,54],[330,59,262,55],[330,61,262,57],[331,10,263,6],[331,16,263,12],[331,20,263,16,"Error"],[331,25,263,21],[331,26,263,22],[331,88,263,84],[331,89,263,85],[332,8,264,4],[334,8,266,4],[335,8,267,4],[335,12,267,10,"newCompetition"],[335,26,267,24],[335,29,267,27],[336,10,268,6,"_id"],[336,13,268,9],[336,15,268,11],[336,23,268,19,"Date"],[336,27,268,23],[336,28,268,24,"now"],[336,31,268,27],[336,32,268,28],[336,33,268,29],[336,35,268,31],[337,10,269,6,"name"],[337,14,269,10],[337,16,269,12,"data"],[337,20,269,16],[337,21,269,17,"name"],[337,25,269,21],[338,10,270,6,"total_matchdays"],[338,25,270,21],[338,27,270,23,"data"],[338,31,270,27],[338,32,270,28,"total_matchdays"],[338,47,270,43],[338,51,270,47],[338,53,270,49],[339,10,271,6,"participation_cost_per_team"],[339,37,271,33],[339,39,271,35,"data"],[339,43,271,39],[339,44,271,40,"participation_cost_per_team"],[339,71,271,67],[339,75,271,71],[339,80,271,76],[340,10,272,6,"expected_teams"],[340,24,272,20],[340,26,272,22,"data"],[340,30,272,26],[340,31,272,27,"expected_teams"],[340,45,272,41],[340,49,272,45],[340,50,272,46],[341,10,273,6,"total_prize_pool"],[341,26,273,22],[341,28,273,24,"data"],[341,32,273,28],[341,33,273,29,"total_prize_pool"],[341,49,273,45],[341,53,273,49],[341,59,273,55],[342,10,274,6,"daily_payment_enabled"],[342,31,274,27],[342,33,274,29,"data"],[342,37,274,33],[342,38,274,34,"daily_payment_enabled"],[342,59,274,55],[342,63,274,59],[342,68,274,64],[343,10,275,6,"daily_payment_amount"],[343,30,275,26],[343,32,275,28,"data"],[343,36,275,32],[343,37,275,33,"daily_payment_amount"],[343,57,275,53],[343,61,275,57],[343,64,275,60],[344,10,276,6,"rules"],[344,15,276,11],[344,17,276,13,"data"],[344,21,276,17],[344,22,276,18,"rules"],[344,27,276,23],[345,10,277,6,"invite_code"],[345,21,277,17],[345,23,277,19,"Math"],[345,27,277,23],[345,28,277,24,"random"],[345,34,277,30],[345,35,277,31],[345,36,277,32],[345,37,277,33,"toString"],[345,45,277,41],[345,46,277,42],[345,48,277,44],[345,49,277,45],[345,50,277,46,"substr"],[345,56,277,52],[345,57,277,53],[345,58,277,54],[345,60,277,56],[345,61,277,57],[345,62,277,58],[345,63,277,59,"toUpperCase"],[345,74,277,70],[345,75,277,71],[345,76,277,72],[346,10,278,6,"invite_link"],[346,21,278,17],[346,23,278,19],[346,52,278,48,"Math"],[346,56,278,52],[346,57,278,53,"random"],[346,63,278,59],[346,64,278,60],[346,65,278,61],[346,66,278,62,"toString"],[346,74,278,70],[346,75,278,71],[346,77,278,73],[346,78,278,74],[346,79,278,75,"substr"],[346,85,278,81],[346,86,278,82],[346,87,278,83],[346,89,278,85],[346,90,278,86],[346,91,278,87],[346,92,278,88,"toUpperCase"],[346,103,278,99],[346,104,278,100],[346,105,278,101],[346,107,278,103],[347,10,279,6,"admin_id"],[347,18,279,14],[347,20,279,16],[347,46,279,42],[348,10,279,44],[349,10,280,6,"participants"],[349,22,280,18],[349,24,280,20],[349,25,281,8],[350,12,282,10,"id"],[350,14,282,12],[350,16,282,14],[350,42,282,40],[351,12,283,10,"name"],[351,16,283,14],[351,18,283,16],[351,35,283,33],[352,12,284,10,"email"],[352,17,284,15],[352,19,284,17],[352,38,284,36],[353,12,285,10,"is_admin"],[353,20,285,18],[353,22,285,20],[353,26,285,24],[354,12,286,10,"paid_matchdays"],[354,26,286,24],[354,28,286,26],[354,29,286,27],[354,30,286,28],[354,32,286,30],[354,33,286,31],[354,34,286,32],[355,12,286,34],[356,12,287,10,"points"],[356,18,287,16],[356,20,287,18],[357,10,288,8],[357,11,288,9],[357,12,289,7],[358,10,290,6,"wallet_balance"],[358,24,290,20],[358,26,290,22],[358,27,290,23],[359,10,291,6,"is_active"],[359,19,291,15],[359,21,291,17],[359,25,291,21],[360,10,292,6,"current_matchday"],[360,26,292,22],[360,28,292,24],[360,29,292,25],[361,10,292,27],[362,10,293,6,"standings"],[362,19,293,15],[362,21,293,17],[362,22,294,8],[363,12,294,10,"position"],[363,20,294,18],[363,22,294,20],[363,23,294,21],[364,12,294,23,"player_id"],[364,21,294,32],[364,23,294,34],[364,49,294,60],[365,12,294,62,"name"],[365,16,294,66],[365,18,294,68],[365,35,294,85],[366,12,294,87,"points"],[366,18,294,93],[366,20,294,95],[367,10,294,97],[367,11,294,98],[367,12,295,7],[368,10,296,6,"created_at"],[368,20,296,16],[368,22,296,18],[368,26,296,22,"Date"],[368,30,296,26],[368,31,296,27],[368,32,296,28],[368,33,296,29,"toISOString"],[368,44,296,40],[368,45,296,41],[368,46,296,42],[369,10,297,6,"updated_at"],[369,20,297,16],[369,22,297,18],[369,26,297,22,"Date"],[369,30,297,26],[369,31,297,27],[369,32,297,28],[369,33,297,29,"toISOString"],[369,44,297,40],[369,45,297,41],[370,8,298,4],[370,9,298,5],[372,8,300,4],[373,8,301,4,"existingCompetitions"],[373,28,301,24],[373,29,301,25,"push"],[373,33,301,29],[373,34,301,30,"newCompetition"],[373,48,301,44],[373,49,301,45],[374,8,302,4],[374,14,302,10,"CrossPlatformStorage"],[374,34,302,30],[374,35,302,31,"setItem"],[374,42,302,38],[374,43,302,39],[374,62,302,58],[374,64,302,60,"JSON"],[374,68,302,64],[374,69,302,65,"stringify"],[374,78,302,74],[374,79,302,75,"existingCompetitions"],[374,99,302,95],[374,100,302,96],[374,101,302,97],[375,8,304,4,"console"],[375,15,304,11],[375,16,304,12,"log"],[375,19,304,15],[375,20,304,16],[375,73,304,69],[375,75,304,71,"existingCompetitions"],[375,95,304,91],[375,96,304,92,"length"],[375,102,304,98],[375,103,304,99],[377,8,306,4],[378,8,307,4],[378,14,307,10,"logAdminAction"],[378,28,307,24],[378,29,307,25],[378,37,307,33],[378,39,307,35,"newCompetition"],[378,53,307,49],[378,54,307,50,"name"],[378,58,307,54],[378,60,307,56],[378,77,307,73],[378,79,307,75],[379,10,308,6,"competition_id"],[379,24,308,20],[379,26,308,22,"newCompetition"],[379,40,308,36],[379,41,308,37,"_id"],[379,44,308,40],[380,10,309,6,"rules"],[380,15,309,11],[380,17,309,13,"newCompetition"],[380,31,309,27],[380,32,309,28,"rules"],[380,37,309,33],[381,10,310,6,"total_matchdays"],[381,25,310,21],[381,27,310,23,"newCompetition"],[381,41,310,37],[381,42,310,38,"total_matchdays"],[381,57,310,53],[382,10,311,6,"participation_cost_per_team"],[382,37,311,33],[382,39,311,35,"newCompetition"],[382,53,311,49],[382,54,311,50,"participation_cost_per_team"],[382,81,311,77],[383,10,312,6,"expected_teams"],[383,24,312,20],[383,26,312,22,"newCompetition"],[383,40,312,36],[383,41,312,37,"expected_teams"],[383,55,312,51],[384,10,313,6,"total_prize_pool"],[384,26,313,22],[384,28,313,24,"newCompetition"],[384,42,313,38],[384,43,313,39,"total_prize_pool"],[384,59,313,55],[385,10,314,6,"daily_payment_enabled"],[385,31,314,27],[385,33,314,29,"newCompetition"],[385,47,314,43],[385,48,314,44,"daily_payment_enabled"],[385,69,314,65],[386,10,315,6,"daily_payment_amount"],[386,30,315,26],[386,32,315,28,"newCompetition"],[386,46,315,42],[386,47,315,43,"daily_payment_amount"],[387,8,316,4],[387,9,316,5],[387,10,316,6],[388,8,318,4,"console"],[388,15,318,11],[388,16,318,12,"log"],[388,19,318,15],[388,20,318,16],[388,49,318,45],[388,51,318,47,"newCompetition"],[388,65,318,61],[388,66,318,62,"name"],[388,70,318,66],[388,71,318,67],[389,8,319,4,"console"],[389,15,319,11],[389,16,319,12,"log"],[389,19,319,15],[389,20,319,16],[389,42,319,38],[389,44,319,40,"newCompetition"],[389,58,319,54],[389,59,319,55,"name"],[389,63,319,59],[389,64,319,60],[390,8,320,4,"console"],[390,15,320,11],[390,16,320,12,"log"],[390,19,320,15],[390,20,320,16],[390,39,320,35],[390,41,320,37,"newCompetition"],[390,55,320,51],[390,56,320,52,"daily_payment_enabled"],[390,77,320,73],[390,80,320,76],[390,84,320,80,"newCompetition"],[390,98,320,94],[390,99,320,95,"daily_payment_amount"],[390,119,320,115],[390,134,320,130],[390,137,320,133],[390,147,320,143],[390,148,320,144],[391,8,321,4,"console"],[391,15,321,11],[391,16,321,12,"log"],[391,19,321,15],[391,20,321,16],[391,42,321,38],[391,44,321,40],[391,48,321,44,"newCompetition"],[391,62,321,58],[391,63,321,59,"total_prize_pool"],[391,79,321,75],[391,81,321,77],[391,82,321,78],[392,8,322,4,"console"],[392,15,322,11],[392,16,322,12,"log"],[392,19,322,15],[392,20,322,16],[392,37,322,33],[392,39,322,35,"newCompetition"],[392,53,322,49],[392,54,322,50,"invite_code"],[392,65,322,61],[392,66,322,62],[393,8,324,4],[393,15,324,11],[394,10,324,13,"data"],[394,14,324,17],[394,16,324,19,"newCompetition"],[395,8,324,34],[395,9,324,35],[396,6,325,2],[396,7,325,3],[397,6,325,3],[397,22,237,2,"createMock"],[397,32,237,12,"createMock"],[397,33,237,12,"_x16"],[397,37,237,12],[398,8,237,12],[398,15,237,12,"_ref3"],[398,20,237,12],[398,21,237,12,"apply"],[398,26,237,12],[398,33,237,12,"arguments"],[398,42,237,12],[399,6,237,12],[400,4,237,12],[400,7,325,3],[401,4,327,2],[402,4,328,2,"payMatchdaysMock"],[402,20,328,18],[403,6,328,18],[403,10,328,18,"_ref4"],[403,15,328,18],[403,22,328,18,"_asyncToGenerator"],[403,39,328,18],[403,40,328,18,"default"],[403,47,328,18],[403,49,328,20],[403,60,328,27,"competitionId"],[403,73,328,48],[403,75,328,50,"matchdays"],[403,84,328,69],[403,86,328,74],[404,8,329,4,"console"],[404,15,329,11],[404,16,329,12,"log"],[404,19,329,15],[404,20,329,16],[404,51,329,47],[404,53,329,49,"matchdays"],[404,62,329,58],[404,64,329,60],[404,80,329,76],[404,82,329,78,"competitionId"],[404,95,329,91],[404,96,329,92],[406,8,331,4],[407,8,332,4],[407,12,332,10,"totalCost"],[407,21,332,19],[407,24,332,22,"matchdays"],[407,33,332,31],[407,34,332,32,"length"],[407,40,332,38],[407,43,332,41],[407,44,332,42],[407,45,332,43],[407,46,332,44],[409,8,334,4],[410,8,335,4],[410,15,335,11],[411,10,336,6,"data"],[411,14,336,10],[411,16,336,12],[412,12,337,8,"message"],[412,19,337,15],[412,21,337,17],[412,46,337,42,"matchdays"],[412,55,337,51],[412,56,337,52,"length"],[412,62,337,58],[412,74,337,70],[413,12,338,8,"paid_matchdays"],[413,26,338,22],[413,28,338,24,"matchdays"],[413,37,338,33],[414,12,339,8,"total_cost"],[414,22,339,18],[414,24,339,20,"totalCost"],[414,33,339,29],[415,12,340,8,"new_user_balance"],[415,28,340,24],[415,30,340,26],[415,33,340,29],[415,36,340,32,"totalCost"],[415,45,340,41],[415,46,340,42],[416,10,341,6],[417,8,342,4],[417,9,342,5],[418,6,343,2],[418,7,343,3],[419,6,343,3],[419,22,328,2,"payMatchdaysMock"],[419,38,328,18,"payMatchdaysMock"],[419,39,328,18,"_x17"],[419,43,328,18],[419,45,328,18,"_x18"],[419,49,328,18],[420,8,328,18],[420,15,328,18,"_ref4"],[420,20,328,18],[420,21,328,18,"apply"],[420,26,328,18],[420,33,328,18,"arguments"],[420,42,328,18],[421,6,328,18],[422,4,328,18],[422,7,343,3],[423,4,345,2,"getMatchdayPaymentsMock"],[423,27,345,25],[424,6,345,25],[424,10,345,25,"_ref5"],[424,15,345,25],[424,22,345,25,"_asyncToGenerator"],[424,39,345,25],[424,40,345,25,"default"],[424,47,345,25],[424,49,345,27],[424,60,345,34,"competitionId"],[424,73,345,55],[424,75,345,60],[425,8,346,4,"console"],[425,15,346,11],[425,16,346,12,"log"],[425,19,346,15],[425,20,346,16],[425,72,346,68],[425,74,346,70,"competitionId"],[425,87,346,83],[425,88,346,84],[427,8,348,4],[428,8,349,4],[428,12,349,10,"mockPayments"],[428,24,349,22],[428,27,349,25],[428,29,349,27],[429,8,350,4],[429,13,350,9],[429,17,350,13,"i"],[429,18,350,14],[429,21,350,17],[429,22,350,18],[429,24,350,20,"i"],[429,25,350,21],[429,29,350,25],[429,31,350,27],[429,33,350,29,"i"],[429,34,350,30],[429,36,350,32],[429,38,350,34],[430,10,351,6,"mockPayments"],[430,22,351,18],[430,23,351,19,"push"],[430,27,351,23],[430,28,351,24],[431,12,352,8,"_id"],[431,15,352,11],[431,17,352,13],[431,28,352,24,"i"],[431,29,352,25],[431,31,352,27],[432,12,353,8,"user_id"],[432,19,353,15],[432,21,353,17],[432,47,353,43],[433,12,354,8,"competition_id"],[433,26,354,22],[433,28,354,24,"competitionId"],[433,41,354,37],[434,12,355,8,"matchday"],[434,20,355,16],[434,22,355,18,"i"],[434,23,355,19],[435,12,356,8,"amount"],[435,18,356,14],[435,20,356,16],[435,21,356,17],[436,12,357,8,"status"],[436,18,357,14],[436,20,357,16,"i"],[436,21,357,17],[436,25,357,21],[436,26,357,22],[436,29,357,25],[436,35,357,31],[436,38,357,34],[436,47,357,43],[437,12,358,8,"paid_at"],[437,19,358,15],[437,21,358,17,"i"],[437,22,358,18],[437,26,358,22],[437,27,358,23],[437,30,358,26],[437,34,358,30,"Date"],[437,38,358,34],[437,39,358,35],[437,40,358,36],[437,41,358,37,"toISOString"],[437,52,358,48],[437,53,358,49],[437,54,358,50],[437,57,358,53],[437,61,358,57],[438,12,359,8,"created_at"],[438,22,359,18],[438,24,359,20],[438,28,359,24,"Date"],[438,32,359,28],[438,33,359,29],[438,34,359,30],[438,35,359,31,"toISOString"],[438,46,359,42],[438,47,359,43],[439,10,360,6],[439,11,360,7],[439,12,360,8],[440,8,361,4],[441,8,363,4],[441,15,363,11],[442,10,364,6,"data"],[442,14,364,10],[442,16,364,12],[443,12,365,8,"competition_id"],[443,26,365,22],[443,28,365,24,"competitionId"],[443,41,365,37],[444,12,366,8,"daily_payment_enabled"],[444,33,366,29],[444,35,366,31],[444,39,366,35],[445,12,367,8,"daily_payment_amount"],[445,32,367,28],[445,34,367,30],[445,35,367,31],[446,12,368,8,"total_matchdays"],[446,27,368,23],[446,29,368,25],[446,31,368,27],[447,12,369,8,"payments"],[447,20,369,16],[447,22,369,18,"mockPayments"],[448,10,370,6],[449,8,371,4],[449,9,371,5],[450,6,372,2],[450,7,372,3],[451,6,372,3],[451,22,345,2,"getMatchdayPaymentsMock"],[451,45,345,25,"getMatchdayPaymentsMock"],[451,46,345,25,"_x19"],[451,50,345,25],[452,8,345,25],[452,15,345,25,"_ref5"],[452,20,345,25],[452,21,345,25,"apply"],[452,26,345,25],[452,33,345,25,"arguments"],[452,42,345,25],[453,6,345,25],[454,4,345,25],[454,7,372,3],[455,4,374,2,"getPaymentStatusTableMock"],[455,29,374,27],[456,6,374,27],[456,10,374,27,"_ref6"],[456,15,374,27],[456,22,374,27,"_asyncToGenerator"],[456,39,374,27],[456,40,374,27,"default"],[456,47,374,27],[456,49,374,29],[456,60,374,36,"competitionId"],[456,73,374,57],[456,75,374,62],[457,8,375,4,"console"],[457,15,375,11],[457,16,375,12,"log"],[457,19,375,15],[457,20,375,16],[457,75,375,71],[457,77,375,73,"competitionId"],[457,90,375,86],[457,91,375,87],[459,8,377,4],[460,8,378,4],[460,12,378,10,"mockTable"],[460,21,378,19],[460,24,378,22],[460,25,378,23],[461,10,379,6,"user_id"],[461,17,379,13],[461,19,379,15],[461,45,379,41],[462,10,380,6,"username"],[462,18,380,14],[462,20,380,16],[462,37,380,33],[463,10,381,6,"name"],[463,14,381,10],[463,16,381,12],[463,33,381,29],[464,10,382,6,"email"],[464,15,382,11],[464,17,382,13],[464,36,382,32],[465,10,383,6,"matchday_payments"],[465,27,383,23],[465,29,383,25,"Array"],[465,34,383,30],[465,35,383,31,"from"],[465,39,383,35],[465,40,383,36],[466,12,383,37,"length"],[466,18,383,43],[466,20,383,45],[467,10,383,47],[467,11,383,48],[467,13,383,50],[467,14,383,51,"_"],[467,15,383,52],[467,17,383,54,"i"],[467,18,383,55],[467,24,383,61],[468,12,384,8,"matchday"],[468,20,384,16],[468,22,384,18,"i"],[468,23,384,19],[468,26,384,22],[468,27,384,23],[469,12,385,8,"status"],[469,18,385,14],[469,20,385,17,"i"],[469,21,385,18],[469,24,385,21],[469,25,385,22],[469,28,385,25],[469,34,385,31],[469,37,385,34],[469,46,385,44],[470,12,386,8,"amount"],[470,18,386,14],[470,20,386,16],[470,21,386,17],[471,12,387,8,"paid_at"],[471,19,387,15],[471,21,387,17,"i"],[471,22,387,18],[471,25,387,21],[471,26,387,22],[471,29,387,25],[471,33,387,29,"Date"],[471,37,387,33],[471,38,387,34],[471,39,387,35],[471,40,387,36,"toISOString"],[471,51,387,47],[471,52,387,48],[471,53,387,49],[471,56,387,52],[472,10,388,6],[472,11,388,7],[472,12,388,8],[473,8,389,4],[473,9,389,5],[473,10,389,6],[474,8,391,4],[474,15,391,11],[475,10,392,6,"data"],[475,14,392,10],[475,16,392,12],[476,12,393,8,"competition_name"],[476,28,393,24],[476,30,393,26],[476,51,393,47],[477,12,394,8,"total_matchdays"],[477,27,394,23],[477,29,394,25],[477,31,394,27],[478,12,395,8,"daily_payment_amount"],[478,32,395,28],[478,34,395,30],[478,35,395,31],[479,12,396,8,"participants"],[479,24,396,20],[479,26,396,22,"mockTable"],[480,10,397,6],[481,8,398,4],[481,9,398,5],[482,6,399,2],[482,7,399,3],[483,6,399,3],[483,22,374,2,"getPaymentStatusTableMock"],[483,47,374,27,"getPaymentStatusTableMock"],[483,48,374,27,"_x20"],[483,52,374,27],[484,8,374,27],[484,15,374,27,"_ref6"],[484,20,374,27],[484,21,374,27,"apply"],[484,26,374,27],[484,33,374,27,"arguments"],[484,42,374,27],[485,6,374,27],[486,4,374,27],[486,7,399,3],[487,4,401,2],[488,4,402,2,"validateNameMock"],[488,20,402,18],[489,6,402,18],[489,10,402,18,"_ref7"],[489,15,402,18],[489,22,402,18,"_asyncToGenerator"],[489,39,402,18],[489,40,402,18,"default"],[489,47,402,18],[489,49,402,20],[489,60,402,27,"name"],[489,64,402,39],[489,66,402,44],[490,8,403,4,"console"],[490,15,403,11],[490,16,403,12,"log"],[490,19,403,15],[490,20,403,16],[490,59,403,55],[490,61,403,57,"name"],[490,65,403,61],[490,66,403,62],[491,8,405,4],[491,12,405,8],[491,13,405,9,"name"],[491,17,405,13],[491,18,405,14,"trim"],[491,22,405,18],[491,23,405,19],[491,24,405,20],[491,26,405,22],[492,10,406,6],[492,17,406,13],[493,12,406,15,"available"],[493,21,406,24],[493,23,406,26],[493,27,406,30],[494,12,406,32,"message"],[494,19,406,39],[494,21,406,41],[495,10,406,44],[495,11,406,45],[496,8,407,4],[498,8,409,4],[499,8,410,4],[499,12,410,10,"storedCompetitions"],[499,30,410,28],[499,39,410,37,"CrossPlatformStorage"],[499,59,410,57],[499,60,410,58,"getItem"],[499,67,410,65],[499,68,410,66],[499,86,410,84],[499,87,410,85],[500,8,411,4],[500,12,411,8,"existingCompetitions"],[500,32,411,28],[500,35,411,31,"storedCompetitions"],[500,53,411,49],[500,56,411,52,"JSON"],[500,60,411,56],[500,61,411,57,"parse"],[500,66,411,62],[500,67,411,63,"storedCompetitions"],[500,85,411,81],[500,86,411,82],[500,89,411,85],[500,91,411,87],[502,8,413,4],[503,8,414,4],[503,12,414,10,"defaultNames"],[503,24,414,22],[503,27,414,25],[503,28,414,26],[503,50,414,48],[503,52,414,50],[503,78,414,76],[503,80,414,78],[503,96,414,94],[503,97,414,95],[504,8,415,4],[504,12,415,10,"allNames"],[504,20,415,18],[504,23,415,21],[504,24,416,6],[504,27,416,9,"existingCompetitions"],[504,47,416,29],[504,48,416,30,"map"],[504,51,416,33],[504,52,416,35,"comp"],[504,56,416,44],[504,60,416,49,"comp"],[504,64,416,53],[504,65,416,54,"name"],[504,69,416,58],[504,70,416,59,"toLowerCase"],[504,81,416,70],[504,82,416,71],[504,83,416,72],[504,84,416,73],[504,86,417,6],[504,89,417,9,"defaultNames"],[504,101,417,21],[504,102,417,22,"map"],[504,105,417,25],[504,106,417,26,"name"],[504,110,417,30],[504,114,417,34,"name"],[504,118,417,38],[504,119,417,39,"toLowerCase"],[504,130,417,50],[504,131,417,51],[504,132,417,52],[504,133,417,53],[504,134,418,5],[505,8,420,4],[505,12,420,10,"isAvailable"],[505,23,420,21],[505,26,420,24],[505,27,420,25,"allNames"],[505,35,420,33],[505,36,420,34,"includes"],[505,44,420,42],[505,45,420,43,"name"],[505,49,420,47],[505,50,420,48,"toLowerCase"],[505,61,420,59],[505,62,420,60],[505,63,420,61],[505,64,420,62],[506,8,422,4],[506,15,422,11],[507,10,423,6,"available"],[507,19,423,15],[507,21,423,17,"isAvailable"],[507,32,423,28],[508,10,424,6,"message"],[508,17,424,13],[508,19,424,15,"isAvailable"],[508,30,424,26],[508,33,424,29],[508,49,424,45],[508,52,424,48],[509,8,425,4],[509,9,425,5],[510,6,426,2],[510,7,426,3],[511,6,426,3],[511,22,402,2,"validateNameMock"],[511,38,402,18,"validateNameMock"],[511,39,402,18,"_x21"],[511,43,402,18],[512,8,402,18],[512,15,402,18,"_ref7"],[512,20,402,18],[512,21,402,18,"apply"],[512,26,402,18],[512,33,402,18,"arguments"],[512,42,402,18],[513,6,402,18],[514,4,402,18],[514,7,426,3],[515,4,428,2],[516,4,429,2,"getMyCompetitionsMock"],[516,25,429,23],[517,6,429,23],[517,10,429,23,"_ref8"],[517,15,429,23],[517,22,429,23,"_asyncToGenerator"],[517,39,429,23],[517,40,429,23,"default"],[517,47,429,23],[517,49,429,25],[517,62,429,37],[518,8,430,4,"console"],[518,15,430,11],[518,16,430,12,"log"],[518,19,430,15],[518,20,430,16],[518,54,430,50],[518,55,430,51],[519,8,431,4],[519,12,431,10,"storedCompetitions"],[519,30,431,28],[519,39,431,37,"CrossPlatformStorage"],[519,59,431,57],[519,60,431,58,"getItem"],[519,67,431,65],[519,68,431,66],[519,87,431,85],[519,88,431,86],[520,8,433,4],[520,12,433,8,"storedCompetitions"],[520,30,433,26],[520,32,433,28],[521,10,434,6],[521,14,434,12,"competitions"],[521,26,434,24],[521,29,434,27,"JSON"],[521,33,434,31],[521,34,434,32,"parse"],[521,39,434,37],[521,40,434,38,"storedCompetitions"],[521,58,434,56],[521,59,434,57],[522,10,435,6,"console"],[522,17,435,13],[522,18,435,14,"log"],[522,21,435,17],[522,22,435,18],[522,57,435,53],[522,59,435,55,"competitions"],[522,71,435,67],[522,72,435,68,"length"],[522,78,435,74],[522,79,435,75],[523,10,437,6,"competitions"],[523,22,437,18],[523,23,437,19,"forEach"],[523,30,437,26],[523,31,437,27],[523,32,437,28,"comp"],[523,36,437,37],[523,38,437,39,"index"],[523,43,437,52],[523,48,437,57],[524,12,438,8,"console"],[524,19,438,15],[524,20,438,16,"log"],[524,23,438,19],[524,24,438,20],[524,27,438,23,"index"],[524,32,438,28],[524,35,438,31],[524,36,438,32],[524,41,438,37,"comp"],[524,45,438,41],[524,46,438,42,"name"],[524,50,438,46],[524,59,438,55,"comp"],[524,63,438,59],[524,64,438,60,"_id"],[524,67,438,63],[524,70,438,66],[524,71,438,67],[525,10,439,6],[525,11,439,7],[525,12,439,8],[526,10,441,6],[526,17,441,13,"competitions"],[526,29,441,25],[527,8,442,4],[527,9,442,5],[527,15,442,11],[528,10,443,6,"console"],[528,17,443,13],[528,18,443,14,"log"],[528,21,443,17],[528,22,443,18],[528,82,443,78],[528,83,443,79],[529,10,444,6],[529,17,444,13],[529,19,444,15],[530,8,445,4],[531,6,446,2],[531,7,446,3],[532,6,446,3],[532,22,429,2,"getMyCompetitionsMock"],[532,43,429,23,"getMyCompetitionsMock"],[532,44,429,23],[533,8,429,23],[533,15,429,23,"_ref8"],[533,20,429,23],[533,21,429,23,"apply"],[533,26,429,23],[533,33,429,23,"arguments"],[533,42,429,23],[534,6,429,23],[535,4,429,23],[535,7,446,3],[536,4,448,2,"joinMock"],[536,12,448,10],[537,6,448,10],[537,10,448,10,"_ref9"],[537,15,448,10],[537,22,448,10,"_asyncToGenerator"],[537,39,448,10],[537,40,448,10,"default"],[537,47,448,10],[537,49,448,12],[537,60,448,19,"inviteCode"],[537,70,448,37],[537,72,448,42],[538,8,449,4,"console"],[538,15,449,11],[538,16,449,12,"log"],[538,19,449,15],[538,20,449,16],[538,61,449,57],[538,63,449,59,"inviteCode"],[538,73,449,69],[538,74,449,70],[539,8,450,4],[539,12,450,8,"inviteCode"],[539,22,450,18],[539,23,450,19,"length"],[539,29,450,25],[539,32,450,28],[539,33,450,29],[539,35,450,31],[540,10,451,6],[540,16,451,12],[540,20,451,16,"Error"],[540,25,451,21],[540,26,451,22],[540,47,451,43],[540,48,451,44],[541,8,452,4],[542,8,453,4],[542,15,453,11],[543,10,453,13,"message"],[543,17,453,20],[543,19,453,22],[544,8,453,57],[544,9,453,58],[545,6,454,2],[545,7,454,3],[546,6,454,3],[546,22,448,2,"joinMock"],[546,30,448,10,"joinMock"],[546,31,448,10,"_x22"],[546,35,448,10],[547,8,448,10],[547,15,448,10,"_ref9"],[547,20,448,10],[547,21,448,10,"apply"],[547,26,448,10],[547,33,448,10,"arguments"],[547,42,448,10],[548,6,448,10],[549,4,448,10],[549,7,454,3],[550,4,456,2],[551,4,457,2,"deleteMock"],[551,14,457,12],[552,6,457,12],[552,10,457,12,"_ref0"],[552,15,457,12],[552,22,457,12,"_asyncToGenerator"],[552,39,457,12],[552,40,457,12,"default"],[552,47,457,12],[552,49,457,14],[552,60,457,21,"competitionId"],[552,73,457,42],[552,75,457,47],[553,8,458,4,"console"],[553,15,458,11],[553,16,458,12,"log"],[553,19,458,15],[553,20,458,16],[553,53,458,49],[553,55,458,51,"competitionId"],[553,68,458,64],[553,69,458,65],[554,8,460,4],[554,12,460,10,"storedCompetitions"],[554,30,460,28],[554,39,460,37,"CrossPlatformStorage"],[554,59,460,57],[554,60,460,58,"getItem"],[554,67,460,65],[554,68,460,66],[554,86,460,84],[554,87,460,85],[555,8,461,4],[555,12,461,8,"competitions"],[555,24,461,20],[555,27,461,23,"storedCompetitions"],[555,45,461,41],[555,48,461,44,"JSON"],[555,52,461,48],[555,53,461,49,"parse"],[555,58,461,54],[555,59,461,55,"storedCompetitions"],[555,77,461,73],[555,78,461,74],[555,81,461,77],[555,83,461,79],[556,8,463,4],[556,12,463,10,"competitionToDelete"],[556,31,463,29],[556,34,463,32,"competitions"],[556,46,463,44],[556,47,463,45,"find"],[556,51,463,49],[556,52,463,51,"comp"],[556,56,463,60],[556,60,463,65,"comp"],[556,64,463,69],[556,65,463,70,"_id"],[556,68,463,73],[556,73,463,78,"competitionId"],[556,86,463,91],[556,87,463,92],[557,8,464,4],[557,12,464,8],[557,13,464,9,"competitionToDelete"],[557,32,464,28],[557,34,464,30],[558,10,465,6],[558,16,465,12],[558,20,465,16,"Error"],[558,25,465,21],[558,26,465,22],[558,49,465,45],[558,50,465,46],[559,8,466,4],[561,8,468,4],[562,8,469,4],[562,12,469,8,"competitionToDelete"],[562,31,469,27],[562,32,469,28,"admin_id"],[562,40,469,36],[562,45,469,41],[562,71,469,67],[562,73,469,69],[563,10,470,6],[563,16,470,12],[563,20,470,16,"Error"],[563,25,470,21],[563,26,470,22],[563,66,470,62],[563,67,470,63],[564,8,471,4],[566,8,473,4],[567,8,474,4,"competitions"],[567,20,474,16],[567,23,474,19,"competitions"],[567,35,474,31],[567,36,474,32,"filter"],[567,42,474,38],[567,43,474,40,"comp"],[567,47,474,49],[567,51,474,54,"comp"],[567,55,474,58],[567,56,474,59,"_id"],[567,59,474,62],[567,64,474,67,"competitionId"],[567,77,474,80],[567,78,474,81],[568,8,475,4],[568,14,475,10,"CrossPlatformStorage"],[568,34,475,30],[568,35,475,31,"setItem"],[568,42,475,38],[568,43,475,39],[568,61,475,57],[568,63,475,59,"JSON"],[568,67,475,63],[568,68,475,64,"stringify"],[568,77,475,73],[568,78,475,74,"competitions"],[568,90,475,86],[568,91,475,87],[568,92,475,88],[570,8,477,4],[571,8,478,4],[571,14,478,10,"logAdminAction"],[571,28,478,24],[571,29,478,25],[571,37,478,33],[571,39,478,35,"competitionToDelete"],[571,58,478,54],[571,59,478,55,"name"],[571,63,478,59],[571,65,478,61],[571,82,478,78],[571,83,478,79],[572,8,480,4,"console"],[572,15,480,11],[572,16,480,12,"log"],[572,19,480,15],[572,20,480,16],[572,56,480,52],[572,57,480,53],[573,8,481,4],[573,15,481,11],[574,10,481,13,"message"],[574,17,481,20],[574,19,481,22],[575,8,481,57],[575,9,481,58],[576,6,482,2],[576,7,482,3],[577,6,482,3],[577,22,457,2,"deleteMock"],[577,32,457,12,"deleteMock"],[577,33,457,12,"_x23"],[577,37,457,12],[578,8,457,12],[578,15,457,12,"_ref0"],[578,20,457,12],[578,21,457,12,"apply"],[578,26,457,12],[578,33,457,12,"arguments"],[578,42,457,12],[579,6,457,12],[580,4,457,12],[580,7,482,3],[581,4,484,2],[582,4,485,2,"editMock"],[582,12,485,10],[583,6,485,10],[583,10,485,10,"_ref1"],[583,15,485,10],[583,22,485,10,"_asyncToGenerator"],[583,39,485,10],[583,40,485,10,"default"],[583,47,485,10],[583,49,485,12],[583,60,485,19,"competitionId"],[583,73,485,40],[583,75,485,42,"updates"],[583,82,485,54],[583,84,485,59],[584,8,486,4,"console"],[584,15,486,11],[584,16,486,12,"log"],[584,19,486,15],[584,20,486,16],[584,51,486,47],[584,53,486,49,"competitionId"],[584,66,486,62],[584,68,486,64,"updates"],[584,75,486,71],[584,76,486,72],[585,8,488,4],[585,12,488,10,"storedCompetitions"],[585,30,488,28],[585,39,488,37,"CrossPlatformStorage"],[585,59,488,57],[585,60,488,58,"getItem"],[585,67,488,65],[585,68,488,66],[585,86,488,84],[585,87,488,85],[586,8,489,4],[586,12,489,8,"competitions"],[586,24,489,20],[586,27,489,23,"storedCompetitions"],[586,45,489,41],[586,48,489,44,"JSON"],[586,52,489,48],[586,53,489,49,"parse"],[586,58,489,54],[586,59,489,55,"storedCompetitions"],[586,77,489,73],[586,78,489,74],[586,81,489,77],[586,83,489,79],[587,8,491,4],[587,12,491,10,"competitionIndex"],[587,28,491,26],[587,31,491,29,"competitions"],[587,43,491,41],[587,44,491,42,"findIndex"],[587,53,491,51],[587,54,491,53,"comp"],[587,58,491,62],[587,62,491,67,"comp"],[587,66,491,71],[587,67,491,72,"_id"],[587,70,491,75],[587,75,491,80,"competitionId"],[587,88,491,93],[587,89,491,94],[588,8,492,4],[588,12,492,8,"competitionIndex"],[588,28,492,24],[588,33,492,29],[588,34,492,30],[588,35,492,31],[588,37,492,33],[589,10,493,6],[589,16,493,12],[589,20,493,16,"Error"],[589,25,493,21],[589,26,493,22],[589,49,493,45],[589,50,493,46],[590,8,494,4],[591,8,496,4],[591,12,496,10,"competition"],[591,23,496,21],[591,26,496,24,"competitions"],[591,38,496,36],[591,39,496,37,"competitionIndex"],[591,55,496,53],[591,56,496,54],[593,8,498,4],[594,8,499,4],[594,12,499,8,"competition"],[594,23,499,19],[594,24,499,20,"admin_id"],[594,32,499,28],[594,37,499,33],[594,63,499,59],[594,65,499,61],[595,10,500,6],[595,16,500,12],[595,20,500,16,"Error"],[595,25,500,21],[595,26,500,22],[595,64,500,60],[595,65,500,61],[596,8,501,4],[598,8,503,4],[599,8,504,4,"competitions"],[599,20,504,16],[599,21,504,17,"competitionIndex"],[599,37,504,33],[599,38,504,34],[599,41,504,37],[600,10,505,6],[600,13,505,9,"competition"],[600,24,505,20],[601,10,506,6],[601,13,506,9,"updates"],[601,20,506,16],[602,10,507,6,"updated_at"],[602,20,507,16],[602,22,507,18],[602,26,507,22,"Date"],[602,30,507,26],[602,31,507,27],[602,32,507,28],[602,33,507,29,"toISOString"],[602,44,507,40],[602,45,507,41],[603,8,508,4],[603,9,508,5],[604,8,510,4],[604,14,510,10,"CrossPlatformStorage"],[604,34,510,30],[604,35,510,31,"setItem"],[604,42,510,38],[604,43,510,39],[604,61,510,57],[604,63,510,59,"JSON"],[604,67,510,63],[604,68,510,64,"stringify"],[604,77,510,73],[604,78,510,74,"competitions"],[604,90,510,86],[604,91,510,87],[604,92,510,88],[606,8,512,4],[607,8,513,4],[607,14,513,10,"logAdminAction"],[607,28,513,24],[607,29,513,25],[607,35,513,31],[607,37,513,33,"competition"],[607,48,513,44],[607,49,513,45,"name"],[607,53,513,49],[607,55,513,51],[607,72,513,68],[607,74,513,70,"updates"],[607,81,513,77],[607,82,513,78],[608,8,515,4,"console"],[608,15,515,11],[608,16,515,12,"log"],[608,19,515,15],[608,20,515,16],[608,56,515,52],[608,57,515,53],[609,8,516,4],[609,15,516,11,"competitions"],[609,27,516,23],[609,28,516,24,"competitionIndex"],[609,44,516,40],[609,45,516,41],[610,6,517,2],[610,7,517,3],[611,6,517,3],[611,22,485,2,"editMock"],[611,30,485,10,"editMock"],[611,31,485,10,"_x24"],[611,35,485,10],[611,37,485,10,"_x25"],[611,41,485,10],[612,8,485,10],[612,15,485,10,"_ref1"],[612,20,485,10],[612,21,485,10,"apply"],[612,26,485,10],[612,33,485,10,"arguments"],[612,42,485,10],[613,6,485,10],[614,4,485,10],[614,7,517,3],[615,4,519,2],[616,4,520,2,"awardDailyPrizeMock"],[616,23,520,21],[617,6,520,21],[617,10,520,21,"_ref10"],[617,16,520,21],[617,23,520,21,"_asyncToGenerator"],[617,40,520,21],[617,41,520,21,"default"],[617,48,520,21],[617,50,520,23],[617,61,520,30,"competitionId"],[617,74,520,51],[617,76,520,53,"matchday"],[617,84,520,69],[617,86,520,71,"winnerId"],[617,94,520,87],[617,96,520,92],[618,8,521,4,"console"],[618,15,521,11],[618,16,521,12,"log"],[618,19,521,15],[618,20,521,16],[618,64,521,60],[618,66,521,62,"matchday"],[618,74,521,70],[618,76,521,72],[618,85,521,81],[618,87,521,83,"winnerId"],[618,95,521,91],[618,96,521,92],[619,8,523,4],[619,12,523,10,"storedCompetitions"],[619,30,523,28],[619,39,523,37,"CrossPlatformStorage"],[619,59,523,57],[619,60,523,58,"getItem"],[619,67,523,65],[619,68,523,66],[619,86,523,84],[619,87,523,85],[620,8,524,4],[620,12,524,8,"competitions"],[620,24,524,20],[620,27,524,23,"storedCompetitions"],[620,45,524,41],[620,48,524,44,"JSON"],[620,52,524,48],[620,53,524,49,"parse"],[620,58,524,54],[620,59,524,55,"storedCompetitions"],[620,77,524,73],[620,78,524,74],[620,81,524,77],[620,83,524,79],[621,8,526,4],[621,12,526,10,"competitionIndex"],[621,28,526,26],[621,31,526,29,"competitions"],[621,43,526,41],[621,44,526,42,"findIndex"],[621,53,526,51],[621,54,526,53,"comp"],[621,58,526,62],[621,62,526,67,"comp"],[621,66,526,71],[621,67,526,72,"_id"],[621,70,526,75],[621,75,526,80,"competitionId"],[621,88,526,93],[621,89,526,94],[622,8,527,4],[622,12,527,8,"competitionIndex"],[622,28,527,24],[622,33,527,29],[622,34,527,30],[622,35,527,31],[622,37,527,33],[623,10,528,6],[623,16,528,12],[623,20,528,16,"Error"],[623,25,528,21],[623,26,528,22],[623,49,528,45],[623,50,528,46],[624,8,529,4],[625,8,531,4],[625,12,531,10,"competition"],[625,23,531,21],[625,26,531,24,"competitions"],[625,38,531,36],[625,39,531,37,"competitionIndex"],[625,55,531,53],[625,56,531,54],[627,8,533,4],[628,8,534,4],[628,12,534,8,"competition"],[628,23,534,19],[628,24,534,20,"admin_id"],[628,32,534,28],[628,37,534,33],[628,63,534,59],[628,65,534,61],[629,10,535,6],[629,16,535,12],[629,20,535,16,"Error"],[629,25,535,21],[629,26,535,22],[629,61,535,57],[629,62,535,58],[630,8,536,4],[632,8,538,4],[633,8,539,4],[633,12,539,8],[633,13,539,9,"competition"],[633,24,539,20],[633,25,539,21,"rules"],[633,30,539,26],[633,34,539,30],[633,35,539,31],[633,36,539,32],[633,43,539,39],[633,45,539,41],[633,52,539,48],[633,53,539,49],[633,54,539,50,"includes"],[633,62,539,58],[633,63,539,59,"competition"],[633,74,539,70],[633,75,539,71,"rules"],[633,80,539,76],[633,81,539,77,"type"],[633,85,539,81],[633,86,539,82],[633,88,539,84],[634,10,540,6],[634,16,540,12],[634,20,540,16,"Error"],[634,25,540,21],[634,26,540,22],[634,71,540,67],[634,72,540,68],[635,8,541,4],[636,8,543,4],[636,12,543,10,"dailyPrizeAmount"],[636,28,543,26],[636,31,543,29,"competition"],[636,42,543,40],[636,43,543,41,"rules"],[636,48,543,46],[636,49,543,47,"daily_prize"],[636,60,543,58],[636,64,543,62],[636,65,543,63],[637,8,544,4],[637,12,544,10,"winner"],[637,18,544,16],[637,21,544,19,"competition"],[637,32,544,30],[637,33,544,31,"participants"],[637,45,544,43],[637,46,544,44,"find"],[637,50,544,48],[637,51,544,50,"p"],[637,52,544,56],[637,56,544,61,"p"],[637,57,544,62],[637,58,544,63,"id"],[637,60,544,65],[637,65,544,70,"winnerId"],[637,73,544,78],[637,74,544,79],[638,8,546,4],[638,12,546,8],[638,13,546,9,"winner"],[638,19,546,15],[638,21,546,17],[639,10,547,6],[639,16,547,12],[639,20,547,16,"Error"],[639,25,547,21],[639,26,547,22],[639,59,547,55],[639,60,547,56],[640,8,548,4],[642,8,550,4],[643,8,551,4],[643,12,551,8],[643,13,551,9,"competition"],[643,24,551,20],[643,25,551,21,"daily_winners"],[643,38,551,34],[643,40,551,36],[644,10,552,6,"competition"],[644,21,552,17],[644,22,552,18,"daily_winners"],[644,35,552,31],[644,38,552,34],[644,39,552,35],[644,40,552,36],[645,8,553,4],[647,8,555,4],[648,8,556,4],[648,12,556,8,"competition"],[648,23,556,19],[648,24,556,20,"daily_winners"],[648,37,556,33],[648,38,556,34,"matchday"],[648,46,556,42],[648,47,556,43],[648,49,556,45],[649,10,557,6],[649,16,557,12],[649,20,557,16,"Error"],[649,25,557,21],[649,26,557,22],[649,54,557,50,"matchday"],[649,62,557,58],[649,85,557,81,"competition"],[649,96,557,92],[649,97,557,93,"daily_winners"],[649,110,557,106],[649,111,557,107,"matchday"],[649,119,557,115],[649,120,557,116],[649,121,557,117,"name"],[649,125,557,121],[649,127,557,123],[649,128,557,124],[650,8,558,4],[652,8,560,4],[653,8,561,4,"competition"],[653,19,561,15],[653,20,561,16,"daily_winners"],[653,33,561,29],[653,34,561,30,"matchday"],[653,42,561,38],[653,43,561,39],[653,46,561,42],[654,10,562,6,"user_id"],[654,17,562,13],[654,19,562,15,"winnerId"],[654,27,562,23],[655,10,563,6,"name"],[655,14,563,10],[655,16,563,12,"winner"],[655,22,563,18],[655,23,563,19,"name"],[655,27,563,23],[656,10,564,6,"amount"],[656,16,564,12],[656,18,564,14,"dailyPrizeAmount"],[656,34,564,30],[657,10,565,6,"awarded_at"],[657,20,565,16],[657,22,565,18],[657,26,565,22,"Date"],[657,30,565,26],[657,31,565,27],[657,32,565,28],[657,33,565,29,"toISOString"],[657,44,565,40],[657,45,565,41],[658,8,566,4],[658,9,566,5],[660,8,568,4],[661,8,569,4,"competitions"],[661,20,569,16],[661,21,569,17,"competitionIndex"],[661,37,569,33],[661,38,569,34],[661,41,569,37,"competition"],[661,52,569,48],[662,8,570,4],[662,14,570,10,"CrossPlatformStorage"],[662,34,570,30],[662,35,570,31,"setItem"],[662,42,570,38],[662,43,570,39],[662,61,570,57],[662,63,570,59,"JSON"],[662,67,570,63],[662,68,570,64,"stringify"],[662,77,570,73],[662,78,570,74,"competitions"],[662,90,570,86],[662,91,570,87],[662,92,570,88],[664,8,572,4],[665,8,573,4],[665,14,573,10,"logAdminAction"],[665,28,573,24],[665,29,573,25],[665,48,573,44],[665,50,573,46,"competition"],[665,61,573,57],[665,62,573,58,"name"],[665,66,573,62],[665,68,573,64],[665,85,573,81],[665,87,573,83],[666,10,574,6,"matchday"],[666,18,574,14],[667,10,575,6,"winner"],[667,16,575,12],[667,18,575,14,"winner"],[667,24,575,20],[667,25,575,21,"name"],[667,29,575,25],[668,10,576,6,"amount"],[668,16,576,12],[668,18,576,14,"dailyPrizeAmount"],[669,8,577,4],[669,9,577,5],[669,10,577,6],[671,8,579,4],[672,8,580,4,"console"],[672,15,580,11],[672,16,580,12,"log"],[672,19,580,15],[672,20,580,16],[672,26,580,22,"winner"],[672,32,580,28],[672,33,580,29,"name"],[672,37,580,33],[672,50,580,46,"dailyPrizeAmount"],[672,66,580,62],[672,91,580,87,"matchday"],[672,99,580,95],[672,101,580,97],[672,102,580,98],[673,8,582,4,"console"],[673,15,582,11],[673,16,582,12,"log"],[673,19,582,15],[673,20,582,16],[673,56,582,52],[673,57,582,53],[674,8,583,4],[674,15,583,11],[675,10,584,6,"message"],[675,17,584,13],[675,19,584,15],[675,38,584,34,"dailyPrizeAmount"],[675,54,584,50],[675,69,584,65,"winner"],[675,75,584,71],[675,76,584,72,"name"],[675,80,584,76],[675,97,584,93,"matchday"],[675,105,584,101],[675,107,584,103],[676,10,585,6,"competition"],[676,21,585,17],[676,23,585,19,"competition"],[677,8,586,4],[677,9,586,5],[678,6,587,2],[678,7,587,3],[679,6,587,3],[679,22,520,2,"awardDailyPrizeMock"],[679,41,520,21,"awardDailyPrizeMock"],[679,42,520,21,"_x26"],[679,46,520,21],[679,48,520,21,"_x27"],[679,52,520,21],[679,54,520,21,"_x28"],[679,58,520,21],[680,8,520,21],[680,15,520,21,"_ref10"],[680,21,520,21],[680,22,520,21,"apply"],[680,27,520,21],[680,34,520,21,"arguments"],[680,43,520,21],[681,6,520,21],[682,4,520,21],[682,7,587,3],[683,4,589,2],[684,4,590,2,"getAdminLogsMock"],[684,20,590,18],[685,6,590,18],[685,10,590,18,"_ref11"],[685,16,590,18],[685,23,590,18,"_asyncToGenerator"],[685,40,590,18],[685,41,590,18,"default"],[685,48,590,18],[685,50,590,20],[685,63,590,32],[686,8,591,4,"console"],[686,15,591,11],[686,16,591,12,"log"],[686,19,591,15],[686,20,591,16],[686,49,591,45],[686,50,591,46],[687,8,593,4],[687,12,593,8],[688,10,594,6],[688,14,594,12,"logs"],[688,18,594,16],[688,21,594,19],[688,28,594,25,"CrossPlatformStorage"],[688,48,594,45],[688,49,594,46,"getItem"],[688,56,594,53],[688,57,594,54],[688,68,594,65],[688,69,594,66],[688,74,594,70],[688,78,594,74],[689,10,595,6],[689,14,595,12,"adminLogs"],[689,23,595,21],[689,26,595,24,"JSON"],[689,30,595,28],[689,31,595,29,"parse"],[689,36,595,34],[689,37,595,35,"logs"],[689,41,595,39],[689,42,595,40],[691,10,597,6],[692,10,598,6,"adminLogs"],[692,19,598,15],[692,20,598,16,"sort"],[692,24,598,20],[692,25,598,21],[692,26,598,22,"a"],[692,27,598,28],[692,29,598,30,"b"],[692,30,598,36],[692,35,598,41],[692,39,598,45,"Date"],[692,43,598,49],[692,44,598,50,"b"],[692,45,598,51],[692,46,598,52,"timestamp"],[692,55,598,61],[692,56,598,62],[692,57,598,63,"getTime"],[692,64,598,70],[692,65,598,71],[692,66,598,72],[692,69,598,75],[692,73,598,79,"Date"],[692,77,598,83],[692,78,598,84,"a"],[692,79,598,85],[692,80,598,86,"timestamp"],[692,89,598,95],[692,90,598,96],[692,91,598,97,"getTime"],[692,98,598,104],[692,99,598,105],[692,100,598,106],[692,101,598,107],[693,10,600,6,"console"],[693,17,600,13],[693,18,600,14,"log"],[693,21,600,17],[693,22,600,18],[693,44,600,40],[693,46,600,42,"adminLogs"],[693,55,600,51],[693,56,600,52,"length"],[693,62,600,58],[693,63,600,59],[694,10,601,6],[694,17,601,13,"adminLogs"],[694,26,601,22],[695,8,602,4],[695,9,602,5],[695,10,602,6],[695,17,602,13,"error"],[695,22,602,18],[695,24,602,20],[696,10,603,6,"console"],[696,17,603,13],[696,18,603,14,"error"],[696,23,603,19],[696,24,603,20],[696,54,603,50],[696,56,603,52,"error"],[696,61,603,57],[696,62,603,58],[697,10,604,6],[697,17,604,13],[697,19,604,15],[698,8,605,4],[699,6,606,2],[699,7,606,3],[700,6,606,3],[700,22,590,2,"getAdminLogsMock"],[700,38,590,18,"getAdminLogsMock"],[700,39,590,18],[701,8,590,18],[701,15,590,18,"_ref11"],[701,21,590,18],[701,22,590,18,"apply"],[701,27,590,18],[701,34,590,18,"arguments"],[701,43,590,18],[702,6,590,18],[703,4,590,18],[704,2,607,0],[704,3,607,1],[706,2,609,0],[707,2,610,7],[707,6,610,13,"walletAPI"],[707,15,610,22],[707,18,610,25],[708,4,611,2,"getBalance"],[708,14,611,12],[708,16,611,14,"getBalance"],[708,17,611,14],[708,22,611,20,"apiClient"],[708,31,611,29],[708,32,611,30,"get"],[708,35,611,33],[708,36,611,34],[708,53,611,51],[708,54,611,52],[709,4,613,2,"topUp"],[709,9,613,7],[709,11,613,10,"amount"],[709,17,613,24],[709,21,614,4,"apiClient"],[709,30,614,13],[709,31,614,14,"post"],[709,35,614,18],[709,36,614,19],[709,51,614,34],[709,53,614,36],[709,57,614,40],[709,59,614,42],[710,6,615,6,"params"],[710,12,615,12],[710,14,615,14],[711,8,615,16,"amount"],[712,6,615,23],[713,4,616,4],[713,5,616,5],[713,6,616,6],[714,4,618,2,"withdraw"],[714,12,618,10],[714,14,618,13,"amount"],[714,20,618,27],[714,24,619,4,"apiClient"],[714,33,619,13],[714,34,619,14,"post"],[714,38,619,18],[714,39,619,19],[714,57,619,37],[714,59,619,39],[714,63,619,43],[714,65,619,45],[715,6,620,6,"params"],[715,12,620,12],[715,14,620,14],[716,8,620,16,"amount"],[717,6,620,23],[718,4,621,4],[718,5,621,5],[718,6,621,6],[719,4,623,2,"getTransactions"],[719,19,623,17],[719,21,623,19,"getTransactions"],[719,22,623,19],[719,27,623,25,"apiClient"],[719,36,623,34],[719,37,623,35,"get"],[719,40,623,38],[719,41,623,39],[719,56,623,54],[720,2,624,0],[720,3,624,1],[722,2,626,0],[723,2,627,7],[723,6,627,13,"databaseAPI"],[723,17,627,24],[723,20,627,27],[724,4,628,2,"resetDatabase"],[724,17,628,15],[725,6,628,15],[725,10,628,15,"_ref12"],[725,16,628,15],[725,23,628,15,"_asyncToGenerator"],[725,40,628,15],[725,41,628,15,"default"],[725,48,628,15],[725,50,628,17],[725,63,628,29],[726,8,629,4,"console"],[726,15,629,11],[726,16,629,12,"log"],[726,19,629,15],[726,20,629,16],[726,71,629,67],[726,72,629,68],[727,8,631,4],[727,12,631,8],[728,10,632,6],[728,16,632,12,"CrossPlatformStorage"],[728,36,632,32],[728,37,632,33,"removeItem"],[728,47,632,43],[728,48,632,44],[728,67,632,63],[728,68,632,64],[729,10,633,6],[729,16,633,12,"CrossPlatformStorage"],[729,36,633,32],[729,37,633,33,"removeItem"],[729,47,633,43],[729,48,633,44],[729,65,633,61],[729,66,633,62],[730,10,634,6],[730,16,634,12,"CrossPlatformStorage"],[730,36,634,32],[730,37,634,33,"removeItem"],[730,47,634,43],[730,48,634,44],[730,89,634,85],[730,90,634,86],[731,10,635,6],[731,16,635,12,"CrossPlatformStorage"],[731,36,635,32],[731,37,635,33,"removeItem"],[731,47,635,43],[731,48,635,44],[731,87,635,83],[731,88,635,84],[732,10,637,6,"console"],[732,17,637,13],[732,18,637,14,"log"],[732,21,637,17],[732,22,637,18],[732,68,637,64],[732,69,637,65],[733,10,638,6],[733,17,638,13],[734,12,638,15,"success"],[734,19,638,22],[734,21,638,24],[734,25,638,28],[735,12,638,30,"message"],[735,19,638,37],[735,21,638,39],[736,10,638,65],[736,11,638,66],[737,8,639,4],[737,9,639,5],[737,10,639,6],[737,17,639,13,"error"],[737,22,639,18],[737,24,639,20],[738,10,640,6,"console"],[738,17,640,13],[738,18,640,14,"error"],[738,23,640,19],[738,24,640,20],[738,50,640,46],[738,52,640,48,"error"],[738,57,640,53],[738,58,640,54],[739,10,641,6],[739,17,641,13],[740,12,641,15,"success"],[740,19,641,22],[740,21,641,24],[740,26,641,29],[741,12,641,31,"message"],[741,19,641,38],[741,21,641,40],[742,10,641,55],[742,11,641,56],[743,8,642,4],[744,6,643,2],[744,7,643,3],[745,6,643,3],[745,22,628,2,"resetDatabase"],[745,35,628,15,"resetDatabase"],[745,36,628,15],[746,8,628,15],[746,15,628,15,"_ref12"],[746,21,628,15],[746,22,628,15,"apply"],[746,27,628,15],[746,34,628,15,"arguments"],[746,43,628,15],[747,6,628,15],[748,4,628,15],[749,2,644,0],[749,3,644,1],[750,2,646,0],[750,6,646,0,"_default"],[750,14,646,0],[750,17,646,15,"apiClient"],[750,26,646,24],[751,0,646,25],[751,3]],"functionMap":{"names":["<global>","CrossPlatformStorage","CrossPlatformStorage.getItem","CrossPlatformStorage.setItem","CrossPlatformStorage.removeItem","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACM;ECC;GDW;EEE;GFU;EGE;GHQ;CDC;AKK;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CLC;iBeM;MfG;UgBE;4ChBM;aiBE;4CjBC;SkBE;uClBC;amBE;iDnBC;kBoBE,+BpB;UqBE,oCrB;kBsBE;MtBG;mBuBE;MvBG;uBwBI;CxBqB;UyBI;6CzBe;Q0BE;qE1BC;qB2BE,uC3B;kB4BE,oD5B;mB6BE;M7BQ;U8BE;M9BG;mB+BE;qD/BC;gBgCG;MhCI;uBiCE;qEjCC;yBkCE;wElCC;cmCG;mDCwB,sCD;GnCgE;oBqCG;GrCe;2BsCE;GtC2B;6BuCE;kDCS;QDK;GvCW;oByCG;kCLc,sCK;0BCC,0BD;GzCS;yB2CG;2BCQ;ODE;G3CO;Y6CE;G7CM;c8CG;kDCM,yCD;uCEW,yCF;G9CQ;YiDG;oDCM,yCD;GjD0B;uBmDG;oDDM,yCC;iDCkB,6BD;GnD2C;oBqDG;qBCQ,qFD;GrDQ;cuDK,sCvD;SwDE;MxDG;YyDE;MzDG;mB0DE,oC1D;iB2DK;G3De"},"hasCjsExports":false},"type":"js/module"}]}