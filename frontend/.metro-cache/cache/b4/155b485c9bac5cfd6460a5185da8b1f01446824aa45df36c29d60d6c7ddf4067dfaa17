{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"axios","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"e45rENb5cSu0Yeh6oC1uWb7lEp4=","exportNames":["*"],"imports":1}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":49,"index":110}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":39,"index":150}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"../utils/CrossPlatformStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":151},"end":{"line":4,"column":65,"index":216}}],"key":"f35s9TWsgQpxKKiCp9CmSar+L+U=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"authAPI\", {\n    enumerable: true,\n    get: function () {\n      return authAPI;\n    }\n  });\n  Object.defineProperty(exports, \"competitionAPI\", {\n    enumerable: true,\n    get: function () {\n      return competitionAPI;\n    }\n  });\n  Object.defineProperty(exports, \"walletAPI\", {\n    enumerable: true,\n    get: function () {\n      return walletAPI;\n    }\n  });\n  Object.defineProperty(exports, \"databaseAPI\", {\n    enumerable: true,\n    get: function () {\n      return databaseAPI;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _expoVirtualEnv = require(_dependencyMap[3], \"expo/virtual/env\");\n  var _axios = require(_dependencyMap[4], \"axios\");\n  var axios = _interopDefault(_axios);\n  var _expoSecureStore = require(_dependencyMap[5], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  var _expoConstants = require(_dependencyMap[6], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _utilsCrossPlatformStorage = require(_dependencyMap[7], \"../utils/CrossPlatformStorage\");\n  var CrossPlatformStorage = _interopDefault(_utilsCrossPlatformStorage);\n  // Get backend URL from environment\n  var BACKEND_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'https://fantaleague-pay.preview.emergentagent.com';\n  var ApiClient = /*#__PURE__*/function () {\n    function ApiClient() {\n      (0, _classCallCheck.default)(this, ApiClient);\n      this.client = axios.default.create({\n        baseURL: `${BACKEND_URL}/api`,\n        timeout: 10000,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add request interceptor to include auth token and log requests\n      this.client.interceptors.request.use(/*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator.default)(function* (config) {\n          console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n          var token = yield SecureStore.getItemAsync('session_token');\n          if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n          }\n          return config;\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      // Add response interceptor for error handling and logging\n      this.client.interceptors.response.use(response => {\n        console.log(`✅ API Response: ${response.status}`, response.data);\n        return response;\n      }, error => {\n        console.log(`❌ API Error: ${error.response?.status || 'Network'}`, error.response?.data || error.message);\n        if (error.response?.status === 401) {\n          // Token expired, clear stored token\n          SecureStore.deleteItemAsync('session_token');\n        }\n        return Promise.reject(error);\n      });\n    }\n    return (0, _createClass.default)(ApiClient, [{\n      key: \"get\",\n      value: function () {\n        var _get = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.get(url);\n          return response.data;\n        });\n        function get(_x2) {\n          return _get.apply(this, arguments);\n        }\n        return get;\n      }()\n    }, {\n      key: \"post\",\n      value: function () {\n        var _post = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.post(url, data);\n          return response.data;\n        });\n        function post(_x3, _x4) {\n          return _post.apply(this, arguments);\n        }\n        return post;\n      }()\n    }, {\n      key: \"patch\",\n      value: function () {\n        var _patch = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.patch(url, data);\n          return response.data;\n        });\n        function patch(_x5, _x6) {\n          return _patch.apply(this, arguments);\n        }\n        return patch;\n      }()\n    }, {\n      key: \"delete\",\n      value: function () {\n        var _delete2 = (0, _asyncToGenerator.default)(function* (url) {\n          var response = yield this.client.delete(url);\n          return response.data;\n        });\n        function _delete(_x7) {\n          return _delete2.apply(this, arguments);\n        }\n        return _delete;\n      }()\n    }, {\n      key: \"put\",\n      value: function () {\n        var _put = (0, _asyncToGenerator.default)(function* (url, data) {\n          var response = yield this.client.put(url, data);\n          return response.data;\n        });\n        function put(_x8, _x9) {\n          return _put.apply(this, arguments);\n        }\n        return put;\n      }()\n    }]);\n  }();\n  var apiClient = new ApiClient();\n\n  // Auth API\n  var authAPI = {\n    createSession: sessionId => apiClient.post('/auth/session', null, {\n      headers: {\n        'X-Session-ID': sessionId\n      }\n    }),\n    signup: data => apiClient.post('/auth/signup', data),\n    verifyOTP: data => apiClient.post('/auth/verify-otp', data),\n    login: data => apiClient.post('/auth/login', data),\n    resendOTP: email => apiClient.post('/auth/resend-otp', {\n      email\n    }),\n    getCurrentUser: () => apiClient.get('/auth/me'),\n    logout: () => apiClient.post('/auth/logout'),\n    updateLanguage: language => apiClient.patch('/auth/language', null, {\n      params: {\n        language\n      }\n    }),\n    toggleBiometric: enabled => apiClient.patch('/auth/biometric', null, {\n      params: {\n        enabled\n      }\n    })\n  };\n\n  // Helper function to log admin actions for transparency\n  var logAdminAction = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator.default)(function* (action, competitionName, adminName, details) {\n      try {\n        var logs = (yield CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n        var adminLogs = JSON.parse(logs);\n        var logEntry = {\n          id: `log_${Date.now()}`,\n          action,\n          competition_name: competitionName,\n          admin_name: adminName,\n          details,\n          timestamp: new Date().toISOString()\n        };\n        adminLogs.push(logEntry);\n        yield CrossPlatformStorage.default.setItem('adminLogs', JSON.stringify(adminLogs));\n        console.log('📝 Admin action logged:', action, competitionName);\n      } catch (error) {\n        console.error('Failed to log admin action:', error);\n      }\n    });\n    return function logAdminAction(_x0, _x1, _x10, _x11) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Competition API\n  var competitionAPI = {\n    create: data => apiClient.post('/competitions', data),\n    join: inviteCode => apiClient.post('/competitions/join', {\n      invite_code: inviteCode\n    }),\n    getMyCompetitions: () => apiClient.get('/competitions/my'),\n    getCompetition: id => apiClient.get(`/competitions/${id}`),\n    updateStandings: (id, standings, matchday) => apiClient.patch(`/competitions/${id}/standings`, {\n      standings,\n      matchday\n    }),\n    payFee: (id, amount) => apiClient.post(`/competitions/${id}/pay`, null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: id => apiClient.get(`/competitions/${id}/transactions`),\n    // Matchday Payment APIs\n    payMatchdays: (competitionId, matchdays) => apiClient.post(`/competitions/${competitionId}/matchday-payments`, {\n      competition_id: competitionId,\n      matchdays\n    }),\n    getMatchdayPayments: competitionId => apiClient.get(`/competitions/${competitionId}/matchday-payments`),\n    getPaymentStatusTable: competitionId => apiClient.get(`/competitions/${competitionId}/payment-status-table`),\n    // TEMPORARY: Mock API calls for testing without authentication\n    createMock: function () {\n      var _ref3 = (0, _asyncToGenerator.default)(function* (data) {\n        console.log('🏆 Mock: Creating competition:', data.name);\n        console.log('📅 Total matchdays:', data.total_matchdays || 36);\n\n        // Get existing competitions from cross-platform storage\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('competitions_mock');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        console.log('📋 Current competitions before creation:', existingCompetitions.length);\n\n        // Check for unique name validation\n        var existingNames = existingCompetitions.map(comp => comp.name.toLowerCase());\n        if (existingNames.includes(data.name.toLowerCase())) {\n          throw new Error('Competition name already exists. Please choose another name.');\n        }\n\n        // Create new competition\n        // Generate truly random unique invite code (not based on name)\n        var generateRandomCode = () => {\n          var chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'; // Exclude confusing chars like O, 0, I, L\n          var result = '';\n          for (var i = 0; i < 8; i++) {\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\n          }\n          return result;\n        };\n\n        // Ensure invite code is globally unique\n        var inviteCode = generateRandomCode();\n        while (existingCompetitions.some(comp => comp.invite_code === inviteCode)) {\n          inviteCode = generateRandomCode();\n          console.log('🔄 Generated new code due to collision:', inviteCode);\n        }\n        console.log('✅ Generated unique invite code:', inviteCode);\n        var newCompetition = {\n          _id: `comp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n          name: data.name,\n          total_matchdays: data.total_matchdays || 36,\n          participation_cost_per_team: data.participation_cost_per_team || 210.0,\n          expected_teams: data.expected_teams || 8,\n          total_prize_pool: data.total_prize_pool || 1680.0,\n          daily_payment_enabled: data.daily_payment_enabled || false,\n          daily_payment_amount: data.daily_payment_amount || 0.0,\n          rules: data.rules,\n          invite_code: inviteCode,\n          // Random unique code\n          invite_link: `https://fantapay.app/join/${inviteCode}`,\n          admin_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          // Current mock user ID\n          participants: [{\n            id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            email: 'test@fantapay.com',\n            is_admin: true,\n            paid_matchdays: [1, 2],\n            // Mock paid matchdays\n            points: 0\n          }],\n          wallet_balance: 0,\n          is_active: true,\n          current_matchday: 1,\n          // Start at matchday 1\n          standings: [{\n            position: 1,\n            player_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            name: 'FantaPay Tester',\n            points: 0\n          }],\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n\n        // Add to competitions list and save to storage\n        existingCompetitions.push(newCompetition);\n        yield CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(existingCompetitions));\n        console.log('✅ Competition saved to storage. Total competitions:', existingCompetitions.length);\n\n        // Log the creation action\n        yield logAdminAction('create', newCompetition.name, 'FantaPay Tester', {\n          competition_id: newCompetition._id,\n          rules: newCompetition.rules,\n          total_matchdays: newCompetition.total_matchdays,\n          participation_cost_per_team: newCompetition.participation_cost_per_team,\n          expected_teams: newCompetition.expected_teams,\n          total_prize_pool: newCompetition.total_prize_pool,\n          daily_payment_enabled: newCompetition.daily_payment_enabled,\n          daily_payment_amount: newCompetition.daily_payment_amount\n        });\n        console.log('✅ Mock Competition Created:', newCompetition.name);\n        console.log('📝 Competition Name:', newCompetition.name);\n        console.log('💰 Daily Payment:', newCompetition.daily_payment_enabled ? `€${newCompetition.daily_payment_amount} per matchday` : 'Disabled');\n        console.log('🏆 Total Prize Pool:', `€${newCompetition.total_prize_pool}`);\n        console.log('🔑 Invite Code:', newCompetition.invite_code);\n        return {\n          data: newCompetition\n        };\n      });\n      return function createMock(_x12) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    // Mock matchday payment methods\n    payMatchdaysMock: function () {\n      var _ref4 = (0, _asyncToGenerator.default)(function* (competitionId, matchdays) {\n        console.log('💳 Mock: Paying for matchdays', matchdays, 'in competition', competitionId);\n\n        // Simulate payment processing\n        var totalCost = matchdays.length * 5; // €5 per matchday\n\n        // Mock payment success\n        return {\n          data: {\n            message: `Successfully paid for ${matchdays.length} matchdays`,\n            paid_matchdays: matchdays,\n            total_cost: totalCost,\n            new_user_balance: 150 - totalCost // Mock remaining balance\n          }\n        };\n      });\n      return function payMatchdaysMock(_x13, _x14) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    getMatchdayPaymentsMock: function () {\n      var _ref5 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('📊 Mock: Getting matchday payments for competition', competitionId);\n\n        // Mock payment data\n        var mockPayments = [];\n        for (var i = 1; i <= 36; i++) {\n          mockPayments.push({\n            _id: `payment_${i}`,\n            user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n            competition_id: competitionId,\n            matchday: i,\n            amount: 5,\n            status: i <= 3 ? 'paid' : 'pending',\n            paid_at: i <= 3 ? new Date().toISOString() : null,\n            created_at: new Date().toISOString()\n          });\n        }\n        return {\n          data: {\n            competition_id: competitionId,\n            daily_payment_enabled: true,\n            daily_payment_amount: 5,\n            total_matchdays: 36,\n            payments: mockPayments\n          }\n        };\n      });\n      return function getMatchdayPaymentsMock(_x15) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    getPaymentStatusTableMock: function () {\n      var _ref6 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('🔐 Mock: Getting payment status table for competition', competitionId);\n\n        // Mock admin payment table\n        var mockTable = [{\n          user_id: '650f1f1f1f1f1f1f1f1f1f1f',\n          username: 'FantaPay Tester',\n          name: 'FantaPay Tester',\n          email: 'test@fantapay.com',\n          matchday_payments: Array.from({\n            length: 36\n          }, (_, i) => ({\n            matchday: i + 1,\n            status: i < 3 ? 'paid' : 'pending',\n            amount: 5,\n            paid_at: i < 3 ? new Date().toISOString() : null\n          }))\n        }];\n        return {\n          data: {\n            competition_name: 'Mock Fantasy League',\n            total_matchdays: 36,\n            daily_payment_amount: 5,\n            participants: mockTable\n          }\n        };\n      });\n      return function getPaymentStatusTableMock(_x16) {\n        return _ref6.apply(this, arguments);\n      };\n    }(),\n    // Real-time name validation\n    validateNameMock: function () {\n      var _ref7 = (0, _asyncToGenerator.default)(function* (name) {\n        console.log('🏆 Mock: Validating competition name:', name);\n        if (!name.trim()) {\n          return {\n            available: true,\n            message: ''\n          };\n        }\n\n        // Get existing competitions\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var existingCompetitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n        // Add some default competition names to check against\n        var defaultNames = ['Serie A Fantasy 2024', 'Champions League Fantasy', 'Premier League'];\n        var allNames = [...existingCompetitions.map(comp => comp.name.toLowerCase()), ...defaultNames.map(name => name.toLowerCase())];\n        var isAvailable = !allNames.includes(name.toLowerCase());\n        return {\n          available: isAvailable,\n          message: isAvailable ? 'Name available' : 'Name already exists'\n        };\n      });\n      return function validateNameMock(_x17) {\n        return _ref7.apply(this, arguments);\n      };\n    }(),\n    // Mock method to get user's competitions (now checks updated storage)\n    getMyCompetitionsMock: function () {\n      var _ref8 = (0, _asyncToGenerator.default)(function* () {\n        console.log('🏆 Mock: Getting my competitions');\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('competitions_mock');\n        if (storedCompetitions) {\n          var competitions = JSON.parse(storedCompetitions);\n          console.log('📋 Competitions found in storage:', competitions.length);\n\n          // Enhance competitions with demo participants if they don't have enough and fix financial settings\n          var enhancedCompetitions = competitions.map(comp => {\n            var updatedComp = {\n              ...comp\n            };\n\n            // Fix financial settings for existing competitions if needed\n            if (!updatedComp.daily_payment_enabled || !updatedComp.daily_payment_amount) {\n              console.log('🔧 Updating financial settings for competition:', updatedComp.name);\n              updatedComp.daily_payment_enabled = true;\n              updatedComp.daily_payment_amount = updatedComp.daily_payment_amount || 10; // Default to €10 as mentioned by user\n              updatedComp.participation_cost_per_team = updatedComp.participation_cost_per_team || 210;\n            }\n            if (!updatedComp.participants || updatedComp.participants.length < 4) {\n              var demoParticipants = [{\n                id: '650f1f1f1f1f1f1f1f1f1f1f',\n                name: 'FantaPay Tester',\n                email: 'test@fantapay.com',\n                is_admin: true,\n                paid_matchdays: [1, 2, 3],\n                points: 87.5,\n                totalPoints: 254.8\n              }, {\n                id: 'user_marco_rossi',\n                name: 'Marco Rossi',\n                email: 'marco.rossi@email.com',\n                is_admin: false,\n                paid_matchdays: [1, 2],\n                points: 92.3,\n                totalPoints: 301.7\n              }, {\n                id: 'user_giulia_bianchi',\n                name: 'Giulia Bianchi',\n                email: 'giulia.bianchi@email.com',\n                is_admin: false,\n                paid_matchdays: [1],\n                points: 78.1,\n                totalPoints: 198.4\n              }, {\n                id: 'user_luca_ferrari',\n                name: 'Luca Ferrari',\n                email: 'luca.ferrari@email.com',\n                is_admin: false,\n                paid_matchdays: [],\n                points: 45.7,\n                totalPoints: 142.9\n              }, {\n                id: 'user_sofia_conti',\n                name: 'Sofia Conti',\n                email: 'sofia.conti@email.com',\n                is_admin: false,\n                paid_matchdays: [1, 2, 3],\n                points: 95.2,\n                totalPoints: 328.6\n              }];\n              return {\n                ...updatedComp,\n                participants: demoParticipants\n              };\n            }\n            return updatedComp;\n          });\n\n          // Save enhanced competitions back to storage\n          yield CrossPlatformStorage.default.setItem('competitions_mock', JSON.stringify(enhancedCompetitions));\n          enhancedCompetitions.forEach((comp, index) => {\n            console.log(`${index + 1}. ${comp.name} (ID: ${comp._id}) - ${comp.participants?.length || 0} participants`);\n          });\n          return enhancedCompetitions;\n        } else {\n          console.log('📋 No competitions found in storage, returning empty array');\n          return [];\n        }\n      });\n      return function getMyCompetitionsMock() {\n        return _ref8.apply(this, arguments);\n      };\n    }(),\n    joinMock: function () {\n      var _ref9 = (0, _asyncToGenerator.default)(function* (inviteCode) {\n        console.log('🏆 Mock: Joining competition with code:', inviteCode);\n        if (inviteCode.length < 6) {\n          throw new Error('Invalid invite code');\n        }\n        return {\n          message: 'Successfully joined competition!'\n        };\n      });\n      return function joinMock(_x18) {\n        return _ref9.apply(this, arguments);\n      };\n    }(),\n    // Delete competition (admin only)\n    deleteMock: function () {\n      var _ref0 = (0, _asyncToGenerator.default)(function* (competitionId) {\n        console.log('🗑️ Mock: Deleting competition:', competitionId);\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionToDelete = competitions.find(comp => comp._id === competitionId);\n        if (!competitionToDelete) {\n          throw new Error('Competition not found');\n        }\n\n        // Check if user is admin\n        if (competitionToDelete.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can delete this competition');\n        }\n\n        // Remove competition from storage\n        competitions = competitions.filter(comp => comp._id !== competitionId);\n        yield CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('delete', competitionToDelete.name, 'FantaPay Tester');\n        console.log('✅ Competition deleted successfully');\n        return {\n          message: 'Competition deleted successfully'\n        };\n      });\n      return function deleteMock(_x19) {\n        return _ref0.apply(this, arguments);\n      };\n    }(),\n    // Edit competition (admin only)\n    editMock: function () {\n      var _ref1 = (0, _asyncToGenerator.default)(function* (competitionId, updates) {\n        console.log('✏️ Mock: Editing competition:', competitionId, updates);\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can edit this competition');\n        }\n\n        // Update competition\n        competitions[competitionIndex] = {\n          ...competition,\n          ...updates,\n          updated_at: new Date().toISOString()\n        };\n        yield CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('edit', competition.name, 'FantaPay Tester', updates);\n        console.log('✅ Competition updated successfully');\n        return competitions[competitionIndex];\n      });\n      return function editMock(_x20, _x21) {\n        return _ref1.apply(this, arguments);\n      };\n    }(),\n    // Award daily prize (admin only)\n    awardDailyPrizeMock: function () {\n      var _ref10 = (0, _asyncToGenerator.default)(function* (competitionId, matchday, winnerId) {\n        console.log('🏆 Mock: Awarding daily prize for matchday', matchday, 'to user', winnerId);\n        var storedCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n        var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n        var competitionIndex = competitions.findIndex(comp => comp._id === competitionId);\n        if (competitionIndex === -1) {\n          throw new Error('Competition not found');\n        }\n        var competition = competitions[competitionIndex];\n\n        // Check if user is admin\n        if (competition.admin_id !== '650f1f1f1f1f1f1f1f1f1f1f') {\n          throw new Error('Only admin can award daily prizes');\n        }\n\n        // Check if competition has daily prizes\n        if (!competition.rules || !['daily', 'mixed'].includes(competition.rules.type)) {\n          throw new Error('This competition does not have daily prizes');\n        }\n        var dailyPrizeAmount = competition.rules.daily_prize || 5;\n        var winner = competition.participants.find(p => p.id === winnerId);\n        if (!winner) {\n          throw new Error('Winner not found in competition');\n        }\n\n        // Initialize daily winners if not exists\n        if (!competition.daily_winners) {\n          competition.daily_winners = {};\n        }\n\n        // Check if prize already awarded for this matchday\n        if (competition.daily_winners[matchday]) {\n          throw new Error(`Daily prize for matchday ${matchday} already awarded to ${competition.daily_winners[matchday].name}`);\n        }\n\n        // Award the prize\n        competition.daily_winners[matchday] = {\n          user_id: winnerId,\n          name: winner.name,\n          amount: dailyPrizeAmount,\n          awarded_at: new Date().toISOString()\n        };\n\n        // Update competition\n        competitions[competitionIndex] = competition;\n        yield CrossPlatformStorage.default.setItem('mockCompetitions', JSON.stringify(competitions));\n\n        // Log the action\n        yield logAdminAction('award_daily_prize', competition.name, 'FantaPay Tester', {\n          matchday,\n          winner: winner.name,\n          amount: dailyPrizeAmount\n        });\n\n        // Simulate wallet credit (in a real app, this would update the user's wallet)\n        console.log(`💰 ${winner.name} awarded €${dailyPrizeAmount} for winning matchday ${matchday}`);\n        console.log('✅ Daily prize awarded successfully');\n        return {\n          message: `Daily prize of €${dailyPrizeAmount} awarded to ${winner.name} for matchday ${matchday}`,\n          competition: competition\n        };\n      });\n      return function awardDailyPrizeMock(_x22, _x23, _x24) {\n        return _ref10.apply(this, arguments);\n      };\n    }(),\n    // Get admin logs\n    getAdminLogsMock: function () {\n      var _ref11 = (0, _asyncToGenerator.default)(function* () {\n        console.log('📝 Mock: Getting admin logs');\n        try {\n          var logs = (yield CrossPlatformStorage.default.getItem('adminLogs')) || '[]';\n          var adminLogs = JSON.parse(logs);\n\n          // Sort by timestamp (newest first)\n          adminLogs.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime());\n          console.log('📋 Admin logs found:', adminLogs.length);\n          return adminLogs;\n        } catch (error) {\n          console.error('💥 Error getting admin logs:', error);\n          return [];\n        }\n      });\n      return function getAdminLogsMock() {\n        return _ref11.apply(this, arguments);\n      };\n    }(),\n    // Critical Missing Method: Get ALL competitions for uniqueness validation\n    getAllCompetitions: function () {\n      var _ref12 = (0, _asyncToGenerator.default)(function* () {\n        console.log('🌐 Mock: Getting ALL competitions for validation');\n        try {\n          // Get competitions from both storage locations \n          var storedCompetitions = yield CrossPlatformStorage.default.getItem('competitions_mock');\n          var competitions = storedCompetitions ? JSON.parse(storedCompetitions) : [];\n\n          // Also check the old storage key for backwards compatibility\n          var oldStoredCompetitions = yield CrossPlatformStorage.default.getItem('mockCompetitions');\n          var oldCompetitions = oldStoredCompetitions ? JSON.parse(oldStoredCompetitions) : [];\n\n          // Combine both sources and remove duplicates\n          var allCompetitions = [...competitions, ...oldCompetitions];\n          var uniqueCompetitions = allCompetitions.filter((comp, index, self) => index === self.findIndex(c => c._id === comp._id));\n          console.log('📊 Total unique competitions found:', uniqueCompetitions.length);\n          return uniqueCompetitions;\n        } catch (error) {\n          console.error('💥 Error getting all competitions:', error);\n          return [];\n        }\n      });\n      return function getAllCompetitions() {\n        return _ref12.apply(this, arguments);\n      };\n    }()\n  };\n\n  // Wallet API\n  var walletAPI = {\n    getBalance: () => apiClient.get('/wallet/balance'),\n    topUp: amount => apiClient.post('/wallet/topup', null, {\n      params: {\n        amount\n      }\n    }),\n    withdraw: amount => apiClient.post('/wallet/withdraw', null, {\n      params: {\n        amount\n      }\n    }),\n    getTransactions: () => apiClient.get('/transactions')\n  };\n\n  // Database reset utility (admin only)\n  var databaseAPI = {\n    resetDatabase: function () {\n      var _ref13 = (0, _asyncToGenerator.default)(function* () {\n        console.log('🗑️ Resetting database - clearing all stored data');\n        try {\n          yield CrossPlatformStorage.default.removeItem('competitions_mock');\n          yield CrossPlatformStorage.default.removeItem('admin_logs_mock');\n          yield CrossPlatformStorage.default.removeItem('wallet_balance_650f1f1f1f1f1f1f1f1f1f1f');\n          yield CrossPlatformStorage.default.removeItem('transactions_650f1f1f1f1f1f1f1f1f1f1f');\n          console.log('✅ Database reset complete - all data cleared');\n          return {\n            success: true,\n            message: 'Database reset complete'\n          };\n        } catch (error) {\n          console.error('❌ Database reset failed:', error);\n          return {\n            success: false,\n            message: 'Reset failed'\n          };\n        }\n      });\n      return function resetDatabase() {\n        return _ref13.apply(this, arguments);\n      };\n    }()\n  };\n  var _default = apiClient;\n});","lineCount":800,"map":[[27,2,724,0,"Object"],[27,8,724,0],[27,9,724,0,"defineProperty"],[27,23,724,0],[27,24,724,0,"exports"],[27,31,724,0],[28,4,724,0,"enumerable"],[28,14,724,0],[29,4,724,0,"get"],[29,7,724,0],[29,18,724,0,"get"],[29,19,724,0],[30,6,724,0],[30,13,724,0,"_default"],[30,21,724,0],[31,4,724,0],[32,2,724,0],[33,2,79,0,"Object"],[33,8,79,0],[33,9,79,0,"defineProperty"],[33,23,79,0],[33,24,79,0,"exports"],[33,31,79,0],[34,4,79,0,"enumerable"],[34,14,79,0],[35,4,79,0,"get"],[35,7,79,0],[35,18,79,0,"get"],[35,19,79,0],[36,6,79,0],[36,13,79,0,"authAPI"],[36,20,79,0],[37,4,79,0],[38,2,79,0],[39,2,142,0,"Object"],[39,8,142,0],[39,9,142,0,"defineProperty"],[39,23,142,0],[39,24,142,0,"exports"],[39,31,142,0],[40,4,142,0,"enumerable"],[40,14,142,0],[41,4,142,0,"get"],[41,7,142,0],[41,18,142,0,"get"],[41,19,142,0],[42,6,142,0],[42,13,142,0,"competitionAPI"],[42,27,142,0],[43,4,142,0],[44,2,142,0],[45,2,688,0,"Object"],[45,8,688,0],[45,9,688,0,"defineProperty"],[45,23,688,0],[45,24,688,0,"exports"],[45,31,688,0],[46,4,688,0,"enumerable"],[46,14,688,0],[47,4,688,0,"get"],[47,7,688,0],[47,18,688,0,"get"],[47,19,688,0],[48,6,688,0],[48,13,688,0,"walletAPI"],[48,22,688,0],[49,4,688,0],[50,2,688,0],[51,2,705,0,"Object"],[51,8,705,0],[51,9,705,0,"defineProperty"],[51,23,705,0],[51,24,705,0,"exports"],[51,31,705,0],[52,4,705,0,"enumerable"],[52,14,705,0],[53,4,705,0,"get"],[53,7,705,0],[53,18,705,0,"get"],[53,19,705,0],[54,6,705,0],[54,13,705,0,"databaseAPI"],[54,24,705,0],[55,4,705,0],[56,2,705,0],[57,2,722,2],[57,6,722,2,"_babelRuntimeHelpersAsyncToGenerator"],[57,42,722,2],[57,45,722,2,"require"],[57,52,722,2],[57,53,722,2,"_dependencyMap"],[57,67,722,2],[58,2,722,2],[58,6,722,2,"_asyncToGenerator"],[58,23,722,2],[58,26,722,2,"_interopDefault"],[58,41,722,2],[58,42,722,2,"_babelRuntimeHelpersAsyncToGenerator"],[58,78,722,2],[59,2,722,2],[59,6,722,2,"_babelRuntimeHelpersClassCallCheck"],[59,40,722,2],[59,43,722,2,"require"],[59,50,722,2],[59,51,722,2,"_dependencyMap"],[59,65,722,2],[60,2,722,2],[60,6,722,2,"_classCallCheck"],[60,21,722,2],[60,24,722,2,"_interopDefault"],[60,39,722,2],[60,40,722,2,"_babelRuntimeHelpersClassCallCheck"],[60,74,722,2],[61,2,722,2],[61,6,722,2,"_babelRuntimeHelpersCreateClass"],[61,37,722,2],[61,40,722,2,"require"],[61,47,722,2],[61,48,722,2,"_dependencyMap"],[61,62,722,2],[62,2,722,2],[62,6,722,2,"_createClass"],[62,18,722,2],[62,21,722,2,"_interopDefault"],[62,36,722,2],[62,37,722,2,"_babelRuntimeHelpersCreateClass"],[62,68,722,2],[63,2,722,2],[63,6,722,2,"_expoVirtualEnv"],[63,21,722,2],[63,24,722,2,"require"],[63,31,722,2],[63,32,722,2,"_dependencyMap"],[63,46,722,2],[64,2,1,0],[64,6,1,0,"_axios"],[64,12,1,0],[64,15,1,0,"require"],[64,22,1,0],[64,23,1,0,"_dependencyMap"],[64,37,1,0],[65,2,1,0],[65,6,1,0,"axios"],[65,11,1,0],[65,14,1,0,"_interopDefault"],[65,29,1,0],[65,30,1,0,"_axios"],[65,36,1,0],[66,2,2,0],[66,6,2,0,"_expoSecureStore"],[66,22,2,0],[66,25,2,0,"require"],[66,32,2,0],[66,33,2,0,"_dependencyMap"],[66,47,2,0],[67,2,2,0],[67,6,2,0,"SecureStore"],[67,17,2,0],[67,20,2,0,"_interopNamespace"],[67,37,2,0],[67,38,2,0,"_expoSecureStore"],[67,54,2,0],[68,2,3,0],[68,6,3,0,"_expoConstants"],[68,20,3,0],[68,23,3,0,"require"],[68,30,3,0],[68,31,3,0,"_dependencyMap"],[68,45,3,0],[69,2,3,0],[69,6,3,0,"Constants"],[69,15,3,0],[69,18,3,0,"_interopDefault"],[69,33,3,0],[69,34,3,0,"_expoConstants"],[69,48,3,0],[70,2,4,0],[70,6,4,0,"_utilsCrossPlatformStorage"],[70,32,4,0],[70,35,4,0,"require"],[70,42,4,0],[70,43,4,0,"_dependencyMap"],[70,57,4,0],[71,2,4,0],[71,6,4,0,"CrossPlatformStorage"],[71,26,4,0],[71,29,4,0,"_interopDefault"],[71,44,4,0],[71,45,4,0,"_utilsCrossPlatformStorage"],[71,71,4,0],[72,2,6,0],[73,2,7,0],[73,6,7,6,"BACKEND_URL"],[73,17,7,17],[73,20,7,20,"Constants"],[73,29,7,29],[73,30,7,29,"default"],[73,37,7,29],[73,38,7,30,"expoConfig"],[73,48,7,40],[73,50,7,42,"extra"],[73,55,7,47],[73,57,7,49,"backendUrl"],[73,67,7,59],[73,71,7,59,"_expoVirtualEnv"],[73,86,7,59],[73,87,7,59,"env"],[73,90,7,59],[73,91,7,59,"EXPO_PUBLIC_BACKEND_URL"],[73,114,7,98],[73,118,7,102],[73,169,7,153],[74,2,7,154],[74,6,9,6,"ApiClient"],[74,15,9,15],[75,4,12,2],[75,13,12,2,"ApiClient"],[75,23,12,2],[75,25,12,16],[76,6,12,16],[76,10,12,16,"_classCallCheck"],[76,25,12,16],[76,26,12,16,"default"],[76,33,12,16],[76,41,12,16,"ApiClient"],[76,50,12,16],[77,6,13,4],[77,10,13,8],[77,11,13,9,"client"],[77,17,13,15],[77,20,13,18,"axios"],[77,25,13,23],[77,26,13,23,"default"],[77,33,13,23],[77,34,13,24,"create"],[77,40,13,30],[77,41,13,31],[78,8,14,6,"baseURL"],[78,15,14,13],[78,17,14,15],[78,20,14,18,"BACKEND_URL"],[78,31,14,29],[78,37,14,35],[79,8,15,6,"timeout"],[79,15,15,13],[79,17,15,15],[79,22,15,20],[80,8,16,6,"headers"],[80,15,16,13],[80,17,16,15],[81,10,17,8],[81,24,17,22],[81,26,17,24],[82,8,18,6],[83,6,19,4],[83,7,19,5],[83,8,19,6],[85,6,21,4],[86,6,22,4],[86,10,22,8],[86,11,22,9,"client"],[86,17,22,15],[86,18,22,16,"interceptors"],[86,30,22,28],[86,31,22,29,"request"],[86,38,22,36],[86,39,22,37,"use"],[86,42,22,40],[87,8,22,40],[87,12,22,40,"_ref"],[87,16,22,40],[87,23,22,40,"_asyncToGenerator"],[87,40,22,40],[87,41,22,40,"default"],[87,48,22,40],[87,50,22,41],[87,61,22,48,"config"],[87,67,22,54],[87,69,22,59],[88,10,23,6,"console"],[88,17,23,13],[88,18,23,14,"log"],[88,21,23,17],[88,22,23,18],[88,41,23,37,"config"],[88,47,23,43],[88,48,23,44,"method"],[88,54,23,50],[88,56,23,52,"toUpperCase"],[88,67,23,63],[88,68,23,64],[88,69,23,65],[88,73,23,69,"config"],[88,79,23,75],[88,80,23,76,"url"],[88,83,23,79],[88,85,23,81],[88,87,23,83,"config"],[88,93,23,89],[88,94,23,90,"data"],[88,98,23,94],[88,99,23,95],[89,10,25,6],[89,14,25,12,"token"],[89,19,25,17],[89,28,25,26,"SecureStore"],[89,39,25,37],[89,40,25,38,"getItemAsync"],[89,52,25,50],[89,53,25,51],[89,68,25,66],[89,69,25,67],[90,10,26,6],[90,14,26,10,"token"],[90,19,26,15],[90,21,26,17],[91,12,27,8,"config"],[91,18,27,14],[91,19,27,15,"headers"],[91,26,27,22],[91,27,27,23,"Authorization"],[91,40,27,36],[91,43,27,39],[91,53,27,49,"token"],[91,58,27,54],[91,60,27,56],[92,10,28,6],[93,10,29,6],[93,17,29,13,"config"],[93,23,29,19],[94,8,30,4],[94,9,30,5],[95,8,30,5],[95,25,30,5,"_x"],[95,27,30,5],[96,10,30,5],[96,17,30,5,"_ref"],[96,21,30,5],[96,22,30,5,"apply"],[96,27,30,5],[96,34,30,5,"arguments"],[96,43,30,5],[97,8,30,5],[98,6,30,5],[98,10,30,6],[100,6,32,4],[101,6,33,4],[101,10,33,8],[101,11,33,9,"client"],[101,17,33,15],[101,18,33,16,"interceptors"],[101,30,33,28],[101,31,33,29,"response"],[101,39,33,37],[101,40,33,38,"use"],[101,43,33,41],[101,44,34,7,"response"],[101,52,34,15],[101,56,34,20],[102,8,35,8,"console"],[102,15,35,15],[102,16,35,16,"log"],[102,19,35,19],[102,20,35,20],[102,39,35,39,"response"],[102,47,35,47],[102,48,35,48,"status"],[102,54,35,54],[102,56,35,56],[102,58,35,58,"response"],[102,66,35,66],[102,67,35,67,"data"],[102,71,35,71],[102,72,35,72],[103,8,36,8],[103,15,36,15,"response"],[103,23,36,23],[104,6,37,6],[104,7,37,7],[104,9,38,7,"error"],[104,14,38,12],[104,18,38,17],[105,8,39,8,"console"],[105,15,39,15],[105,16,39,16,"log"],[105,19,39,19],[105,20,39,20],[105,36,39,36,"error"],[105,41,39,41],[105,42,39,42,"response"],[105,50,39,50],[105,52,39,52,"status"],[105,58,39,58],[105,62,39,62],[105,71,39,71],[105,73,39,73],[105,75,39,75,"error"],[105,80,39,80],[105,81,39,81,"response"],[105,89,39,89],[105,91,39,91,"data"],[105,95,39,95],[105,99,39,99,"error"],[105,104,39,104],[105,105,39,105,"message"],[105,112,39,112],[105,113,39,113],[106,8,41,8],[106,12,41,12,"error"],[106,17,41,17],[106,18,41,18,"response"],[106,26,41,26],[106,28,41,28,"status"],[106,34,41,34],[106,39,41,39],[106,42,41,42],[106,44,41,44],[107,10,42,10],[108,10,43,10,"SecureStore"],[108,21,43,21],[108,22,43,22,"deleteItemAsync"],[108,37,43,37],[108,38,43,38],[108,53,43,53],[108,54,43,54],[109,8,44,8],[110,8,45,8],[110,15,45,15,"Promise"],[110,22,45,22],[110,23,45,23,"reject"],[110,29,45,29],[110,30,45,30,"error"],[110,35,45,35],[110,36,45,36],[111,6,46,6],[111,7,47,4],[111,8,47,5],[112,4,48,2],[113,4,48,3],[113,15,48,3,"_createClass"],[113,27,48,3],[113,28,48,3,"default"],[113,35,48,3],[113,37,48,3,"ApiClient"],[113,46,48,3],[114,6,48,3,"key"],[114,9,48,3],[115,6,48,3,"value"],[115,11,48,3],[116,8,48,3],[116,12,48,3,"_get"],[116,16,48,3],[116,23,48,3,"_asyncToGenerator"],[116,40,48,3],[116,41,48,3,"default"],[116,48,48,3],[116,50,50,2],[116,61,50,21,"url"],[116,64,50,32],[116,66,50,46],[117,10,51,4],[117,14,51,10,"response"],[117,22,51,36],[117,31,51,45],[117,35,51,49],[117,36,51,50,"client"],[117,42,51,56],[117,43,51,57,"get"],[117,46,51,60],[117,47,51,61,"url"],[117,50,51,64],[117,51,51,65],[118,10,52,4],[118,17,52,11,"response"],[118,25,52,19],[118,26,52,20,"data"],[118,30,52,24],[119,8,53,2],[119,9,53,3],[120,8,53,3],[120,17,50,8,"get"],[120,20,50,11,"get"],[120,21,50,11,"_x2"],[120,24,50,11],[121,10,50,11],[121,17,50,11,"_get"],[121,21,50,11],[121,22,50,11,"apply"],[121,27,50,11],[121,34,50,11,"arguments"],[121,43,50,11],[122,8,50,11],[123,8,50,11],[123,15,50,8,"get"],[123,18,50,11],[124,6,50,11],[125,4,50,11],[126,6,50,11,"key"],[126,9,50,11],[127,6,50,11,"value"],[127,11,50,11],[128,8,50,11],[128,12,50,11,"_post"],[128,17,50,11],[128,24,50,11,"_asyncToGenerator"],[128,41,50,11],[128,42,50,11,"default"],[128,49,50,11],[128,51,55,2],[128,62,55,22,"url"],[128,65,55,33],[128,67,55,35,"data"],[128,71,55,45],[128,73,55,59],[129,10,56,4],[129,14,56,10,"response"],[129,22,56,36],[129,31,56,45],[129,35,56,49],[129,36,56,50,"client"],[129,42,56,56],[129,43,56,57,"post"],[129,47,56,61],[129,48,56,62,"url"],[129,51,56,65],[129,53,56,67,"data"],[129,57,56,71],[129,58,56,72],[130,10,57,4],[130,17,57,11,"response"],[130,25,57,19],[130,26,57,20,"data"],[130,30,57,24],[131,8,58,2],[131,9,58,3],[132,8,58,3],[132,17,55,8,"post"],[132,21,55,12,"post"],[132,22,55,12,"_x3"],[132,25,55,12],[132,27,55,12,"_x4"],[132,30,55,12],[133,10,55,12],[133,17,55,12,"_post"],[133,22,55,12],[133,23,55,12,"apply"],[133,28,55,12],[133,35,55,12,"arguments"],[133,44,55,12],[134,8,55,12],[135,8,55,12],[135,15,55,8,"post"],[135,19,55,12],[136,6,55,12],[137,4,55,12],[138,6,55,12,"key"],[138,9,55,12],[139,6,55,12,"value"],[139,11,55,12],[140,8,55,12],[140,12,55,12,"_patch"],[140,18,55,12],[140,25,55,12,"_asyncToGenerator"],[140,42,55,12],[140,43,55,12,"default"],[140,50,55,12],[140,52,60,2],[140,63,60,23,"url"],[140,66,60,34],[140,68,60,36,"data"],[140,72,60,46],[140,74,60,60],[141,10,61,4],[141,14,61,10,"response"],[141,22,61,36],[141,31,61,45],[141,35,61,49],[141,36,61,50,"client"],[141,42,61,56],[141,43,61,57,"patch"],[141,48,61,62],[141,49,61,63,"url"],[141,52,61,66],[141,54,61,68,"data"],[141,58,61,72],[141,59,61,73],[142,10,62,4],[142,17,62,11,"response"],[142,25,62,19],[142,26,62,20,"data"],[142,30,62,24],[143,8,63,2],[143,9,63,3],[144,8,63,3],[144,17,60,8,"patch"],[144,22,60,13,"patch"],[144,23,60,13,"_x5"],[144,26,60,13],[144,28,60,13,"_x6"],[144,31,60,13],[145,10,60,13],[145,17,60,13,"_patch"],[145,23,60,13],[145,24,60,13,"apply"],[145,29,60,13],[145,36,60,13,"arguments"],[145,45,60,13],[146,8,60,13],[147,8,60,13],[147,15,60,8,"patch"],[147,20,60,13],[148,6,60,13],[149,4,60,13],[150,6,60,13,"key"],[150,9,60,13],[151,6,60,13,"value"],[151,11,60,13],[152,8,60,13],[152,12,60,13,"_delete2"],[152,20,60,13],[152,27,60,13,"_asyncToGenerator"],[152,44,60,13],[152,45,60,13,"default"],[152,52,60,13],[152,54,65,2],[152,65,65,24,"url"],[152,68,65,35],[152,70,65,49],[153,10,66,4],[153,14,66,10,"response"],[153,22,66,36],[153,31,66,45],[153,35,66,49],[153,36,66,50,"client"],[153,42,66,56],[153,43,66,57,"delete"],[153,49,66,63],[153,50,66,64,"url"],[153,53,66,67],[153,54,66,68],[154,10,67,4],[154,17,67,11,"response"],[154,25,67,19],[154,26,67,20,"data"],[154,30,67,24],[155,8,68,2],[155,9,68,3],[156,8,68,3],[156,17,65,8,"delete"],[156,24,65,14,"delete"],[156,25,65,14,"_x7"],[156,28,65,14],[157,10,65,14],[157,17,65,14,"_delete2"],[157,25,65,14],[157,26,65,14,"apply"],[157,31,65,14],[157,38,65,14,"arguments"],[157,47,65,14],[158,8,65,14],[159,8,65,14],[159,15,65,8,"delete"],[159,22,65,14],[160,6,65,14],[161,4,65,14],[162,6,65,14,"key"],[162,9,65,14],[163,6,65,14,"value"],[163,11,65,14],[164,8,65,14],[164,12,65,14,"_put"],[164,16,65,14],[164,23,65,14,"_asyncToGenerator"],[164,40,65,14],[164,41,65,14,"default"],[164,48,65,14],[164,50,70,2],[164,61,70,21,"url"],[164,64,70,32],[164,66,70,34,"data"],[164,70,70,44],[164,72,70,58],[165,10,71,4],[165,14,71,10,"response"],[165,22,71,36],[165,31,71,45],[165,35,71,49],[165,36,71,50,"client"],[165,42,71,56],[165,43,71,57,"put"],[165,46,71,60],[165,47,71,61,"url"],[165,50,71,64],[165,52,71,66,"data"],[165,56,71,70],[165,57,71,71],[166,10,72,4],[166,17,72,11,"response"],[166,25,72,19],[166,26,72,20,"data"],[166,30,72,24],[167,8,73,2],[167,9,73,3],[168,8,73,3],[168,17,70,8,"put"],[168,20,70,11,"put"],[168,21,70,11,"_x8"],[168,24,70,11],[168,26,70,11,"_x9"],[168,29,70,11],[169,10,70,11],[169,17,70,11,"_put"],[169,21,70,11],[169,22,70,11,"apply"],[169,27,70,11],[169,34,70,11,"arguments"],[169,43,70,11],[170,8,70,11],[171,8,70,11],[171,15,70,8,"put"],[171,18,70,11],[172,6,70,11],[173,4,70,11],[174,2,70,11],[175,2,76,0],[175,6,76,6,"apiClient"],[175,15,76,15],[175,18,76,18],[175,22,76,22,"ApiClient"],[175,31,76,31],[175,32,76,32],[175,33,76,33],[177,2,78,0],[178,2,79,7],[178,6,79,13,"authAPI"],[178,13,79,20],[178,16,79,23],[179,4,80,2,"createSession"],[179,17,80,15],[179,19,80,18,"sessionId"],[179,28,80,35],[179,32,81,4,"apiClient"],[179,41,81,13],[179,42,81,14,"post"],[179,46,81,18],[179,47,81,19],[179,62,81,34],[179,64,81,36],[179,68,81,40],[179,70,81,42],[180,6,82,6,"headers"],[180,13,82,13],[180,15,82,15],[181,8,82,17],[181,22,82,31],[181,24,82,33,"sessionId"],[182,6,82,43],[183,4,83,4],[183,5,83,5],[183,6,83,6],[184,4,85,2,"signup"],[184,10,85,8],[184,12,85,11,"data"],[184,16,91,3],[184,20,91,8,"apiClient"],[184,29,91,17],[184,30,91,18,"post"],[184,34,91,22],[184,35,91,23],[184,49,91,37],[184,51,91,39,"data"],[184,55,91,43],[184,56,91,44],[185,4,93,2,"verifyOTP"],[185,13,93,11],[185,15,93,14,"data"],[185,19,93,55],[185,23,94,4,"apiClient"],[185,32,94,13],[185,33,94,14,"post"],[185,37,94,18],[185,38,94,19],[185,56,94,37],[185,58,94,39,"data"],[185,62,94,43],[185,63,94,44],[186,4,96,2,"login"],[186,9,96,7],[186,11,96,10,"data"],[186,15,96,51],[186,19,97,4,"apiClient"],[186,28,97,13],[186,29,97,14,"post"],[186,33,97,18],[186,34,97,19],[186,47,97,32],[186,49,97,34,"data"],[186,53,97,38],[186,54,97,39],[187,4,99,2,"resendOTP"],[187,13,99,11],[187,15,99,14,"email"],[187,20,99,27],[187,24,100,4,"apiClient"],[187,33,100,13],[187,34,100,14,"post"],[187,38,100,18],[187,39,100,19],[187,57,100,37],[187,59,100,39],[188,6,100,41,"email"],[189,4,100,47],[189,5,100,48],[189,6,100,49],[190,4,102,2,"getCurrentUser"],[190,18,102,16],[190,20,102,18,"getCurrentUser"],[190,21,102,18],[190,26,102,24,"apiClient"],[190,35,102,33],[190,36,102,34,"get"],[190,39,102,37],[190,40,102,38],[190,50,102,48],[190,51,102,49],[191,4,104,2,"logout"],[191,10,104,8],[191,12,104,10,"logout"],[191,13,104,10],[191,18,104,16,"apiClient"],[191,27,104,25],[191,28,104,26,"post"],[191,32,104,30],[191,33,104,31],[191,47,104,45],[191,48,104,46],[192,4,106,2,"updateLanguage"],[192,18,106,16],[192,20,106,19,"language"],[192,28,106,35],[192,32,107,4,"apiClient"],[192,41,107,13],[192,42,107,14,"patch"],[192,47,107,19],[192,48,107,20],[192,64,107,36],[192,66,107,38],[192,70,107,42],[192,72,107,44],[193,6,108,6,"params"],[193,12,108,12],[193,14,108,14],[194,8,108,16,"language"],[195,6,108,25],[196,4,109,4],[196,5,109,5],[196,6,109,6],[197,4,111,2,"toggleBiometric"],[197,19,111,17],[197,21,111,20,"enabled"],[197,28,111,36],[197,32,112,4,"apiClient"],[197,41,112,13],[197,42,112,14,"patch"],[197,47,112,19],[197,48,112,20],[197,65,112,37],[197,67,112,39],[197,71,112,43],[197,73,112,45],[198,6,113,6,"params"],[198,12,113,12],[198,14,113,14],[199,8,113,16,"enabled"],[200,6,113,24],[201,4,114,4],[201,5,114,5],[202,2,115,0],[202,3,115,1],[204,2,117,0],[205,2,118,0],[205,6,118,6,"logAdminAction"],[205,20,118,20],[206,4,118,20],[206,8,118,20,"_ref2"],[206,13,118,20],[206,20,118,20,"_asyncToGenerator"],[206,37,118,20],[206,38,118,20,"default"],[206,45,118,20],[206,47,118,23],[206,58,118,30,"action"],[206,64,118,44],[206,66,118,46,"competitionName"],[206,81,118,69],[206,83,118,71,"adminName"],[206,92,118,88],[206,94,118,90,"details"],[206,101,118,103],[206,103,118,108],[207,6,119,2],[207,10,119,6],[208,8,120,4],[208,12,120,10,"logs"],[208,16,120,14],[208,19,120,17],[208,26,120,23,"CrossPlatformStorage"],[208,46,120,43],[208,47,120,43,"default"],[208,54,120,43],[208,55,120,44,"getItem"],[208,62,120,51],[208,63,120,52],[208,74,120,63],[208,75,120,64],[208,80,120,68],[208,84,120,72],[209,8,121,4],[209,12,121,10,"adminLogs"],[209,21,121,19],[209,24,121,22,"JSON"],[209,28,121,26],[209,29,121,27,"parse"],[209,34,121,32],[209,35,121,33,"logs"],[209,39,121,37],[209,40,121,38],[210,8,123,4],[210,12,123,10,"logEntry"],[210,20,123,18],[210,23,123,21],[211,10,124,6,"id"],[211,12,124,8],[211,14,124,10],[211,21,124,17,"Date"],[211,25,124,21],[211,26,124,22,"now"],[211,29,124,25],[211,30,124,26],[211,31,124,27],[211,33,124,29],[212,10,125,6,"action"],[212,16,125,12],[213,10,126,6,"competition_name"],[213,26,126,22],[213,28,126,24,"competitionName"],[213,43,126,39],[214,10,127,6,"admin_name"],[214,20,127,16],[214,22,127,18,"adminName"],[214,31,127,27],[215,10,128,6,"details"],[215,17,128,13],[216,10,129,6,"timestamp"],[216,19,129,15],[216,21,129,17],[216,25,129,21,"Date"],[216,29,129,25],[216,30,129,26],[216,31,129,27],[216,32,129,28,"toISOString"],[216,43,129,39],[216,44,129,40],[217,8,130,4],[217,9,130,5],[218,8,132,4,"adminLogs"],[218,17,132,13],[218,18,132,14,"push"],[218,22,132,18],[218,23,132,19,"logEntry"],[218,31,132,27],[218,32,132,28],[219,8,133,4],[219,14,133,10,"CrossPlatformStorage"],[219,34,133,30],[219,35,133,30,"default"],[219,42,133,30],[219,43,133,31,"setItem"],[219,50,133,38],[219,51,133,39],[219,62,133,50],[219,64,133,52,"JSON"],[219,68,133,56],[219,69,133,57,"stringify"],[219,78,133,66],[219,79,133,67,"adminLogs"],[219,88,133,76],[219,89,133,77],[219,90,133,78],[220,8,135,4,"console"],[220,15,135,11],[220,16,135,12,"log"],[220,19,135,15],[220,20,135,16],[220,45,135,41],[220,47,135,43,"action"],[220,53,135,49],[220,55,135,51,"competitionName"],[220,70,135,66],[220,71,135,67],[221,6,136,2],[221,7,136,3],[221,8,136,4],[221,15,136,11,"error"],[221,20,136,16],[221,22,136,18],[222,8,137,4,"console"],[222,15,137,11],[222,16,137,12,"error"],[222,21,137,17],[222,22,137,18],[222,51,137,47],[222,53,137,49,"error"],[222,58,137,54],[222,59,137,55],[223,6,138,2],[224,4,139,0],[224,5,139,1],[225,4,139,1],[225,20,118,6,"logAdminAction"],[225,34,118,20,"logAdminAction"],[225,35,118,20,"_x0"],[225,38,118,20],[225,40,118,20,"_x1"],[225,43,118,20],[225,45,118,20,"_x10"],[225,49,118,20],[225,51,118,20,"_x11"],[225,55,118,20],[226,6,118,20],[226,13,118,20,"_ref2"],[226,18,118,20],[226,19,118,20,"apply"],[226,24,118,20],[226,31,118,20,"arguments"],[226,40,118,20],[227,4,118,20],[228,2,118,20],[228,5,139,1],[230,2,141,0],[231,2,142,7],[231,6,142,13,"competitionAPI"],[231,20,142,27],[231,23,142,30],[232,4,143,2,"create"],[232,10,143,8],[232,12,143,11,"data"],[232,16,158,3],[232,20,158,8,"apiClient"],[232,29,158,17],[232,30,158,18,"post"],[232,34,158,22],[232,35,158,23],[232,50,158,38],[232,52,158,40,"data"],[232,56,158,44],[232,57,158,45],[233,4,160,2,"join"],[233,8,160,6],[233,10,160,9,"inviteCode"],[233,20,160,27],[233,24,161,4,"apiClient"],[233,33,161,13],[233,34,161,14,"post"],[233,38,161,18],[233,39,161,19],[233,59,161,39],[233,61,161,41],[234,6,161,43,"invite_code"],[234,17,161,54],[234,19,161,56,"inviteCode"],[235,4,161,67],[235,5,161,68],[235,6,161,69],[236,4,163,2,"getMyCompetitions"],[236,21,163,19],[236,23,163,21,"getMyCompetitions"],[236,24,163,21],[236,29,163,27,"apiClient"],[236,38,163,36],[236,39,163,37,"get"],[236,42,163,40],[236,43,163,41],[236,61,163,59],[236,62,163,60],[237,4,165,2,"getCompetition"],[237,18,165,16],[237,20,165,19,"id"],[237,22,165,29],[237,26,165,34,"apiClient"],[237,35,165,43],[237,36,165,44,"get"],[237,39,165,47],[237,40,165,48],[237,57,165,65,"id"],[237,59,165,67],[237,61,165,69],[237,62,165,70],[238,4,167,2,"updateStandings"],[238,19,167,17],[238,21,167,19,"updateStandings"],[238,22,168,4,"id"],[238,24,168,14],[238,26,169,4,"standings"],[238,35,169,18],[238,37,170,4,"matchday"],[238,45,170,21],[238,50,172,4,"apiClient"],[238,59,172,13],[238,60,172,14,"patch"],[238,65,172,19],[238,66,172,20],[238,83,172,37,"id"],[238,85,172,39],[238,97,172,51],[238,99,172,53],[239,6,173,6,"standings"],[239,15,173,15],[240,6,174,6,"matchday"],[241,4,175,4],[241,5,175,5],[241,6,175,6],[242,4,177,2,"payFee"],[242,10,177,8],[242,12,177,10,"payFee"],[242,13,177,11,"id"],[242,15,177,21],[242,17,177,23,"amount"],[242,23,177,37],[242,28,178,4,"apiClient"],[242,37,178,13],[242,38,178,14,"post"],[242,42,178,18],[242,43,178,19],[242,60,178,36,"id"],[242,62,178,38],[242,68,178,44],[242,70,178,46],[242,74,178,50],[242,76,178,52],[243,6,179,6,"params"],[243,12,179,12],[243,14,179,14],[244,8,179,16,"amount"],[245,6,179,23],[246,4,180,4],[246,5,180,5],[246,6,180,6],[247,4,182,2,"getTransactions"],[247,19,182,17],[247,21,182,20,"id"],[247,23,182,30],[247,27,183,4,"apiClient"],[247,36,183,13],[247,37,183,14,"get"],[247,40,183,17],[247,41,183,18],[247,58,183,35,"id"],[247,60,183,37],[247,75,183,52],[247,76,183,53],[248,4,185,2],[249,4,186,2,"payMatchdays"],[249,16,186,14],[249,18,186,16,"payMatchdays"],[249,19,186,17,"competitionId"],[249,32,186,38],[249,34,186,40,"matchdays"],[249,43,186,59],[249,48,187,4,"apiClient"],[249,57,187,13],[249,58,187,14,"post"],[249,62,187,18],[249,63,187,19],[249,80,187,36,"competitionId"],[249,93,187,49],[249,113,187,69],[249,115,187,71],[250,6,188,6,"competition_id"],[250,20,188,20],[250,22,188,22,"competitionId"],[250,35,188,35],[251,6,189,6,"matchdays"],[252,4,190,4],[252,5,190,5],[252,6,190,6],[253,4,192,2,"getMatchdayPayments"],[253,23,192,21],[253,25,192,24,"competitionId"],[253,38,192,45],[253,42,193,4,"apiClient"],[253,51,193,13],[253,52,193,14,"get"],[253,55,193,17],[253,56,193,18],[253,73,193,35,"competitionId"],[253,86,193,48],[253,106,193,68],[253,107,193,69],[254,4,195,2,"getPaymentStatusTable"],[254,25,195,23],[254,27,195,26,"competitionId"],[254,40,195,47],[254,44,196,4,"apiClient"],[254,53,196,13],[254,54,196,14,"get"],[254,57,196,17],[254,58,196,18],[254,75,196,35,"competitionId"],[254,88,196,48],[254,111,196,71],[254,112,196,72],[255,4,198,2],[256,4,199,2,"createMock"],[256,14,199,12],[257,6,199,12],[257,10,199,12,"_ref3"],[257,15,199,12],[257,22,199,12,"_asyncToGenerator"],[257,39,199,12],[257,40,199,12,"default"],[257,47,199,12],[257,49,199,14],[257,60,199,21,"data"],[257,64,212,3],[257,66,212,8],[258,8,213,4,"console"],[258,15,213,11],[258,16,213,12,"log"],[258,19,213,15],[258,20,213,16],[258,52,213,48],[258,54,213,50,"data"],[258,58,213,54],[258,59,213,55,"name"],[258,63,213,59],[258,64,213,60],[259,8,214,4,"console"],[259,15,214,11],[259,16,214,12,"log"],[259,19,214,15],[259,20,214,16],[259,41,214,37],[259,43,214,39,"data"],[259,47,214,43],[259,48,214,44,"total_matchdays"],[259,63,214,59],[259,67,214,63],[259,69,214,65],[259,70,214,66],[261,8,216,4],[262,8,217,4],[262,12,217,10,"storedCompetitions"],[262,30,217,28],[262,39,217,37,"CrossPlatformStorage"],[262,59,217,57],[262,60,217,57,"default"],[262,67,217,57],[262,68,217,58,"getItem"],[262,75,217,65],[262,76,217,66],[262,95,217,85],[262,96,217,86],[263,8,218,4],[263,12,218,8,"existingCompetitions"],[263,32,218,28],[263,35,218,31,"storedCompetitions"],[263,53,218,49],[263,56,218,52,"JSON"],[263,60,218,56],[263,61,218,57,"parse"],[263,66,218,62],[263,67,218,63,"storedCompetitions"],[263,85,218,81],[263,86,218,82],[263,89,218,85],[263,91,218,87],[264,8,220,4,"console"],[264,15,220,11],[264,16,220,12,"log"],[264,19,220,15],[264,20,220,16],[264,62,220,58],[264,64,220,60,"existingCompetitions"],[264,84,220,80],[264,85,220,81,"length"],[264,91,220,87],[264,92,220,88],[266,8,222,4],[267,8,223,4],[267,12,223,10,"existingNames"],[267,25,223,23],[267,28,223,26,"existingCompetitions"],[267,48,223,46],[267,49,223,47,"map"],[267,52,223,50],[267,53,223,52,"comp"],[267,57,223,61],[267,61,223,66,"comp"],[267,65,223,70],[267,66,223,71,"name"],[267,70,223,75],[267,71,223,76,"toLowerCase"],[267,82,223,87],[267,83,223,88],[267,84,223,89],[267,85,223,90],[268,8,224,4],[268,12,224,8,"existingNames"],[268,25,224,21],[268,26,224,22,"includes"],[268,34,224,30],[268,35,224,31,"data"],[268,39,224,35],[268,40,224,36,"name"],[268,44,224,40],[268,45,224,41,"toLowerCase"],[268,56,224,52],[268,57,224,53],[268,58,224,54],[268,59,224,55],[268,61,224,57],[269,10,225,6],[269,16,225,12],[269,20,225,16,"Error"],[269,25,225,21],[269,26,225,22],[269,88,225,84],[269,89,225,85],[270,8,226,4],[272,8,228,4],[273,8,229,4],[274,8,230,4],[274,12,230,10,"generateRandomCode"],[274,30,230,28],[274,33,230,31,"generateRandomCode"],[274,34,230,31],[274,39,230,37],[275,10,231,6],[275,14,231,12,"chars"],[275,19,231,17],[275,22,231,20],[275,58,231,56],[275,59,231,57],[275,60,231,58],[276,10,232,6],[276,14,232,10,"result"],[276,20,232,16],[276,23,232,19],[276,25,232,21],[277,10,233,6],[277,15,233,11],[277,19,233,15,"i"],[277,20,233,16],[277,23,233,19],[277,24,233,20],[277,26,233,22,"i"],[277,27,233,23],[277,30,233,26],[277,31,233,27],[277,33,233,29,"i"],[277,34,233,30],[277,36,233,32],[277,38,233,34],[278,12,234,8,"result"],[278,18,234,14],[278,22,234,18,"chars"],[278,27,234,23],[278,28,234,24,"charAt"],[278,34,234,30],[278,35,234,31,"Math"],[278,39,234,35],[278,40,234,36,"floor"],[278,45,234,41],[278,46,234,42,"Math"],[278,50,234,46],[278,51,234,47,"random"],[278,57,234,53],[278,58,234,54],[278,59,234,55],[278,62,234,58,"chars"],[278,67,234,63],[278,68,234,64,"length"],[278,74,234,70],[278,75,234,71],[278,76,234,72],[279,10,235,6],[280,10,236,6],[280,17,236,13,"result"],[280,23,236,19],[281,8,237,4],[281,9,237,5],[283,8,239,4],[284,8,240,4],[284,12,240,8,"inviteCode"],[284,22,240,18],[284,25,240,21,"generateRandomCode"],[284,43,240,39],[284,44,240,40],[284,45,240,41],[285,8,241,4],[285,15,241,11,"existingCompetitions"],[285,35,241,31],[285,36,241,32,"some"],[285,40,241,36],[285,41,241,38,"comp"],[285,45,241,47],[285,49,241,52,"comp"],[285,53,241,56],[285,54,241,57,"invite_code"],[285,65,241,68],[285,70,241,73,"inviteCode"],[285,80,241,83],[285,81,241,84],[285,83,241,86],[286,10,242,6,"inviteCode"],[286,20,242,16],[286,23,242,19,"generateRandomCode"],[286,41,242,37],[286,42,242,38],[286,43,242,39],[287,10,243,6,"console"],[287,17,243,13],[287,18,243,14,"log"],[287,21,243,17],[287,22,243,18],[287,63,243,59],[287,65,243,61,"inviteCode"],[287,75,243,71],[287,76,243,72],[288,8,244,4],[289,8,246,4,"console"],[289,15,246,11],[289,16,246,12,"log"],[289,19,246,15],[289,20,246,16],[289,53,246,49],[289,55,246,51,"inviteCode"],[289,65,246,61],[289,66,246,62],[290,8,248,4],[290,12,248,10,"newCompetition"],[290,26,248,24],[290,29,248,27],[291,10,249,6,"_id"],[291,13,249,9],[291,15,249,11],[291,23,249,19,"Date"],[291,27,249,23],[291,28,249,24,"now"],[291,31,249,27],[291,32,249,28],[291,33,249,29],[291,37,249,33,"Math"],[291,41,249,37],[291,42,249,38,"random"],[291,48,249,44],[291,49,249,45],[291,50,249,46],[291,51,249,47,"toString"],[291,59,249,55],[291,60,249,56],[291,62,249,58],[291,63,249,59],[291,64,249,60,"substr"],[291,70,249,66],[291,71,249,67],[291,72,249,68],[291,74,249,70],[291,75,249,71],[291,76,249,72],[291,78,249,74],[292,10,250,6,"name"],[292,14,250,10],[292,16,250,12,"data"],[292,20,250,16],[292,21,250,17,"name"],[292,25,250,21],[293,10,251,6,"total_matchdays"],[293,25,251,21],[293,27,251,23,"data"],[293,31,251,27],[293,32,251,28,"total_matchdays"],[293,47,251,43],[293,51,251,47],[293,53,251,49],[294,10,252,6,"participation_cost_per_team"],[294,37,252,33],[294,39,252,35,"data"],[294,43,252,39],[294,44,252,40,"participation_cost_per_team"],[294,71,252,67],[294,75,252,71],[294,80,252,76],[295,10,253,6,"expected_teams"],[295,24,253,20],[295,26,253,22,"data"],[295,30,253,26],[295,31,253,27,"expected_teams"],[295,45,253,41],[295,49,253,45],[295,50,253,46],[296,10,254,6,"total_prize_pool"],[296,26,254,22],[296,28,254,24,"data"],[296,32,254,28],[296,33,254,29,"total_prize_pool"],[296,49,254,45],[296,53,254,49],[296,59,254,55],[297,10,255,6,"daily_payment_enabled"],[297,31,255,27],[297,33,255,29,"data"],[297,37,255,33],[297,38,255,34,"daily_payment_enabled"],[297,59,255,55],[297,63,255,59],[297,68,255,64],[298,10,256,6,"daily_payment_amount"],[298,30,256,26],[298,32,256,28,"data"],[298,36,256,32],[298,37,256,33,"daily_payment_amount"],[298,57,256,53],[298,61,256,57],[298,64,256,60],[299,10,257,6,"rules"],[299,15,257,11],[299,17,257,13,"data"],[299,21,257,17],[299,22,257,18,"rules"],[299,27,257,23],[300,10,258,6,"invite_code"],[300,21,258,17],[300,23,258,19,"inviteCode"],[300,33,258,29],[301,10,258,31],[302,10,259,6,"invite_link"],[302,21,259,17],[302,23,259,19],[302,52,259,48,"inviteCode"],[302,62,259,58],[302,64,259,60],[303,10,260,6,"admin_id"],[303,18,260,14],[303,20,260,16],[303,46,260,42],[304,10,260,44],[305,10,261,6,"participants"],[305,22,261,18],[305,24,261,20],[305,25,262,8],[306,12,263,10,"id"],[306,14,263,12],[306,16,263,14],[306,42,263,40],[307,12,264,10,"name"],[307,16,264,14],[307,18,264,16],[307,35,264,33],[308,12,265,10,"email"],[308,17,265,15],[308,19,265,17],[308,38,265,36],[309,12,266,10,"is_admin"],[309,20,266,18],[309,22,266,20],[309,26,266,24],[310,12,267,10,"paid_matchdays"],[310,26,267,24],[310,28,267,26],[310,29,267,27],[310,30,267,28],[310,32,267,30],[310,33,267,31],[310,34,267,32],[311,12,267,34],[312,12,268,10,"points"],[312,18,268,16],[312,20,268,18],[313,10,269,8],[313,11,269,9],[313,12,270,7],[314,10,271,6,"wallet_balance"],[314,24,271,20],[314,26,271,22],[314,27,271,23],[315,10,272,6,"is_active"],[315,19,272,15],[315,21,272,17],[315,25,272,21],[316,10,273,6,"current_matchday"],[316,26,273,22],[316,28,273,24],[316,29,273,25],[317,10,273,27],[318,10,274,6,"standings"],[318,19,274,15],[318,21,274,17],[318,22,275,8],[319,12,275,10,"position"],[319,20,275,18],[319,22,275,20],[319,23,275,21],[320,12,275,23,"player_id"],[320,21,275,32],[320,23,275,34],[320,49,275,60],[321,12,275,62,"name"],[321,16,275,66],[321,18,275,68],[321,35,275,85],[322,12,275,87,"points"],[322,18,275,93],[322,20,275,95],[323,10,275,97],[323,11,275,98],[323,12,276,7],[324,10,277,6,"created_at"],[324,20,277,16],[324,22,277,18],[324,26,277,22,"Date"],[324,30,277,26],[324,31,277,27],[324,32,277,28],[324,33,277,29,"toISOString"],[324,44,277,40],[324,45,277,41],[324,46,277,42],[325,10,278,6,"updated_at"],[325,20,278,16],[325,22,278,18],[325,26,278,22,"Date"],[325,30,278,26],[325,31,278,27],[325,32,278,28],[325,33,278,29,"toISOString"],[325,44,278,40],[325,45,278,41],[326,8,279,4],[326,9,279,5],[328,8,281,4],[329,8,282,4,"existingCompetitions"],[329,28,282,24],[329,29,282,25,"push"],[329,33,282,29],[329,34,282,30,"newCompetition"],[329,48,282,44],[329,49,282,45],[330,8,283,4],[330,14,283,10,"CrossPlatformStorage"],[330,34,283,30],[330,35,283,30,"default"],[330,42,283,30],[330,43,283,31,"setItem"],[330,50,283,38],[330,51,283,39],[330,70,283,58],[330,72,283,60,"JSON"],[330,76,283,64],[330,77,283,65,"stringify"],[330,86,283,74],[330,87,283,75,"existingCompetitions"],[330,107,283,95],[330,108,283,96],[330,109,283,97],[331,8,285,4,"console"],[331,15,285,11],[331,16,285,12,"log"],[331,19,285,15],[331,20,285,16],[331,73,285,69],[331,75,285,71,"existingCompetitions"],[331,95,285,91],[331,96,285,92,"length"],[331,102,285,98],[331,103,285,99],[333,8,287,4],[334,8,288,4],[334,14,288,10,"logAdminAction"],[334,28,288,24],[334,29,288,25],[334,37,288,33],[334,39,288,35,"newCompetition"],[334,53,288,49],[334,54,288,50,"name"],[334,58,288,54],[334,60,288,56],[334,77,288,73],[334,79,288,75],[335,10,289,6,"competition_id"],[335,24,289,20],[335,26,289,22,"newCompetition"],[335,40,289,36],[335,41,289,37,"_id"],[335,44,289,40],[336,10,290,6,"rules"],[336,15,290,11],[336,17,290,13,"newCompetition"],[336,31,290,27],[336,32,290,28,"rules"],[336,37,290,33],[337,10,291,6,"total_matchdays"],[337,25,291,21],[337,27,291,23,"newCompetition"],[337,41,291,37],[337,42,291,38,"total_matchdays"],[337,57,291,53],[338,10,292,6,"participation_cost_per_team"],[338,37,292,33],[338,39,292,35,"newCompetition"],[338,53,292,49],[338,54,292,50,"participation_cost_per_team"],[338,81,292,77],[339,10,293,6,"expected_teams"],[339,24,293,20],[339,26,293,22,"newCompetition"],[339,40,293,36],[339,41,293,37,"expected_teams"],[339,55,293,51],[340,10,294,6,"total_prize_pool"],[340,26,294,22],[340,28,294,24,"newCompetition"],[340,42,294,38],[340,43,294,39,"total_prize_pool"],[340,59,294,55],[341,10,295,6,"daily_payment_enabled"],[341,31,295,27],[341,33,295,29,"newCompetition"],[341,47,295,43],[341,48,295,44,"daily_payment_enabled"],[341,69,295,65],[342,10,296,6,"daily_payment_amount"],[342,30,296,26],[342,32,296,28,"newCompetition"],[342,46,296,42],[342,47,296,43,"daily_payment_amount"],[343,8,297,4],[343,9,297,5],[343,10,297,6],[344,8,299,4,"console"],[344,15,299,11],[344,16,299,12,"log"],[344,19,299,15],[344,20,299,16],[344,49,299,45],[344,51,299,47,"newCompetition"],[344,65,299,61],[344,66,299,62,"name"],[344,70,299,66],[344,71,299,67],[345,8,300,4,"console"],[345,15,300,11],[345,16,300,12,"log"],[345,19,300,15],[345,20,300,16],[345,42,300,38],[345,44,300,40,"newCompetition"],[345,58,300,54],[345,59,300,55,"name"],[345,63,300,59],[345,64,300,60],[346,8,301,4,"console"],[346,15,301,11],[346,16,301,12,"log"],[346,19,301,15],[346,20,301,16],[346,39,301,35],[346,41,301,37,"newCompetition"],[346,55,301,51],[346,56,301,52,"daily_payment_enabled"],[346,77,301,73],[346,80,301,76],[346,84,301,80,"newCompetition"],[346,98,301,94],[346,99,301,95,"daily_payment_amount"],[346,119,301,115],[346,134,301,130],[346,137,301,133],[346,147,301,143],[346,148,301,144],[347,8,302,4,"console"],[347,15,302,11],[347,16,302,12,"log"],[347,19,302,15],[347,20,302,16],[347,42,302,38],[347,44,302,40],[347,48,302,44,"newCompetition"],[347,62,302,58],[347,63,302,59,"total_prize_pool"],[347,79,302,75],[347,81,302,77],[347,82,302,78],[348,8,303,4,"console"],[348,15,303,11],[348,16,303,12,"log"],[348,19,303,15],[348,20,303,16],[348,37,303,33],[348,39,303,35,"newCompetition"],[348,53,303,49],[348,54,303,50,"invite_code"],[348,65,303,61],[348,66,303,62],[349,8,305,4],[349,15,305,11],[350,10,305,13,"data"],[350,14,305,17],[350,16,305,19,"newCompetition"],[351,8,305,34],[351,9,305,35],[352,6,306,2],[352,7,306,3],[353,6,306,3],[353,22,199,2,"createMock"],[353,32,199,12,"createMock"],[353,33,199,12,"_x12"],[353,37,199,12],[354,8,199,12],[354,15,199,12,"_ref3"],[354,20,199,12],[354,21,199,12,"apply"],[354,26,199,12],[354,33,199,12,"arguments"],[354,42,199,12],[355,6,199,12],[356,4,199,12],[356,7,306,3],[357,4,308,2],[358,4,309,2,"payMatchdaysMock"],[358,20,309,18],[359,6,309,18],[359,10,309,18,"_ref4"],[359,15,309,18],[359,22,309,18,"_asyncToGenerator"],[359,39,309,18],[359,40,309,18,"default"],[359,47,309,18],[359,49,309,20],[359,60,309,27,"competitionId"],[359,73,309,48],[359,75,309,50,"matchdays"],[359,84,309,69],[359,86,309,74],[360,8,310,4,"console"],[360,15,310,11],[360,16,310,12,"log"],[360,19,310,15],[360,20,310,16],[360,51,310,47],[360,53,310,49,"matchdays"],[360,62,310,58],[360,64,310,60],[360,80,310,76],[360,82,310,78,"competitionId"],[360,95,310,91],[360,96,310,92],[362,8,312,4],[363,8,313,4],[363,12,313,10,"totalCost"],[363,21,313,19],[363,24,313,22,"matchdays"],[363,33,313,31],[363,34,313,32,"length"],[363,40,313,38],[363,43,313,41],[363,44,313,42],[363,45,313,43],[363,46,313,44],[365,8,315,4],[366,8,316,4],[366,15,316,11],[367,10,317,6,"data"],[367,14,317,10],[367,16,317,12],[368,12,318,8,"message"],[368,19,318,15],[368,21,318,17],[368,46,318,42,"matchdays"],[368,55,318,51],[368,56,318,52,"length"],[368,62,318,58],[368,74,318,70],[369,12,319,8,"paid_matchdays"],[369,26,319,22],[369,28,319,24,"matchdays"],[369,37,319,33],[370,12,320,8,"total_cost"],[370,22,320,18],[370,24,320,20,"totalCost"],[370,33,320,29],[371,12,321,8,"new_user_balance"],[371,28,321,24],[371,30,321,26],[371,33,321,29],[371,36,321,32,"totalCost"],[371,45,321,41],[371,46,321,42],[372,10,322,6],[373,8,323,4],[373,9,323,5],[374,6,324,2],[374,7,324,3],[375,6,324,3],[375,22,309,2,"payMatchdaysMock"],[375,38,309,18,"payMatchdaysMock"],[375,39,309,18,"_x13"],[375,43,309,18],[375,45,309,18,"_x14"],[375,49,309,18],[376,8,309,18],[376,15,309,18,"_ref4"],[376,20,309,18],[376,21,309,18,"apply"],[376,26,309,18],[376,33,309,18,"arguments"],[376,42,309,18],[377,6,309,18],[378,4,309,18],[378,7,324,3],[379,4,326,2,"getMatchdayPaymentsMock"],[379,27,326,25],[380,6,326,25],[380,10,326,25,"_ref5"],[380,15,326,25],[380,22,326,25,"_asyncToGenerator"],[380,39,326,25],[380,40,326,25,"default"],[380,47,326,25],[380,49,326,27],[380,60,326,34,"competitionId"],[380,73,326,55],[380,75,326,60],[381,8,327,4,"console"],[381,15,327,11],[381,16,327,12,"log"],[381,19,327,15],[381,20,327,16],[381,72,327,68],[381,74,327,70,"competitionId"],[381,87,327,83],[381,88,327,84],[383,8,329,4],[384,8,330,4],[384,12,330,10,"mockPayments"],[384,24,330,22],[384,27,330,25],[384,29,330,27],[385,8,331,4],[385,13,331,9],[385,17,331,13,"i"],[385,18,331,14],[385,21,331,17],[385,22,331,18],[385,24,331,20,"i"],[385,25,331,21],[385,29,331,25],[385,31,331,27],[385,33,331,29,"i"],[385,34,331,30],[385,36,331,32],[385,38,331,34],[386,10,332,6,"mockPayments"],[386,22,332,18],[386,23,332,19,"push"],[386,27,332,23],[386,28,332,24],[387,12,333,8,"_id"],[387,15,333,11],[387,17,333,13],[387,28,333,24,"i"],[387,29,333,25],[387,31,333,27],[388,12,334,8,"user_id"],[388,19,334,15],[388,21,334,17],[388,47,334,43],[389,12,335,8,"competition_id"],[389,26,335,22],[389,28,335,24,"competitionId"],[389,41,335,37],[390,12,336,8,"matchday"],[390,20,336,16],[390,22,336,18,"i"],[390,23,336,19],[391,12,337,8,"amount"],[391,18,337,14],[391,20,337,16],[391,21,337,17],[392,12,338,8,"status"],[392,18,338,14],[392,20,338,16,"i"],[392,21,338,17],[392,25,338,21],[392,26,338,22],[392,29,338,25],[392,35,338,31],[392,38,338,34],[392,47,338,43],[393,12,339,8,"paid_at"],[393,19,339,15],[393,21,339,17,"i"],[393,22,339,18],[393,26,339,22],[393,27,339,23],[393,30,339,26],[393,34,339,30,"Date"],[393,38,339,34],[393,39,339,35],[393,40,339,36],[393,41,339,37,"toISOString"],[393,52,339,48],[393,53,339,49],[393,54,339,50],[393,57,339,53],[393,61,339,57],[394,12,340,8,"created_at"],[394,22,340,18],[394,24,340,20],[394,28,340,24,"Date"],[394,32,340,28],[394,33,340,29],[394,34,340,30],[394,35,340,31,"toISOString"],[394,46,340,42],[394,47,340,43],[395,10,341,6],[395,11,341,7],[395,12,341,8],[396,8,342,4],[397,8,344,4],[397,15,344,11],[398,10,345,6,"data"],[398,14,345,10],[398,16,345,12],[399,12,346,8,"competition_id"],[399,26,346,22],[399,28,346,24,"competitionId"],[399,41,346,37],[400,12,347,8,"daily_payment_enabled"],[400,33,347,29],[400,35,347,31],[400,39,347,35],[401,12,348,8,"daily_payment_amount"],[401,32,348,28],[401,34,348,30],[401,35,348,31],[402,12,349,8,"total_matchdays"],[402,27,349,23],[402,29,349,25],[402,31,349,27],[403,12,350,8,"payments"],[403,20,350,16],[403,22,350,18,"mockPayments"],[404,10,351,6],[405,8,352,4],[405,9,352,5],[406,6,353,2],[406,7,353,3],[407,6,353,3],[407,22,326,2,"getMatchdayPaymentsMock"],[407,45,326,25,"getMatchdayPaymentsMock"],[407,46,326,25,"_x15"],[407,50,326,25],[408,8,326,25],[408,15,326,25,"_ref5"],[408,20,326,25],[408,21,326,25,"apply"],[408,26,326,25],[408,33,326,25,"arguments"],[408,42,326,25],[409,6,326,25],[410,4,326,25],[410,7,353,3],[411,4,355,2,"getPaymentStatusTableMock"],[411,29,355,27],[412,6,355,27],[412,10,355,27,"_ref6"],[412,15,355,27],[412,22,355,27,"_asyncToGenerator"],[412,39,355,27],[412,40,355,27,"default"],[412,47,355,27],[412,49,355,29],[412,60,355,36,"competitionId"],[412,73,355,57],[412,75,355,62],[413,8,356,4,"console"],[413,15,356,11],[413,16,356,12,"log"],[413,19,356,15],[413,20,356,16],[413,75,356,71],[413,77,356,73,"competitionId"],[413,90,356,86],[413,91,356,87],[415,8,358,4],[416,8,359,4],[416,12,359,10,"mockTable"],[416,21,359,19],[416,24,359,22],[416,25,359,23],[417,10,360,6,"user_id"],[417,17,360,13],[417,19,360,15],[417,45,360,41],[418,10,361,6,"username"],[418,18,361,14],[418,20,361,16],[418,37,361,33],[419,10,362,6,"name"],[419,14,362,10],[419,16,362,12],[419,33,362,29],[420,10,363,6,"email"],[420,15,363,11],[420,17,363,13],[420,36,363,32],[421,10,364,6,"matchday_payments"],[421,27,364,23],[421,29,364,25,"Array"],[421,34,364,30],[421,35,364,31,"from"],[421,39,364,35],[421,40,364,36],[422,12,364,37,"length"],[422,18,364,43],[422,20,364,45],[423,10,364,47],[423,11,364,48],[423,13,364,50],[423,14,364,51,"_"],[423,15,364,52],[423,17,364,54,"i"],[423,18,364,55],[423,24,364,61],[424,12,365,8,"matchday"],[424,20,365,16],[424,22,365,18,"i"],[424,23,365,19],[424,26,365,22],[424,27,365,23],[425,12,366,8,"status"],[425,18,366,14],[425,20,366,17,"i"],[425,21,366,18],[425,24,366,21],[425,25,366,22],[425,28,366,25],[425,34,366,31],[425,37,366,34],[425,46,366,44],[426,12,367,8,"amount"],[426,18,367,14],[426,20,367,16],[426,21,367,17],[427,12,368,8,"paid_at"],[427,19,368,15],[427,21,368,17,"i"],[427,22,368,18],[427,25,368,21],[427,26,368,22],[427,29,368,25],[427,33,368,29,"Date"],[427,37,368,33],[427,38,368,34],[427,39,368,35],[427,40,368,36,"toISOString"],[427,51,368,47],[427,52,368,48],[427,53,368,49],[427,56,368,52],[428,10,369,6],[428,11,369,7],[428,12,369,8],[429,8,370,4],[429,9,370,5],[429,10,370,6],[430,8,372,4],[430,15,372,11],[431,10,373,6,"data"],[431,14,373,10],[431,16,373,12],[432,12,374,8,"competition_name"],[432,28,374,24],[432,30,374,26],[432,51,374,47],[433,12,375,8,"total_matchdays"],[433,27,375,23],[433,29,375,25],[433,31,375,27],[434,12,376,8,"daily_payment_amount"],[434,32,376,28],[434,34,376,30],[434,35,376,31],[435,12,377,8,"participants"],[435,24,377,20],[435,26,377,22,"mockTable"],[436,10,378,6],[437,8,379,4],[437,9,379,5],[438,6,380,2],[438,7,380,3],[439,6,380,3],[439,22,355,2,"getPaymentStatusTableMock"],[439,47,355,27,"getPaymentStatusTableMock"],[439,48,355,27,"_x16"],[439,52,355,27],[440,8,355,27],[440,15,355,27,"_ref6"],[440,20,355,27],[440,21,355,27,"apply"],[440,26,355,27],[440,33,355,27,"arguments"],[440,42,355,27],[441,6,355,27],[442,4,355,27],[442,7,380,3],[443,4,382,2],[444,4,383,2,"validateNameMock"],[444,20,383,18],[445,6,383,18],[445,10,383,18,"_ref7"],[445,15,383,18],[445,22,383,18,"_asyncToGenerator"],[445,39,383,18],[445,40,383,18,"default"],[445,47,383,18],[445,49,383,20],[445,60,383,27,"name"],[445,64,383,39],[445,66,383,44],[446,8,384,4,"console"],[446,15,384,11],[446,16,384,12,"log"],[446,19,384,15],[446,20,384,16],[446,59,384,55],[446,61,384,57,"name"],[446,65,384,61],[446,66,384,62],[447,8,386,4],[447,12,386,8],[447,13,386,9,"name"],[447,17,386,13],[447,18,386,14,"trim"],[447,22,386,18],[447,23,386,19],[447,24,386,20],[447,26,386,22],[448,10,387,6],[448,17,387,13],[449,12,387,15,"available"],[449,21,387,24],[449,23,387,26],[449,27,387,30],[450,12,387,32,"message"],[450,19,387,39],[450,21,387,41],[451,10,387,44],[451,11,387,45],[452,8,388,4],[454,8,390,4],[455,8,391,4],[455,12,391,10,"storedCompetitions"],[455,30,391,28],[455,39,391,37,"CrossPlatformStorage"],[455,59,391,57],[455,60,391,57,"default"],[455,67,391,57],[455,68,391,58,"getItem"],[455,75,391,65],[455,76,391,66],[455,94,391,84],[455,95,391,85],[456,8,392,4],[456,12,392,8,"existingCompetitions"],[456,32,392,28],[456,35,392,31,"storedCompetitions"],[456,53,392,49],[456,56,392,52,"JSON"],[456,60,392,56],[456,61,392,57,"parse"],[456,66,392,62],[456,67,392,63,"storedCompetitions"],[456,85,392,81],[456,86,392,82],[456,89,392,85],[456,91,392,87],[458,8,394,4],[459,8,395,4],[459,12,395,10,"defaultNames"],[459,24,395,22],[459,27,395,25],[459,28,395,26],[459,50,395,48],[459,52,395,50],[459,78,395,76],[459,80,395,78],[459,96,395,94],[459,97,395,95],[460,8,396,4],[460,12,396,10,"allNames"],[460,20,396,18],[460,23,396,21],[460,24,397,6],[460,27,397,9,"existingCompetitions"],[460,47,397,29],[460,48,397,30,"map"],[460,51,397,33],[460,52,397,35,"comp"],[460,56,397,44],[460,60,397,49,"comp"],[460,64,397,53],[460,65,397,54,"name"],[460,69,397,58],[460,70,397,59,"toLowerCase"],[460,81,397,70],[460,82,397,71],[460,83,397,72],[460,84,397,73],[460,86,398,6],[460,89,398,9,"defaultNames"],[460,101,398,21],[460,102,398,22,"map"],[460,105,398,25],[460,106,398,26,"name"],[460,110,398,30],[460,114,398,34,"name"],[460,118,398,38],[460,119,398,39,"toLowerCase"],[460,130,398,50],[460,131,398,51],[460,132,398,52],[460,133,398,53],[460,134,399,5],[461,8,401,4],[461,12,401,10,"isAvailable"],[461,23,401,21],[461,26,401,24],[461,27,401,25,"allNames"],[461,35,401,33],[461,36,401,34,"includes"],[461,44,401,42],[461,45,401,43,"name"],[461,49,401,47],[461,50,401,48,"toLowerCase"],[461,61,401,59],[461,62,401,60],[461,63,401,61],[461,64,401,62],[462,8,403,4],[462,15,403,11],[463,10,404,6,"available"],[463,19,404,15],[463,21,404,17,"isAvailable"],[463,32,404,28],[464,10,405,6,"message"],[464,17,405,13],[464,19,405,15,"isAvailable"],[464,30,405,26],[464,33,405,29],[464,49,405,45],[464,52,405,48],[465,8,406,4],[465,9,406,5],[466,6,407,2],[466,7,407,3],[467,6,407,3],[467,22,383,2,"validateNameMock"],[467,38,383,18,"validateNameMock"],[467,39,383,18,"_x17"],[467,43,383,18],[468,8,383,18],[468,15,383,18,"_ref7"],[468,20,383,18],[468,21,383,18,"apply"],[468,26,383,18],[468,33,383,18,"arguments"],[468,42,383,18],[469,6,383,18],[470,4,383,18],[470,7,407,3],[471,4,409,2],[472,4,410,2,"getMyCompetitionsMock"],[472,25,410,23],[473,6,410,23],[473,10,410,23,"_ref8"],[473,15,410,23],[473,22,410,23,"_asyncToGenerator"],[473,39,410,23],[473,40,410,23,"default"],[473,47,410,23],[473,49,410,25],[473,62,410,37],[474,8,411,4,"console"],[474,15,411,11],[474,16,411,12,"log"],[474,19,411,15],[474,20,411,16],[474,54,411,50],[474,55,411,51],[475,8,412,4],[475,12,412,10,"storedCompetitions"],[475,30,412,28],[475,39,412,37,"CrossPlatformStorage"],[475,59,412,57],[475,60,412,57,"default"],[475,67,412,57],[475,68,412,58,"getItem"],[475,75,412,65],[475,76,412,66],[475,95,412,85],[475,96,412,86],[476,8,414,4],[476,12,414,8,"storedCompetitions"],[476,30,414,26],[476,32,414,28],[477,10,415,6],[477,14,415,12,"competitions"],[477,26,415,24],[477,29,415,27,"JSON"],[477,33,415,31],[477,34,415,32,"parse"],[477,39,415,37],[477,40,415,38,"storedCompetitions"],[477,58,415,56],[477,59,415,57],[478,10,416,6,"console"],[478,17,416,13],[478,18,416,14,"log"],[478,21,416,17],[478,22,416,18],[478,57,416,53],[478,59,416,55,"competitions"],[478,71,416,67],[478,72,416,68,"length"],[478,78,416,74],[478,79,416,75],[480,10,418,6],[481,10,419,6],[481,14,419,12,"enhancedCompetitions"],[481,34,419,32],[481,37,419,35,"competitions"],[481,49,419,47],[481,50,419,48,"map"],[481,53,419,51],[481,54,419,53,"comp"],[481,58,419,62],[481,62,419,67],[482,12,420,8],[482,16,420,12,"updatedComp"],[482,27,420,23],[482,30,420,26],[483,14,420,28],[483,17,420,31,"comp"],[484,12,420,36],[484,13,420,37],[486,12,422,8],[487,12,423,8],[487,16,423,12],[487,17,423,13,"updatedComp"],[487,28,423,24],[487,29,423,25,"daily_payment_enabled"],[487,50,423,46],[487,54,423,50],[487,55,423,51,"updatedComp"],[487,66,423,62],[487,67,423,63,"daily_payment_amount"],[487,87,423,83],[487,89,423,85],[488,14,424,10,"console"],[488,21,424,17],[488,22,424,18,"log"],[488,25,424,21],[488,26,424,22],[488,75,424,71],[488,77,424,73,"updatedComp"],[488,88,424,84],[488,89,424,85,"name"],[488,93,424,89],[488,94,424,90],[489,14,425,10,"updatedComp"],[489,25,425,21],[489,26,425,22,"daily_payment_enabled"],[489,47,425,43],[489,50,425,46],[489,54,425,50],[490,14,426,10,"updatedComp"],[490,25,426,21],[490,26,426,22,"daily_payment_amount"],[490,46,426,42],[490,49,426,45,"updatedComp"],[490,60,426,56],[490,61,426,57,"daily_payment_amount"],[490,81,426,77],[490,85,426,81],[490,87,426,83],[490,88,426,84],[490,89,426,85],[491,14,427,10,"updatedComp"],[491,25,427,21],[491,26,427,22,"participation_cost_per_team"],[491,53,427,49],[491,56,427,52,"updatedComp"],[491,67,427,63],[491,68,427,64,"participation_cost_per_team"],[491,95,427,91],[491,99,427,95],[491,102,427,98],[492,12,428,8],[493,12,430,8],[493,16,430,12],[493,17,430,13,"updatedComp"],[493,28,430,24],[493,29,430,25,"participants"],[493,41,430,37],[493,45,430,41,"updatedComp"],[493,56,430,52],[493,57,430,53,"participants"],[493,69,430,65],[493,70,430,66,"length"],[493,76,430,72],[493,79,430,75],[493,80,430,76],[493,82,430,78],[494,14,431,10],[494,18,431,16,"demoParticipants"],[494,34,431,32],[494,37,431,35],[494,38,432,12],[495,16,433,14,"id"],[495,18,433,16],[495,20,433,18],[495,46,433,44],[496,16,434,14,"name"],[496,20,434,18],[496,22,434,20],[496,39,434,37],[497,16,435,14,"email"],[497,21,435,19],[497,23,435,21],[497,42,435,40],[498,16,436,14,"is_admin"],[498,24,436,22],[498,26,436,24],[498,30,436,28],[499,16,437,14,"paid_matchdays"],[499,30,437,28],[499,32,437,30],[499,33,437,31],[499,34,437,32],[499,36,437,34],[499,37,437,35],[499,39,437,37],[499,40,437,38],[499,41,437,39],[500,16,438,14,"points"],[500,22,438,20],[500,24,438,22],[500,28,438,26],[501,16,439,14,"totalPoints"],[501,27,439,25],[501,29,439,27],[502,14,440,12],[502,15,440,13],[502,17,441,12],[503,16,442,14,"id"],[503,18,442,16],[503,20,442,18],[503,38,442,36],[504,16,443,14,"name"],[504,20,443,18],[504,22,443,20],[504,35,443,33],[505,16,444,14,"email"],[505,21,444,19],[505,23,444,21],[505,46,444,44],[506,16,445,14,"is_admin"],[506,24,445,22],[506,26,445,24],[506,31,445,29],[507,16,446,14,"paid_matchdays"],[507,30,446,28],[507,32,446,30],[507,33,446,31],[507,34,446,32],[507,36,446,34],[507,37,446,35],[507,38,446,36],[508,16,447,14,"points"],[508,22,447,20],[508,24,447,22],[508,28,447,26],[509,16,448,14,"totalPoints"],[509,27,448,25],[509,29,448,27],[510,14,449,12],[510,15,449,13],[510,17,450,12],[511,16,451,14,"id"],[511,18,451,16],[511,20,451,18],[511,41,451,39],[512,16,452,14,"name"],[512,20,452,18],[512,22,452,20],[512,38,452,36],[513,16,453,14,"email"],[513,21,453,19],[513,23,453,21],[513,49,453,47],[514,16,454,14,"is_admin"],[514,24,454,22],[514,26,454,24],[514,31,454,29],[515,16,455,14,"paid_matchdays"],[515,30,455,28],[515,32,455,30],[515,33,455,31],[515,34,455,32],[515,35,455,33],[516,16,456,14,"points"],[516,22,456,20],[516,24,456,22],[516,28,456,26],[517,16,457,14,"totalPoints"],[517,27,457,25],[517,29,457,27],[518,14,458,12],[518,15,458,13],[518,17,459,12],[519,16,460,14,"id"],[519,18,460,16],[519,20,460,18],[519,39,460,37],[520,16,461,14,"name"],[520,20,461,18],[520,22,461,20],[520,36,461,34],[521,16,462,14,"email"],[521,21,462,19],[521,23,462,21],[521,47,462,45],[522,16,463,14,"is_admin"],[522,24,463,22],[522,26,463,24],[522,31,463,29],[523,16,464,14,"paid_matchdays"],[523,30,464,28],[523,32,464,30],[523,34,464,32],[524,16,465,14,"points"],[524,22,465,20],[524,24,465,22],[524,28,465,26],[525,16,466,14,"totalPoints"],[525,27,466,25],[525,29,466,27],[526,14,467,12],[526,15,467,13],[526,17,468,12],[527,16,469,14,"id"],[527,18,469,16],[527,20,469,18],[527,38,469,36],[528,16,470,14,"name"],[528,20,470,18],[528,22,470,20],[528,35,470,33],[529,16,471,14,"email"],[529,21,471,19],[529,23,471,21],[529,46,471,44],[530,16,472,14,"is_admin"],[530,24,472,22],[530,26,472,24],[530,31,472,29],[531,16,473,14,"paid_matchdays"],[531,30,473,28],[531,32,473,30],[531,33,473,31],[531,34,473,32],[531,36,473,34],[531,37,473,35],[531,39,473,37],[531,40,473,38],[531,41,473,39],[532,16,474,14,"points"],[532,22,474,20],[532,24,474,22],[532,28,474,26],[533,16,475,14,"totalPoints"],[533,27,475,25],[533,29,475,27],[534,14,476,12],[534,15,476,13],[534,16,477,11],[535,14,479,10],[535,21,479,17],[536,16,479,19],[536,19,479,22,"updatedComp"],[536,30,479,33],[537,16,479,35,"participants"],[537,28,479,47],[537,30,479,49,"demoParticipants"],[538,14,479,66],[538,15,479,67],[539,12,480,8],[540,12,481,8],[540,19,481,15,"updatedComp"],[540,30,481,26],[541,10,482,6],[541,11,482,7],[541,12,482,8],[543,10,484,6],[544,10,485,6],[544,16,485,12,"CrossPlatformStorage"],[544,36,485,32],[544,37,485,32,"default"],[544,44,485,32],[544,45,485,33,"setItem"],[544,52,485,40],[544,53,485,41],[544,72,485,60],[544,74,485,62,"JSON"],[544,78,485,66],[544,79,485,67,"stringify"],[544,88,485,76],[544,89,485,77,"enhancedCompetitions"],[544,109,485,97],[544,110,485,98],[544,111,485,99],[545,10,487,6,"enhancedCompetitions"],[545,30,487,26],[545,31,487,27,"forEach"],[545,38,487,34],[545,39,487,35],[545,40,487,36,"comp"],[545,44,487,45],[545,46,487,47,"index"],[545,51,487,60],[545,56,487,65],[546,12,488,8,"console"],[546,19,488,15],[546,20,488,16,"log"],[546,23,488,19],[546,24,488,20],[546,27,488,23,"index"],[546,32,488,28],[546,35,488,31],[546,36,488,32],[546,41,488,37,"comp"],[546,45,488,41],[546,46,488,42,"name"],[546,50,488,46],[546,59,488,55,"comp"],[546,63,488,59],[546,64,488,60,"_id"],[546,67,488,63],[546,74,488,70,"comp"],[546,78,488,74],[546,79,488,75,"participants"],[546,91,488,87],[546,93,488,89,"length"],[546,99,488,95],[546,103,488,99],[546,104,488,100],[546,119,488,115],[546,120,488,116],[547,10,489,6],[547,11,489,7],[547,12,489,8],[548,10,491,6],[548,17,491,13,"enhancedCompetitions"],[548,37,491,33],[549,8,492,4],[549,9,492,5],[549,15,492,11],[550,10,493,6,"console"],[550,17,493,13],[550,18,493,14,"log"],[550,21,493,17],[550,22,493,18],[550,82,493,78],[550,83,493,79],[551,10,494,6],[551,17,494,13],[551,19,494,15],[552,8,495,4],[553,6,496,2],[553,7,496,3],[554,6,496,3],[554,22,410,2,"getMyCompetitionsMock"],[554,43,410,23,"getMyCompetitionsMock"],[554,44,410,23],[555,8,410,23],[555,15,410,23,"_ref8"],[555,20,410,23],[555,21,410,23,"apply"],[555,26,410,23],[555,33,410,23,"arguments"],[555,42,410,23],[556,6,410,23],[557,4,410,23],[557,7,496,3],[558,4,498,2,"joinMock"],[558,12,498,10],[559,6,498,10],[559,10,498,10,"_ref9"],[559,15,498,10],[559,22,498,10,"_asyncToGenerator"],[559,39,498,10],[559,40,498,10,"default"],[559,47,498,10],[559,49,498,12],[559,60,498,19,"inviteCode"],[559,70,498,37],[559,72,498,42],[560,8,499,4,"console"],[560,15,499,11],[560,16,499,12,"log"],[560,19,499,15],[560,20,499,16],[560,61,499,57],[560,63,499,59,"inviteCode"],[560,73,499,69],[560,74,499,70],[561,8,500,4],[561,12,500,8,"inviteCode"],[561,22,500,18],[561,23,500,19,"length"],[561,29,500,25],[561,32,500,28],[561,33,500,29],[561,35,500,31],[562,10,501,6],[562,16,501,12],[562,20,501,16,"Error"],[562,25,501,21],[562,26,501,22],[562,47,501,43],[562,48,501,44],[563,8,502,4],[564,8,503,4],[564,15,503,11],[565,10,503,13,"message"],[565,17,503,20],[565,19,503,22],[566,8,503,57],[566,9,503,58],[567,6,504,2],[567,7,504,3],[568,6,504,3],[568,22,498,2,"joinMock"],[568,30,498,10,"joinMock"],[568,31,498,10,"_x18"],[568,35,498,10],[569,8,498,10],[569,15,498,10,"_ref9"],[569,20,498,10],[569,21,498,10,"apply"],[569,26,498,10],[569,33,498,10,"arguments"],[569,42,498,10],[570,6,498,10],[571,4,498,10],[571,7,504,3],[572,4,506,2],[573,4,507,2,"deleteMock"],[573,14,507,12],[574,6,507,12],[574,10,507,12,"_ref0"],[574,15,507,12],[574,22,507,12,"_asyncToGenerator"],[574,39,507,12],[574,40,507,12,"default"],[574,47,507,12],[574,49,507,14],[574,60,507,21,"competitionId"],[574,73,507,42],[574,75,507,47],[575,8,508,4,"console"],[575,15,508,11],[575,16,508,12,"log"],[575,19,508,15],[575,20,508,16],[575,53,508,49],[575,55,508,51,"competitionId"],[575,68,508,64],[575,69,508,65],[576,8,510,4],[576,12,510,10,"storedCompetitions"],[576,30,510,28],[576,39,510,37,"CrossPlatformStorage"],[576,59,510,57],[576,60,510,57,"default"],[576,67,510,57],[576,68,510,58,"getItem"],[576,75,510,65],[576,76,510,66],[576,94,510,84],[576,95,510,85],[577,8,511,4],[577,12,511,8,"competitions"],[577,24,511,20],[577,27,511,23,"storedCompetitions"],[577,45,511,41],[577,48,511,44,"JSON"],[577,52,511,48],[577,53,511,49,"parse"],[577,58,511,54],[577,59,511,55,"storedCompetitions"],[577,77,511,73],[577,78,511,74],[577,81,511,77],[577,83,511,79],[578,8,513,4],[578,12,513,10,"competitionToDelete"],[578,31,513,29],[578,34,513,32,"competitions"],[578,46,513,44],[578,47,513,45,"find"],[578,51,513,49],[578,52,513,51,"comp"],[578,56,513,60],[578,60,513,65,"comp"],[578,64,513,69],[578,65,513,70,"_id"],[578,68,513,73],[578,73,513,78,"competitionId"],[578,86,513,91],[578,87,513,92],[579,8,514,4],[579,12,514,8],[579,13,514,9,"competitionToDelete"],[579,32,514,28],[579,34,514,30],[580,10,515,6],[580,16,515,12],[580,20,515,16,"Error"],[580,25,515,21],[580,26,515,22],[580,49,515,45],[580,50,515,46],[581,8,516,4],[583,8,518,4],[584,8,519,4],[584,12,519,8,"competitionToDelete"],[584,31,519,27],[584,32,519,28,"admin_id"],[584,40,519,36],[584,45,519,41],[584,71,519,67],[584,73,519,69],[585,10,520,6],[585,16,520,12],[585,20,520,16,"Error"],[585,25,520,21],[585,26,520,22],[585,66,520,62],[585,67,520,63],[586,8,521,4],[588,8,523,4],[589,8,524,4,"competitions"],[589,20,524,16],[589,23,524,19,"competitions"],[589,35,524,31],[589,36,524,32,"filter"],[589,42,524,38],[589,43,524,40,"comp"],[589,47,524,49],[589,51,524,54,"comp"],[589,55,524,58],[589,56,524,59,"_id"],[589,59,524,62],[589,64,524,67,"competitionId"],[589,77,524,80],[589,78,524,81],[590,8,525,4],[590,14,525,10,"CrossPlatformStorage"],[590,34,525,30],[590,35,525,30,"default"],[590,42,525,30],[590,43,525,31,"setItem"],[590,50,525,38],[590,51,525,39],[590,69,525,57],[590,71,525,59,"JSON"],[590,75,525,63],[590,76,525,64,"stringify"],[590,85,525,73],[590,86,525,74,"competitions"],[590,98,525,86],[590,99,525,87],[590,100,525,88],[592,8,527,4],[593,8,528,4],[593,14,528,10,"logAdminAction"],[593,28,528,24],[593,29,528,25],[593,37,528,33],[593,39,528,35,"competitionToDelete"],[593,58,528,54],[593,59,528,55,"name"],[593,63,528,59],[593,65,528,61],[593,82,528,78],[593,83,528,79],[594,8,530,4,"console"],[594,15,530,11],[594,16,530,12,"log"],[594,19,530,15],[594,20,530,16],[594,56,530,52],[594,57,530,53],[595,8,531,4],[595,15,531,11],[596,10,531,13,"message"],[596,17,531,20],[596,19,531,22],[597,8,531,57],[597,9,531,58],[598,6,532,2],[598,7,532,3],[599,6,532,3],[599,22,507,2,"deleteMock"],[599,32,507,12,"deleteMock"],[599,33,507,12,"_x19"],[599,37,507,12],[600,8,507,12],[600,15,507,12,"_ref0"],[600,20,507,12],[600,21,507,12,"apply"],[600,26,507,12],[600,33,507,12,"arguments"],[600,42,507,12],[601,6,507,12],[602,4,507,12],[602,7,532,3],[603,4,534,2],[604,4,535,2,"editMock"],[604,12,535,10],[605,6,535,10],[605,10,535,10,"_ref1"],[605,15,535,10],[605,22,535,10,"_asyncToGenerator"],[605,39,535,10],[605,40,535,10,"default"],[605,47,535,10],[605,49,535,12],[605,60,535,19,"competitionId"],[605,73,535,40],[605,75,535,42,"updates"],[605,82,535,54],[605,84,535,59],[606,8,536,4,"console"],[606,15,536,11],[606,16,536,12,"log"],[606,19,536,15],[606,20,536,16],[606,51,536,47],[606,53,536,49,"competitionId"],[606,66,536,62],[606,68,536,64,"updates"],[606,75,536,71],[606,76,536,72],[607,8,538,4],[607,12,538,10,"storedCompetitions"],[607,30,538,28],[607,39,538,37,"CrossPlatformStorage"],[607,59,538,57],[607,60,538,57,"default"],[607,67,538,57],[607,68,538,58,"getItem"],[607,75,538,65],[607,76,538,66],[607,94,538,84],[607,95,538,85],[608,8,539,4],[608,12,539,8,"competitions"],[608,24,539,20],[608,27,539,23,"storedCompetitions"],[608,45,539,41],[608,48,539,44,"JSON"],[608,52,539,48],[608,53,539,49,"parse"],[608,58,539,54],[608,59,539,55,"storedCompetitions"],[608,77,539,73],[608,78,539,74],[608,81,539,77],[608,83,539,79],[609,8,541,4],[609,12,541,10,"competitionIndex"],[609,28,541,26],[609,31,541,29,"competitions"],[609,43,541,41],[609,44,541,42,"findIndex"],[609,53,541,51],[609,54,541,53,"comp"],[609,58,541,62],[609,62,541,67,"comp"],[609,66,541,71],[609,67,541,72,"_id"],[609,70,541,75],[609,75,541,80,"competitionId"],[609,88,541,93],[609,89,541,94],[610,8,542,4],[610,12,542,8,"competitionIndex"],[610,28,542,24],[610,33,542,29],[610,34,542,30],[610,35,542,31],[610,37,542,33],[611,10,543,6],[611,16,543,12],[611,20,543,16,"Error"],[611,25,543,21],[611,26,543,22],[611,49,543,45],[611,50,543,46],[612,8,544,4],[613,8,546,4],[613,12,546,10,"competition"],[613,23,546,21],[613,26,546,24,"competitions"],[613,38,546,36],[613,39,546,37,"competitionIndex"],[613,55,546,53],[613,56,546,54],[615,8,548,4],[616,8,549,4],[616,12,549,8,"competition"],[616,23,549,19],[616,24,549,20,"admin_id"],[616,32,549,28],[616,37,549,33],[616,63,549,59],[616,65,549,61],[617,10,550,6],[617,16,550,12],[617,20,550,16,"Error"],[617,25,550,21],[617,26,550,22],[617,64,550,60],[617,65,550,61],[618,8,551,4],[620,8,553,4],[621,8,554,4,"competitions"],[621,20,554,16],[621,21,554,17,"competitionIndex"],[621,37,554,33],[621,38,554,34],[621,41,554,37],[622,10,555,6],[622,13,555,9,"competition"],[622,24,555,20],[623,10,556,6],[623,13,556,9,"updates"],[623,20,556,16],[624,10,557,6,"updated_at"],[624,20,557,16],[624,22,557,18],[624,26,557,22,"Date"],[624,30,557,26],[624,31,557,27],[624,32,557,28],[624,33,557,29,"toISOString"],[624,44,557,40],[624,45,557,41],[625,8,558,4],[625,9,558,5],[626,8,560,4],[626,14,560,10,"CrossPlatformStorage"],[626,34,560,30],[626,35,560,30,"default"],[626,42,560,30],[626,43,560,31,"setItem"],[626,50,560,38],[626,51,560,39],[626,69,560,57],[626,71,560,59,"JSON"],[626,75,560,63],[626,76,560,64,"stringify"],[626,85,560,73],[626,86,560,74,"competitions"],[626,98,560,86],[626,99,560,87],[626,100,560,88],[628,8,562,4],[629,8,563,4],[629,14,563,10,"logAdminAction"],[629,28,563,24],[629,29,563,25],[629,35,563,31],[629,37,563,33,"competition"],[629,48,563,44],[629,49,563,45,"name"],[629,53,563,49],[629,55,563,51],[629,72,563,68],[629,74,563,70,"updates"],[629,81,563,77],[629,82,563,78],[630,8,565,4,"console"],[630,15,565,11],[630,16,565,12,"log"],[630,19,565,15],[630,20,565,16],[630,56,565,52],[630,57,565,53],[631,8,566,4],[631,15,566,11,"competitions"],[631,27,566,23],[631,28,566,24,"competitionIndex"],[631,44,566,40],[631,45,566,41],[632,6,567,2],[632,7,567,3],[633,6,567,3],[633,22,535,2,"editMock"],[633,30,535,10,"editMock"],[633,31,535,10,"_x20"],[633,35,535,10],[633,37,535,10,"_x21"],[633,41,535,10],[634,8,535,10],[634,15,535,10,"_ref1"],[634,20,535,10],[634,21,535,10,"apply"],[634,26,535,10],[634,33,535,10,"arguments"],[634,42,535,10],[635,6,535,10],[636,4,535,10],[636,7,567,3],[637,4,569,2],[638,4,570,2,"awardDailyPrizeMock"],[638,23,570,21],[639,6,570,21],[639,10,570,21,"_ref10"],[639,16,570,21],[639,23,570,21,"_asyncToGenerator"],[639,40,570,21],[639,41,570,21,"default"],[639,48,570,21],[639,50,570,23],[639,61,570,30,"competitionId"],[639,74,570,51],[639,76,570,53,"matchday"],[639,84,570,69],[639,86,570,71,"winnerId"],[639,94,570,87],[639,96,570,92],[640,8,571,4,"console"],[640,15,571,11],[640,16,571,12,"log"],[640,19,571,15],[640,20,571,16],[640,64,571,60],[640,66,571,62,"matchday"],[640,74,571,70],[640,76,571,72],[640,85,571,81],[640,87,571,83,"winnerId"],[640,95,571,91],[640,96,571,92],[641,8,573,4],[641,12,573,10,"storedCompetitions"],[641,30,573,28],[641,39,573,37,"CrossPlatformStorage"],[641,59,573,57],[641,60,573,57,"default"],[641,67,573,57],[641,68,573,58,"getItem"],[641,75,573,65],[641,76,573,66],[641,94,573,84],[641,95,573,85],[642,8,574,4],[642,12,574,8,"competitions"],[642,24,574,20],[642,27,574,23,"storedCompetitions"],[642,45,574,41],[642,48,574,44,"JSON"],[642,52,574,48],[642,53,574,49,"parse"],[642,58,574,54],[642,59,574,55,"storedCompetitions"],[642,77,574,73],[642,78,574,74],[642,81,574,77],[642,83,574,79],[643,8,576,4],[643,12,576,10,"competitionIndex"],[643,28,576,26],[643,31,576,29,"competitions"],[643,43,576,41],[643,44,576,42,"findIndex"],[643,53,576,51],[643,54,576,53,"comp"],[643,58,576,62],[643,62,576,67,"comp"],[643,66,576,71],[643,67,576,72,"_id"],[643,70,576,75],[643,75,576,80,"competitionId"],[643,88,576,93],[643,89,576,94],[644,8,577,4],[644,12,577,8,"competitionIndex"],[644,28,577,24],[644,33,577,29],[644,34,577,30],[644,35,577,31],[644,37,577,33],[645,10,578,6],[645,16,578,12],[645,20,578,16,"Error"],[645,25,578,21],[645,26,578,22],[645,49,578,45],[645,50,578,46],[646,8,579,4],[647,8,581,4],[647,12,581,10,"competition"],[647,23,581,21],[647,26,581,24,"competitions"],[647,38,581,36],[647,39,581,37,"competitionIndex"],[647,55,581,53],[647,56,581,54],[649,8,583,4],[650,8,584,4],[650,12,584,8,"competition"],[650,23,584,19],[650,24,584,20,"admin_id"],[650,32,584,28],[650,37,584,33],[650,63,584,59],[650,65,584,61],[651,10,585,6],[651,16,585,12],[651,20,585,16,"Error"],[651,25,585,21],[651,26,585,22],[651,61,585,57],[651,62,585,58],[652,8,586,4],[654,8,588,4],[655,8,589,4],[655,12,589,8],[655,13,589,9,"competition"],[655,24,589,20],[655,25,589,21,"rules"],[655,30,589,26],[655,34,589,30],[655,35,589,31],[655,36,589,32],[655,43,589,39],[655,45,589,41],[655,52,589,48],[655,53,589,49],[655,54,589,50,"includes"],[655,62,589,58],[655,63,589,59,"competition"],[655,74,589,70],[655,75,589,71,"rules"],[655,80,589,76],[655,81,589,77,"type"],[655,85,589,81],[655,86,589,82],[655,88,589,84],[656,10,590,6],[656,16,590,12],[656,20,590,16,"Error"],[656,25,590,21],[656,26,590,22],[656,71,590,67],[656,72,590,68],[657,8,591,4],[658,8,593,4],[658,12,593,10,"dailyPrizeAmount"],[658,28,593,26],[658,31,593,29,"competition"],[658,42,593,40],[658,43,593,41,"rules"],[658,48,593,46],[658,49,593,47,"daily_prize"],[658,60,593,58],[658,64,593,62],[658,65,593,63],[659,8,594,4],[659,12,594,10,"winner"],[659,18,594,16],[659,21,594,19,"competition"],[659,32,594,30],[659,33,594,31,"participants"],[659,45,594,43],[659,46,594,44,"find"],[659,50,594,48],[659,51,594,50,"p"],[659,52,594,56],[659,56,594,61,"p"],[659,57,594,62],[659,58,594,63,"id"],[659,60,594,65],[659,65,594,70,"winnerId"],[659,73,594,78],[659,74,594,79],[660,8,596,4],[660,12,596,8],[660,13,596,9,"winner"],[660,19,596,15],[660,21,596,17],[661,10,597,6],[661,16,597,12],[661,20,597,16,"Error"],[661,25,597,21],[661,26,597,22],[661,59,597,55],[661,60,597,56],[662,8,598,4],[664,8,600,4],[665,8,601,4],[665,12,601,8],[665,13,601,9,"competition"],[665,24,601,20],[665,25,601,21,"daily_winners"],[665,38,601,34],[665,40,601,36],[666,10,602,6,"competition"],[666,21,602,17],[666,22,602,18,"daily_winners"],[666,35,602,31],[666,38,602,34],[666,39,602,35],[666,40,602,36],[667,8,603,4],[669,8,605,4],[670,8,606,4],[670,12,606,8,"competition"],[670,23,606,19],[670,24,606,20,"daily_winners"],[670,37,606,33],[670,38,606,34,"matchday"],[670,46,606,42],[670,47,606,43],[670,49,606,45],[671,10,607,6],[671,16,607,12],[671,20,607,16,"Error"],[671,25,607,21],[671,26,607,22],[671,54,607,50,"matchday"],[671,62,607,58],[671,85,607,81,"competition"],[671,96,607,92],[671,97,607,93,"daily_winners"],[671,110,607,106],[671,111,607,107,"matchday"],[671,119,607,115],[671,120,607,116],[671,121,607,117,"name"],[671,125,607,121],[671,127,607,123],[671,128,607,124],[672,8,608,4],[674,8,610,4],[675,8,611,4,"competition"],[675,19,611,15],[675,20,611,16,"daily_winners"],[675,33,611,29],[675,34,611,30,"matchday"],[675,42,611,38],[675,43,611,39],[675,46,611,42],[676,10,612,6,"user_id"],[676,17,612,13],[676,19,612,15,"winnerId"],[676,27,612,23],[677,10,613,6,"name"],[677,14,613,10],[677,16,613,12,"winner"],[677,22,613,18],[677,23,613,19,"name"],[677,27,613,23],[678,10,614,6,"amount"],[678,16,614,12],[678,18,614,14,"dailyPrizeAmount"],[678,34,614,30],[679,10,615,6,"awarded_at"],[679,20,615,16],[679,22,615,18],[679,26,615,22,"Date"],[679,30,615,26],[679,31,615,27],[679,32,615,28],[679,33,615,29,"toISOString"],[679,44,615,40],[679,45,615,41],[680,8,616,4],[680,9,616,5],[682,8,618,4],[683,8,619,4,"competitions"],[683,20,619,16],[683,21,619,17,"competitionIndex"],[683,37,619,33],[683,38,619,34],[683,41,619,37,"competition"],[683,52,619,48],[684,8,620,4],[684,14,620,10,"CrossPlatformStorage"],[684,34,620,30],[684,35,620,30,"default"],[684,42,620,30],[684,43,620,31,"setItem"],[684,50,620,38],[684,51,620,39],[684,69,620,57],[684,71,620,59,"JSON"],[684,75,620,63],[684,76,620,64,"stringify"],[684,85,620,73],[684,86,620,74,"competitions"],[684,98,620,86],[684,99,620,87],[684,100,620,88],[686,8,622,4],[687,8,623,4],[687,14,623,10,"logAdminAction"],[687,28,623,24],[687,29,623,25],[687,48,623,44],[687,50,623,46,"competition"],[687,61,623,57],[687,62,623,58,"name"],[687,66,623,62],[687,68,623,64],[687,85,623,81],[687,87,623,83],[688,10,624,6,"matchday"],[688,18,624,14],[689,10,625,6,"winner"],[689,16,625,12],[689,18,625,14,"winner"],[689,24,625,20],[689,25,625,21,"name"],[689,29,625,25],[690,10,626,6,"amount"],[690,16,626,12],[690,18,626,14,"dailyPrizeAmount"],[691,8,627,4],[691,9,627,5],[691,10,627,6],[693,8,629,4],[694,8,630,4,"console"],[694,15,630,11],[694,16,630,12,"log"],[694,19,630,15],[694,20,630,16],[694,26,630,22,"winner"],[694,32,630,28],[694,33,630,29,"name"],[694,37,630,33],[694,50,630,46,"dailyPrizeAmount"],[694,66,630,62],[694,91,630,87,"matchday"],[694,99,630,95],[694,101,630,97],[694,102,630,98],[695,8,632,4,"console"],[695,15,632,11],[695,16,632,12,"log"],[695,19,632,15],[695,20,632,16],[695,56,632,52],[695,57,632,53],[696,8,633,4],[696,15,633,11],[697,10,634,6,"message"],[697,17,634,13],[697,19,634,15],[697,38,634,34,"dailyPrizeAmount"],[697,54,634,50],[697,69,634,65,"winner"],[697,75,634,71],[697,76,634,72,"name"],[697,80,634,76],[697,97,634,93,"matchday"],[697,105,634,101],[697,107,634,103],[698,10,635,6,"competition"],[698,21,635,17],[698,23,635,19,"competition"],[699,8,636,4],[699,9,636,5],[700,6,637,2],[700,7,637,3],[701,6,637,3],[701,22,570,2,"awardDailyPrizeMock"],[701,41,570,21,"awardDailyPrizeMock"],[701,42,570,21,"_x22"],[701,46,570,21],[701,48,570,21,"_x23"],[701,52,570,21],[701,54,570,21,"_x24"],[701,58,570,21],[702,8,570,21],[702,15,570,21,"_ref10"],[702,21,570,21],[702,22,570,21,"apply"],[702,27,570,21],[702,34,570,21,"arguments"],[702,43,570,21],[703,6,570,21],[704,4,570,21],[704,7,637,3],[705,4,639,2],[706,4,640,2,"getAdminLogsMock"],[706,20,640,18],[707,6,640,18],[707,10,640,18,"_ref11"],[707,16,640,18],[707,23,640,18,"_asyncToGenerator"],[707,40,640,18],[707,41,640,18,"default"],[707,48,640,18],[707,50,640,20],[707,63,640,32],[708,8,641,4,"console"],[708,15,641,11],[708,16,641,12,"log"],[708,19,641,15],[708,20,641,16],[708,49,641,45],[708,50,641,46],[709,8,643,4],[709,12,643,8],[710,10,644,6],[710,14,644,12,"logs"],[710,18,644,16],[710,21,644,19],[710,28,644,25,"CrossPlatformStorage"],[710,48,644,45],[710,49,644,45,"default"],[710,56,644,45],[710,57,644,46,"getItem"],[710,64,644,53],[710,65,644,54],[710,76,644,65],[710,77,644,66],[710,82,644,70],[710,86,644,74],[711,10,645,6],[711,14,645,12,"adminLogs"],[711,23,645,21],[711,26,645,24,"JSON"],[711,30,645,28],[711,31,645,29,"parse"],[711,36,645,34],[711,37,645,35,"logs"],[711,41,645,39],[711,42,645,40],[713,10,647,6],[714,10,648,6,"adminLogs"],[714,19,648,15],[714,20,648,16,"sort"],[714,24,648,20],[714,25,648,21],[714,26,648,22,"a"],[714,27,648,28],[714,29,648,30,"b"],[714,30,648,36],[714,35,648,41],[714,39,648,45,"Date"],[714,43,648,49],[714,44,648,50,"b"],[714,45,648,51],[714,46,648,52,"timestamp"],[714,55,648,61],[714,56,648,62],[714,57,648,63,"getTime"],[714,64,648,70],[714,65,648,71],[714,66,648,72],[714,69,648,75],[714,73,648,79,"Date"],[714,77,648,83],[714,78,648,84,"a"],[714,79,648,85],[714,80,648,86,"timestamp"],[714,89,648,95],[714,90,648,96],[714,91,648,97,"getTime"],[714,98,648,104],[714,99,648,105],[714,100,648,106],[714,101,648,107],[715,10,650,6,"console"],[715,17,650,13],[715,18,650,14,"log"],[715,21,650,17],[715,22,650,18],[715,44,650,40],[715,46,650,42,"adminLogs"],[715,55,650,51],[715,56,650,52,"length"],[715,62,650,58],[715,63,650,59],[716,10,651,6],[716,17,651,13,"adminLogs"],[716,26,651,22],[717,8,652,4],[717,9,652,5],[717,10,652,6],[717,17,652,13,"error"],[717,22,652,18],[717,24,652,20],[718,10,653,6,"console"],[718,17,653,13],[718,18,653,14,"error"],[718,23,653,19],[718,24,653,20],[718,54,653,50],[718,56,653,52,"error"],[718,61,653,57],[718,62,653,58],[719,10,654,6],[719,17,654,13],[719,19,654,15],[720,8,655,4],[721,6,656,2],[721,7,656,3],[722,6,656,3],[722,22,640,2,"getAdminLogsMock"],[722,38,640,18,"getAdminLogsMock"],[722,39,640,18],[723,8,640,18],[723,15,640,18,"_ref11"],[723,21,640,18],[723,22,640,18,"apply"],[723,27,640,18],[723,34,640,18,"arguments"],[723,43,640,18],[724,6,640,18],[725,4,640,18],[725,7,656,3],[726,4,658,2],[727,4,659,2,"getAllCompetitions"],[727,22,659,20],[728,6,659,20],[728,10,659,20,"_ref12"],[728,16,659,20],[728,23,659,20,"_asyncToGenerator"],[728,40,659,20],[728,41,659,20,"default"],[728,48,659,20],[728,50,659,22],[728,63,659,34],[729,8,660,4,"console"],[729,15,660,11],[729,16,660,12,"log"],[729,19,660,15],[729,20,660,16],[729,70,660,66],[729,71,660,67],[730,8,662,4],[730,12,662,8],[731,10,663,6],[732,10,664,6],[732,14,664,12,"storedCompetitions"],[732,32,664,30],[732,41,664,39,"CrossPlatformStorage"],[732,61,664,59],[732,62,664,59,"default"],[732,69,664,59],[732,70,664,60,"getItem"],[732,77,664,67],[732,78,664,68],[732,97,664,87],[732,98,664,88],[733,10,665,6],[733,14,665,10,"competitions"],[733,26,665,22],[733,29,665,25,"storedCompetitions"],[733,47,665,43],[733,50,665,46,"JSON"],[733,54,665,50],[733,55,665,51,"parse"],[733,60,665,56],[733,61,665,57,"storedCompetitions"],[733,79,665,75],[733,80,665,76],[733,83,665,79],[733,85,665,81],[735,10,667,6],[736,10,668,6],[736,14,668,12,"oldStoredCompetitions"],[736,35,668,33],[736,44,668,42,"CrossPlatformStorage"],[736,64,668,62],[736,65,668,62,"default"],[736,72,668,62],[736,73,668,63,"getItem"],[736,80,668,70],[736,81,668,71],[736,99,668,89],[736,100,668,90],[737,10,669,6],[737,14,669,12,"oldCompetitions"],[737,29,669,27],[737,32,669,30,"oldStoredCompetitions"],[737,53,669,51],[737,56,669,54,"JSON"],[737,60,669,58],[737,61,669,59,"parse"],[737,66,669,64],[737,67,669,65,"oldStoredCompetitions"],[737,88,669,86],[737,89,669,87],[737,92,669,90],[737,94,669,92],[739,10,671,6],[740,10,672,6],[740,14,672,12,"allCompetitions"],[740,29,672,27],[740,32,672,30],[740,33,672,31],[740,36,672,34,"competitions"],[740,48,672,46],[740,50,672,48],[740,53,672,51,"oldCompetitions"],[740,68,672,66],[740,69,672,67],[741,10,673,6],[741,14,673,12,"uniqueCompetitions"],[741,32,673,30],[741,35,673,33,"allCompetitions"],[741,50,673,48],[741,51,673,49,"filter"],[741,57,673,55],[741,58,673,56],[741,59,673,57,"comp"],[741,63,673,61],[741,65,673,63,"index"],[741,70,673,68],[741,72,673,70,"self"],[741,76,673,74],[741,81,674,8,"index"],[741,86,674,13],[741,91,674,18,"self"],[741,95,674,22],[741,96,674,23,"findIndex"],[741,105,674,32],[741,106,674,33,"c"],[741,107,674,34],[741,111,674,38,"c"],[741,112,674,39],[741,113,674,40,"_id"],[741,116,674,43],[741,121,674,48,"comp"],[741,125,674,52],[741,126,674,53,"_id"],[741,129,674,56],[741,130,675,6],[741,131,675,7],[742,10,677,6,"console"],[742,17,677,13],[742,18,677,14,"log"],[742,21,677,17],[742,22,677,18],[742,59,677,55],[742,61,677,57,"uniqueCompetitions"],[742,79,677,75],[742,80,677,76,"length"],[742,86,677,82],[742,87,677,83],[743,10,678,6],[743,17,678,13,"uniqueCompetitions"],[743,35,678,31],[744,8,680,4],[744,9,680,5],[744,10,680,6],[744,17,680,13,"error"],[744,22,680,18],[744,24,680,20],[745,10,681,6,"console"],[745,17,681,13],[745,18,681,14,"error"],[745,23,681,19],[745,24,681,20],[745,60,681,56],[745,62,681,58,"error"],[745,67,681,63],[745,68,681,64],[746,10,682,6],[746,17,682,13],[746,19,682,15],[747,8,683,4],[748,6,684,2],[748,7,684,3],[749,6,684,3],[749,22,659,2,"getAllCompetitions"],[749,40,659,20,"getAllCompetitions"],[749,41,659,20],[750,8,659,20],[750,15,659,20,"_ref12"],[750,21,659,20],[750,22,659,20,"apply"],[750,27,659,20],[750,34,659,20,"arguments"],[750,43,659,20],[751,6,659,20],[752,4,659,20],[753,2,685,0],[753,3,685,1],[755,2,687,0],[756,2,688,7],[756,6,688,13,"walletAPI"],[756,15,688,22],[756,18,688,25],[757,4,689,2,"getBalance"],[757,14,689,12],[757,16,689,14,"getBalance"],[757,17,689,14],[757,22,689,20,"apiClient"],[757,31,689,29],[757,32,689,30,"get"],[757,35,689,33],[757,36,689,34],[757,53,689,51],[757,54,689,52],[758,4,691,2,"topUp"],[758,9,691,7],[758,11,691,10,"amount"],[758,17,691,24],[758,21,692,4,"apiClient"],[758,30,692,13],[758,31,692,14,"post"],[758,35,692,18],[758,36,692,19],[758,51,692,34],[758,53,692,36],[758,57,692,40],[758,59,692,42],[759,6,693,6,"params"],[759,12,693,12],[759,14,693,14],[760,8,693,16,"amount"],[761,6,693,23],[762,4,694,4],[762,5,694,5],[762,6,694,6],[763,4,696,2,"withdraw"],[763,12,696,10],[763,14,696,13,"amount"],[763,20,696,27],[763,24,697,4,"apiClient"],[763,33,697,13],[763,34,697,14,"post"],[763,38,697,18],[763,39,697,19],[763,57,697,37],[763,59,697,39],[763,63,697,43],[763,65,697,45],[764,6,698,6,"params"],[764,12,698,12],[764,14,698,14],[765,8,698,16,"amount"],[766,6,698,23],[767,4,699,4],[767,5,699,5],[767,6,699,6],[768,4,701,2,"getTransactions"],[768,19,701,17],[768,21,701,19,"getTransactions"],[768,22,701,19],[768,27,701,25,"apiClient"],[768,36,701,34],[768,37,701,35,"get"],[768,40,701,38],[768,41,701,39],[768,56,701,54],[769,2,702,0],[769,3,702,1],[771,2,704,0],[772,2,705,7],[772,6,705,13,"databaseAPI"],[772,17,705,24],[772,20,705,27],[773,4,706,2,"resetDatabase"],[773,17,706,15],[774,6,706,15],[774,10,706,15,"_ref13"],[774,16,706,15],[774,23,706,15,"_asyncToGenerator"],[774,40,706,15],[774,41,706,15,"default"],[774,48,706,15],[774,50,706,17],[774,63,706,29],[775,8,707,4,"console"],[775,15,707,11],[775,16,707,12,"log"],[775,19,707,15],[775,20,707,16],[775,71,707,67],[775,72,707,68],[776,8,709,4],[776,12,709,8],[777,10,710,6],[777,16,710,12,"CrossPlatformStorage"],[777,36,710,32],[777,37,710,32,"default"],[777,44,710,32],[777,45,710,33,"removeItem"],[777,55,710,43],[777,56,710,44],[777,75,710,63],[777,76,710,64],[778,10,711,6],[778,16,711,12,"CrossPlatformStorage"],[778,36,711,32],[778,37,711,32,"default"],[778,44,711,32],[778,45,711,33,"removeItem"],[778,55,711,43],[778,56,711,44],[778,73,711,61],[778,74,711,62],[779,10,712,6],[779,16,712,12,"CrossPlatformStorage"],[779,36,712,32],[779,37,712,32,"default"],[779,44,712,32],[779,45,712,33,"removeItem"],[779,55,712,43],[779,56,712,44],[779,97,712,85],[779,98,712,86],[780,10,713,6],[780,16,713,12,"CrossPlatformStorage"],[780,36,713,32],[780,37,713,32,"default"],[780,44,713,32],[780,45,713,33,"removeItem"],[780,55,713,43],[780,56,713,44],[780,95,713,83],[780,96,713,84],[781,10,715,6,"console"],[781,17,715,13],[781,18,715,14,"log"],[781,21,715,17],[781,22,715,18],[781,68,715,64],[781,69,715,65],[782,10,716,6],[782,17,716,13],[783,12,716,15,"success"],[783,19,716,22],[783,21,716,24],[783,25,716,28],[784,12,716,30,"message"],[784,19,716,37],[784,21,716,39],[785,10,716,65],[785,11,716,66],[786,8,717,4],[786,9,717,5],[786,10,717,6],[786,17,717,13,"error"],[786,22,717,18],[786,24,717,20],[787,10,718,6,"console"],[787,17,718,13],[787,18,718,14,"error"],[787,23,718,19],[787,24,718,20],[787,50,718,46],[787,52,718,48,"error"],[787,57,718,53],[787,58,718,54],[788,10,719,6],[788,17,719,13],[789,12,719,15,"success"],[789,19,719,22],[789,21,719,24],[789,26,719,29],[790,12,719,31,"message"],[790,19,719,38],[790,21,719,40],[791,10,719,55],[791,11,719,56],[792,8,720,4],[793,6,721,2],[793,7,721,3],[794,6,721,3],[794,22,706,2,"resetDatabase"],[794,35,706,15,"resetDatabase"],[794,36,706,15],[795,8,706,15],[795,15,706,15,"_ref13"],[795,21,706,15],[795,22,706,15,"apply"],[795,27,706,15],[795,34,706,15,"arguments"],[795,43,706,15],[796,6,706,15],[797,4,706,15],[798,2,722,0],[798,3,722,1],[799,2,724,0],[799,6,724,0,"_default"],[799,14,724,0],[799,17,724,15,"apiClient"],[799,26,724,24],[800,0,724,25],[800,3]],"functionMap":{"names":["<global>","ApiClient","ApiClient#constructor","client.interceptors.request.use$argument_0","client.interceptors.response.use$argument_0","client.interceptors.response.use$argument_1","ApiClient#get","ApiClient#post","ApiClient#patch","ApiClient#_delete","ApiClient#put","authAPI.createSession","authAPI.signup","authAPI.verifyOTP","authAPI.login","authAPI.resendOTP","authAPI.getCurrentUser","authAPI.logout","authAPI.updateLanguage","authAPI.toggleBiometric","logAdminAction","competitionAPI.create","competitionAPI.join","competitionAPI.getMyCompetitions","competitionAPI.getCompetition","competitionAPI.updateStandings","competitionAPI.payFee","competitionAPI.getTransactions","competitionAPI.payMatchdays","competitionAPI.getMatchdayPayments","competitionAPI.getPaymentStatusTable","competitionAPI.createMock","existingCompetitions.map$argument_0","generateRandomCode","existingCompetitions.some$argument_0","competitionAPI.payMatchdaysMock","competitionAPI.getMatchdayPaymentsMock","competitionAPI.getPaymentStatusTableMock","Array.from$argument_1","competitionAPI.validateNameMock","defaultNames.map$argument_0","competitionAPI.getMyCompetitionsMock","competitions.map$argument_0","enhancedCompetitions.forEach$argument_0","competitionAPI.joinMock","competitionAPI.deleteMock","competitions.find$argument_0","competitions.filter$argument_0","competitionAPI.editMock","competitions.findIndex$argument_0","competitionAPI.awardDailyPrizeMock","competition.participants.find$argument_0","competitionAPI.getAdminLogsMock","adminLogs.sort$argument_0","competitionAPI.getAllCompetitions","allCompetitions.filter$argument_0","self.findIndex$argument_0","walletAPI.getBalance","walletAPI.topUp","walletAPI.withdraw","walletAPI.getTransactions","databaseAPI.resetDatabase"],"mappings":"AAA;ACQ;ECG;yCCU;KDQ;MEI;OFG;MGC;OHQ;GDE;EKE;GLG;EME;GNG;EOE;GPG;EQE;GRG;ESE;GTG;CDC;iBWM;MXG;UYE;4CZM;aaE;4CbC;ScE;uCdC;aeE;iDfC;kBgBE,+BhB;UiBE,oCjB;kBkBE;MlBG;mBmBE;MnBG;uBoBI;CpBqB;UqBI;6CrBe;QsBE;qEtBC;qBuBE,uCvB;kBwBE,oDxB;mByBE;MzBQ;U0BE;M1BG;mB2BE;qD3BC;gB4BG;M5BI;uB6BE;qE7BC;yB8BE;wE9BC;c+BG;mDCwB,sCD;+BEO;KFO;qCGI,8CH;G/BiE;oBmCG;GnCe;2BoCE;GpC2B;6BqCE;kDCS;QDK;GrCW;oBuCG;kCPc,sCO;0BCC,0BD;GvCS;yByCG;oDCS;OD+D;mCEK;OFE;GzCO;Y4CE;G5CM;c6CG;kDCM,yCD;uCEW,yCF;G7CQ;YgDG;oDCM,yCD;GhD0B;uBkDG;oDDM,yCC;iDCkB,6BD;GlD2C;oBoDG;qBCQ,qFD;GpDQ;sBsDG;wDCc;iCCC,uBD,CD;GtDU;cyDK,sCzD;S0DE;M1DG;Y2DE;M3DG;mB4DE,oC5D;iB6DK;G7De"},"hasCjsExports":false},"type":"js/module"}]}